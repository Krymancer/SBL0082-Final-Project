

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Nov 24 15:24:56 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           ; Version 2.10
    30                           ; Generated 31/07/2019 GMT
    31                           ; 
    32                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4550 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     _PORTDbits	set	3971
    64  0000                     _PORTCbits	set	3970
    65  0000                     _INTCON3bits	set	4080
    66  0000                     _INTCON3	set	4080
    67  0000                     _INTCON2	set	4081
    68  0000                     _INTCONbits	set	4082
    69  0000                     _TRISDbits	set	3989
    70  0000                     _TRISBbits	set	3987
    71  0000                     _TRISCbits	set	3988
    72  0000                     _PEIE	set	32662
    73  0000                     _ADIE	set	31982
    74                           
    75                           	psect	smallconst
    76  000800                     __psmallconst:
    77                           	opt callstack 0
    78  000800  00                 	db	0
    79  000801                     STR_1:
    80  000801  48                 	db	72	;'H'
    81  000802  65                 	db	101	;'e'
    82  000803  6C                 	db	108	;'l'
    83  000804  6C                 	db	108	;'l'
    84  000805  6F                 	db	111	;'o'
    85  000806  2C                 	db	44
    86  000807  20                 	db	32
    87  000808  57                 	db	87	;'W'
    88  000809  6F                 	db	111	;'o'
    89  00080A  72                 	db	114	;'r'
    90  00080B  6C                 	db	108	;'l'
    91  00080C  64                 	db	100	;'d'
    92  00080D  21                 	db	33
    93  00080E  00                 	db	0
    94                           
    95                           ; #config settings
    96  00080F  00                 	db	0	; dummy byte at the end
    97  0000                     
    98                           	psect	cinit
    99  000C20                     __pcinit:
   100                           	opt callstack 0
   101  000C20                     start_initialization:
   102                           	opt callstack 0
   103  000C20                     __initialization:
   104                           	opt callstack 0
   105                           
   106                           ; Clear objects allocated to COMRAM (40 bytes)
   107  000C20  EE00  F001         	lfsr	0,__pbssCOMRAM
   108  000C24  0E28               	movlw	40
   109  000C26                     clear_0:
   110  000C26  6AEE               	clrf	postinc0,c
   111  000C28  06E8               	decf	wreg,f,c
   112  000C2A  E1FD               	bnz	clear_0
   113  000C2C                     end_of_initialization:
   114                           	opt callstack 0
   115  000C2C                     __end_of__initialization:
   116                           	opt callstack 0
   117  000C2C  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   118  000C2E  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   119  000C30  0E00               	movlw	low (__Lsmallconst shr (0+16))
   120  000C32  6EF8               	movwf	tblptru,c
   121  000C34  0E08               	movlw	high __Lsmallconst
   122  000C36  6EF7               	movwf	tblptrh,c
   123  000C38  0100               	movlb	0
   124  000C3A  EF2C  F006         	goto	_main	;jump to C main() function
   125                           
   126                           	psect	bssCOMRAM
   127  000001                     __pbssCOMRAM:
   128                           	opt callstack 0
   129  000001                     	ds	32
   130  000021                     _nout:
   131                           	opt callstack 0
   132  000021                     	ds	2
   133  000023                     _width:
   134                           	opt callstack 0
   135  000023                     	ds	2
   136  000025                     _prec:
   137                           	opt callstack 0
   138  000025                     	ds	2
   139  000027                     _flags:
   140                           	opt callstack 0
   141  000027                     	ds	2
   142                           
   143                           	psect	cstackCOMRAM
   144  000029                     __pcstackCOMRAM:
   145                           	opt callstack 0
   146  000029                     ??_isr:
   147  000029                     
   148                           ; 1 bytes @ 0x0
   149  000029                     	ds	1
   150  00002A                     ??_envia_nibble_lcd:
   151                           
   152                           ; 1 bytes @ 0x1
   153  00002A                     	ds	1
   154  00002B                     envia_nibble_lcd@dado:
   155                           	opt callstack 0
   156                           
   157                           ; 1 bytes @ 0x2
   158  00002B                     	ds	1
   159  00002C                     envia_byte_lcd@dado:
   160                           	opt callstack 0
   161                           
   162                           ; 1 bytes @ 0x3
   163  00002C                     	ds	1
   164  00002D                     envia_byte_lcd@endereco:
   165                           	opt callstack 0
   166                           
   167                           ; 1 bytes @ 0x4
   168  00002D                     	ds	1
   169  00002E                     ??_inicializa_lcd:
   170  00002E                     ??_limpa_lcd:
   171  00002E                     escreve_lcd@c:
   172                           	opt callstack 0
   173                           
   174                           ; 1 bytes @ 0x5
   175  00002E                     	ds	1
   176  00002F                     putch@data:
   177                           	opt callstack 0
   178                           
   179                           ; 1 bytes @ 0x6
   180  00002F                     	ds	1
   181  000030                     fputc@c:
   182                           	opt callstack 0
   183                           
   184                           ; 2 bytes @ 0x7
   185  000030                     	ds	2
   186  000032                     fputc@fp:
   187                           	opt callstack 0
   188                           
   189                           ; 2 bytes @ 0x9
   190  000032                     	ds	2
   191  000034                     ??_fputc:
   192                           
   193                           ; 1 bytes @ 0xB
   194  000034                     	ds	5
   195  000039                     ?_vfpfcnvrt:
   196                           	opt callstack 0
   197  000039                     vfpfcnvrt@fp:
   198                           	opt callstack 0
   199                           
   200                           ; 2 bytes @ 0x10
   201  000039                     	ds	2
   202  00003B                     vfpfcnvrt@fmt:
   203                           	opt callstack 0
   204                           
   205                           ; 2 bytes @ 0x12
   206  00003B                     	ds	2
   207  00003D                     vfpfcnvrt@ap:
   208                           	opt callstack 0
   209                           
   210                           ; 2 bytes @ 0x14
   211  00003D                     	ds	2
   212  00003F                     ?_vfprintf:
   213                           	opt callstack 0
   214  00003F                     vfprintf@fp:
   215                           	opt callstack 0
   216                           
   217                           ; 2 bytes @ 0x16
   218  00003F                     	ds	2
   219  000041                     vfprintf@fmt:
   220                           	opt callstack 0
   221                           
   222                           ; 2 bytes @ 0x18
   223  000041                     	ds	2
   224  000043                     vfprintf@ap:
   225                           	opt callstack 0
   226                           
   227                           ; 2 bytes @ 0x1A
   228  000043                     	ds	2
   229  000045                     vfprintf@cfmt:
   230                           	opt callstack 0
   231                           
   232                           ; 2 bytes @ 0x1C
   233  000045                     	ds	2
   234  000047                     ?_printf:
   235                           	opt callstack 0
   236  000047                     printf@fmt:
   237                           	opt callstack 0
   238                           
   239                           ; 2 bytes @ 0x1E
   240  000047                     	ds	2
   241  000049                     
   242                           ; 1 bytes @ 0x20
   243  000049                     	ds	2
   244  00004B                     printf@ap:
   245                           	opt callstack 0
   246                           
   247                           ; 2 bytes @ 0x22
   248  00004B                     	ds	2
   249  00004D                     
   250                           ; 1 bytes @ 0x24
   251 ;;
   252 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   253 ;;
   254 ;; *************** function _main *****************
   255 ;; Defined at:
   256 ;;		line 86 in file "main.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   270 ;;      Params:         0       0       0       0       0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0       0       0       0       0
   272 ;;      Temps:          0       0       0       0       0       0       0       0       0
   273 ;;      Totals:         0       0       0       0       0       0       0       0       0
   274 ;;Total ram usage:        0 bytes
   275 ;; Hardware stack levels required when called:    9
   276 ;; This function calls:
   277 ;;		_printf
   278 ;;		_setup
   279 ;; This function is called by:
   280 ;;		Startup code after reset
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           	psect	text0
   285  000C58                     __ptext0:
   286                           	opt callstack 0
   287  000C58                     _main:
   288                           	opt callstack 22
   289  000C58                     
   290                           ;main.c: 88:     setup();
   291  000C58  EC38  F006         	call	_setup	;wreg free
   292  000C5C                     
   293                           ;main.c: 89:     printf("Hello, World!");
   294  000C5C  0E01               	movlw	low STR_1
   295  000C5E  6E47               	movwf	printf@fmt^0,c
   296  000C60  0E08               	movlw	high STR_1
   297  000C62  6E48               	movwf	(printf@fmt+1)^0,c
   298  000C64  ECCA  F005         	call	_printf	;wreg free
   299  000C68                     l45:
   300  000C68  EF34  F006         	goto	l45
   301  000C6C  EF07  F000         	goto	start
   302  000C70                     __end_of_main:
   303                           	opt callstack 0
   304                           
   305 ;; *************** function _setup *****************
   306 ;; Defined at:
   307 ;;		line 73 in file "main.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;		None
   312 ;; Return value:  Size  Location     Type
   313 ;;                  1    wreg      void 
   314 ;; Registers used:
   315 ;;		wreg, status,2, status,0, cstack
   316 ;; Tracked objects:
   317 ;;		On entry : 0/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   321 ;;      Params:         0       0       0       0       0       0       0       0       0
   322 ;;      Locals:         0       0       0       0       0       0       0       0       0
   323 ;;      Temps:          0       0       0       0       0       0       0       0       0
   324 ;;      Totals:         0       0       0       0       0       0       0       0       0
   325 ;;Total ram usage:        0 bytes
   326 ;; Hardware stack levels used:    1
   327 ;; Hardware stack levels required when called:    4
   328 ;; This function calls:
   329 ;;		_configureIRQ
   330 ;;		_configurePins
   331 ;;		_inicializa_lcd
   332 ;;		_limpa_lcd
   333 ;; This function is called by:
   334 ;;		_main
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           	psect	text1
   339  000C70                     __ptext1:
   340                           	opt callstack 0
   341  000C70                     _setup:
   342                           	opt callstack 26
   343  000C70                     
   344                           ;main.c: 75:     PORTCbits.RC0 = 0;
   345  000C70  9082               	bcf	130,0,c	;volatile
   346                           
   347                           ;main.c: 76:     PORTCbits.RC1 = 0;
   348  000C72  9282               	bcf	130,1,c	;volatile
   349                           
   350                           ;main.c: 77:     PORTCbits.RC2 = 0;
   351  000C74  9482               	bcf	130,2,c	;volatile
   352  000C76                     
   353                           ;main.c: 79:     configurePins();
   354  000C76  EC00  F006         	call	_configurePins	;wreg free
   355  000C7A                     
   356                           ;main.c: 80:     configureIRQ();
   357  000C7A  ECEF  F005         	call	_configureIRQ	;wreg free
   358  000C7E                     
   359                           ;main.c: 82:     inicializa_lcd();
   360  000C7E  EC5A  F005         	call	_inicializa_lcd	;wreg free
   361  000C82                     
   362                           ;main.c: 83:     limpa_lcd();
   363  000C82  EC1F  F006         	call	_limpa_lcd	;wreg free
   364  000C86  0012               	return		;funcret
   365  000C88                     __end_of_setup:
   366                           	opt callstack 0
   367                           
   368 ;; *************** function _limpa_lcd *****************
   369 ;; Defined at:
   370 ;;		line 26 in file "lcd.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, status,2, status,0, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   384 ;;      Params:         0       0       0       0       0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0       0       0       0       0
   386 ;;      Temps:          1       0       0       0       0       0       0       0       0
   387 ;;      Totals:         1       0       0       0       0       0       0       0       0
   388 ;;Total ram usage:        1 bytes
   389 ;; Hardware stack levels used:    1
   390 ;; Hardware stack levels required when called:    3
   391 ;; This function calls:
   392 ;;		_envia_byte_lcd
   393 ;; This function is called by:
   394 ;;		_setup
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	text2
   399  000C3E                     __ptext2:
   400                           	opt callstack 0
   401  000C3E                     _limpa_lcd:
   402                           	opt callstack 26
   403  000C3E                     
   404                           ;lcd.c: 28:   envia_byte_lcd(0, 0x01);
   405  000C3E  0E01               	movlw	1
   406  000C40  6E2C               	movwf	envia_byte_lcd@dado^0,c
   407  000C42  0E00               	movlw	0
   408  000C44  ECDD  F005         	call	_envia_byte_lcd
   409  000C48                     
   410                           ;lcd.c: 29:   _delay((unsigned long)((2)*(4000000/4000.0)));
   411  000C48  0E03               	movlw	3
   412  000C4A  6E2E               	movwf	??_limpa_lcd^0,c
   413  000C4C  0E98               	movlw	152
   414  000C4E                     u277:
   415  000C4E  2EE8               	decfsz	wreg,f,c
   416  000C50  D7FE               	bra	u277
   417  000C52  2E2E               	decfsz	??_limpa_lcd^0,f,c
   418  000C54  D7FC               	bra	u277
   419  000C56  0012               	return		;funcret
   420  000C58                     __end_of_limpa_lcd:
   421                           	opt callstack 0
   422                           
   423 ;; *************** function _inicializa_lcd *****************
   424 ;; Defined at:
   425 ;;		line 32 in file "lcd.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2, status,0, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   439 ;;      Params:         0       0       0       0       0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0       0       0       0       0
   441 ;;      Temps:          1       0       0       0       0       0       0       0       0
   442 ;;      Totals:         1       0       0       0       0       0       0       0       0
   443 ;;Total ram usage:        1 bytes
   444 ;; Hardware stack levels used:    1
   445 ;; Hardware stack levels required when called:    3
   446 ;; This function calls:
   447 ;;		_envia_byte_lcd
   448 ;;		_envia_nibble_lcd
   449 ;; This function is called by:
   450 ;;		_setup
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text3
   455  000AB4                     __ptext3:
   456                           	opt callstack 0
   457  000AB4                     _inicializa_lcd:
   458                           	opt callstack 26
   459  000AB4                     
   460                           ;lcd.c: 34:   PORTDbits.RD1 = 0;
   461  000AB4  9283               	bcf	131,1,c	;volatile
   462                           
   463                           ;lcd.c: 35:   PORTDbits.RD4 = 0;
   464  000AB6  9883               	bcf	131,4,c	;volatile
   465                           
   466                           ;lcd.c: 36:   PORTDbits.RD5 = 0;
   467  000AB8  9A83               	bcf	131,5,c	;volatile
   468                           
   469                           ;lcd.c: 37:   PORTDbits.RD6 = 0;
   470  000ABA  9C83               	bcf	131,6,c	;volatile
   471                           
   472                           ;lcd.c: 38:   PORTDbits.RD7 = 0;
   473  000ABC  9E83               	bcf	131,7,c	;volatile
   474  000ABE                     
   475                           ;lcd.c: 40:   _delay((unsigned long)((50)*(4000000/4000.0)));
   476  000ABE  0E41               	movlw	65
   477  000AC0  6E2E               	movwf	??_inicializa_lcd^0,c
   478  000AC2  0EEE               	movlw	238
   479  000AC4                     u287:
   480  000AC4  2EE8               	decfsz	wreg,f,c
   481  000AC6  D7FE               	bra	u287
   482  000AC8  2E2E               	decfsz	??_inicializa_lcd^0,f,c
   483  000ACA  D7FC               	bra	u287
   484  000ACC  D000               	nop2	
   485  000ACE                     
   486                           ;lcd.c: 41:   envia_nibble_lcd(0x03);
   487  000ACE  0E03               	movlw	3
   488  000AD0  EC16  F005         	call	_envia_nibble_lcd
   489  000AD4                     
   490                           ;lcd.c: 42:   _delay((unsigned long)((4)*(4000000/4000.0)));
   491  000AD4  0E06               	movlw	6
   492  000AD6  6E2E               	movwf	??_inicializa_lcd^0,c
   493  000AD8  0E30               	movlw	48
   494  000ADA                     u297:
   495  000ADA  2EE8               	decfsz	wreg,f,c
   496  000ADC  D7FE               	bra	u297
   497  000ADE  2E2E               	decfsz	??_inicializa_lcd^0,f,c
   498  000AE0  D7FC               	bra	u297
   499  000AE2  D000               	nop2	
   500                           
   501                           ;lcd.c: 43:   envia_nibble_lcd(0x03);
   502  000AE4  0E03               	movlw	3
   503  000AE6  EC16  F005         	call	_envia_nibble_lcd
   504  000AEA                     
   505                           ;lcd.c: 44:   _delay((unsigned long)((100)*(4000000/4000000.0)));
   506  000AEA  0E21               	movlw	33
   507  000AEC                     u307:
   508  000AEC  2EE8               	decfsz	wreg,f,c
   509  000AEE  D7FE               	bra	u307
   510  000AF0  F000               	nop	
   511  000AF2                     
   512                           ;lcd.c: 45:   envia_nibble_lcd(0x03);
   513  000AF2  0E03               	movlw	3
   514  000AF4  EC16  F005         	call	_envia_nibble_lcd
   515  000AF8                     
   516                           ;lcd.c: 47:   envia_nibble_lcd(0x02);
   517  000AF8  0E02               	movlw	2
   518  000AFA  EC16  F005         	call	_envia_nibble_lcd
   519  000AFE                     
   520                           ;lcd.c: 49:   envia_byte_lcd(0, 0x01);
   521  000AFE  0E01               	movlw	1
   522  000B00  6E2C               	movwf	envia_byte_lcd@dado^0,c
   523  000B02  0E00               	movlw	0
   524  000B04  ECDD  F005         	call	_envia_byte_lcd
   525                           
   526                           ;lcd.c: 50:   _delay((unsigned long)((2)*(4000000/4000.0)));
   527  000B08  0E03               	movlw	3
   528  000B0A  6E2E               	movwf	??_inicializa_lcd^0,c
   529  000B0C  0E98               	movlw	152
   530  000B0E                     u317:
   531  000B0E  2EE8               	decfsz	wreg,f,c
   532  000B10  D7FE               	bra	u317
   533  000B12  2E2E               	decfsz	??_inicializa_lcd^0,f,c
   534  000B14  D7FC               	bra	u317
   535  000B16                     
   536                           ;lcd.c: 52:   envia_byte_lcd(0, 0x28);
   537  000B16  0E28               	movlw	40
   538  000B18  6E2C               	movwf	envia_byte_lcd@dado^0,c
   539  000B1A  0E00               	movlw	0
   540  000B1C  ECDD  F005         	call	_envia_byte_lcd
   541  000B20                     
   542                           ;lcd.c: 54:   envia_byte_lcd(0, 0x0c);
   543  000B20  0E0C               	movlw	12
   544  000B22  6E2C               	movwf	envia_byte_lcd@dado^0,c
   545  000B24  0E00               	movlw	0
   546  000B26  ECDD  F005         	call	_envia_byte_lcd
   547  000B2A                     
   548                           ;lcd.c: 56:   envia_byte_lcd(0, 0x06);
   549  000B2A  0E06               	movlw	6
   550  000B2C  6E2C               	movwf	envia_byte_lcd@dado^0,c
   551  000B2E  0E00               	movlw	0
   552  000B30  ECDD  F005         	call	_envia_byte_lcd
   553  000B34  0012               	return		;funcret
   554  000B36                     __end_of_inicializa_lcd:
   555                           	opt callstack 0
   556                           
   557 ;; *************** function _configurePins *****************
   558 ;; Defined at:
   559 ;;		line 27 in file "main.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		None
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   573 ;;      Params:         0       0       0       0       0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0       0       0       0       0
   576 ;;      Totals:         0       0       0       0       0       0       0       0       0
   577 ;;Total ram usage:        0 bytes
   578 ;; Hardware stack levels used:    1
   579 ;; Hardware stack levels required when called:    1
   580 ;; This function calls:
   581 ;;		Nothing
   582 ;; This function is called by:
   583 ;;		_setup
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text4
   588  000C00                     __ptext4:
   589                           	opt callstack 0
   590  000C00                     _configurePins:
   591                           	opt callstack 28
   592  000C00                     
   593                           ;main.c: 29:     TRISCbits.RC0 = 0;
   594  000C00  9094               	bcf	148,0,c	;volatile
   595                           
   596                           ;main.c: 30:     TRISCbits.RC1 = 0;
   597  000C02  9294               	bcf	148,1,c	;volatile
   598                           
   599                           ;main.c: 31:     TRISCbits.RC2 = 0;
   600  000C04  9494               	bcf	148,2,c	;volatile
   601                           
   602                           ;main.c: 33:     TRISBbits.RB0 = 1;
   603  000C06  8093               	bsf	147,0,c	;volatile
   604                           
   605                           ;main.c: 34:     TRISBbits.RB1 = 1;
   606  000C08  8293               	bsf	147,1,c	;volatile
   607                           
   608                           ;main.c: 35:     TRISBbits.RB2 = 1;
   609  000C0A  8493               	bsf	147,2,c	;volatile
   610                           
   611                           ;main.c: 37:     TRISBbits.TRISB0 = 1;
   612  000C0C  8093               	bsf	147,0,c	;volatile
   613                           
   614                           ;main.c: 38:     TRISBbits.TRISB1 = 1;
   615  000C0E  8293               	bsf	147,1,c	;volatile
   616                           
   617                           ;main.c: 39:     TRISBbits.TRISB2 = 1;
   618  000C10  8493               	bsf	147,2,c	;volatile
   619                           
   620                           ;main.c: 41:     TRISDbits.RD0 = 0;
   621  000C12  9095               	bcf	149,0,c	;volatile
   622                           
   623                           ;main.c: 42:     TRISDbits.RD1 = 0;
   624  000C14  9295               	bcf	149,1,c	;volatile
   625                           
   626                           ;main.c: 44:     TRISDbits.RD4 = 0;
   627  000C16  9895               	bcf	149,4,c	;volatile
   628                           
   629                           ;main.c: 45:     TRISDbits.RD5 = 0;
   630  000C18  9A95               	bcf	149,5,c	;volatile
   631                           
   632                           ;main.c: 46:     TRISDbits.RD6 = 0;
   633  000C1A  9C95               	bcf	149,6,c	;volatile
   634                           
   635                           ;main.c: 47:     TRISDbits.RD7 = 0;
   636  000C1C  9E95               	bcf	149,7,c	;volatile
   637  000C1E  0012               	return		;funcret
   638  000C20                     __end_of_configurePins:
   639                           	opt callstack 0
   640                           
   641 ;; *************** function _configureIRQ *****************
   642 ;; Defined at:
   643 ;;		line 50 in file "main.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, status,2
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   657 ;;      Params:         0       0       0       0       0       0       0       0       0
   658 ;;      Locals:         0       0       0       0       0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0       0       0       0       0
   660 ;;      Totals:         0       0       0       0       0       0       0       0       0
   661 ;;Total ram usage:        0 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; Hardware stack levels required when called:    1
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_setup
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text5
   672  000BDE                     __ptext5:
   673                           	opt callstack 0
   674  000BDE                     _configureIRQ:
   675                           	opt callstack 28
   676  000BDE                     
   677                           ;main.c: 52:     ADIE = 0;
   678  000BDE  9C9D               	bcf	3997,6,c	;volatile
   679                           
   680                           ;main.c: 53:     PEIE = 1;
   681  000BE0  8CF2               	bsf	4082,6,c	;volatile
   682                           
   683                           ;main.c: 54:     (INTCONbits.GIE = 1);
   684  000BE2  8EF2               	bsf	242,7,c	;volatile
   685  000BE4                     
   686                           ;main.c: 56:     INTCON2 = 0x00;
   687  000BE4  0E00               	movlw	0
   688  000BE6  6EF1               	movwf	241,c	;volatile
   689                           
   690                           ;main.c: 57:     INTCON3 = 0x00;
   691  000BE8  0E00               	movlw	0
   692  000BEA  6EF0               	movwf	240,c	;volatile
   693  000BEC                     
   694                           ;main.c: 59:     INTCONbits.INT0IF = 0;
   695  000BEC  92F2               	bcf	242,1,c	;volatile
   696  000BEE                     
   697                           ;main.c: 60:     INTCONbits.INT0IE = 1;
   698  000BEE  88F2               	bsf	242,4,c	;volatile
   699  000BF0                     
   700                           ;main.c: 62:     INTCON3bits.INT1F = 0;
   701  000BF0  90F0               	bcf	240,0,c	;volatile
   702  000BF2                     
   703                           ;main.c: 63:     INTCON3bits.INT1E = 1;
   704  000BF2  86F0               	bsf	240,3,c	;volatile
   705  000BF4                     
   706                           ;main.c: 65:     INTCON3bits.INT2F = 0;
   707  000BF4  92F0               	bcf	240,1,c	;volatile
   708  000BF6                     
   709                           ;main.c: 66:     INTCON3bits.INT2E = 1;
   710  000BF6  88F0               	bsf	240,4,c	;volatile
   711  000BF8                     
   712                           ;main.c: 68:     INTCON3bits.INT1IF = 0;
   713  000BF8  90F0               	bcf	240,0,c	;volatile
   714  000BFA                     
   715                           ;main.c: 69:     INTCON3bits.INT2IF = 0;
   716  000BFA  92F0               	bcf	240,1,c	;volatile
   717  000BFC                     
   718                           ;main.c: 70:     INTCONbits.GIE = 1;
   719  000BFC  8EF2               	bsf	242,7,c	;volatile
   720  000BFE  0012               	return		;funcret
   721  000C00                     __end_of_configureIRQ:
   722                           	opt callstack 0
   723                           
   724 ;; *************** function _printf *****************
   725 ;; Defined at:
   726 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;  fmt             2   30[COMRAM] PTR const unsigned char 
   729 ;;		 -> STR_1(14), 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  ap              2   34[COMRAM] PTR void [1]
   732 ;;		 -> ?_printf(2), 
   733 ;;  ret             2    0        int 
   734 ;; Return value:  Size  Location     Type
   735 ;;                  2   30[COMRAM] int 
   736 ;; Registers used:
   737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   743 ;;      Params:         2       0       0       0       0       0       0       0       0
   744 ;;      Locals:         4       0       0       0       0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0       0       0
   746 ;;      Totals:         6       0       0       0       0       0       0       0       0
   747 ;;Total ram usage:        6 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; Hardware stack levels required when called:    8
   750 ;; This function calls:
   751 ;;		_vfprintf
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text6
   758  000B94                     __ptext6:
   759                           	opt callstack 0
   760  000B94                     _printf:
   761                           	opt callstack 22
   762  000B94  0E49               	movlw	low (?_printf+2)
   763  000B96  6E4B               	movwf	printf@ap^0,c
   764  000B98  0E00               	movlw	high (?_printf+2)
   765  000B9A  6E4C               	movwf	(printf@ap+1)^0,c
   766  000B9C  0E00               	movlw	0
   767  000B9E  6E3F               	movwf	vfprintf@fp^0,c
   768  000BA0  0E00               	movlw	0
   769  000BA2  6E40               	movwf	(vfprintf@fp+1)^0,c
   770  000BA4  C047  F041         	movff	printf@fmt,vfprintf@fmt
   771  000BA8  C048  F042         	movff	printf@fmt+1,vfprintf@fmt+1
   772  000BAC  0E4B               	movlw	low printf@ap
   773  000BAE  6E43               	movwf	vfprintf@ap^0,c
   774  000BB0  0E00               	movlw	high printf@ap
   775  000BB2  6E44               	movwf	(vfprintf@ap+1)^0,c
   776  000BB4  EC9B  F005         	call	_vfprintf	;wreg free
   777  000BB8  0012               	return		;funcret
   778  000BBA                     __end_of_printf:
   779                           	opt callstack 0
   780                           
   781 ;; *************** function _vfprintf *****************
   782 ;; Defined at:
   783 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
   786 ;;		 -> NULL(0), 
   787 ;;  fmt             2   24[COMRAM] PTR const unsigned char 
   788 ;;		 -> STR_1(14), 
   789 ;;  ap              2   26[COMRAM] PTR PTR void 
   790 ;;		 -> printf@ap(2), 
   791 ;; Auto vars:     Size  Location     Type
   792 ;;  cfmt            2   28[COMRAM] PTR unsigned char 
   793 ;;		 -> STR_1(14), 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  2   22[COMRAM] int 
   796 ;; Registers used:
   797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   803 ;;      Params:         6       0       0       0       0       0       0       0       0
   804 ;;      Locals:         2       0       0       0       0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0       0       0       0       0
   806 ;;      Totals:         8       0       0       0       0       0       0       0       0
   807 ;;Total ram usage:        8 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; Hardware stack levels required when called:    7
   810 ;; This function calls:
   811 ;;		_vfpfcnvrt
   812 ;; This function is called by:
   813 ;;		_printf
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           	psect	text7
   818  000B36                     __ptext7:
   819                           	opt callstack 0
   820  000B36                     _vfprintf:
   821                           	opt callstack 22
   822  000B36                     
   823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   824  000B36  C041  F045         	movff	vfprintf@fmt,vfprintf@cfmt
   825  000B3A  C042  F046         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   826  000B3E                     
   827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   828  000B3E  0E00               	movlw	0
   829  000B40  6E22               	movwf	(_nout+1)^0,c
   830  000B42  0E00               	movlw	0
   831  000B44  6E21               	movwf	_nout^0,c
   832                           
   833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   834  000B46  EFB7  F005         	goto	l1096
   835  000B4A                     l1094:
   836                           
   837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   838  000B4A  C03F  F039         	movff	vfprintf@fp,vfpfcnvrt@fp
   839  000B4E  C040  F03A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   840  000B52  0E45               	movlw	low vfprintf@cfmt
   841  000B54  6E3B               	movwf	vfpfcnvrt@fmt^0,c
   842  000B56  0E00               	movlw	high vfprintf@cfmt
   843  000B58  6E3C               	movwf	(vfpfcnvrt@fmt+1)^0,c
   844  000B5A  C043  F03D         	movff	vfprintf@ap,vfpfcnvrt@ap
   845  000B5E  C044  F03E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   846  000B62  EC08  F004         	call	_vfpfcnvrt	;wreg free
   847  000B66  5039               	movf	?_vfpfcnvrt^0,w,c
   848  000B68  2621               	addwf	_nout^0,f,c
   849  000B6A  503A               	movf	(?_vfpfcnvrt+1)^0,w,c
   850  000B6C  2222               	addwfc	(_nout+1)^0,f,c
   851  000B6E                     l1096:
   852                           
   853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   854  000B6E  C045  FFF6         	movff	vfprintf@cfmt,tblptrl
   855  000B72  C046  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   856  000B76                     	if	0	;tblptru may be non-zero
   857  000B76                     	endif
   858  000B76                     	if	0	;tblptru may be non-zero
   859  000B76                     	endif
   860  000B76  0008               	tblrd		*
   861  000B78  50F5               	movf	tablat,w,c
   862  000B7A  0900               	iorlw	0
   863  000B7C  A4D8               	btfss	status,2,c
   864  000B7E  EFC3  F005         	goto	u241
   865  000B82  EFC5  F005         	goto	u240
   866  000B86                     u241:
   867  000B86  EFA5  F005         	goto	l1094
   868  000B8A                     u240:
   869  000B8A                     
   870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   871  000B8A  C021  F03F         	movff	_nout,?_vfprintf
   872  000B8E  C022  F040         	movff	_nout+1,?_vfprintf+1
   873  000B92  0012               	return		;funcret
   874  000B94                     __end_of_vfprintf:
   875                           	opt callstack 0
   876                           
   877 ;; *************** function _vfpfcnvrt *****************
   878 ;; Defined at:
   879 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
   882 ;;		 -> NULL(0), 
   883 ;;  fmt             2   18[COMRAM] PTR PTR unsigned char 
   884 ;;		 -> vfprintf@cfmt(2), 
   885 ;;  ap              2   20[COMRAM] PTR PTR void 
   886 ;;		 -> printf@ap(2), 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  llu             8    0        unsigned long long 
   889 ;;  ll              8    0        long long 
   890 ;;  f               4    0        long long 
   891 ;;  vp              3    0        PTR void 
   892 ;;  ct              3    0        unsigned char [3]
   893 ;;  cp              3    0        PTR unsigned char 
   894 ;;  i               2    0        int 
   895 ;;  done            2    0        int 
   896 ;;  c               1    0        unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  2   16[COMRAM] int 
   899 ;; Registers used:
   900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   906 ;;      Params:         6       0       0       0       0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0       0       0
   909 ;;      Totals:         6       0       0       0       0       0       0       0       0
   910 ;;Total ram usage:        6 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    6
   913 ;; This function calls:
   914 ;;		_fputc
   915 ;; This function is called by:
   916 ;;		_vfprintf
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text8
   921  000810                     __ptext8:
   922                           	opt callstack 0
   923  000810                     _vfpfcnvrt:
   924                           	opt callstack 22
   925  000810                     
   926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
   927  000810  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   928  000814  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   929  000818  CFDE FFF6          	movff	postinc2,tblptrl
   930  00081C  CFDD FFF7          	movff	postdec2,tblptrh
   931  000820                     	if	0	;tblptru may be non-zero
   932  000820                     	endif
   933  000820                     	if	0	;tblptru may be non-zero
   934  000820                     	endif
   935  000820  0008               	tblrd		*
   936  000822  50F5               	movf	tablat,w,c
   937  000824  0A25               	xorlw	37
   938  000826  A4D8               	btfss	status,2,c
   939  000828  EF18  F004         	goto	u221
   940  00082C  EF1A  F004         	goto	u220
   941  000830                     u221:
   942  000830  EF61  F004         	goto	l1056
   943  000834                     u220:
   944  000834                     
   945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
   946  000834  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   947  000838  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   948  00083C  2ADE               	incf	postinc2,f,c
   949  00083E  0E00               	movlw	0
   950  000840  22DD               	addwfc	postdec2,f,c
   951  000842                     
   952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
   953  000842  0E00               	movlw	0
   954  000844  6E24               	movwf	(_width+1)^0,c
   955  000846  0E00               	movlw	0
   956  000848  6E23               	movwf	_width^0,c
   957  00084A  C023  F027         	movff	_width,_flags
   958  00084E  C024  F028         	movff	_width+1,_flags+1
   959  000852                     
   960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
   961  000852  6825               	setf	_prec^0,c
   962  000854  6826               	setf	(_prec+1)^0,c
   963  000856                     
   964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
   965  000856  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   966  00085A  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   967  00085E  CFDE FFF6          	movff	postinc2,tblptrl
   968  000862  CFDD FFF7          	movff	postdec2,tblptrh
   969  000866                     	if	0	;tblptru may be non-zero
   970  000866                     	endif
   971  000866                     	if	0	;tblptru may be non-zero
   972  000866                     	endif
   973  000866  0008               	tblrd		*
   974  000868  50F5               	movf	tablat,w,c
   975  00086A  0A25               	xorlw	37
   976  00086C  A4D8               	btfss	status,2,c
   977  00086E  EF3B  F004         	goto	u231
   978  000872  EF3D  F004         	goto	u230
   979  000876                     u231:
   980  000876  EF54  F004         	goto	l1050
   981  00087A                     u230:
   982  00087A                     
   983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
   984  00087A  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   985  00087E  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   986  000882  2ADE               	incf	postinc2,f,c
   987  000884  0E00               	movlw	0
   988  000886  22DD               	addwfc	postdec2,f,c
   989  000888                     
   990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
   991  000888  0E00               	movlw	0
   992  00088A  6E31               	movwf	(fputc@c+1)^0,c
   993  00088C  0E25               	movlw	37
   994  00088E  6E30               	movwf	fputc@c^0,c
   995  000890  C039  F032         	movff	vfpfcnvrt@fp,fputc@fp
   996  000894  C03A  F033         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   997  000898  ECCB  F004         	call	_fputc	;wreg free
   998  00089C                     l1046:
   999                           
  1000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1001  00089C  0E00               	movlw	0
  1002  00089E  6E3A               	movwf	(?_vfpfcnvrt+1)^0,c
  1003  0008A0  0E01               	movlw	1
  1004  0008A2  6E39               	movwf	?_vfpfcnvrt^0,c
  1005  0008A4  EF7C  F004         	goto	l113
  1006  0008A8                     l1050:
  1007                           
  1008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1009  0008A8  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1010  0008AC  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1011  0008B0  2ADE               	incf	postinc2,f,c
  1012  0008B2  0E00               	movlw	0
  1013  0008B4  22DD               	addwfc	postdec2,f,c
  1014  0008B6                     
  1015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1016  0008B6  0E00               	movlw	0
  1017  0008B8  6E3A               	movwf	(?_vfpfcnvrt+1)^0,c
  1018  0008BA  0E00               	movlw	0
  1019  0008BC  6E39               	movwf	?_vfpfcnvrt^0,c
  1020  0008BE  EF7C  F004         	goto	l113
  1021  0008C2                     l1056:
  1022                           
  1023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1024  0008C2  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1025  0008C6  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1026  0008CA  CFDE FFF6          	movff	postinc2,tblptrl
  1027  0008CE  CFDD FFF7          	movff	postdec2,tblptrh
  1028  0008D2                     	if	0	;tblptru may be non-zero
  1029  0008D2                     	endif
  1030  0008D2                     	if	0	;tblptru may be non-zero
  1031  0008D2                     	endif
  1032  0008D2  0008               	tblrd		*
  1033  0008D4  50F5               	movf	tablat,w,c
  1034  0008D6  6E30               	movwf	fputc@c^0,c
  1035  0008D8  6A31               	clrf	(fputc@c+1)^0,c
  1036  0008DA  C039  F032         	movff	vfpfcnvrt@fp,fputc@fp
  1037  0008DE  C03A  F033         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1038  0008E2  ECCB  F004         	call	_fputc	;wreg free
  1039  0008E6                     
  1040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1041  0008E6  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1042  0008EA  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1043  0008EE  2ADE               	incf	postinc2,f,c
  1044  0008F0  0E00               	movlw	0
  1045  0008F2  22DD               	addwfc	postdec2,f,c
  1046  0008F4  EF4E  F004         	goto	l1046
  1047  0008F8                     l113:
  1048  0008F8  0012               	return		;funcret
  1049  0008FA                     __end_of_vfpfcnvrt:
  1050                           	opt callstack 0
  1051                           
  1052 ;; *************** function _fputc *****************
  1053 ;; Defined at:
  1054 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  c               2    7[COMRAM] int 
  1057 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  1058 ;;		 -> NULL(0), 
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;		None
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  2    7[COMRAM] int 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1070 ;;      Params:         4       0       0       0       0       0       0       0       0
  1071 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1072 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1073 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1074 ;;Total ram usage:        9 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; Hardware stack levels required when called:    5
  1077 ;; This function calls:
  1078 ;;		_putch
  1079 ;; This function is called by:
  1080 ;;		_vfpfcnvrt
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text9
  1085  000996                     __ptext9:
  1086                           	opt callstack 0
  1087  000996                     _fputc:
  1088                           	opt callstack 22
  1089  000996  5032               	movf	fputc@fp^0,w,c
  1090  000998  1033               	iorwf	(fputc@fp+1)^0,w,c
  1091  00099A  B4D8               	btfsc	status,2,c
  1092  00099C  EFD2  F004         	goto	u181
  1093  0009A0  EFD4  F004         	goto	u180
  1094  0009A4                     u181:
  1095  0009A4  EFDD  F004         	goto	l1022
  1096  0009A8                     u180:
  1097  0009A8  5032               	movf	fputc@fp^0,w,c
  1098  0009AA  1033               	iorwf	(fputc@fp+1)^0,w,c
  1099  0009AC  A4D8               	btfss	status,2,c
  1100  0009AE  EFDB  F004         	goto	u191
  1101  0009B2  EFDD  F004         	goto	u190
  1102  0009B6                     u191:
  1103  0009B6  EFE2  F004         	goto	l1024
  1104  0009BA                     u190:
  1105  0009BA                     l1022:
  1106  0009BA  5030               	movf	fputc@c^0,w,c
  1107  0009BC  EC4B  F006         	call	_putch
  1108  0009C0  EF15  F005         	goto	l805
  1109  0009C4                     l1024:
  1110  0009C4  EE20 F004          	lfsr	2,4
  1111  0009C8  5032               	movf	fputc@fp^0,w,c
  1112  0009CA  26D9               	addwf	fsr2l,f,c
  1113  0009CC  5033               	movf	(fputc@fp+1)^0,w,c
  1114  0009CE  22DA               	addwfc	fsr2h,f,c
  1115  0009D0  50DE               	movf	postinc2,w,c
  1116  0009D2  10DE               	iorwf	postinc2,w,c
  1117  0009D4  B4D8               	btfsc	status,2,c
  1118  0009D6  EFEF  F004         	goto	u201
  1119  0009DA  EFF1  F004         	goto	u200
  1120  0009DE                     u201:
  1121  0009DE  EF0C  F005         	goto	l1028
  1122  0009E2                     u200:
  1123  0009E2  EE20 F004          	lfsr	2,4
  1124  0009E6  5032               	movf	fputc@fp^0,w,c
  1125  0009E8  26D9               	addwf	fsr2l,f,c
  1126  0009EA  5033               	movf	(fputc@fp+1)^0,w,c
  1127  0009EC  22DA               	addwfc	fsr2h,f,c
  1128  0009EE  EE10 F002          	lfsr	1,2
  1129  0009F2  5032               	movf	fputc@fp^0,w,c
  1130  0009F4  26E1               	addwf	fsr1l,f,c
  1131  0009F6  5033               	movf	(fputc@fp+1)^0,w,c
  1132  0009F8  22E2               	addwfc	fsr1h,f,c
  1133  0009FA  50DE               	movf	postinc2,w,c
  1134  0009FC  5CE6               	subwf	postinc1,w,c
  1135  0009FE  50E6               	movf	postinc1,w,c
  1136  000A00  0A80               	xorlw	128
  1137  000A02  6E38               	movwf	(??_fputc+4)^0,c
  1138  000A04  50DE               	movf	postinc2,w,c
  1139  000A06  0A80               	xorlw	128
  1140  000A08  5838               	subwfb	(??_fputc+4)^0,w,c
  1141  000A0A  B0D8               	btfsc	status,0,c
  1142  000A0C  EF0A  F005         	goto	u211
  1143  000A10  EF0C  F005         	goto	u210
  1144  000A14                     u211:
  1145  000A14  EF15  F005         	goto	l805
  1146  000A18                     u210:
  1147  000A18                     l1028:
  1148  000A18  EE20 F002          	lfsr	2,2
  1149  000A1C  5032               	movf	fputc@fp^0,w,c
  1150  000A1E  26D9               	addwf	fsr2l,f,c
  1151  000A20  5033               	movf	(fputc@fp+1)^0,w,c
  1152  000A22  22DA               	addwfc	fsr2h,f,c
  1153  000A24  2ADE               	incf	postinc2,f,c
  1154  000A26  0E00               	movlw	0
  1155  000A28  22DD               	addwfc	postdec2,f,c
  1156  000A2A                     l805:
  1157  000A2A  0012               	return		;funcret
  1158  000A2C                     __end_of_fputc:
  1159                           	opt callstack 0
  1160                           
  1161 ;; *************** function _putch *****************
  1162 ;; Defined at:
  1163 ;;		line 21 in file "main.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;  data            1    wreg     unsigned char 
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  data            1    6[COMRAM] unsigned char 
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2, status,0, cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1177 ;;      Params:         0       0       0       0       0       0       0       0       0
  1178 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1180 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1181 ;;Total ram usage:        1 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:    4
  1184 ;; This function calls:
  1185 ;;		_escreve_lcd
  1186 ;; This function is called by:
  1187 ;;		_fputc
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text10
  1192  000C96                     __ptext10:
  1193                           	opt callstack 0
  1194  000C96                     _putch:
  1195                           	opt callstack 22
  1196                           
  1197                           ;incstack = 0
  1198                           ;putch@data stored from wreg
  1199  000C96  6E2F               	movwf	putch@data^0,c
  1200  000C98                     
  1201                           ;main.c: 21: void putch(char data);main.c: 22: {;main.c: 23:   escreve_lcd(data);
  1202  000C98  502F               	movf	putch@data^0,w,c
  1203  000C9A  EC44  F006         	call	_escreve_lcd
  1204  000C9E  0012               	return		;funcret
  1205  000CA0                     __end_of_putch:
  1206                           	opt callstack 0
  1207                           
  1208 ;; *************** function _escreve_lcd *****************
  1209 ;; Defined at:
  1210 ;;		line 24 in file "lcd.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;  c               1    wreg     unsigned char 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  c               1    5[COMRAM] unsigned char 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1224 ;;      Params:         0       0       0       0       0       0       0       0       0
  1225 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1226 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1227 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1228 ;;Total ram usage:        1 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    3
  1231 ;; This function calls:
  1232 ;;		_envia_byte_lcd
  1233 ;; This function is called by:
  1234 ;;		_putch
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text11
  1239  000C88                     __ptext11:
  1240                           	opt callstack 0
  1241  000C88                     _escreve_lcd:
  1242                           	opt callstack 22
  1243                           
  1244                           ;incstack = 0
  1245                           ;escreve_lcd@c stored from wreg
  1246  000C88  6E2E               	movwf	escreve_lcd@c^0,c
  1247  000C8A  C02E  F02C         	movff	escreve_lcd@c,envia_byte_lcd@dado
  1248  000C8E  0E01               	movlw	1
  1249  000C90  ECDD  F005         	call	_envia_byte_lcd
  1250  000C94  0012               	return		;funcret
  1251  000C96                     __end_of_escreve_lcd:
  1252                           	opt callstack 0
  1253                           
  1254 ;; *************** function _envia_byte_lcd *****************
  1255 ;; Defined at:
  1256 ;;		line 16 in file "lcd.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  endereco        1    wreg     unsigned char 
  1259 ;;  dado            1    3[COMRAM] unsigned char 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  endereco        1    4[COMRAM] unsigned char 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1271 ;;      Params:         1       0       0       0       0       0       0       0       0
  1272 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1274 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1275 ;;Total ram usage:        2 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    2
  1278 ;; This function calls:
  1279 ;;		_envia_nibble_lcd
  1280 ;; This function is called by:
  1281 ;;		_escreve_lcd
  1282 ;;		_limpa_lcd
  1283 ;;		_inicializa_lcd
  1284 ;;		_caracter_inicio
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text12
  1289  000BBA                     __ptext12:
  1290                           	opt callstack 0
  1291  000BBA                     _envia_byte_lcd:
  1292                           	opt callstack 26
  1293                           
  1294                           ;incstack = 0
  1295                           ;envia_byte_lcd@endereco stored from wreg
  1296  000BBA  6E2D               	movwf	envia_byte_lcd@endereco^0,c
  1297  000BBC                     
  1298                           ;lcd.c: 16: void envia_byte_lcd(char endereco, char dado);lcd.c: 17: {;lcd.c: 18:   PORT
      +                          Dbits.RD0 = endereco;
  1299  000BBC  B02D               	btfsc	envia_byte_lcd@endereco^0,0,c
  1300  000BBE  D002               	bra	u175
  1301  000BC0  9083               	bcf	131,0,c	;volatile
  1302  000BC2  D001               	bra	u176
  1303  000BC4                     u175:
  1304  000BC4  8083               	bsf	131,0,c	;volatile
  1305  000BC6                     u176:
  1306  000BC6                     
  1307                           ;lcd.c: 19:   _delay((unsigned long)((5)*(4000000/4000000.0)));
  1308  000BC6  D000               	nop2		;2 cycle nop
  1309  000BC8  D000               	nop2		;2 cycle nop
  1310  000BCA  F000               	nop	
  1311  000BCC                     
  1312                           ;lcd.c: 20:   envia_nibble_lcd(dado >> 4);
  1313  000BCC  382C               	swapf	envia_byte_lcd@dado^0,w,c
  1314  000BCE  0B0F               	andlw	15
  1315  000BD0  EC16  F005         	call	_envia_nibble_lcd
  1316  000BD4                     
  1317                           ;lcd.c: 21:   envia_nibble_lcd(dado & 0x0f);
  1318  000BD4  502C               	movf	envia_byte_lcd@dado^0,w,c
  1319  000BD6  0B0F               	andlw	15
  1320  000BD8  EC16  F005         	call	_envia_nibble_lcd
  1321  000BDC  0012               	return		;funcret
  1322  000BDE                     __end_of_envia_byte_lcd:
  1323                           	opt callstack 0
  1324                           
  1325 ;; *************** function _envia_nibble_lcd *****************
  1326 ;; Defined at:
  1327 ;;		line 3 in file "lcd.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  dado            1    wreg     unsigned char 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  dado            1    2[COMRAM] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1341 ;;      Params:         0       0       0       0       0       0       0       0       0
  1342 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1343 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1344 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1345 ;;Total ram usage:        2 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    1
  1348 ;; This function calls:
  1349 ;;		Nothing
  1350 ;; This function is called by:
  1351 ;;		_envia_byte_lcd
  1352 ;;		_inicializa_lcd
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text13
  1357  000A2C                     __ptext13:
  1358                           	opt callstack 0
  1359  000A2C                     _envia_nibble_lcd:
  1360                           	opt callstack 26
  1361                           
  1362                           ;incstack = 0
  1363                           ;envia_nibble_lcd@dado stored from wreg
  1364  000A2C  6E2B               	movwf	envia_nibble_lcd@dado^0,c
  1365  000A2E                     
  1366                           ;lcd.c: 3: void envia_nibble_lcd(char dado);lcd.c: 4: {;lcd.c: 5:   PORTDbits.RD1 = 1;
  1367  000A2E  8283               	bsf	131,1,c	;volatile
  1368  000A30                     
  1369                           ;lcd.c: 6:   PORTDbits.RD4 = dado & 0x01;
  1370  000A30  C02B  F02A         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  1371  000A34  0E01               	movlw	1
  1372  000A36  162A               	andwf	??_envia_nibble_lcd^0,f,c
  1373  000A38  3A2A               	swapf	??_envia_nibble_lcd^0,f,c
  1374  000A3A  5083               	movf	131,w,c	;volatile
  1375  000A3C  182A               	xorwf	??_envia_nibble_lcd^0,w,c
  1376  000A3E  0BEF               	andlw	-17
  1377  000A40  182A               	xorwf	??_envia_nibble_lcd^0,w,c
  1378  000A42  6E83               	movwf	131,c	;volatile
  1379                           
  1380                           ;lcd.c: 7:   PORTDbits.RD5 = (dado >> 1) & 0x01;
  1381  000A44  C02B  F02A         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  1382  000A48  90D8               	bcf	status,0,c
  1383  000A4A  322A               	rrcf	??_envia_nibble_lcd^0,f,c
  1384  000A4C  0E01               	movlw	1
  1385  000A4E  162A               	andwf	??_envia_nibble_lcd^0,f,c
  1386  000A50  3A2A               	swapf	??_envia_nibble_lcd^0,f,c
  1387  000A52  462A               	rlncf	??_envia_nibble_lcd^0,f,c
  1388  000A54  5083               	movf	131,w,c	;volatile
  1389  000A56  182A               	xorwf	??_envia_nibble_lcd^0,w,c
  1390  000A58  0BDF               	andlw	-33
  1391  000A5A  182A               	xorwf	??_envia_nibble_lcd^0,w,c
  1392  000A5C  6E83               	movwf	131,c	;volatile
  1393                           
  1394                           ;lcd.c: 8:   PORTDbits.RD6 = (dado >> 2) & 0x01;
  1395  000A5E  C02B  F02A         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  1396  000A62  90D8               	bcf	status,0,c
  1397  000A64  322A               	rrcf	??_envia_nibble_lcd^0,f,c
  1398  000A66  90D8               	bcf	status,0,c
  1399  000A68  322A               	rrcf	??_envia_nibble_lcd^0,f,c
  1400  000A6A  0E01               	movlw	1
  1401  000A6C  162A               	andwf	??_envia_nibble_lcd^0,f,c
  1402  000A6E  3A2A               	swapf	??_envia_nibble_lcd^0,f,c
  1403  000A70  462A               	rlncf	??_envia_nibble_lcd^0,f,c
  1404  000A72  462A               	rlncf	??_envia_nibble_lcd^0,f,c
  1405  000A74  5083               	movf	131,w,c	;volatile
  1406  000A76  182A               	xorwf	??_envia_nibble_lcd^0,w,c
  1407  000A78  0BBF               	andlw	-65
  1408  000A7A  182A               	xorwf	??_envia_nibble_lcd^0,w,c
  1409  000A7C  6E83               	movwf	131,c	;volatile
  1410                           
  1411                           ;lcd.c: 9:   PORTDbits.RD7 = (dado >> 3) & 0x01;
  1412  000A7E  C02B  F02A         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  1413  000A82  90D8               	bcf	status,0,c
  1414  000A84  322A               	rrcf	??_envia_nibble_lcd^0,f,c
  1415  000A86  90D8               	bcf	status,0,c
  1416  000A88  322A               	rrcf	??_envia_nibble_lcd^0,f,c
  1417  000A8A  90D8               	bcf	status,0,c
  1418  000A8C  322A               	rrcf	??_envia_nibble_lcd^0,f,c
  1419  000A8E  0E01               	movlw	1
  1420  000A90  162A               	andwf	??_envia_nibble_lcd^0,f,c
  1421  000A92  322A               	rrcf	??_envia_nibble_lcd^0,f,c
  1422  000A94  322A               	rrcf	??_envia_nibble_lcd^0,f,c
  1423  000A96  5083               	movf	131,w,c	;volatile
  1424  000A98  182A               	xorwf	??_envia_nibble_lcd^0,w,c
  1425  000A9A  0B7F               	andlw	-129
  1426  000A9C  182A               	xorwf	??_envia_nibble_lcd^0,w,c
  1427  000A9E  6E83               	movwf	131,c	;volatile
  1428  000AA0                     
  1429                           ;lcd.c: 11:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  1430  000AA0  0E10               	movlw	16
  1431  000AA2                     u327:
  1432  000AA2  2EE8               	decfsz	wreg,f,c
  1433  000AA4  D7FE               	bra	u327
  1434  000AA6  D000               	nop2	
  1435  000AA8                     
  1436                           ;lcd.c: 12:   PORTDbits.RD1 = 0;
  1437  000AA8  9283               	bcf	131,1,c	;volatile
  1438  000AAA                     
  1439                           ;lcd.c: 13:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  1440  000AAA  0E10               	movlw	16
  1441  000AAC                     u337:
  1442  000AAC  2EE8               	decfsz	wreg,f,c
  1443  000AAE  D7FE               	bra	u337
  1444  000AB0  D000               	nop2	
  1445  000AB2  0012               	return		;funcret
  1446  000AB4                     __end_of_envia_nibble_lcd:
  1447                           	opt callstack 0
  1448                           
  1449 ;; *************** function _isr *****************
  1450 ;; Defined at:
  1451 ;;		line 95 in file "main.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1465 ;;      Params:         0       0       0       0       0       0       0       0       0
  1466 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1467 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1468 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1469 ;;Total ram usage:        1 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		Interrupt level 2
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           	psect	intcode
  1479  000008                     __pintcode:
  1480                           	opt callstack 0
  1481  000008                     _isr:
  1482                           	opt callstack 22
  1483                           
  1484                           ;incstack = 0
  1485  000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1486  00000A  ED7D  F004         	call	int_func,f	;refresh shadow registers
  1487                           
  1488                           	psect	intcode_body
  1489  0008FA                     __pintcode_body:
  1490                           	opt callstack 22
  1491  0008FA                     int_func:
  1492                           	opt callstack 22
  1493  0008FA  0006               	pop		; remove dummy address from shadow register refresh
  1494  0008FC                     
  1495                           ;main.c: 97:     if (INTCONbits.INT0IF)
  1496  0008FC  A2F2               	btfss	242,1,c	;volatile
  1497  0008FE  EF83  F004         	goto	i2u9_41
  1498  000902  EF85  F004         	goto	i2u9_40
  1499  000906                     i2u9_41:
  1500  000906  EF95  F004         	goto	i2l978
  1501  00090A                     i2u9_40:
  1502  00090A                     
  1503                           ;main.c: 98:         PORTCbits.RC0 = ~(PORTCbits.RC0);
  1504  00090A  B082               	btfsc	130,0,c	;volatile
  1505  00090C  EF8A  F004         	goto	i2u10_41
  1506  000910  EF8D  F004         	goto	i2u10_40
  1507  000914                     i2u10_41:
  1508  000914  0E01               	movlw	1
  1509  000916  EF8E  F004         	goto	i2u10_46
  1510  00091A                     i2u10_40:
  1511  00091A  0E00               	movlw	0
  1512  00091C                     i2u10_46:
  1513  00091C  0AFF               	xorlw	255
  1514  00091E  6E29               	movwf	??_isr^0,c
  1515  000920  5082               	movf	130,w,c	;volatile
  1516  000922  1829               	xorwf	??_isr^0,w,c
  1517  000924  0BFE               	andlw	-2
  1518  000926  1829               	xorwf	??_isr^0,w,c
  1519  000928  6E82               	movwf	130,c	;volatile
  1520  00092A                     i2l978:
  1521                           
  1522                           ;main.c: 100:     if (INTCON3bits.INT1IF)
  1523  00092A  A0F0               	btfss	240,0,c	;volatile
  1524  00092C  EF9A  F004         	goto	i2u11_41
  1525  000930  EF9C  F004         	goto	i2u11_40
  1526  000934                     i2u11_41:
  1527  000934  EFAD  F004         	goto	i2l982
  1528  000938                     i2u11_40:
  1529  000938                     
  1530                           ;main.c: 101:         PORTCbits.RC1 = ~(PORTCbits.RC1);
  1531  000938  B282               	btfsc	130,1,c	;volatile
  1532  00093A  EFA1  F004         	goto	i2u12_41
  1533  00093E  EFA4  F004         	goto	i2u12_40
  1534  000942                     i2u12_41:
  1535  000942  0E01               	movlw	1
  1536  000944  EFA5  F004         	goto	i2u12_46
  1537  000948                     i2u12_40:
  1538  000948  0E00               	movlw	0
  1539  00094A                     i2u12_46:
  1540  00094A  0AFF               	xorlw	255
  1541  00094C  6E29               	movwf	??_isr^0,c
  1542  00094E  4629               	rlncf	??_isr^0,f,c
  1543  000950  5082               	movf	130,w,c	;volatile
  1544  000952  1829               	xorwf	??_isr^0,w,c
  1545  000954  0BFD               	andlw	-3
  1546  000956  1829               	xorwf	??_isr^0,w,c
  1547  000958  6E82               	movwf	130,c	;volatile
  1548  00095A                     i2l982:
  1549                           
  1550                           ;main.c: 103:     if (INTCON3bits.INT2IF)
  1551  00095A  A2F0               	btfss	240,1,c	;volatile
  1552  00095C  EFB2  F004         	goto	i2u13_41
  1553  000960  EFB4  F004         	goto	i2u13_40
  1554  000964                     i2u13_41:
  1555  000964  EFC6  F004         	goto	i2l986
  1556  000968                     i2u13_40:
  1557  000968                     
  1558                           ;main.c: 104:         PORTCbits.RC2 = ~(PORTCbits.RC2);
  1559  000968  B482               	btfsc	130,2,c	;volatile
  1560  00096A  EFB9  F004         	goto	i2u14_41
  1561  00096E  EFBC  F004         	goto	i2u14_40
  1562  000972                     i2u14_41:
  1563  000972  0E01               	movlw	1
  1564  000974  EFBD  F004         	goto	i2u14_46
  1565  000978                     i2u14_40:
  1566  000978  0E00               	movlw	0
  1567  00097A                     i2u14_46:
  1568  00097A  0AFF               	xorlw	255
  1569  00097C  6E29               	movwf	??_isr^0,c
  1570  00097E  4629               	rlncf	??_isr^0,f,c
  1571  000980  4629               	rlncf	??_isr^0,f,c
  1572  000982  5082               	movf	130,w,c	;volatile
  1573  000984  1829               	xorwf	??_isr^0,w,c
  1574  000986  0BFB               	andlw	-5
  1575  000988  1829               	xorwf	??_isr^0,w,c
  1576  00098A  6E82               	movwf	130,c	;volatile
  1577  00098C                     i2l986:
  1578                           
  1579                           ;main.c: 106:     INTCONbits.INT0IF = 0;
  1580  00098C  92F2               	bcf	242,1,c	;volatile
  1581  00098E                     
  1582                           ;main.c: 107:     INTCON3bits.INT1IF = 0;
  1583  00098E  90F0               	bcf	240,0,c	;volatile
  1584  000990                     
  1585                           ;main.c: 108:     INTCON3bits.INT2IF = 0;
  1586  000990  92F0               	bcf	240,1,c	;volatile
  1587  000992  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1588  000994  0011               	retfie		f
  1589  000996                     __end_of_isr:
  1590                           	opt callstack 0
  1591                           
  1592                           	psect	rparam
  1593  0000                     
  1594                           	psect	temp
  1595  00004D                     btemp:
  1596                           	opt callstack 0
  1597  00004D                     	ds	1
  1598  0000                     int$flags	set	btemp
  1599  0000                     wtemp8	set	btemp+1
  1600  0000                     ttemp5	set	btemp+1
  1601  0000                     ttemp6	set	btemp+4
  1602  0000                     ttemp7	set	btemp+8
  1603                           tosu	equ	0xFFF
  1604                           tosh	equ	0xFFE
  1605                           tosl	equ	0xFFD
  1606                           stkptr	equ	0xFFC
  1607                           pclatu	equ	0xFFB
  1608                           pclath	equ	0xFFA
  1609                           pcl	equ	0xFF9
  1610                           tblptru	equ	0xFF8
  1611                           tblptrh	equ	0xFF7
  1612                           tblptrl	equ	0xFF6
  1613                           tablat	equ	0xFF5
  1614                           prodh	equ	0xFF4
  1615                           prodl	equ	0xFF3
  1616                           indf0	equ	0xFEF
  1617                           postinc0	equ	0xFEE
  1618                           postdec0	equ	0xFED
  1619                           preinc0	equ	0xFEC
  1620                           plusw0	equ	0xFEB
  1621                           fsr0h	equ	0xFEA
  1622                           fsr0l	equ	0xFE9
  1623                           wreg	equ	0xFE8
  1624                           indf1	equ	0xFE7
  1625                           postinc1	equ	0xFE6
  1626                           postdec1	equ	0xFE5
  1627                           preinc1	equ	0xFE4
  1628                           plusw1	equ	0xFE3
  1629                           fsr1h	equ	0xFE2
  1630                           fsr1l	equ	0xFE1
  1631                           bsr	equ	0xFE0
  1632                           indf2	equ	0xFDF
  1633                           postinc2	equ	0xFDE
  1634                           postdec2	equ	0xFDD
  1635                           preinc2	equ	0xFDC
  1636                           plusw2	equ	0xFDB
  1637                           fsr2h	equ	0xFDA
  1638                           fsr2l	equ	0xFD9
  1639                           status	equ	0xFD8


Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      76
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S966_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _setup->_inicializa_lcd
    _setup->_limpa_lcd
    _limpa_lcd->_envia_byte_lcd
    _inicializa_lcd->_envia_byte_lcd
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_escreve_lcd
    _escreve_lcd->_envia_byte_lcd
    _envia_byte_lcd->_envia_nibble_lcd

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3698
                             _printf
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1376
                       _configureIRQ
                      _configurePins
                     _inicializa_lcd
                          _limpa_lcd
 ---------------------------------------------------------------------------------
 (2) _limpa_lcd                                            1     1      0     658
                                              5 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (2) _inicializa_lcd                                       1     1      0     718
                                              5 COMRAM     1     1      0
                     _envia_byte_lcd
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (2) _configurePins                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configureIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    2322
                                             30 COMRAM     6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    2194
                                             22 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    34      6    1844
                                             16 COMRAM     6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1418
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     702
                                              6 COMRAM     1     1      0
                        _escreve_lcd
 ---------------------------------------------------------------------------------
 (6) _escreve_lcd                                          1     1      0     680
                                              5 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (3) _envia_byte_lcd                                       2     1      1     658
                                              3 COMRAM     2     1      1
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (4) _envia_nibble_lcd                                     2     2      0      60
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _escreve_lcd
               _envia_byte_lcd
                 _envia_nibble_lcd
   _setup
     _configureIRQ
     _configurePins
     _inicializa_lcd
       _envia_byte_lcd
         _envia_nibble_lcd
       _envia_nibble_lcd
     _limpa_lcd
       _envia_byte_lcd
         _envia_nibble_lcd

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      4C       1       80.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4C      20        0.0%
DATA                 0      0      4C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Nov 24 15:24:56 2022

            ?_configureIRQ 0029                         l31 0C9E                         l40 0C86  
                       l34 0C1E                         l37 0BFE                         l45 0C68  
                       l46 0C68                         l63 0AB2                         l72 0C56  
                       l66 0BDC                         l75 0B34                         l69 0C94  
           ?_configurePins 0029                __CFG_BOR$ON 000000                __CFG_BORV$3 000000  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000                        l113 08F8                        l118 0B8A  
                      l119 0B92                        l820 0BB8                        l900 0BE4  
                      l805 0A2A                        l830 0A30                        l910 0BF4  
                      l902 0BEC                        l832 0AA0                        l912 0BF6  
                      l904 0BEE                        l834 0AA8                        l914 0BF8  
                      l906 0BF0                        l836 0AAA                        l828 0A2E  
                      l916 0BFA                        l908 0BF2                        l918 0BFC  
                      l896 0C00                        l898 0BDE               __CFG_CPB$OFF 000000  
                      u200 09E2                        u201 09DE                        u210 0A18  
                      u211 0A14                        u220 0834                        u221 0830  
                      u230 087A                        u231 0876                        u240 0B8A  
                      u241 0B86                        u307 0AEC                        u180 09A8  
                      u181 09A4                        u317 0B0E                        u190 09BA  
                      u327 0AA2                        u175 0BC4                        u191 09B6  
                      u176 0BC6                        u337 0AAC               __CFG_CPD$OFF 000000  
                      u277 0C4E                        u287 0AC4                        u297 0ADA  
                      _isr 0008                        wreg 000FE8               __CFG_LVP$OFF 000000  
             __CFG_WDT$OFF 000000                       l1010 0BCC                       l1012 0BD4  
                     l1020 09A8                       l1100 0C76                       l1006 0BBC  
                     l1014 0C8A                       l1022 09BA                       l1110 0B9C  
                     l1102 0C7A                       l1008 0BC6                       l1016 0C98  
                     l1024 09C4                       l1040 0856                       l1032 0810  
                     l1104 0C7E                       l1026 09E2                       l1018 0996  
                     l1042 087A                       l1050 08A8                       l1034 0834  
                     l1106 0C82                       l1114 0C58                       l1028 0A18  
                     l1052 08B6                       l1044 0888                       l1036 0842  
                     l1108 0B94                       l1116 0C5C                       l1046 089C  
                     l1038 0852                       l1070 0AD4                       l1056 08C2  
                     l1080 0B16                       l1072 0AEA                       l1064 0AB4  
                     l1058 08E6                       l1090 0B36                       l1082 0B20  
                     l1074 0AF2                       l1066 0ABE                       l1092 0B3E  
                     l1084 0B2A                       l1076 0AF8                       l1068 0ACE  
                     l1094 0B4A                       l1078 0AFE                       l1086 0C3E  
                     l1096 0B6E                       l1088 0C48                       l1098 0C70  
                     _ADIE 007CEE                       ?_isr 0029                       STR_1 0801  
                     _PEIE 007F96                       i2l56 0992               ?_escreve_lcd 0029  
   envia_byte_lcd@endereco 002D                       _dbuf 0001                       _main 0C58  
                     _prec 0025                       _nout 0021                       fsr1h 000FE2  
                     fsr2h 000FDA                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 004D                       start 000E              __CFG_IESO$OFF 000000  
            __CFG_MCLRE$ON 000000             ??_configureIRQ 002A               ___param_bank 000000  
                    ??_isr 0029             __CFG_CCP2MX$ON 000000                      ?_main 0029  
                    i2l980 0938                      i2l990 0990                      i2l982 095A  
                    i2l974 08FC                      i2l984 0968                      i2l976 090A  
                    i2l986 098C                      i2l978 092A                      i2l988 098E  
             vfpfcnvrt@fmt 003B              __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000    __size_of_envia_byte_lcd 0024  
           __CFG_EBTRB$OFF 000000                      _flags 0027                      _fputc 0996  
                    _setup 0C70                      _width 0023                      _putch 0C96  
                    tablat 000FF5                      ttemp5 004E                      ttemp6 0051  
                    ttemp7 0055                      status 000FD8                      wtemp8 004E  
           __CFG_ICPRT$OFF 000000            __initialization 0C20               __end_of_main 0C70  
          ??_configurePins 002A                     ??_main 004D              __activetblptr 000001  
                   ?_fputc 0030                     ?_setup 0029                     ?_putch 0029  
  __size_of_inicializa_lcd 0082                     i2u9_40 090A                     i2u9_41 0906  
           __CFG_XINST$OFF 000000           _envia_nibble_lcd 0A2C               vfprintf@cfmt 0045  
           __CFG_STVREN$ON 000000                     clear_0 0C26                     _printf 0B94  
                   fputc@c 0030               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8       __end_of_configureIRQ 0C00  
         __end_of_vfprintf 0B94                 __accesstop 0060    __end_of__initialization 0C2C  
       envia_byte_lcd@dado 002C            __CFG_PBADEN$OFF 000000            __CFG_FOSC$XT_XT 000000  
     __size_of_escreve_lcd 000E              ___rparam_used 000001               escreve_lcd@c 002E  
           __pcstackCOMRAM 0029              __end_of_fputc 0A2C              __end_of_setup 0C88  
            __end_of_putch 0CA0             _envia_byte_lcd 0BBA                    ??_fputc 0034  
                  ??_setup 002F                    ??_putch 002F         __size_of_limpa_lcd 001A  
                  ?_printf 0047     __end_of_envia_byte_lcd 0BDE                    _INTCON2 000FF1  
                  _INTCON3 000FF0         __size_of_vfpfcnvrt 00EA                    i2u10_40 091A  
                  i2u10_41 0914                    i2u10_46 091C                    i2u11_40 0938  
                  i2u11_41 0934                    i2u12_40 0948                    i2u12_41 0942  
                  i2u12_46 094A                    i2u13_40 0968                    i2u13_41 0964  
                  i2u14_40 0978                    i2u14_41 0972                    i2u14_46 097A  
          __CFG_VREGEN$OFF 000000             _inicializa_lcd 0AB4                    __Hparam 0000  
                  __Lparam 0000                  ?_vfprintf 003F               __psmallconst 0800  
                  __pcinit 0C20                    __ramtop 0800                    __ptext0 0C58  
                  __ptext1 0C70                    __ptext2 0C3E                    __ptext3 0AB4  
                  __ptext4 0C00                    __ptext5 0BDE                    __ptext6 0B94  
                  __ptext7 0B36                    __ptext8 0810                    __ptext9 0996  
          __size_of_printf 0026      __size_of_configureIRQ 0022            ?_envia_byte_lcd 002C  
             __size_of_isr 098E          __end_of_limpa_lcd 0C58   __end_of_envia_nibble_lcd 0AB4  
   __end_of_inicializa_lcd 0B36             __pintcode_body 08FA       end_of_initialization 0C2C  
                  fputc@fp 0032                    int_func 08FA          __end_of_vfpfcnvrt 08FA  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
             _configureIRQ 0BDE                    postinc2 000FDE                 ??_vfprintf 0045  
    __end_of_configurePins 0C20                  _PORTCbits 000F82                  _PORTDbits 000F83  
                _TRISBbits 000F93                  _TRISCbits 000F94                  _TRISDbits 000F95  
          ?_inicializa_lcd 0029                vfpfcnvrt@ap 003D                vfpfcnvrt@fp 0039  
           __end_of_printf 0BBA        start_initialization 0C20                __end_of_isr 0996  
            ??_escreve_lcd 002E                vfprintf@fmt 0041           __CFG_LPT1OSC$OFF 000000  
                 ??_printf 0049                __pbssCOMRAM 0001        __end_of_escreve_lcd 0C96  
                __pintcode 0008           ??_envia_byte_lcd 002D          __size_of_vfprintf 005E  
              __smallconst 0800          ?_envia_nibble_lcd 0029             __size_of_fputc 0096  
                _limpa_lcd 0C3E             __size_of_setup 0018             __size_of_putch 000A  
       ??_envia_nibble_lcd 002A           __CFG_WDTPS$32768 000000                  _vfpfcnvrt 0810  
         ??_inicializa_lcd 002E                _INTCON3bits 000FF0                 ?_limpa_lcd 0029  
              _escreve_lcd 0C88                   __Hrparam 0000                 vfprintf@ap 0043  
                 __Lrparam 0000                 vfprintf@fp 003F               __Lsmallconst 0800  
               ?_vfpfcnvrt 0039                   __ptext10 0C96                   __ptext11 0C88  
                 __ptext12 0BBA                   __ptext13 0A2C     __size_of_configurePins 0020  
            __size_of_main 0018                   int$flags 004D                   _vfprintf 0B36  
                printf@fmt 0047                  putch@data 002F                 _INTCONbits 000FF2  
              ??_limpa_lcd 002E                   intlevel2 0000                   printf@ap 004B  
              ??_vfpfcnvrt 003F              _configurePins 0C00       envia_nibble_lcd@dado 002B  
__size_of_envia_nibble_lcd 0088  
