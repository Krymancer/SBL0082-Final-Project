

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Nov 24 23:18:22 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           ; Version 2.10
    57                           ; Generated 31/07/2019 GMT
    58                           ; 
    59                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     _PORTDbits	set	3971
    91  0000                     _PORTCbits	set	3970
    92  0000                     _PR2	set	4043
    93  0000                     _T2CONbits	set	4042
    94  0000                     _INTCON3bits	set	4080
    95  0000                     _INTCON3	set	4080
    96  0000                     _INTCON2	set	4081
    97  0000                     _INTCONbits	set	4082
    98  0000                     _TRISDbits	set	3989
    99  0000                     _TRISBbits	set	3987
   100  0000                     _TRISCbits	set	3988
   101  0000                     _TMR2IF	set	31985
   102  0000                     _TMR2IE	set	31977
   103  0000                     _PEIE	set	32662
   104  0000                     _ADIE	set	31982
   105                           
   106                           	psect	smallconst
   107  000800                     __psmallconst:
   108                           	opt callstack 0
   109  000800  00                 	db	0
   110  000801                     STR_2:
   111  000801  54                 	db	84	;'T'
   112  000802  69                 	db	105	;'i'
   113  000803  6D                 	db	109	;'m'
   114  000804  6D                 	db	109	;'m'
   115  000805  65                 	db	101	;'e'
   116  000806  72                 	db	114	;'r'
   117  000807  3A                 	db	58	;':'
   118  000808  20                 	db	32
   119  000809  25                 	db	37
   120  00080A  64                 	db	100	;'d'
   121  00080B  00                 	db	0
   122  00080C                     STR_1:
   123  00080C  4F                 	db	79	;'O'
   124  00080D  4B                 	db	75	;'K'
   125  00080E  00                 	db	0
   126                           
   127                           ; #config settings
   128  00080F  00                 	db	0	; dummy byte at the end
   129  0000                     
   130                           	psect	cinit
   131  00200C                     __pcinit:
   132                           	opt callstack 0
   133  00200C                     start_initialization:
   134                           	opt callstack 0
   135  00200C                     __initialization:
   136                           	opt callstack 0
   137                           
   138                           ; Clear objects allocated to BANK0 (42 bytes)
   139  00200C  EE00  F0C4         	lfsr	0,__pbssBANK0
   140  002010  0E2A               	movlw	42
   141  002012                     clear_0:
   142  002012  6AEE               	clrf	postinc0,c
   143  002014  06E8               	decf	wreg,f,c
   144  002016  E1FD               	bnz	clear_0
   145  002018                     end_of_initialization:
   146                           	opt callstack 0
   147  002018                     __end_of__initialization:
   148                           	opt callstack 0
   149  002018  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   150  00201A  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   151  00201C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   152  00201E  6EF8               	movwf	tblptru,c
   153  002020  0100               	movlb	0
   154  002022  EF13  F010         	goto	_main	;jump to C main() function
   155                           
   156                           	psect	bssBANK0
   157  0000C4                     __pbssBANK0:
   158                           	opt callstack 0
   159  0000C4                     _nout:
   160                           	opt callstack 0
   161  0000C4                     	ds	2
   162  0000C6                     _width:
   163                           	opt callstack 0
   164  0000C6                     	ds	2
   165  0000C8                     _prec:
   166                           	opt callstack 0
   167  0000C8                     	ds	2
   168  0000CA                     _flags:
   169                           	opt callstack 0
   170  0000CA                     	ds	2
   171  0000CC                     _currentTime:
   172                           	opt callstack 0
   173  0000CC                     	ds	2
   174  0000CE                     _dbuf:
   175                           	opt callstack 0
   176  0000CE                     	ds	32
   177                           
   178                           	psect	cstackBANK1
   179  000100                     __pcstackBANK1:
   180                           	opt callstack 0
   181  000100                     vfpfcnvrt@ll:
   182                           	opt callstack 0
   183                           
   184                           ; 8 bytes @ 0x0
   185  000100                     	ds	8
   186  000108                     vfprintf@cfmt:
   187                           	opt callstack 0
   188                           
   189                           ; 2 bytes @ 0x8
   190  000108                     	ds	2
   191  00010A                     ?_printf:
   192                           	opt callstack 0
   193  00010A                     printf@fmt:
   194                           	opt callstack 0
   195                           
   196                           ; 2 bytes @ 0xA
   197  00010A                     	ds	4
   198  00010E                     printf@ap:
   199                           	opt callstack 0
   200                           
   201                           ; 2 bytes @ 0xE
   202  00010E                     	ds	2
   203                           
   204                           	psect	cstackBANK0
   205  000060                     __pcstackBANK0:
   206                           	opt callstack 0
   207  000060                     ?i2_printf:
   208                           	opt callstack 0
   209  000060                     i2printf@fmt:
   210                           	opt callstack 0
   211                           
   212                           ; 2 bytes @ 0x0
   213  000060                     	ds	4
   214  000064                     i2printf@ret:
   215                           	opt callstack 0
   216                           
   217                           ; 2 bytes @ 0x4
   218  000064                     	ds	2
   219  000066                     i2printf@ap:
   220                           	opt callstack 0
   221                           
   222                           ; 2 bytes @ 0x6
   223  000066                     	ds	2
   224  000068                     ??_isr:
   225                           
   226                           ; 1 bytes @ 0x8
   227  000068                     	ds	9
   228  000071                     ??_envia_nibble_lcd:
   229  000071                     ?_strlen:
   230                           	opt callstack 0
   231  000071                     ?___aodiv:
   232                           	opt callstack 0
   233  000071                     ?___aomod:
   234                           	opt callstack 0
   235  000071                     strlen@s:
   236                           	opt callstack 0
   237  000071                     ___aodiv@dividend:
   238                           	opt callstack 0
   239  000071                     ___aomod@dividend:
   240                           	opt callstack 0
   241                           
   242                           ; 8 bytes @ 0x11
   243  000071                     	ds	1
   244  000072                     envia_nibble_lcd@dado:
   245                           	opt callstack 0
   246                           
   247                           ; 1 bytes @ 0x12
   248  000072                     	ds	1
   249  000073                     envia_byte_lcd@dado:
   250                           	opt callstack 0
   251  000073                     strlen@a:
   252                           	opt callstack 0
   253                           
   254                           ; 2 bytes @ 0x13
   255  000073                     	ds	1
   256  000074                     envia_byte_lcd@endereco:
   257                           	opt callstack 0
   258                           
   259                           ; 1 bytes @ 0x14
   260  000074                     	ds	1
   261  000075                     ??_inicializa_lcd:
   262  000075                     ??_limpa_lcd:
   263  000075                     escreve_lcd@c:
   264                           	opt callstack 0
   265                           
   266                           ; 1 bytes @ 0x15
   267  000075                     	ds	1
   268  000076                     putch@data:
   269                           	opt callstack 0
   270                           
   271                           ; 1 bytes @ 0x16
   272  000076                     	ds	1
   273  000077                     fputc@c:
   274                           	opt callstack 0
   275                           
   276                           ; 2 bytes @ 0x17
   277  000077                     	ds	2
   278  000079                     fputc@fp:
   279                           	opt callstack 0
   280  000079                     ___aodiv@divisor:
   281                           	opt callstack 0
   282  000079                     ___aomod@divisor:
   283                           	opt callstack 0
   284                           
   285                           ; 8 bytes @ 0x19
   286  000079                     	ds	2
   287  00007B                     ??_fputc:
   288                           
   289                           ; 1 bytes @ 0x1B
   290  00007B                     	ds	5
   291  000080                     fputs@s:
   292                           	opt callstack 0
   293                           
   294                           ; 2 bytes @ 0x20
   295  000080                     	ds	1
   296  000081                     ___aodiv@counter:
   297                           	opt callstack 0
   298  000081                     ___aomod@counter:
   299                           	opt callstack 0
   300                           
   301                           ; 1 bytes @ 0x21
   302  000081                     	ds	1
   303  000082                     ___aodiv@sign:
   304                           	opt callstack 0
   305  000082                     ___aomod@sign:
   306                           	opt callstack 0
   307  000082                     fputs@fp:
   308                           	opt callstack 0
   309                           
   310                           ; 2 bytes @ 0x22
   311  000082                     	ds	1
   312  000083                     ?_abs:
   313                           	opt callstack 0
   314  000083                     abs@a:
   315                           	opt callstack 0
   316  000083                     ___aodiv@quotient:
   317                           	opt callstack 0
   318                           
   319                           ; 8 bytes @ 0x23
   320  000083                     	ds	1
   321  000084                     fputs@c:
   322                           	opt callstack 0
   323                           
   324                           ; 1 bytes @ 0x24
   325  000084                     	ds	1
   326  000085                     ??_abs:
   327  000085                     fputs@i:
   328                           	opt callstack 0
   329                           
   330                           ; 2 bytes @ 0x25
   331  000085                     	ds	2
   332  000087                     ?_pad:
   333                           	opt callstack 0
   334  000087                     pad@fp:
   335                           	opt callstack 0
   336                           
   337                           ; 2 bytes @ 0x27
   338  000087                     	ds	2
   339  000089                     pad@buf:
   340                           	opt callstack 0
   341                           
   342                           ; 2 bytes @ 0x29
   343  000089                     	ds	2
   344  00008B                     pad@p:
   345                           	opt callstack 0
   346                           
   347                           ; 2 bytes @ 0x2B
   348  00008B                     	ds	2
   349  00008D                     ??_pad:
   350                           
   351                           ; 1 bytes @ 0x2D
   352  00008D                     	ds	1
   353  00008E                     pad@i:
   354                           	opt callstack 0
   355                           
   356                           ; 2 bytes @ 0x2E
   357  00008E                     	ds	2
   358  000090                     pad@w:
   359                           	opt callstack 0
   360                           
   361                           ; 2 bytes @ 0x30
   362  000090                     	ds	2
   363  000092                     ?_dtoa:
   364                           	opt callstack 0
   365  000092                     dtoa@fp:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0x32
   369  000092                     	ds	2
   370  000094                     dtoa@d:
   371                           	opt callstack 0
   372                           
   373                           ; 8 bytes @ 0x34
   374  000094                     	ds	8
   375  00009C                     ??_dtoa:
   376                           
   377                           ; 1 bytes @ 0x3C
   378  00009C                     	ds	8
   379  0000A4                     _dtoa$589:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0x44
   383  0000A4                     	ds	2
   384  0000A6                     dtoa@p:
   385                           	opt callstack 0
   386                           
   387                           ; 2 bytes @ 0x46
   388  0000A6                     	ds	2
   389  0000A8                     dtoa@w:
   390                           	opt callstack 0
   391                           
   392                           ; 2 bytes @ 0x48
   393  0000A8                     	ds	2
   394  0000AA                     dtoa@s:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0x4A
   398  0000AA                     	ds	2
   399  0000AC                     dtoa@n:
   400                           	opt callstack 0
   401                           
   402                           ; 8 bytes @ 0x4C
   403  0000AC                     	ds	8
   404  0000B4                     dtoa@i:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x54
   408  0000B4                     	ds	2
   409  0000B6                     ?_vfpfcnvrt:
   410                           	opt callstack 0
   411  0000B6                     vfpfcnvrt@fp:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0x56
   415  0000B6                     	ds	2
   416  0000B8                     vfpfcnvrt@fmt:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0x58
   420  0000B8                     	ds	2
   421  0000BA                     vfpfcnvrt@ap:
   422                           	opt callstack 0
   423                           
   424                           ; 2 bytes @ 0x5A
   425  0000BA                     	ds	2
   426  0000BC                     ??_vfpfcnvrt:
   427                           
   428                           ; 1 bytes @ 0x5C
   429  0000BC                     	ds	2
   430  0000BE                     ?_vfprintf:
   431                           	opt callstack 0
   432  0000BE                     vfprintf@fp:
   433                           	opt callstack 0
   434                           
   435                           ; 2 bytes @ 0x5E
   436  0000BE                     	ds	2
   437  0000C0                     vfprintf@fmt:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x60
   441  0000C0                     	ds	2
   442  0000C2                     vfprintf@ap:
   443                           	opt callstack 0
   444                           
   445                           ; 2 bytes @ 0x62
   446  0000C2                     	ds	2
   447  0000C4                     
   448                           ; 1 bytes @ 0x64
   449                           
   450                           	psect	cstackCOMRAM
   451  000001                     __pcstackCOMRAM:
   452                           	opt callstack 0
   453  000001                     ??i2_envia_nibble_lcd:
   454  000001                     ?i2_strlen:
   455                           	opt callstack 0
   456  000001                     ?i2___aodiv:
   457                           	opt callstack 0
   458  000001                     ?i2___aomod:
   459                           	opt callstack 0
   460  000001                     i2strlen@s:
   461                           	opt callstack 0
   462  000001                     i2___aodiv@dividend:
   463                           	opt callstack 0
   464  000001                     i2___aomod@dividend:
   465                           	opt callstack 0
   466                           
   467                           ; 8 bytes @ 0x0
   468  000001                     	ds	1
   469  000002                     i2envia_nibble_lcd@dado:
   470                           	opt callstack 0
   471                           
   472                           ; 1 bytes @ 0x1
   473  000002                     	ds	1
   474  000003                     i2envia_byte_lcd@dado:
   475                           	opt callstack 0
   476  000003                     i2strlen@a:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x2
   480  000003                     	ds	1
   481  000004                     i2envia_byte_lcd@endereco:
   482                           	opt callstack 0
   483                           
   484                           ; 1 bytes @ 0x3
   485  000004                     	ds	1
   486  000005                     ??i2_limpa_lcd:
   487  000005                     i2escreve_lcd@c:
   488                           	opt callstack 0
   489                           
   490                           ; 1 bytes @ 0x4
   491  000005                     	ds	1
   492  000006                     i2putch@data:
   493                           	opt callstack 0
   494                           
   495                           ; 1 bytes @ 0x5
   496  000006                     	ds	1
   497  000007                     i2fputc@c:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x6
   501  000007                     	ds	2
   502  000009                     i2fputc@fp:
   503                           	opt callstack 0
   504  000009                     i2___aodiv@divisor:
   505                           	opt callstack 0
   506  000009                     i2___aomod@divisor:
   507                           	opt callstack 0
   508                           
   509                           ; 8 bytes @ 0x8
   510  000009                     	ds	2
   511  00000B                     ??i2_fputc:
   512                           
   513                           ; 1 bytes @ 0xA
   514  00000B                     	ds	5
   515  000010                     i2fputs@s:
   516                           	opt callstack 0
   517                           
   518                           ; 2 bytes @ 0xF
   519  000010                     	ds	1
   520  000011                     i2___aodiv@counter:
   521                           	opt callstack 0
   522  000011                     i2___aomod@counter:
   523                           	opt callstack 0
   524                           
   525                           ; 1 bytes @ 0x10
   526  000011                     	ds	1
   527  000012                     i2___aodiv@sign:
   528                           	opt callstack 0
   529  000012                     i2___aomod@sign:
   530                           	opt callstack 0
   531  000012                     i2fputs@fp:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0x11
   535  000012                     	ds	1
   536  000013                     ?i2_abs:
   537                           	opt callstack 0
   538  000013                     i2abs@a:
   539                           	opt callstack 0
   540  000013                     i2___aodiv@quotient:
   541                           	opt callstack 0
   542                           
   543                           ; 8 bytes @ 0x12
   544  000013                     	ds	1
   545  000014                     i2fputs@c:
   546                           	opt callstack 0
   547                           
   548                           ; 1 bytes @ 0x13
   549  000014                     	ds	1
   550  000015                     ??i2_abs:
   551  000015                     i2fputs@i:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x14
   555  000015                     	ds	2
   556  000017                     ?i2_pad:
   557                           	opt callstack 0
   558  000017                     i2pad@fp:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x16
   562  000017                     	ds	2
   563  000019                     i2pad@buf:
   564                           	opt callstack 0
   565                           
   566                           ; 2 bytes @ 0x18
   567  000019                     	ds	2
   568  00001B                     i2pad@p:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x1A
   572  00001B                     	ds	2
   573  00001D                     ??i2_pad:
   574                           
   575                           ; 1 bytes @ 0x1C
   576  00001D                     	ds	1
   577  00001E                     i2pad@i:
   578                           	opt callstack 0
   579                           
   580                           ; 2 bytes @ 0x1D
   581  00001E                     	ds	2
   582  000020                     i2pad@w:
   583                           	opt callstack 0
   584                           
   585                           ; 2 bytes @ 0x1F
   586  000020                     	ds	2
   587  000022                     ?i2_dtoa:
   588                           	opt callstack 0
   589  000022                     i2dtoa@fp:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x21
   593  000022                     	ds	2
   594  000024                     i2dtoa@d:
   595                           	opt callstack 0
   596                           
   597                           ; 8 bytes @ 0x23
   598  000024                     	ds	8
   599  00002C                     ??i2_dtoa:
   600                           
   601                           ; 1 bytes @ 0x2B
   602  00002C                     	ds	8
   603  000034                     i2_dtoa$589:
   604                           	opt callstack 0
   605                           
   606                           ; 2 bytes @ 0x33
   607  000034                     	ds	2
   608  000036                     i2dtoa@p:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0x35
   612  000036                     	ds	2
   613  000038                     i2dtoa@w:
   614                           	opt callstack 0
   615                           
   616                           ; 2 bytes @ 0x37
   617  000038                     	ds	2
   618  00003A                     i2dtoa@s:
   619                           	opt callstack 0
   620                           
   621                           ; 2 bytes @ 0x39
   622  00003A                     	ds	2
   623  00003C                     i2dtoa@n:
   624                           	opt callstack 0
   625                           
   626                           ; 8 bytes @ 0x3B
   627  00003C                     	ds	8
   628  000044                     i2dtoa@i:
   629                           	opt callstack 0
   630                           
   631                           ; 2 bytes @ 0x43
   632  000044                     	ds	2
   633  000046                     ?i2_vfpfcnvrt:
   634                           	opt callstack 0
   635  000046                     i2vfpfcnvrt@fp:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0x45
   639  000046                     	ds	2
   640  000048                     i2vfpfcnvrt@fmt:
   641                           	opt callstack 0
   642                           
   643                           ; 2 bytes @ 0x47
   644  000048                     	ds	2
   645  00004A                     i2vfpfcnvrt@ap:
   646                           	opt callstack 0
   647                           
   648                           ; 2 bytes @ 0x49
   649  00004A                     	ds	2
   650  00004C                     ??i2_vfpfcnvrt:
   651                           
   652                           ; 1 bytes @ 0x4B
   653  00004C                     	ds	2
   654  00004E                     i2vfpfcnvrt@ll:
   655                           	opt callstack 0
   656                           
   657                           ; 8 bytes @ 0x4D
   658  00004E                     	ds	8
   659  000056                     ?i2_vfprintf:
   660                           	opt callstack 0
   661  000056                     i2vfprintf@fp:
   662                           	opt callstack 0
   663                           
   664                           ; 2 bytes @ 0x55
   665  000056                     	ds	2
   666  000058                     i2vfprintf@fmt:
   667                           	opt callstack 0
   668                           
   669                           ; 2 bytes @ 0x57
   670  000058                     	ds	2
   671  00005A                     i2vfprintf@ap:
   672                           	opt callstack 0
   673                           
   674                           ; 2 bytes @ 0x59
   675  00005A                     	ds	2
   676  00005C                     i2vfprintf@cfmt:
   677                           	opt callstack 0
   678                           
   679                           ; 2 bytes @ 0x5B
   680  00005C                     	ds	2
   681  00005E                     
   682                           ; 1 bytes @ 0x5D
   683 ;;
   684 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   685 ;;
   686 ;; *************** function _main *****************
   687 ;; Defined at:
   688 ;;		line 115 in file "main.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;		None
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   702 ;;      Params:         0       0       0       0       0       0       0       0       0
   703 ;;      Locals:         0       0       0       0       0       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0       0       0       0       0
   705 ;;      Totals:         0       0       0       0       0       0       0       0       0
   706 ;;Total ram usage:        0 bytes
   707 ;; Hardware stack levels required when called:   23
   708 ;; This function calls:
   709 ;;		_printf
   710 ;;		_setup
   711 ;; This function is called by:
   712 ;;		Startup code after reset
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text0
   717  002026                     __ptext0:
   718                           	opt callstack 0
   719  002026                     _main:
   720                           	opt callstack 8
   721  002026                     
   722                           ;main.c: 117:     setup();
   723  002026  ECF8  F00F         	call	_setup	;wreg free
   724  00202A                     
   725                           ;main.c: 118:     printf("OK");
   726  00202A  0E0C               	movlw	low STR_1
   727  00202C  0101               	movlb	1	; () banked
   728  00202E  6F0A               	movwf	printf@fmt& (0+255),b
   729  002030  0E08               	movlw	high STR_1
   730  002032  6F0B               	movwf	(printf@fmt+1)& (0+255),b
   731  002034  EC9F  F00F         	call	_printf	;wreg free
   732  002038                     l58:
   733  002038  EF1C  F010         	goto	l58
   734  00203C  EF07  F000         	goto	start
   735  002040                     __end_of_main:
   736                           	opt callstack 0
   737                           
   738 ;; *************** function _setup *****************
   739 ;; Defined at:
   740 ;;		line 101 in file "main.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg, status,2, status,0, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   754 ;;      Params:         0       0       0       0       0       0       0       0       0
   755 ;;      Locals:         0       0       0       0       0       0       0       0       0
   756 ;;      Temps:          0       0       0       0       0       0       0       0       0
   757 ;;      Totals:         0       0       0       0       0       0       0       0       0
   758 ;;Total ram usage:        0 bytes
   759 ;; Hardware stack levels used:    1
   760 ;; Hardware stack levels required when called:   15
   761 ;; This function calls:
   762 ;;		_configureIRQ
   763 ;;		_configurePins
   764 ;;		_inicializa_lcd
   765 ;;		_initTimer0
   766 ;;		_limpa_lcd
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text1
   773  001FF0                     __ptext1:
   774                           	opt callstack 0
   775  001FF0                     _setup:
   776                           	opt callstack 15
   777  001FF0                     
   778                           ;main.c: 103:     PORTCbits.RC0 = 0;
   779  001FF0  9082               	bcf	130,0,c	;volatile
   780                           
   781                           ;main.c: 104:     PORTCbits.RC1 = 0;
   782  001FF2  9282               	bcf	130,1,c	;volatile
   783                           
   784                           ;main.c: 105:     PORTCbits.RC2 = 0;
   785  001FF4  9482               	bcf	130,2,c	;volatile
   786  001FF6                     
   787                           ;main.c: 107:     configurePins();
   788  001FF6  ECC6  F00F         	call	_configurePins	;wreg free
   789  001FFA                     
   790                           ;main.c: 108:     configureIRQ();
   791  001FFA  ECD7  F00F         	call	_configureIRQ	;wreg free
   792  001FFE                     
   793                           ;main.c: 110:     inicializa_lcd();
   794  001FFE  EC7D  F00D         	call	_inicializa_lcd	;wreg free
   795  002002                     
   796                           ;main.c: 111:     limpa_lcd();
   797  002002  ECE8  F00F         	call	_limpa_lcd	;wreg free
   798  002006                     
   799                           ;main.c: 112:     initTimer0();
   800  002006  EC2D  F010         	call	_initTimer0	;wreg free
   801  00200A  0012               	return		;funcret
   802  00200C                     __end_of_setup:
   803                           	opt callstack 0
   804                           
   805 ;; *************** function _limpa_lcd *****************
   806 ;; Defined at:
   807 ;;		line 26 in file "lcd.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, status,2, status,0, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   821 ;;      Params:         0       0       0       0       0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0       0       0       0       0
   823 ;;      Temps:          0       1       0       0       0       0       0       0       0
   824 ;;      Totals:         0       1       0       0       0       0       0       0       0
   825 ;;Total ram usage:        1 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; Hardware stack levels required when called:   14
   828 ;; This function calls:
   829 ;;		_envia_byte_lcd
   830 ;; This function is called by:
   831 ;;		_setup
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text2
   836  001FD0                     __ptext2:
   837                           	opt callstack 0
   838  001FD0                     _limpa_lcd:
   839                           	opt callstack 15
   840  001FD0                     
   841                           ;lcd.c: 28:   envia_byte_lcd(0, 0x01);
   842  001FD0  0E01               	movlw	1
   843  001FD2  0100               	movlb	0	; () banked
   844  001FD4  6F73               	movwf	envia_byte_lcd@dado& (0+255),b
   845  001FD6  0E00               	movlw	0
   846  001FD8  EC89  F00F         	call	_envia_byte_lcd
   847  001FDC                     
   848                           ;lcd.c: 29:   _delay((unsigned long)((2)*(4000000/4000.0)));
   849  001FDC  0E03               	movlw	3
   850  001FDE  0100               	movlb	0	; () banked
   851  001FE0  6F75               	movwf	??_limpa_lcd& (0+255),b
   852  001FE2  0E97               	movlw	151
   853  001FE4                     u2987:
   854  001FE4  2EE8               	decfsz	wreg,f,c
   855  001FE6  D7FE               	bra	u2987
   856  001FE8  2F75               	decfsz	??_limpa_lcd& (0+255),f,b
   857  001FEA  D7FC               	bra	u2987
   858  001FEC  D000               	nop2	
   859  001FEE  0012               	return		;funcret
   860  001FF0                     __end_of_limpa_lcd:
   861                           	opt callstack 0
   862                           
   863 ;; *************** function _initTimer0 *****************
   864 ;; Defined at:
   865 ;;		line 82 in file "main.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, status,2
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   879 ;;      Params:         0       0       0       0       0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0       0       0       0       0
   882 ;;      Totals:         0       0       0       0       0       0       0       0       0
   883 ;;Total ram usage:        0 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:   12
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_setup
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text3
   894  00205A                     __ptext3:
   895                           	opt callstack 0
   896  00205A                     _initTimer0:
   897                           	opt callstack 17
   898  00205A                     
   899                           ;main.c: 84:     T2CONbits.T2CKPS1 = 0;
   900  00205A  92CA               	bcf	202,1,c	;volatile
   901                           
   902                           ;main.c: 85:     T2CONbits.T2CKPS0 = 1;
   903  00205C  80CA               	bsf	202,0,c	;volatile
   904  00205E                     
   905                           ;main.c: 86:     PR2 = 250;
   906  00205E  0EFA               	movlw	250
   907  002060  6ECB               	movwf	203,c	;volatile
   908  002062                     
   909                           ;main.c: 89:     T2CONbits.T2OUTPS3 = 1;
   910  002062  8CCA               	bsf	202,6,c	;volatile
   911  002064                     
   912                           ;main.c: 90:     T2CONbits.T2OUTPS2 = 0;
   913  002064  9ACA               	bcf	202,5,c	;volatile
   914  002066                     
   915                           ;main.c: 91:     T2CONbits.T2OUTPS1 = 0;
   916  002066  98CA               	bcf	202,4,c	;volatile
   917  002068                     
   918                           ;main.c: 92:     T2CONbits.T2OUTPS0 = 1;
   919  002068  86CA               	bsf	202,3,c	;volatile
   920  00206A                     
   921                           ;main.c: 94:     TMR2IE = 1;
   922  00206A  829D               	bsf	3997,1,c	;volatile
   923  00206C                     
   924                           ;main.c: 95:     TMR2IF = 0;
   925  00206C  929E               	bcf	3998,1,c	;volatile
   926  00206E                     
   927                           ;main.c: 97:     T2CONbits.TMR2ON = 1;
   928  00206E  84CA               	bsf	202,2,c	;volatile
   929  002070  0012               	return		;funcret
   930  002072                     __end_of_initTimer0:
   931                           	opt callstack 0
   932                           
   933 ;; *************** function _inicializa_lcd *****************
   934 ;; Defined at:
   935 ;;		line 32 in file "lcd.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   949 ;;      Params:         0       0       0       0       0       0       0       0       0
   950 ;;      Locals:         0       0       0       0       0       0       0       0       0
   951 ;;      Temps:          0       1       0       0       0       0       0       0       0
   952 ;;      Totals:         0       1       0       0       0       0       0       0       0
   953 ;;Total ram usage:        1 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; Hardware stack levels required when called:   14
   956 ;; This function calls:
   957 ;;		_envia_byte_lcd
   958 ;;		_envia_nibble_lcd
   959 ;; This function is called by:
   960 ;;		_setup
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text4
   965  001AFA                     __ptext4:
   966                           	opt callstack 0
   967  001AFA                     _inicializa_lcd:
   968                           	opt callstack 15
   969  001AFA                     
   970                           ;lcd.c: 34:   PORTDbits.RD1 = 0;
   971  001AFA  9283               	bcf	131,1,c	;volatile
   972                           
   973                           ;lcd.c: 35:   PORTDbits.RD4 = 0;
   974  001AFC  9883               	bcf	131,4,c	;volatile
   975                           
   976                           ;lcd.c: 36:   PORTDbits.RD5 = 0;
   977  001AFE  9A83               	bcf	131,5,c	;volatile
   978                           
   979                           ;lcd.c: 37:   PORTDbits.RD6 = 0;
   980  001B00  9C83               	bcf	131,6,c	;volatile
   981                           
   982                           ;lcd.c: 38:   PORTDbits.RD7 = 0;
   983  001B02  9E83               	bcf	131,7,c	;volatile
   984  001B04                     
   985                           ;lcd.c: 40:   _delay((unsigned long)((50)*(4000000/4000.0)));
   986  001B04  0E41               	movlw	65
   987  001B06  0100               	movlb	0	; () banked
   988  001B08  6F75               	movwf	??_inicializa_lcd& (0+255),b
   989  001B0A  0EEE               	movlw	238
   990  001B0C                     u2997:
   991  001B0C  2EE8               	decfsz	wreg,f,c
   992  001B0E  D7FE               	bra	u2997
   993  001B10  2F75               	decfsz	??_inicializa_lcd& (0+255),f,b
   994  001B12  D7FC               	bra	u2997
   995  001B14  F000               	nop	
   996  001B16                     
   997                           ;lcd.c: 41:   envia_nibble_lcd(0x03);
   998  001B16  0E03               	movlw	3
   999  001B18  ECC6  F00D         	call	_envia_nibble_lcd
  1000  001B1C                     
  1001                           ;lcd.c: 42:   _delay((unsigned long)((4)*(4000000/4000.0)));
  1002  001B1C  0E06               	movlw	6
  1003  001B1E  0100               	movlb	0	; () banked
  1004  001B20  6F75               	movwf	??_inicializa_lcd& (0+255),b
  1005  001B22  0E30               	movlw	48
  1006  001B24                     u3007:
  1007  001B24  2EE8               	decfsz	wreg,f,c
  1008  001B26  D7FE               	bra	u3007
  1009  001B28  2F75               	decfsz	??_inicializa_lcd& (0+255),f,b
  1010  001B2A  D7FC               	bra	u3007
  1011  001B2C  F000               	nop	
  1012                           
  1013                           ;lcd.c: 43:   envia_nibble_lcd(0x03);
  1014  001B2E  0E03               	movlw	3
  1015  001B30  ECC6  F00D         	call	_envia_nibble_lcd
  1016  001B34                     
  1017                           ;lcd.c: 44:   _delay((unsigned long)((100)*(4000000/4000000.0)));
  1018  001B34  0E21               	movlw	33
  1019  001B36                     u3017:
  1020  001B36  2EE8               	decfsz	wreg,f,c
  1021  001B38  D7FE               	bra	u3017
  1022  001B3A  F000               	nop	
  1023  001B3C                     
  1024                           ;lcd.c: 45:   envia_nibble_lcd(0x03);
  1025  001B3C  0E03               	movlw	3
  1026  001B3E  ECC6  F00D         	call	_envia_nibble_lcd
  1027  001B42                     
  1028                           ;lcd.c: 47:   envia_nibble_lcd(0x02);
  1029  001B42  0E02               	movlw	2
  1030  001B44  ECC6  F00D         	call	_envia_nibble_lcd
  1031  001B48                     
  1032                           ;lcd.c: 49:   envia_byte_lcd(0, 0x01);
  1033  001B48  0E01               	movlw	1
  1034  001B4A  0100               	movlb	0	; () banked
  1035  001B4C  6F73               	movwf	envia_byte_lcd@dado& (0+255),b
  1036  001B4E  0E00               	movlw	0
  1037  001B50  EC89  F00F         	call	_envia_byte_lcd
  1038                           
  1039                           ;lcd.c: 50:   _delay((unsigned long)((2)*(4000000/4000.0)));
  1040  001B54  0E03               	movlw	3
  1041  001B56  0100               	movlb	0	; () banked
  1042  001B58  6F75               	movwf	??_inicializa_lcd& (0+255),b
  1043  001B5A  0E97               	movlw	151
  1044  001B5C                     u3027:
  1045  001B5C  2EE8               	decfsz	wreg,f,c
  1046  001B5E  D7FE               	bra	u3027
  1047  001B60  2F75               	decfsz	??_inicializa_lcd& (0+255),f,b
  1048  001B62  D7FC               	bra	u3027
  1049  001B64  D000               	nop2	
  1050  001B66                     
  1051                           ;lcd.c: 52:   envia_byte_lcd(0, 0x28);
  1052  001B66  0E28               	movlw	40
  1053  001B68  0100               	movlb	0	; () banked
  1054  001B6A  6F73               	movwf	envia_byte_lcd@dado& (0+255),b
  1055  001B6C  0E00               	movlw	0
  1056  001B6E  EC89  F00F         	call	_envia_byte_lcd
  1057  001B72                     
  1058                           ;lcd.c: 54:   envia_byte_lcd(0, 0x0c);
  1059  001B72  0E0C               	movlw	12
  1060  001B74  0100               	movlb	0	; () banked
  1061  001B76  6F73               	movwf	envia_byte_lcd@dado& (0+255),b
  1062  001B78  0E00               	movlw	0
  1063  001B7A  EC89  F00F         	call	_envia_byte_lcd
  1064  001B7E                     
  1065                           ;lcd.c: 56:   envia_byte_lcd(0, 0x06);
  1066  001B7E  0E06               	movlw	6
  1067  001B80  0100               	movlb	0	; () banked
  1068  001B82  6F73               	movwf	envia_byte_lcd@dado& (0+255),b
  1069  001B84  0E00               	movlw	0
  1070  001B86  EC89  F00F         	call	_envia_byte_lcd
  1071  001B8A  0012               	return		;funcret
  1072  001B8C                     __end_of_inicializa_lcd:
  1073                           	opt callstack 0
  1074                           
  1075 ;; *************** function _configurePins *****************
  1076 ;; Defined at:
  1077 ;;		line 34 in file "main.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		None
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1091 ;;      Params:         0       0       0       0       0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:   12
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_setup
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text5
  1106  001F8C                     __ptext5:
  1107                           	opt callstack 0
  1108  001F8C                     _configurePins:
  1109                           	opt callstack 17
  1110  001F8C                     
  1111                           ;main.c: 36:     TRISCbits.RC0 = 0;
  1112  001F8C  9094               	bcf	148,0,c	;volatile
  1113                           
  1114                           ;main.c: 37:     TRISCbits.RC1 = 0;
  1115  001F8E  9294               	bcf	148,1,c	;volatile
  1116                           
  1117                           ;main.c: 38:     TRISCbits.RC2 = 0;
  1118  001F90  9494               	bcf	148,2,c	;volatile
  1119                           
  1120                           ;main.c: 40:     TRISBbits.RB0 = 1;
  1121  001F92  8093               	bsf	147,0,c	;volatile
  1122                           
  1123                           ;main.c: 41:     TRISBbits.RB1 = 1;
  1124  001F94  8293               	bsf	147,1,c	;volatile
  1125                           
  1126                           ;main.c: 42:     TRISBbits.RB2 = 1;
  1127  001F96  8493               	bsf	147,2,c	;volatile
  1128                           
  1129                           ;main.c: 44:     TRISBbits.TRISB0 = 1;
  1130  001F98  8093               	bsf	147,0,c	;volatile
  1131                           
  1132                           ;main.c: 45:     TRISBbits.TRISB1 = 1;
  1133  001F9A  8293               	bsf	147,1,c	;volatile
  1134                           
  1135                           ;main.c: 46:     TRISBbits.TRISB2 = 1;
  1136  001F9C  8493               	bsf	147,2,c	;volatile
  1137                           
  1138                           ;main.c: 48:     TRISDbits.RD0 = 0;
  1139  001F9E  9095               	bcf	149,0,c	;volatile
  1140                           
  1141                           ;main.c: 49:     TRISDbits.RD1 = 0;
  1142  001FA0  9295               	bcf	149,1,c	;volatile
  1143                           
  1144                           ;main.c: 51:     TRISDbits.RD4 = 0;
  1145  001FA2  9895               	bcf	149,4,c	;volatile
  1146                           
  1147                           ;main.c: 52:     TRISDbits.RD5 = 0;
  1148  001FA4  9A95               	bcf	149,5,c	;volatile
  1149                           
  1150                           ;main.c: 53:     TRISDbits.RD6 = 0;
  1151  001FA6  9C95               	bcf	149,6,c	;volatile
  1152                           
  1153                           ;main.c: 54:     TRISDbits.RD7 = 0;
  1154  001FA8  9E95               	bcf	149,7,c	;volatile
  1155                           
  1156                           ;main.c: 56:     TRISCbits.RC7 = 0;
  1157  001FAA  9E94               	bcf	148,7,c	;volatile
  1158  001FAC  0012               	return		;funcret
  1159  001FAE                     __end_of_configurePins:
  1160                           	opt callstack 0
  1161                           
  1162 ;; *************** function _configureIRQ *****************
  1163 ;; Defined at:
  1164 ;;		line 59 in file "main.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, status,2
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1178 ;;      Params:         0       0       0       0       0       0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1180 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1181 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1182 ;;Total ram usage:        0 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:   12
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_setup
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text6
  1193  001FAE                     __ptext6:
  1194                           	opt callstack 0
  1195  001FAE                     _configureIRQ:
  1196                           	opt callstack 17
  1197  001FAE                     
  1198                           ;main.c: 61:     ADIE = 0;
  1199  001FAE  9C9D               	bcf	3997,6,c	;volatile
  1200                           
  1201                           ;main.c: 62:     PEIE = 1;
  1202  001FB0  8CF2               	bsf	4082,6,c	;volatile
  1203                           
  1204                           ;main.c: 63:     (INTCONbits.GIE = 1);
  1205  001FB2  8EF2               	bsf	242,7,c	;volatile
  1206  001FB4                     
  1207                           ;main.c: 65:     INTCON2 = 0x00;
  1208  001FB4  0E00               	movlw	0
  1209  001FB6  6EF1               	movwf	241,c	;volatile
  1210                           
  1211                           ;main.c: 66:     INTCON3 = 0x00;
  1212  001FB8  0E00               	movlw	0
  1213  001FBA  6EF0               	movwf	240,c	;volatile
  1214  001FBC                     
  1215                           ;main.c: 68:     INTCONbits.INT0IF = 0;
  1216  001FBC  92F2               	bcf	242,1,c	;volatile
  1217  001FBE                     
  1218                           ;main.c: 69:     INTCONbits.INT0IE = 1;
  1219  001FBE  88F2               	bsf	242,4,c	;volatile
  1220  001FC0                     
  1221                           ;main.c: 71:     INTCON3bits.INT1F = 0;
  1222  001FC0  90F0               	bcf	240,0,c	;volatile
  1223  001FC2                     
  1224                           ;main.c: 72:     INTCON3bits.INT1E = 1;
  1225  001FC2  86F0               	bsf	240,3,c	;volatile
  1226  001FC4                     
  1227                           ;main.c: 74:     INTCON3bits.INT2F = 0;
  1228  001FC4  92F0               	bcf	240,1,c	;volatile
  1229  001FC6                     
  1230                           ;main.c: 75:     INTCON3bits.INT2E = 1;
  1231  001FC6  88F0               	bsf	240,4,c	;volatile
  1232  001FC8                     
  1233                           ;main.c: 77:     INTCON3bits.INT1IF = 0;
  1234  001FC8  90F0               	bcf	240,0,c	;volatile
  1235  001FCA                     
  1236                           ;main.c: 78:     INTCON3bits.INT2IF = 0;
  1237  001FCA  92F0               	bcf	240,1,c	;volatile
  1238  001FCC                     
  1239                           ;main.c: 79:     INTCONbits.GIE = 1;
  1240  001FCC  8EF2               	bsf	242,7,c	;volatile
  1241  001FCE  0012               	return		;funcret
  1242  001FD0                     __end_of_configureIRQ:
  1243                           	opt callstack 0
  1244                           
  1245 ;; *************** function _printf *****************
  1246 ;; Defined at:
  1247 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  fmt             2   10[BANK1 ] PTR const unsigned char 
  1250 ;;		 -> STR_2(11), STR_1(3), 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  ap              2   14[BANK1 ] PTR void [1]
  1253 ;;		 -> ?_printf(2), 
  1254 ;;  ret             2    0        int 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  2   10[BANK1 ] int 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1264 ;;      Params:         0       0       2       0       0       0       0       0       0
  1265 ;;      Locals:         0       0       4       0       0       0       0       0       0
  1266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1267 ;;      Totals:         0       0       6       0       0       0       0       0       0
  1268 ;;Total ram usage:        6 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:   22
  1271 ;; This function calls:
  1272 ;;		_vfprintf
  1273 ;; This function is called by:
  1274 ;;		_main
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text7
  1279  001F3E                     __ptext7:
  1280                           	opt callstack 0
  1281  001F3E                     _printf:
  1282                           	opt callstack 8
  1283  001F3E  0E0C               	movlw	low (?_printf+2)
  1284  001F40  0101               	movlb	1	; () banked
  1285  001F42  6F0E               	movwf	printf@ap& (0+255),b
  1286  001F44  0E01               	movlw	high (?_printf+2)
  1287  001F46  6F0F               	movwf	(printf@ap+1)& (0+255),b
  1288  001F48                     
  1289                           ; BSR set to: 1
  1290  001F48  0E00               	movlw	0
  1291  001F4A  0100               	movlb	0	; () banked
  1292  001F4C  6FBE               	movwf	vfprintf@fp& (0+255),b
  1293  001F4E  0E00               	movlw	0
  1294  001F50  6FBF               	movwf	(vfprintf@fp+1)& (0+255),b
  1295  001F52  C10A  F0C0         	movff	printf@fmt,vfprintf@fmt
  1296  001F56  C10B  F0C1         	movff	printf@fmt+1,vfprintf@fmt+1
  1297  001F5A  0E0E               	movlw	low printf@ap
  1298  001F5C  6FC2               	movwf	vfprintf@ap& (0+255),b
  1299  001F5E  0E01               	movlw	high printf@ap
  1300  001F60  6FC3               	movwf	(vfprintf@ap+1)& (0+255),b
  1301  001F62  EC50  F00E         	call	_vfprintf	;wreg free
  1302  001F66  0012               	return		;funcret
  1303  001F68                     __end_of_printf:
  1304                           	opt callstack 0
  1305                           
  1306 ;; *************** function _vfprintf *****************
  1307 ;; Defined at:
  1308 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;  fp              2   94[BANK0 ] PTR struct _IO_FILE
  1311 ;;		 -> NULL(0), 
  1312 ;;  fmt             2   96[BANK0 ] PTR const unsigned char 
  1313 ;;		 -> STR_2(11), STR_1(3), 
  1314 ;;  ap              2   98[BANK0 ] PTR PTR void 
  1315 ;;		 -> printf@ap(2), 
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  cfmt            2    8[BANK1 ] PTR unsigned char 
  1318 ;;		 -> STR_2(11), STR_1(3), 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  2   94[BANK0 ] int 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1328 ;;      Params:         0       6       0       0       0       0       0       0       0
  1329 ;;      Locals:         0       0       2       0       0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1331 ;;      Totals:         0       6       2       0       0       0       0       0       0
  1332 ;;Total ram usage:        8 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:   21
  1335 ;; This function calls:
  1336 ;;		_vfpfcnvrt
  1337 ;; This function is called by:
  1338 ;;		_printf
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text8
  1343  001CA0                     __ptext8:
  1344                           	opt callstack 0
  1345  001CA0                     _vfprintf:
  1346                           	opt callstack 8
  1347  001CA0                     
  1348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1349  001CA0  C0C0  F108         	movff	vfprintf@fmt,vfprintf@cfmt
  1350  001CA4  C0C1  F109         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1351  001CA8                     
  1352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1353  001CA8  0E00               	movlw	0
  1354  001CAA  0100               	movlb	0	; () banked
  1355  001CAC  6FC5               	movwf	(_nout+1)& (0+255),b
  1356  001CAE  0E00               	movlw	0
  1357  001CB0  6FC4               	movwf	_nout& (0+255),b
  1358                           
  1359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1360  001CB2  EF6E  F00E         	goto	l2842
  1361  001CB6                     l2840:
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1365  001CB6  C0BE  F0B6         	movff	vfprintf@fp,vfpfcnvrt@fp
  1366  001CBA  C0BF  F0B7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1367  001CBE  0E08               	movlw	low vfprintf@cfmt
  1368  001CC0  6FB8               	movwf	vfpfcnvrt@fmt& (0+255),b
  1369  001CC2  0E01               	movlw	high vfprintf@cfmt
  1370  001CC4  6FB9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1371  001CC6  C0C2  F0BA         	movff	vfprintf@ap,vfpfcnvrt@ap
  1372  001CCA  C0C3  F0BB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1373  001CCE  ECEA  F006         	call	_vfpfcnvrt	;wreg free
  1374  001CD2  0100               	movlb	0	; () banked
  1375  001CD4  51B6               	movf	?_vfpfcnvrt& (0+255),w,b
  1376  001CD6  27C4               	addwf	_nout& (0+255),f,b
  1377  001CD8  51B7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1378  001CDA  23C5               	addwfc	(_nout+1)& (0+255),f,b
  1379  001CDC                     l2842:
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1383  001CDC  C108  FFF6         	movff	vfprintf@cfmt,tblptrl
  1384  001CE0  C109  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1385  001CE4                     	if	0	;tblptru may be non-zero
  1386  001CE4                     	endif
  1387  001CE4                     	if	0	;tblptru may be non-zero
  1388  001CE4                     	endif
  1389  001CE4  0008               	tblrd		*
  1390  001CE6  50F5               	movf	tablat,w,c
  1391  001CE8  0900               	iorlw	0
  1392  001CEA  A4D8               	btfss	status,2,c
  1393  001CEC  EF7A  F00E         	goto	u2871
  1394  001CF0  EF7C  F00E         	goto	u2870
  1395  001CF4                     u2871:
  1396  001CF4  EF5B  F00E         	goto	l2840
  1397  001CF8                     u2870:
  1398  001CF8                     
  1399                           ; BSR set to: 0
  1400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1401  001CF8  C0C4  F0BE         	movff	_nout,?_vfprintf
  1402  001CFC  C0C5  F0BF         	movff	_nout+1,?_vfprintf+1
  1403  001D00                     
  1404                           ; BSR set to: 0
  1405  001D00  0012               	return		;funcret
  1406  001D02                     __end_of_vfprintf:
  1407                           	opt callstack 0
  1408                           
  1409 ;; *************** function _vfpfcnvrt *****************
  1410 ;; Defined at:
  1411 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;  fp              2   86[BANK0 ] PTR struct _IO_FILE
  1414 ;;		 -> NULL(0), 
  1415 ;;  fmt             2   88[BANK0 ] PTR PTR unsigned char 
  1416 ;;		 -> vfprintf@cfmt(2), 
  1417 ;;  ap              2   90[BANK0 ] PTR PTR void 
  1418 ;;		 -> printf@ap(2), 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  ll              8    0[BANK1 ] long long 
  1421 ;;  llu             8    0        unsigned long long 
  1422 ;;  f               4    0        unsigned long long 
  1423 ;;  vp              3    0        PTR void 
  1424 ;;  ct              3    0        unsigned char [3]
  1425 ;;  cp              3    0        PTR unsigned char 
  1426 ;;  i               2    0        int 
  1427 ;;  done            2    0        int 
  1428 ;;  c               1    0        unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  2   86[BANK0 ] int 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1438 ;;      Params:         0       6       0       0       0       0       0       0       0
  1439 ;;      Locals:         0       0       8       0       0       0       0       0       0
  1440 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1441 ;;      Totals:         0       8       8       0       0       0       0       0       0
  1442 ;;Total ram usage:       16 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:   20
  1445 ;; This function calls:
  1446 ;;		_dtoa
  1447 ;;		_fputc
  1448 ;; This function is called by:
  1449 ;;		_vfprintf
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text9
  1454  000DD4                     __ptext9:
  1455                           	opt callstack 0
  1456  000DD4                     _vfpfcnvrt:
  1457                           	opt callstack 8
  1458  000DD4                     
  1459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1460  000DD4  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1461  000DD8  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1462  000DDC  CFDE FFF6          	movff	postinc2,tblptrl
  1463  000DE0  CFDD FFF7          	movff	postdec2,tblptrh
  1464  000DE4                     	if	0	;tblptru may be non-zero
  1465  000DE4                     	endif
  1466  000DE4                     	if	0	;tblptru may be non-zero
  1467  000DE4                     	endif
  1468  000DE4  0008               	tblrd		*
  1469  000DE6  50F5               	movf	tablat,w,c
  1470  000DE8  0A25               	xorlw	37
  1471  000DEA  A4D8               	btfss	status,2,c
  1472  000DEC  EFFA  F006         	goto	u2791
  1473  000DF0  EFFC  F006         	goto	u2790
  1474  000DF4                     u2791:
  1475  000DF4  EFAA  F007         	goto	l2760
  1476  000DF8                     u2790:
  1477  000DF8                     
  1478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1479  000DF8  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1480  000DFC  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1481  000E00  2ADE               	incf	postinc2,f,c
  1482  000E02  0E00               	movlw	0
  1483  000E04  22DD               	addwfc	postdec2,f,c
  1484  000E06                     
  1485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1486  000E06  0E00               	movlw	0
  1487  000E08  0100               	movlb	0	; () banked
  1488  000E0A  6FC7               	movwf	(_width+1)& (0+255),b
  1489  000E0C  0E00               	movlw	0
  1490  000E0E  6FC6               	movwf	_width& (0+255),b
  1491  000E10  C0C6  F0CA         	movff	_width,_flags
  1492  000E14  C0C7  F0CB         	movff	_width+1,_flags+1
  1493  000E18                     
  1494                           ; BSR set to: 0
  1495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1496  000E18  69C8               	setf	_prec& (0+255),b
  1497  000E1A  69C9               	setf	(_prec+1)& (0+255),b
  1498  000E1C                     
  1499                           ; BSR set to: 0
  1500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1501  000E1C  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1502  000E20  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1503  000E24  CFDE FFF6          	movff	postinc2,tblptrl
  1504  000E28  CFDD FFF7          	movff	postdec2,tblptrh
  1505  000E2C                     	if	0	;tblptru may be non-zero
  1506  000E2C                     	endif
  1507  000E2C                     	if	0	;tblptru may be non-zero
  1508  000E2C                     	endif
  1509  000E2C  0008               	tblrd		*
  1510  000E2E  50F5               	movf	tablat,w,c
  1511  000E30  0A64               	xorlw	100
  1512  000E32  B4D8               	btfsc	status,2,c
  1513  000E34  EF1E  F007         	goto	u2801
  1514  000E38  EF20  F007         	goto	u2800
  1515  000E3C                     u2801:
  1516  000E3C  EF32  F007         	goto	l2738
  1517  000E40                     u2800:
  1518  000E40                     
  1519                           ; BSR set to: 0
  1520  000E40  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1521  000E44  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1522  000E48  CFDE FFF6          	movff	postinc2,tblptrl
  1523  000E4C  CFDD FFF7          	movff	postdec2,tblptrh
  1524  000E50                     	if	0	;tblptru may be non-zero
  1525  000E50                     	endif
  1526  000E50                     	if	0	;tblptru may be non-zero
  1527  000E50                     	endif
  1528  000E50  0008               	tblrd		*
  1529  000E52  50F5               	movf	tablat,w,c
  1530  000E54  0A69               	xorlw	105
  1531  000E56  A4D8               	btfss	status,2,c
  1532  000E58  EF30  F007         	goto	u2811
  1533  000E5C  EF32  F007         	goto	u2810
  1534  000E60                     u2811:
  1535  000E60  EF73  F007         	goto	l2744
  1536  000E64                     u2810:
  1537  000E64                     l2738:
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1541  000E64  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1542  000E68  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1543  000E6C  2ADE               	incf	postinc2,f,c
  1544  000E6E  0E00               	movlw	0
  1545  000E70  22DD               	addwfc	postdec2,f,c
  1546                           
  1547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1548  000E72  C0BA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1549  000E76  C0BB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1550  000E7A  CFDF F0BC          	movff	indf2,??_vfpfcnvrt
  1551  000E7E  0E02               	movlw	2
  1552  000E80  26DE               	addwf	postinc2,f,c
  1553  000E82  CFDF F0BD          	movff	indf2,??_vfpfcnvrt+1
  1554  000E86  0E00               	movlw	0
  1555  000E88  22DD               	addwfc	postdec2,f,c
  1556  000E8A  C0BC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1557  000E8E  C0BD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1558  000E92  CFDE F100          	movff	postinc2,vfpfcnvrt@ll
  1559  000E96  CFDD F101          	movff	postdec2,vfpfcnvrt@ll+1
  1560  000E9A  0101               	movlb	1	; () banked
  1561  000E9C  0E00               	movlw	0
  1562  000E9E  BF01               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1563  000EA0  0EFF               	movlw	-1
  1564  000EA2  6F02               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1565  000EA4  6F03               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1566  000EA6  6F04               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1567  000EA8  6F05               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1568  000EAA  6F06               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1569  000EAC  6F07               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1570  000EAE                     
  1571                           ; BSR set to: 1
  1572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1573  000EAE  C0B6  F092         	movff	vfpfcnvrt@fp,dtoa@fp
  1574  000EB2  C0B7  F093         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1575  000EB6  C100  F094         	movff	vfpfcnvrt@ll,dtoa@d
  1576  000EBA  C101  F095         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1577  000EBE  C102  F096         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1578  000EC2  C103  F097         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1579  000EC6  C104  F098         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1580  000ECA  C105  F099         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1581  000ECE  C106  F09A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1582  000ED2  C107  F09B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1583  000ED6  EC08  F004         	call	_dtoa	;wreg free
  1584  000EDA  C092  F0B6         	movff	?_dtoa,?_vfpfcnvrt
  1585  000EDE  C093  F0B7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1586  000EE2  EFC6  F007         	goto	l169
  1587  000EE6                     l2744:
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1591  000EE6  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1592  000EEA  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1593  000EEE  CFDE FFF6          	movff	postinc2,tblptrl
  1594  000EF2  CFDD FFF7          	movff	postdec2,tblptrh
  1595  000EF6                     	if	0	;tblptru may be non-zero
  1596  000EF6                     	endif
  1597  000EF6                     	if	0	;tblptru may be non-zero
  1598  000EF6                     	endif
  1599  000EF6  0008               	tblrd		*
  1600  000EF8  50F5               	movf	tablat,w,c
  1601  000EFA  0A25               	xorlw	37
  1602  000EFC  A4D8               	btfss	status,2,c
  1603  000EFE  EF83  F007         	goto	u2821
  1604  000F02  EF85  F007         	goto	u2820
  1605  000F06                     u2821:
  1606  000F06  EF9D  F007         	goto	l2754
  1607  000F0A                     u2820:
  1608  000F0A                     
  1609                           ; BSR set to: 0
  1610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1611  000F0A  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1612  000F0E  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1613  000F12  2ADE               	incf	postinc2,f,c
  1614  000F14  0E00               	movlw	0
  1615  000F16  22DD               	addwfc	postdec2,f,c
  1616  000F18                     
  1617                           ; BSR set to: 0
  1618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1619  000F18  0E00               	movlw	0
  1620  000F1A  6F78               	movwf	(fputc@c+1)& (0+255),b
  1621  000F1C  0E25               	movlw	37
  1622  000F1E  6F77               	movwf	fputc@c& (0+255),b
  1623  000F20  C0B6  F079         	movff	vfpfcnvrt@fp,fputc@fp
  1624  000F24  C0B7  F07A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1625  000F28  ECE6  F00C         	call	_fputc	;wreg free
  1626  000F2C                     l2750:
  1627                           
  1628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1629  000F2C  0E00               	movlw	0
  1630  000F2E  0100               	movlb	0	; () banked
  1631  000F30  6FB7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1632  000F32  0E01               	movlw	1
  1633  000F34  6FB6               	movwf	?_vfpfcnvrt& (0+255),b
  1634  000F36  EFC6  F007         	goto	l169
  1635  000F3A                     l2754:
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1639  000F3A  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1640  000F3E  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1641  000F42  2ADE               	incf	postinc2,f,c
  1642  000F44  0E00               	movlw	0
  1643  000F46  22DD               	addwfc	postdec2,f,c
  1644  000F48                     
  1645                           ; BSR set to: 0
  1646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1647  000F48  0E00               	movlw	0
  1648  000F4A  6FB7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1649  000F4C  0E00               	movlw	0
  1650  000F4E  6FB6               	movwf	?_vfpfcnvrt& (0+255),b
  1651  000F50  EFC6  F007         	goto	l169
  1652  000F54                     l2760:
  1653                           
  1654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1655  000F54  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1656  000F58  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1657  000F5C  CFDE FFF6          	movff	postinc2,tblptrl
  1658  000F60  CFDD FFF7          	movff	postdec2,tblptrh
  1659  000F64                     	if	0	;tblptru may be non-zero
  1660  000F64                     	endif
  1661  000F64                     	if	0	;tblptru may be non-zero
  1662  000F64                     	endif
  1663  000F64  0008               	tblrd		*
  1664  000F66  50F5               	movf	tablat,w,c
  1665  000F68  0100               	movlb	0	; () banked
  1666  000F6A  6F77               	movwf	fputc@c& (0+255),b
  1667  000F6C  6B78               	clrf	(fputc@c+1)& (0+255),b
  1668  000F6E  C0B6  F079         	movff	vfpfcnvrt@fp,fputc@fp
  1669  000F72  C0B7  F07A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1670  000F76  ECE6  F00C         	call	_fputc	;wreg free
  1671  000F7A                     
  1672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1673  000F7A  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1674  000F7E  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1675  000F82  2ADE               	incf	postinc2,f,c
  1676  000F84  0E00               	movlw	0
  1677  000F86  22DD               	addwfc	postdec2,f,c
  1678  000F88  EF96  F007         	goto	l2750
  1679  000F8C                     l169:
  1680  000F8C  0012               	return		;funcret
  1681  000F8E                     __end_of_vfpfcnvrt:
  1682                           	opt callstack 0
  1683                           
  1684 ;; *************** function _dtoa *****************
  1685 ;; Defined at:
  1686 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  fp              2   50[BANK0 ] PTR struct _IO_FILE
  1689 ;;		 -> NULL(0), 
  1690 ;;  d               8   52[BANK0 ] long long 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  n               8   76[BANK0 ] long long 
  1693 ;;  i               2   84[BANK0 ] int 
  1694 ;;  s               2   74[BANK0 ] int 
  1695 ;;  w               2   72[BANK0 ] int 
  1696 ;;  p               2   70[BANK0 ] int 
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  2   50[BANK0 ] int 
  1699 ;; Registers used:
  1700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1706 ;;      Params:         0      10       0       0       0       0       0       0       0
  1707 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1708 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1709 ;;      Totals:         0      36       0       0       0       0       0       0       0
  1710 ;;Total ram usage:       36 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:   19
  1713 ;; This function calls:
  1714 ;;		___aodiv
  1715 ;;		___aomod
  1716 ;;		_abs
  1717 ;;		_pad
  1718 ;; This function is called by:
  1719 ;;		_vfpfcnvrt
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text10
  1724  000810                     __ptext10:
  1725                           	opt callstack 0
  1726  000810                     _dtoa:
  1727                           	opt callstack 8
  1728  000810                     
  1729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1730  000810  C094  F0AC         	movff	dtoa@d,dtoa@n
  1731  000814  C095  F0AD         	movff	dtoa@d+1,dtoa@n+1
  1732  000818  C096  F0AE         	movff	dtoa@d+2,dtoa@n+2
  1733  00081C  C097  F0AF         	movff	dtoa@d+3,dtoa@n+3
  1734  000820  C098  F0B0         	movff	dtoa@d+4,dtoa@n+4
  1735  000824  C099  F0B1         	movff	dtoa@d+5,dtoa@n+5
  1736  000828  C09A  F0B2         	movff	dtoa@d+6,dtoa@n+6
  1737  00082C  C09B  F0B3         	movff	dtoa@d+7,dtoa@n+7
  1738  000830                     
  1739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1740  000830  0100               	movlb	0	; () banked
  1741  000832  BFB3               	btfsc	(dtoa@n+7)& (0+255),7,b
  1742  000834  EF1E  F004         	goto	u2491
  1743  000838  EF21  F004         	goto	u2490
  1744  00083C                     u2491:
  1745  00083C  0E01               	movlw	1
  1746  00083E  EF22  F004         	goto	u2500
  1747  000842                     u2490:
  1748  000842  0E00               	movlw	0
  1749  000844                     u2500:
  1750  000844  6FAA               	movwf	dtoa@s& (0+255),b
  1751  000846  6BAB               	clrf	(dtoa@s+1)& (0+255),b
  1752                           
  1753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1754  000848  51AA               	movf	dtoa@s& (0+255),w,b
  1755  00084A  11AB               	iorwf	(dtoa@s+1)& (0+255),w,b
  1756  00084C  B4D8               	btfsc	status,2,c
  1757  00084E  EF2B  F004         	goto	u2511
  1758  000852  EF2D  F004         	goto	u2510
  1759  000856                     u2511:
  1760  000856  EF3D  F004         	goto	l2608
  1761  00085A                     u2510:
  1762  00085A                     
  1763                           ; BSR set to: 0
  1764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1765  00085A  1FB3               	comf	(dtoa@n+7)& (0+255),f,b
  1766  00085C  1FB2               	comf	(dtoa@n+6)& (0+255),f,b
  1767  00085E  1FB1               	comf	(dtoa@n+5)& (0+255),f,b
  1768  000860  1FB0               	comf	(dtoa@n+4)& (0+255),f,b
  1769  000862  1FAF               	comf	(dtoa@n+3)& (0+255),f,b
  1770  000864  1FAE               	comf	(dtoa@n+2)& (0+255),f,b
  1771  000866  1FAD               	comf	(dtoa@n+1)& (0+255),f,b
  1772  000868  6DAC               	negf	dtoa@n& (0+255),b
  1773  00086A  0E00               	movlw	0
  1774  00086C  23AD               	addwfc	(dtoa@n+1)& (0+255),f,b
  1775  00086E  23AE               	addwfc	(dtoa@n+2)& (0+255),f,b
  1776  000870  23AF               	addwfc	(dtoa@n+3)& (0+255),f,b
  1777  000872  23B0               	addwfc	(dtoa@n+4)& (0+255),f,b
  1778  000874  23B1               	addwfc	(dtoa@n+5)& (0+255),f,b
  1779  000876  23B2               	addwfc	(dtoa@n+6)& (0+255),f,b
  1780  000878  23B3               	addwfc	(dtoa@n+7)& (0+255),f,b
  1781  00087A                     l2608:
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1785  00087A  BFC9               	btfsc	(_prec+1)& (0+255),7,b
  1786  00087C  EF42  F004         	goto	u2521
  1787  000880  EF44  F004         	goto	u2520
  1788  000884                     u2521:
  1789  000884  EF45  F004         	goto	l2612
  1790  000888                     u2520:
  1791  000888                     
  1792                           ; BSR set to: 0
  1793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1794  000888  93CA               	bcf	_flags& (0+255),1,b
  1795  00088A                     l2612:
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1799  00088A  BFC9               	btfsc	(_prec+1)& (0+255),7,b
  1800  00088C  EF52  F004         	goto	u2530
  1801  000890  51C9               	movf	(_prec+1)& (0+255),w,b
  1802  000892  E106               	bnz	u2531
  1803  000894  05C8               	decf	_prec& (0+255),w,b
  1804  000896  B0D8               	btfsc	status,0,c
  1805  000898  EF50  F004         	goto	u2531
  1806  00089C  EF52  F004         	goto	u2530
  1807  0008A0                     u2531:
  1808  0008A0  EF58  F004         	goto	l142
  1809  0008A4                     u2530:
  1810  0008A4                     
  1811                           ; BSR set to: 0
  1812  0008A4  0E00               	movlw	0
  1813  0008A6  6FA7               	movwf	(dtoa@p+1)& (0+255),b
  1814  0008A8  0E01               	movlw	1
  1815  0008AA  6FA6               	movwf	dtoa@p& (0+255),b
  1816  0008AC  EF5C  F004         	goto	l144
  1817  0008B0                     l142:
  1818                           
  1819                           ; BSR set to: 0
  1820  0008B0  C0C8  F0A6         	movff	_prec,dtoa@p
  1821  0008B4  C0C9  F0A7         	movff	_prec+1,dtoa@p+1
  1822  0008B8                     l144:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1826  0008B8  C0C6  F0A8         	movff	_width,dtoa@w
  1827  0008BC  C0C7  F0A9         	movff	_width+1,dtoa@w+1
  1828  0008C0                     
  1829                           ; BSR set to: 0
  1830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1831  0008C0  51AA               	movf	dtoa@s& (0+255),w,b
  1832  0008C2  11AB               	iorwf	(dtoa@s+1)& (0+255),w,b
  1833  0008C4  A4D8               	btfss	status,2,c
  1834  0008C6  EF67  F004         	goto	u2541
  1835  0008CA  EF69  F004         	goto	u2540
  1836  0008CE                     u2541:
  1837  0008CE  EF70  F004         	goto	l2620
  1838  0008D2                     u2540:
  1839  0008D2                     
  1840                           ; BSR set to: 0
  1841  0008D2  A5CA               	btfss	_flags& (0+255),2,b
  1842  0008D4  EF6E  F004         	goto	u2551
  1843  0008D8  EF70  F004         	goto	u2550
  1844  0008DC                     u2551:
  1845  0008DC  EF73  F004         	goto	l2622
  1846  0008E0                     u2550:
  1847  0008E0                     l2620:
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1851  0008E0  07A8               	decf	dtoa@w& (0+255),f,b
  1852  0008E2  A0D8               	btfss	status,0,c
  1853  0008E4  07A9               	decf	(dtoa@w+1)& (0+255),f,b
  1854  0008E6                     l2622:
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1858  0008E6  0E00               	movlw	0
  1859  0008E8  6FB5               	movwf	(dtoa@i+1)& (0+255),b
  1860  0008EA  0E1F               	movlw	31
  1861  0008EC  6FB4               	movwf	dtoa@i& (0+255),b
  1862  0008EE                     
  1863                           ; BSR set to: 0
  1864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1865  0008EE  0E00               	movlw	0
  1866  0008F0  6FED               	movwf	(_dbuf+31)& (0+255),b
  1867                           
  1868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1869  0008F2  EFF8  F004         	goto	l2636
  1870  0008F6                     l2626:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1874  0008F6  07B4               	decf	dtoa@i& (0+255),f,b
  1875  0008F8  A0D8               	btfss	status,0,c
  1876  0008FA  07B5               	decf	(dtoa@i+1)& (0+255),f,b
  1877  0008FC                     
  1878                           ; BSR set to: 0
  1879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1880  0008FC  0ECE               	movlw	low _dbuf
  1881  0008FE  25B4               	addwf	dtoa@i& (0+255),w,b
  1882  000900  6ED9               	movwf	fsr2l,c
  1883  000902  0E00               	movlw	high _dbuf
  1884  000904  21B5               	addwfc	(dtoa@i+1)& (0+255),w,b
  1885  000906  6EDA               	movwf	fsr2h,c
  1886  000908  C0AC  F071         	movff	dtoa@n,___aomod@dividend
  1887  00090C  C0AD  F072         	movff	dtoa@n+1,___aomod@dividend+1
  1888  000910  C0AE  F073         	movff	dtoa@n+2,___aomod@dividend+2
  1889  000914  C0AF  F074         	movff	dtoa@n+3,___aomod@dividend+3
  1890  000918  C0B0  F075         	movff	dtoa@n+4,___aomod@dividend+4
  1891  00091C  C0B1  F076         	movff	dtoa@n+5,___aomod@dividend+5
  1892  000920  C0B2  F077         	movff	dtoa@n+6,___aomod@dividend+6
  1893  000924  C0B3  F078         	movff	dtoa@n+7,___aomod@dividend+7
  1894  000928  0E0A               	movlw	10
  1895  00092A  6F79               	movwf	___aomod@divisor& (0+255),b
  1896  00092C  0E00               	movlw	0
  1897  00092E  6F7A               	movwf	(___aomod@divisor+1)& (0+255),b
  1898  000930  0E00               	movlw	0
  1899  000932  6F7B               	movwf	(___aomod@divisor+2)& (0+255),b
  1900  000934  0E00               	movlw	0
  1901  000936  6F7C               	movwf	(___aomod@divisor+3)& (0+255),b
  1902  000938  0E00               	movlw	0
  1903  00093A  6F7D               	movwf	(___aomod@divisor+4)& (0+255),b
  1904  00093C  0E00               	movlw	0
  1905  00093E  6F7E               	movwf	(___aomod@divisor+5)& (0+255),b
  1906  000940  0E00               	movlw	0
  1907  000942  6F7F               	movwf	(___aomod@divisor+6)& (0+255),b
  1908  000944  0E00               	movlw	0
  1909  000946  6F80               	movwf	(___aomod@divisor+7)& (0+255),b
  1910  000948  EC2A  F00A         	call	___aomod	;wreg free
  1911  00094C  C071  F09C         	movff	?___aomod,??_dtoa
  1912  000950  C072  F09D         	movff	?___aomod+1,??_dtoa+1
  1913  000954  C073  F09E         	movff	?___aomod+2,??_dtoa+2
  1914  000958  C074  F09F         	movff	?___aomod+3,??_dtoa+3
  1915  00095C  C075  F0A0         	movff	?___aomod+4,??_dtoa+4
  1916  000960  C076  F0A1         	movff	?___aomod+5,??_dtoa+5
  1917  000964  C077  F0A2         	movff	?___aomod+6,??_dtoa+6
  1918  000968  C078  F0A3         	movff	?___aomod+7,??_dtoa+7
  1919  00096C  C09C  F083         	movff	??_dtoa,abs@a
  1920  000970  C09E  F084         	movff	??_dtoa+2,abs@a+1
  1921  000974  ECF8  F00E         	call	_abs	;wreg free
  1922  000978  0100               	movlb	0	; () banked
  1923  00097A  5183               	movf	?_abs& (0+255),w,b
  1924  00097C  0F30               	addlw	48
  1925  00097E  6EDF               	movwf	indf2,c
  1926  000980                     
  1927                           ; BSR set to: 0
  1928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1929  000980  07A6               	decf	dtoa@p& (0+255),f,b
  1930  000982  A0D8               	btfss	status,0,c
  1931  000984  07A7               	decf	(dtoa@p+1)& (0+255),f,b
  1932  000986                     
  1933                           ; BSR set to: 0
  1934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1935  000986  07A8               	decf	dtoa@w& (0+255),f,b
  1936  000988  A0D8               	btfss	status,0,c
  1937  00098A  07A9               	decf	(dtoa@w+1)& (0+255),f,b
  1938  00098C                     
  1939                           ; BSR set to: 0
  1940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1941  00098C  C0AC  F071         	movff	dtoa@n,___aodiv@dividend
  1942  000990  C0AD  F072         	movff	dtoa@n+1,___aodiv@dividend+1
  1943  000994  C0AE  F073         	movff	dtoa@n+2,___aodiv@dividend+2
  1944  000998  C0AF  F074         	movff	dtoa@n+3,___aodiv@dividend+3
  1945  00099C  C0B0  F075         	movff	dtoa@n+4,___aodiv@dividend+4
  1946  0009A0  C0B1  F076         	movff	dtoa@n+5,___aodiv@dividend+5
  1947  0009A4  C0B2  F077         	movff	dtoa@n+6,___aodiv@dividend+6
  1948  0009A8  C0B3  F078         	movff	dtoa@n+7,___aodiv@dividend+7
  1949  0009AC  0E0A               	movlw	10
  1950  0009AE  6F79               	movwf	___aodiv@divisor& (0+255),b
  1951  0009B0  0E00               	movlw	0
  1952  0009B2  6F7A               	movwf	(___aodiv@divisor+1)& (0+255),b
  1953  0009B4  0E00               	movlw	0
  1954  0009B6  6F7B               	movwf	(___aodiv@divisor+2)& (0+255),b
  1955  0009B8  0E00               	movlw	0
  1956  0009BA  6F7C               	movwf	(___aodiv@divisor+3)& (0+255),b
  1957  0009BC  0E00               	movlw	0
  1958  0009BE  6F7D               	movwf	(___aodiv@divisor+4)& (0+255),b
  1959  0009C0  0E00               	movlw	0
  1960  0009C2  6F7E               	movwf	(___aodiv@divisor+5)& (0+255),b
  1961  0009C4  0E00               	movlw	0
  1962  0009C6  6F7F               	movwf	(___aodiv@divisor+6)& (0+255),b
  1963  0009C8  0E00               	movlw	0
  1964  0009CA  6F80               	movwf	(___aodiv@divisor+7)& (0+255),b
  1965  0009CC  ECA1  F008         	call	___aodiv	;wreg free
  1966  0009D0  C071  F0AC         	movff	?___aodiv,dtoa@n
  1967  0009D4  C072  F0AD         	movff	?___aodiv+1,dtoa@n+1
  1968  0009D8  C073  F0AE         	movff	?___aodiv+2,dtoa@n+2
  1969  0009DC  C074  F0AF         	movff	?___aodiv+3,dtoa@n+3
  1970  0009E0  C075  F0B0         	movff	?___aodiv+4,dtoa@n+4
  1971  0009E4  C076  F0B1         	movff	?___aodiv+5,dtoa@n+5
  1972  0009E8  C077  F0B2         	movff	?___aodiv+6,dtoa@n+6
  1973  0009EC  C078  F0B3         	movff	?___aodiv+7,dtoa@n+7
  1974  0009F0                     l2636:
  1975                           
  1976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1977  0009F0  0100               	movlb	0	; () banked
  1978  0009F2  BFB5               	btfsc	(dtoa@i+1)& (0+255),7,b
  1979  0009F4  EF04  F005         	goto	u2561
  1980  0009F8  51B5               	movf	(dtoa@i+1)& (0+255),w,b
  1981  0009FA  E108               	bnz	u2560
  1982  0009FC  05B4               	decf	dtoa@i& (0+255),w,b
  1983  0009FE  A0D8               	btfss	status,0,c
  1984  000A00  EF04  F005         	goto	u2561
  1985  000A04  EF06  F005         	goto	u2560
  1986  000A08                     u2561:
  1987  000A08  EF36  F005         	goto	l2646
  1988  000A0C                     u2560:
  1989  000A0C                     
  1990                           ; BSR set to: 0
  1991  000A0C  51AC               	movf	dtoa@n& (0+255),w,b
  1992  000A0E  11AD               	iorwf	(dtoa@n+1)& (0+255),w,b
  1993  000A10  11AE               	iorwf	(dtoa@n+2)& (0+255),w,b
  1994  000A12  11AF               	iorwf	(dtoa@n+3)& (0+255),w,b
  1995  000A14  11B0               	iorwf	(dtoa@n+4)& (0+255),w,b
  1996  000A16  11B1               	iorwf	(dtoa@n+5)& (0+255),w,b
  1997  000A18  11B2               	iorwf	(dtoa@n+6)& (0+255),w,b
  1998  000A1A  11B3               	iorwf	(dtoa@n+7)& (0+255),w,b
  1999  000A1C  A4D8               	btfss	status,2,c
  2000  000A1E  EF13  F005         	goto	u2571
  2001  000A22  EF15  F005         	goto	u2570
  2002  000A26                     u2571:
  2003  000A26  EF7B  F004         	goto	l2626
  2004  000A2A                     u2570:
  2005  000A2A                     
  2006                           ; BSR set to: 0
  2007  000A2A  BFA7               	btfsc	(dtoa@p+1)& (0+255),7,b
  2008  000A2C  EF22  F005         	goto	u2580
  2009  000A30  51A7               	movf	(dtoa@p+1)& (0+255),w,b
  2010  000A32  E106               	bnz	u2581
  2011  000A34  05A6               	decf	dtoa@p& (0+255),w,b
  2012  000A36  B0D8               	btfsc	status,0,c
  2013  000A38  EF20  F005         	goto	u2581
  2014  000A3C  EF22  F005         	goto	u2580
  2015  000A40                     u2581:
  2016  000A40  EF7B  F004         	goto	l2626
  2017  000A44                     u2580:
  2018  000A44                     
  2019                           ; BSR set to: 0
  2020  000A44  BFA9               	btfsc	(dtoa@w+1)& (0+255),7,b
  2021  000A46  EF2D  F005         	goto	u2591
  2022  000A4A  51A9               	movf	(dtoa@w+1)& (0+255),w,b
  2023  000A4C  E108               	bnz	u2590
  2024  000A4E  05A8               	decf	dtoa@w& (0+255),w,b
  2025  000A50  A0D8               	btfss	status,0,c
  2026  000A52  EF2D  F005         	goto	u2591
  2027  000A56  EF2F  F005         	goto	u2590
  2028  000A5A                     u2591:
  2029  000A5A  EF36  F005         	goto	l2646
  2030  000A5E                     u2590:
  2031  000A5E                     
  2032                           ; BSR set to: 0
  2033  000A5E  B3CA               	btfsc	_flags& (0+255),1,b
  2034  000A60  EF34  F005         	goto	u2601
  2035  000A64  EF36  F005         	goto	u2600
  2036  000A68                     u2601:
  2037  000A68  EF7B  F004         	goto	l2626
  2038  000A6C                     u2600:
  2039  000A6C                     l2646:
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2043  000A6C  51AA               	movf	dtoa@s& (0+255),w,b
  2044  000A6E  11AB               	iorwf	(dtoa@s+1)& (0+255),w,b
  2045  000A70  A4D8               	btfss	status,2,c
  2046  000A72  EF3D  F005         	goto	u2611
  2047  000A76  EF3F  F005         	goto	u2610
  2048  000A7A                     u2611:
  2049  000A7A  EF46  F005         	goto	l2650
  2050  000A7E                     u2610:
  2051  000A7E                     
  2052                           ; BSR set to: 0
  2053  000A7E  A5CA               	btfss	_flags& (0+255),2,b
  2054  000A80  EF44  F005         	goto	u2621
  2055  000A84  EF46  F005         	goto	u2620
  2056  000A88                     u2621:
  2057  000A88  EF64  F005         	goto	l2660
  2058  000A8C                     u2620:
  2059  000A8C                     l2650:
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2063  000A8C  07B4               	decf	dtoa@i& (0+255),f,b
  2064  000A8E  A0D8               	btfss	status,0,c
  2065  000A90  07B5               	decf	(dtoa@i+1)& (0+255),f,b
  2066  000A92                     
  2067                           ; BSR set to: 0
  2068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2069  000A92  51AA               	movf	dtoa@s& (0+255),w,b
  2070  000A94  11AB               	iorwf	(dtoa@s+1)& (0+255),w,b
  2071  000A96  A4D8               	btfss	status,2,c
  2072  000A98  EF50  F005         	goto	u2631
  2073  000A9C  EF52  F005         	goto	u2630
  2074  000AA0                     u2631:
  2075  000AA0  EF58  F005         	goto	l2656
  2076  000AA4                     u2630:
  2077  000AA4                     
  2078                           ; BSR set to: 0
  2079  000AA4  0E00               	movlw	0
  2080  000AA6  6FA5               	movwf	(_dtoa$589+1)& (0+255),b
  2081  000AA8  0E2B               	movlw	43
  2082  000AAA  6FA4               	movwf	_dtoa$589& (0+255),b
  2083  000AAC  EF5C  F005         	goto	l2658
  2084  000AB0                     l2656:
  2085                           
  2086                           ; BSR set to: 0
  2087  000AB0  0E00               	movlw	0
  2088  000AB2  6FA5               	movwf	(_dtoa$589+1)& (0+255),b
  2089  000AB4  0E2D               	movlw	45
  2090  000AB6  6FA4               	movwf	_dtoa$589& (0+255),b
  2091  000AB8                     l2658:
  2092                           
  2093                           ; BSR set to: 0
  2094  000AB8  0ECE               	movlw	low _dbuf
  2095  000ABA  25B4               	addwf	dtoa@i& (0+255),w,b
  2096  000ABC  6ED9               	movwf	fsr2l,c
  2097  000ABE  0E00               	movlw	high _dbuf
  2098  000AC0  21B5               	addwfc	(dtoa@i+1)& (0+255),w,b
  2099  000AC2  6EDA               	movwf	fsr2h,c
  2100  000AC4  C0A4  FFDF         	movff	_dtoa$589,indf2
  2101  000AC8                     l2660:
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2105  000AC8  C092  F087         	movff	dtoa@fp,pad@fp
  2106  000ACC  C093  F088         	movff	dtoa@fp+1,pad@fp+1
  2107  000AD0  0ECE               	movlw	low _dbuf
  2108  000AD2  25B4               	addwf	dtoa@i& (0+255),w,b
  2109  000AD4  6F89               	movwf	pad@buf& (0+255),b
  2110  000AD6  0E00               	movlw	high _dbuf
  2111  000AD8  21B5               	addwfc	(dtoa@i+1)& (0+255),w,b
  2112  000ADA  6F8A               	movwf	(pad@buf+1)& (0+255),b
  2113  000ADC  C0A8  F08B         	movff	dtoa@w,pad@p
  2114  000AE0  C0A9  F08C         	movff	dtoa@w+1,pad@p+1
  2115  000AE4  EC1E  F00C         	call	_pad	;wreg free
  2116  000AE8  C087  F092         	movff	?_pad,?_dtoa
  2117  000AEC  C088  F093         	movff	?_pad+1,?_dtoa+1
  2118  000AF0  0012               	return		;funcret
  2119  000AF2                     __end_of_dtoa:
  2120                           	opt callstack 0
  2121                           
  2122 ;; *************** function _pad *****************
  2123 ;; Defined at:
  2124 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  fp              2   39[BANK0 ] PTR struct _IO_FILE
  2127 ;;		 -> NULL(0), 
  2128 ;;  buf             2   41[BANK0 ] PTR unsigned char 
  2129 ;;		 -> dbuf(32), 
  2130 ;;  p               2   43[BANK0 ] int 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  w               2   48[BANK0 ] int 
  2133 ;;  i               2   46[BANK0 ] int 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  2   39[BANK0 ] int 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2143 ;;      Params:         0       6       0       0       0       0       0       0       0
  2144 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2145 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2146 ;;      Totals:         0      11       0       0       0       0       0       0       0
  2147 ;;Total ram usage:       11 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:   18
  2150 ;; This function calls:
  2151 ;;		_fputc
  2152 ;;		_fputs
  2153 ;;		_strlen
  2154 ;; This function is called by:
  2155 ;;		_dtoa
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text11
  2160  00183C                     __ptext11:
  2161                           	opt callstack 0
  2162  00183C                     _pad:
  2163                           	opt callstack 8
  2164  00183C                     
  2165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2166  00183C  0100               	movlb	0	; () banked
  2167  00183E  A1CA               	btfss	_flags& (0+255),0,b
  2168  001840  EF24  F00C         	goto	u2131
  2169  001844  EF26  F00C         	goto	u2130
  2170  001848                     u2131:
  2171  001848  EF30  F00C         	goto	l2394
  2172  00184C                     u2130:
  2173  00184C                     
  2174                           ; BSR set to: 0
  2175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2176  00184C  C089  F080         	movff	pad@buf,fputs@s
  2177  001850  C08A  F081         	movff	pad@buf+1,fputs@s+1
  2178  001854  C087  F082         	movff	pad@fp,fputs@fp
  2179  001858  C088  F083         	movff	pad@fp+1,fputs@fp+1
  2180  00185C  ECB2  F00E         	call	_fputs	;wreg free
  2181  001860                     l2394:
  2182                           
  2183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2184  001860  0100               	movlb	0	; () banked
  2185  001862  BF8C               	btfsc	(pad@p+1)& (0+255),7,b
  2186  001864  EF36  F00C         	goto	u2141
  2187  001868  EF38  F00C         	goto	u2140
  2188  00186C                     u2141:
  2189  00186C  EF3E  F00C         	goto	l2398
  2190  001870                     u2140:
  2191  001870                     
  2192                           ; BSR set to: 0
  2193  001870  C08B  F090         	movff	pad@p,pad@w
  2194  001874  C08C  F091         	movff	pad@p+1,pad@w+1
  2195  001878  EF42  F00C         	goto	l131
  2196  00187C                     l2398:
  2197                           
  2198                           ; BSR set to: 0
  2199  00187C  0E00               	movlw	0
  2200  00187E  6F91               	movwf	(pad@w+1)& (0+255),b
  2201  001880  0E00               	movlw	0
  2202  001882  6F90               	movwf	pad@w& (0+255),b
  2203  001884                     l131:
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2207  001884  0E00               	movlw	0
  2208  001886  6F8F               	movwf	(pad@i+1)& (0+255),b
  2209  001888  0E00               	movlw	0
  2210  00188A  6F8E               	movwf	pad@i& (0+255),b
  2211                           
  2212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2213  00188C  EF55  F00C         	goto	l2404
  2214  001890                     l2400:
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2218  001890  0E00               	movlw	0
  2219  001892  6F78               	movwf	(fputc@c+1)& (0+255),b
  2220  001894  0E20               	movlw	32
  2221  001896  6F77               	movwf	fputc@c& (0+255),b
  2222  001898  C087  F079         	movff	pad@fp,fputc@fp
  2223  00189C  C088  F07A         	movff	pad@fp+1,fputc@fp+1
  2224  0018A0  ECE6  F00C         	call	_fputc	;wreg free
  2225  0018A4                     
  2226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2227  0018A4  0100               	movlb	0	; () banked
  2228  0018A6  4B8E               	infsnz	pad@i& (0+255),f,b
  2229  0018A8  2B8F               	incf	(pad@i+1)& (0+255),f,b
  2230  0018AA                     l2404:
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2234  0018AA  5190               	movf	pad@w& (0+255),w,b
  2235  0018AC  5D8E               	subwf	pad@i& (0+255),w,b
  2236  0018AE  518F               	movf	(pad@i+1)& (0+255),w,b
  2237  0018B0  0A80               	xorlw	128
  2238  0018B2  6F8D               	movwf	??_pad& (0+255),b
  2239  0018B4  5191               	movf	(pad@w+1)& (0+255),w,b
  2240  0018B6  0A80               	xorlw	128
  2241  0018B8  598D               	subwfb	??_pad& (0+255),w,b
  2242  0018BA  A0D8               	btfss	status,0,c
  2243  0018BC  EF62  F00C         	goto	u2151
  2244  0018C0  EF64  F00C         	goto	u2150
  2245  0018C4                     u2151:
  2246  0018C4  EF48  F00C         	goto	l2400
  2247  0018C8                     u2150:
  2248  0018C8                     
  2249                           ; BSR set to: 0
  2250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2251  0018C8  B1CA               	btfsc	_flags& (0+255),0,b
  2252  0018CA  EF69  F00C         	goto	u2161
  2253  0018CE  EF6B  F00C         	goto	u2160
  2254  0018D2                     u2161:
  2255  0018D2  EF75  F00C         	goto	l2408
  2256  0018D6                     u2160:
  2257  0018D6                     
  2258                           ; BSR set to: 0
  2259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2260  0018D6  C089  F080         	movff	pad@buf,fputs@s
  2261  0018DA  C08A  F081         	movff	pad@buf+1,fputs@s+1
  2262  0018DE  C087  F082         	movff	pad@fp,fputs@fp
  2263  0018E2  C088  F083         	movff	pad@fp+1,fputs@fp+1
  2264  0018E6  ECB2  F00E         	call	_fputs	;wreg free
  2265  0018EA                     l2408:
  2266                           
  2267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2268  0018EA  C089  F071         	movff	pad@buf,strlen@s
  2269  0018EE  C08A  F072         	movff	pad@buf+1,strlen@s+1
  2270  0018F2  EC39  F00F         	call	_strlen	;wreg free
  2271  0018F6  0100               	movlb	0	; () banked
  2272  0018F8  5190               	movf	pad@w& (0+255),w,b
  2273  0018FA  2571               	addwf	?_strlen& (0+255),w,b
  2274  0018FC  6F87               	movwf	?_pad& (0+255),b
  2275  0018FE  5191               	movf	(pad@w+1)& (0+255),w,b
  2276  001900  2172               	addwfc	(?_strlen+1)& (0+255),w,b
  2277  001902  6F88               	movwf	(?_pad+1)& (0+255),b
  2278  001904                     
  2279                           ; BSR set to: 0
  2280  001904  0012               	return		;funcret
  2281  001906                     __end_of_pad:
  2282                           	opt callstack 0
  2283                           
  2284 ;; *************** function _strlen *****************
  2285 ;; Defined at:
  2286 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  s               2   17[BANK0 ] PTR const unsigned char 
  2289 ;;		 -> dbuf(32), 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  a               2   19[BANK0 ] PTR const unsigned char 
  2292 ;;		 -> dbuf(32), 
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  2   17[BANK0 ] unsigned int 
  2295 ;; Registers used:
  2296 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2302 ;;      Params:         0       2       0       0       0       0       0       0       0
  2303 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2305 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2306 ;;Total ram usage:        4 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:   12
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_pad
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text12
  2317  001E72                     __ptext12:
  2318                           	opt callstack 0
  2319  001E72                     _strlen:
  2320                           	opt callstack 13
  2321  001E72  C071  F073         	movff	strlen@s,strlen@a
  2322  001E76  C072  F074         	movff	strlen@s+1,strlen@a+1
  2323  001E7A  EF42  F00F         	goto	l2366
  2324  001E7E                     l2364:
  2325  001E7E  0100               	movlb	0	; () banked
  2326  001E80  4B71               	infsnz	strlen@s& (0+255),f,b
  2327  001E82  2B72               	incf	(strlen@s+1)& (0+255),f,b
  2328  001E84                     l2366:
  2329  001E84  C071  FFD9         	movff	strlen@s,fsr2l
  2330  001E88  C072  FFDA         	movff	strlen@s+1,fsr2h
  2331  001E8C  50DF               	movf	indf2,w,c
  2332  001E8E  A4D8               	btfss	status,2,c
  2333  001E90  EF4C  F00F         	goto	u2101
  2334  001E94  EF4E  F00F         	goto	u2100
  2335  001E98                     u2101:
  2336  001E98  EF3F  F00F         	goto	l2364
  2337  001E9C                     u2100:
  2338  001E9C  0100               	movlb	0	; () banked
  2339  001E9E  5173               	movf	strlen@a& (0+255),w,b
  2340  001EA0  5D71               	subwf	strlen@s& (0+255),w,b
  2341  001EA2  6F71               	movwf	?_strlen& (0+255),b
  2342  001EA4  5174               	movf	(strlen@a+1)& (0+255),w,b
  2343  001EA6  5972               	subwfb	(strlen@s+1)& (0+255),w,b
  2344  001EA8  6F72               	movwf	(?_strlen+1)& (0+255),b
  2345  001EAA                     
  2346                           ; BSR set to: 0
  2347  001EAA  0012               	return		;funcret
  2348  001EAC                     __end_of_strlen:
  2349                           	opt callstack 0
  2350                           
  2351 ;; *************** function _fputs *****************
  2352 ;; Defined at:
  2353 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  s               2   32[BANK0 ] PTR const unsigned char 
  2356 ;;		 -> dbuf(32), 
  2357 ;;  fp              2   34[BANK0 ] PTR struct _IO_FILE
  2358 ;;		 -> NULL(0), 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  i               2   37[BANK0 ] int 
  2361 ;;  c               1   36[BANK0 ] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  2   32[BANK0 ] int 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2371 ;;      Params:         0       4       0       0       0       0       0       0       0
  2372 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2374 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2375 ;;Total ram usage:        7 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:   17
  2378 ;; This function calls:
  2379 ;;		_fputc
  2380 ;; This function is called by:
  2381 ;;		_pad
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text13
  2386  001D64                     __ptext13:
  2387                           	opt callstack 0
  2388  001D64                     _fputs:
  2389                           	opt callstack 8
  2390  001D64  0E00               	movlw	0
  2391  001D66  0100               	movlb	0	; () banked
  2392  001D68  6F86               	movwf	(fputs@i+1)& (0+255),b
  2393  001D6A  0E00               	movlw	0
  2394  001D6C  6F85               	movwf	fputs@i& (0+255),b
  2395  001D6E  EFC5  F00E         	goto	l2360
  2396  001D72                     l2356:
  2397                           
  2398                           ; BSR set to: 0
  2399  001D72  C084  F077         	movff	fputs@c,fputc@c
  2400  001D76  6B78               	clrf	(fputc@c+1)& (0+255),b
  2401  001D78  C082  F079         	movff	fputs@fp,fputc@fp
  2402  001D7C  C083  F07A         	movff	fputs@fp+1,fputc@fp+1
  2403  001D80  ECE6  F00C         	call	_fputc	;wreg free
  2404  001D84  0100               	movlb	0	; () banked
  2405  001D86  4B85               	infsnz	fputs@i& (0+255),f,b
  2406  001D88  2B86               	incf	(fputs@i+1)& (0+255),f,b
  2407  001D8A                     l2360:
  2408                           
  2409                           ; BSR set to: 0
  2410  001D8A  5185               	movf	fputs@i& (0+255),w,b
  2411  001D8C  2580               	addwf	fputs@s& (0+255),w,b
  2412  001D8E  6ED9               	movwf	fsr2l,c
  2413  001D90  5186               	movf	(fputs@i+1)& (0+255),w,b
  2414  001D92  2181               	addwfc	(fputs@s+1)& (0+255),w,b
  2415  001D94  6EDA               	movwf	fsr2h,c
  2416  001D96  50DF               	movf	indf2,w,c
  2417  001D98  6F84               	movwf	fputs@c& (0+255),b
  2418  001D9A  5184               	movf	fputs@c& (0+255),w,b
  2419  001D9C  A4D8               	btfss	status,2,c
  2420  001D9E  EFD3  F00E         	goto	u2091
  2421  001DA2  EFD5  F00E         	goto	u2090
  2422  001DA6                     u2091:
  2423  001DA6  EFB9  F00E         	goto	l2356
  2424  001DAA                     u2090:
  2425  001DAA                     
  2426                           ; BSR set to: 0
  2427  001DAA  0012               	return		;funcret
  2428  001DAC                     __end_of_fputs:
  2429                           	opt callstack 0
  2430                           
  2431 ;; *************** function _fputc *****************
  2432 ;; Defined at:
  2433 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  c               2   23[BANK0 ] int 
  2436 ;;  fp              2   25[BANK0 ] PTR struct _IO_FILE
  2437 ;;		 -> NULL(0), 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;		None
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  2   23[BANK0 ] int 
  2442 ;; Registers used:
  2443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2449 ;;      Params:         0       4       0       0       0       0       0       0       0
  2450 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2451 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2452 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2453 ;;Total ram usage:        9 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:   16
  2456 ;; This function calls:
  2457 ;;		_putch
  2458 ;; This function is called by:
  2459 ;;		_pad
  2460 ;;		_vfpfcnvrt
  2461 ;;		_fputs
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text14
  2466  0019CC                     __ptext14:
  2467                           	opt callstack 0
  2468  0019CC                     _fputc:
  2469                           	opt callstack 11
  2470  0019CC  0100               	movlb	0	; () banked
  2471  0019CE  5179               	movf	fputc@fp& (0+255),w,b
  2472  0019D0  117A               	iorwf	(fputc@fp+1)& (0+255),w,b
  2473  0019D2  B4D8               	btfsc	status,2,c
  2474  0019D4  EFEE  F00C         	goto	u2011
  2475  0019D8  EFF0  F00C         	goto	u2010
  2476  0019DC                     u2011:
  2477  0019DC  EFF9  F00C         	goto	l2330
  2478  0019E0                     u2010:
  2479  0019E0                     
  2480                           ; BSR set to: 0
  2481  0019E0  5179               	movf	fputc@fp& (0+255),w,b
  2482  0019E2  117A               	iorwf	(fputc@fp+1)& (0+255),w,b
  2483  0019E4  A4D8               	btfss	status,2,c
  2484  0019E6  EFF7  F00C         	goto	u2021
  2485  0019EA  EFF9  F00C         	goto	u2020
  2486  0019EE                     u2021:
  2487  0019EE  EFFE  F00C         	goto	l2332
  2488  0019F2                     u2020:
  2489  0019F2                     l2330:
  2490                           
  2491                           ; BSR set to: 0
  2492  0019F2  5177               	movf	fputc@c& (0+255),w,b
  2493  0019F4  EC41  F010         	call	_putch
  2494  0019F8  EF31  F00D         	goto	l869
  2495  0019FC                     l2332:
  2496                           
  2497                           ; BSR set to: 0
  2498  0019FC  EE20 F004          	lfsr	2,4
  2499  001A00  5179               	movf	fputc@fp& (0+255),w,b
  2500  001A02  26D9               	addwf	fsr2l,f,c
  2501  001A04  517A               	movf	(fputc@fp+1)& (0+255),w,b
  2502  001A06  22DA               	addwfc	fsr2h,f,c
  2503  001A08  50DE               	movf	postinc2,w,c
  2504  001A0A  10DE               	iorwf	postinc2,w,c
  2505  001A0C  B4D8               	btfsc	status,2,c
  2506  001A0E  EF0B  F00D         	goto	u2031
  2507  001A12  EF0D  F00D         	goto	u2030
  2508  001A16                     u2031:
  2509  001A16  EF28  F00D         	goto	l2336
  2510  001A1A                     u2030:
  2511  001A1A                     
  2512                           ; BSR set to: 0
  2513  001A1A  EE20 F004          	lfsr	2,4
  2514  001A1E  5179               	movf	fputc@fp& (0+255),w,b
  2515  001A20  26D9               	addwf	fsr2l,f,c
  2516  001A22  517A               	movf	(fputc@fp+1)& (0+255),w,b
  2517  001A24  22DA               	addwfc	fsr2h,f,c
  2518  001A26  EE10 F002          	lfsr	1,2
  2519  001A2A  5179               	movf	fputc@fp& (0+255),w,b
  2520  001A2C  26E1               	addwf	fsr1l,f,c
  2521  001A2E  517A               	movf	(fputc@fp+1)& (0+255),w,b
  2522  001A30  22E2               	addwfc	fsr1h,f,c
  2523  001A32  50DE               	movf	postinc2,w,c
  2524  001A34  5CE6               	subwf	postinc1,w,c
  2525  001A36  50E6               	movf	postinc1,w,c
  2526  001A38  0A80               	xorlw	128
  2527  001A3A  6F7F               	movwf	(??_fputc+4)& (0+255),b
  2528  001A3C  50DE               	movf	postinc2,w,c
  2529  001A3E  0A80               	xorlw	128
  2530  001A40  597F               	subwfb	(??_fputc+4)& (0+255),w,b
  2531  001A42  B0D8               	btfsc	status,0,c
  2532  001A44  EF26  F00D         	goto	u2041
  2533  001A48  EF28  F00D         	goto	u2040
  2534  001A4C                     u2041:
  2535  001A4C  EF31  F00D         	goto	l869
  2536  001A50                     u2040:
  2537  001A50                     l2336:
  2538                           
  2539                           ; BSR set to: 0
  2540  001A50  EE20 F002          	lfsr	2,2
  2541  001A54  5179               	movf	fputc@fp& (0+255),w,b
  2542  001A56  26D9               	addwf	fsr2l,f,c
  2543  001A58  517A               	movf	(fputc@fp+1)& (0+255),w,b
  2544  001A5A  22DA               	addwfc	fsr2h,f,c
  2545  001A5C  2ADE               	incf	postinc2,f,c
  2546  001A5E  0E00               	movlw	0
  2547  001A60  22DD               	addwfc	postdec2,f,c
  2548  001A62                     l869:
  2549  001A62  0012               	return		;funcret
  2550  001A64                     __end_of_fputc:
  2551                           	opt callstack 0
  2552                           
  2553 ;; *************** function _putch *****************
  2554 ;; Defined at:
  2555 ;;		line 29 in file "main.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  data            1    wreg     unsigned char 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  data            1   22[BANK0 ] unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		wreg, status,2, status,0, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2569 ;;      Params:         0       0       0       0       0       0       0       0       0
  2570 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2572 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2573 ;;Total ram usage:        1 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:   15
  2576 ;; This function calls:
  2577 ;;		_escreve_lcd
  2578 ;; This function is called by:
  2579 ;;		_fputc
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text15
  2584  002082                     __ptext15:
  2585                           	opt callstack 0
  2586  002082                     _putch:
  2587                           	opt callstack 11
  2588                           
  2589                           ;incstack = 0
  2590                           ;putch@data stored from wreg
  2591  002082  0100               	movlb	0	; () banked
  2592  002084  6F76               	movwf	putch@data& (0+255),b
  2593  002086                     
  2594                           ;main.c: 29: void putch(char data);main.c: 30: {;main.c: 31:     escreve_lcd(data);
  2595  002086  0100               	movlb	0	; () banked
  2596  002088  5176               	movf	putch@data& (0+255),w,b
  2597  00208A  EC39  F010         	call	_escreve_lcd
  2598  00208E  0012               	return		;funcret
  2599  002090                     __end_of_putch:
  2600                           	opt callstack 0
  2601                           
  2602 ;; *************** function _escreve_lcd *****************
  2603 ;; Defined at:
  2604 ;;		line 24 in file "lcd.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  c               1    wreg     unsigned char 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  c               1   21[BANK0 ] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2618 ;;      Params:         0       0       0       0       0       0       0       0       0
  2619 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2621 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2622 ;;Total ram usage:        1 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:   14
  2625 ;; This function calls:
  2626 ;;		_envia_byte_lcd
  2627 ;; This function is called by:
  2628 ;;		_putch
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text16
  2633  002072                     __ptext16:
  2634                           	opt callstack 0
  2635  002072                     _escreve_lcd:
  2636                           	opt callstack 11
  2637                           
  2638                           ;incstack = 0
  2639                           ;escreve_lcd@c stored from wreg
  2640  002072  0100               	movlb	0	; () banked
  2641  002074  6F75               	movwf	escreve_lcd@c& (0+255),b
  2642  002076  C075  F073         	movff	escreve_lcd@c,envia_byte_lcd@dado
  2643  00207A  0E01               	movlw	1
  2644  00207C  EC89  F00F         	call	_envia_byte_lcd
  2645  002080  0012               	return		;funcret
  2646  002082                     __end_of_escreve_lcd:
  2647                           	opt callstack 0
  2648                           
  2649 ;; *************** function _envia_byte_lcd *****************
  2650 ;; Defined at:
  2651 ;;		line 16 in file "lcd.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  endereco        1    wreg     unsigned char 
  2654 ;;  dado            1   19[BANK0 ] unsigned char 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  endereco        1   20[BANK0 ] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2666 ;;      Params:         0       1       0       0       0       0       0       0       0
  2667 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2669 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2670 ;;Total ram usage:        2 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:   13
  2673 ;; This function calls:
  2674 ;;		_envia_nibble_lcd
  2675 ;; This function is called by:
  2676 ;;		_escreve_lcd
  2677 ;;		_limpa_lcd
  2678 ;;		_inicializa_lcd
  2679 ;;		_caracter_inicio
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text17
  2684  001F12                     __ptext17:
  2685                           	opt callstack 0
  2686  001F12                     _envia_byte_lcd:
  2687                           	opt callstack 15
  2688                           
  2689                           ;incstack = 0
  2690                           ;envia_byte_lcd@endereco stored from wreg
  2691  001F12  0100               	movlb	0	; () banked
  2692  001F14  6F74               	movwf	envia_byte_lcd@endereco& (0+255),b
  2693  001F16                     
  2694                           ;lcd.c: 16: void envia_byte_lcd(char endereco, char dado);lcd.c: 17: {;lcd.c: 18:   PORT
      +                          Dbits.RD0 = endereco;
  2695  001F16  0100               	movlb	0	; () banked
  2696  001F18  B174               	btfsc	envia_byte_lcd@endereco& (0+255),0,b
  2697  001F1A  D002               	bra	u1995
  2698  001F1C  9083               	bcf	131,0,c	;volatile
  2699  001F1E  D001               	bra	u1996
  2700  001F20                     u1995:
  2701  001F20  8083               	bsf	131,0,c	;volatile
  2702  001F22                     u1996:
  2703  001F22                     
  2704                           ;lcd.c: 19:   _delay((unsigned long)((5)*(4000000/4000000.0)));
  2705  001F22  D000               	nop2		;2 cycle nop
  2706  001F24  D000               	nop2		;2 cycle nop
  2707  001F26  F000               	nop	
  2708  001F28                     
  2709                           ;lcd.c: 20:   envia_nibble_lcd(dado >> 4);
  2710  001F28  0100               	movlb	0	; () banked
  2711  001F2A  3973               	swapf	envia_byte_lcd@dado& (0+255),w,b
  2712  001F2C  0B0F               	andlw	15
  2713  001F2E  ECC6  F00D         	call	_envia_nibble_lcd
  2714  001F32                     
  2715                           ;lcd.c: 21:   envia_nibble_lcd(dado & 0x0f);
  2716  001F32  0100               	movlb	0	; () banked
  2717  001F34  5173               	movf	envia_byte_lcd@dado& (0+255),w,b
  2718  001F36  0B0F               	andlw	15
  2719  001F38  ECC6  F00D         	call	_envia_nibble_lcd
  2720  001F3C  0012               	return		;funcret
  2721  001F3E                     __end_of_envia_byte_lcd:
  2722                           	opt callstack 0
  2723                           
  2724 ;; *************** function _envia_nibble_lcd *****************
  2725 ;; Defined at:
  2726 ;;		line 3 in file "lcd.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  dado            1    wreg     unsigned char 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  dado            1   18[BANK0 ] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2740 ;;      Params:         0       0       0       0       0       0       0       0       0
  2741 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2742 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2743 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2744 ;;Total ram usage:        2 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:   12
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		_envia_byte_lcd
  2751 ;;		_inicializa_lcd
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text18
  2756  001B8C                     __ptext18:
  2757                           	opt callstack 0
  2758  001B8C                     _envia_nibble_lcd:
  2759                           	opt callstack 15
  2760                           
  2761                           ;incstack = 0
  2762                           ;envia_nibble_lcd@dado stored from wreg
  2763  001B8C  0100               	movlb	0	; () banked
  2764  001B8E  6F72               	movwf	envia_nibble_lcd@dado& (0+255),b
  2765  001B90                     
  2766                           ;lcd.c: 3: void envia_nibble_lcd(char dado);lcd.c: 4: {;lcd.c: 5:   PORTDbits.RD1 = 1;
  2767  001B90  8283               	bsf	131,1,c	;volatile
  2768  001B92                     
  2769                           ;lcd.c: 6:   PORTDbits.RD4 = dado & 0x01;
  2770  001B92  C072  F071         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  2771  001B96  0E01               	movlw	1
  2772  001B98  0100               	movlb	0	; () banked
  2773  001B9A  1771               	andwf	??_envia_nibble_lcd& (0+255),f,b
  2774  001B9C  3B71               	swapf	??_envia_nibble_lcd& (0+255),f,b
  2775  001B9E  5083               	movf	131,w,c	;volatile
  2776  001BA0  1971               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  2777  001BA2  0BEF               	andlw	-17
  2778  001BA4  1971               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  2779  001BA6  6E83               	movwf	131,c	;volatile
  2780                           
  2781                           ;lcd.c: 7:   PORTDbits.RD5 = (dado >> 1) & 0x01;
  2782  001BA8  C072  F071         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  2783  001BAC  90D8               	bcf	status,0,c
  2784  001BAE  3371               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  2785  001BB0  0E01               	movlw	1
  2786  001BB2  1771               	andwf	??_envia_nibble_lcd& (0+255),f,b
  2787  001BB4  3B71               	swapf	??_envia_nibble_lcd& (0+255),f,b
  2788  001BB6  4771               	rlncf	??_envia_nibble_lcd& (0+255),f,b
  2789  001BB8  5083               	movf	131,w,c	;volatile
  2790  001BBA  1971               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  2791  001BBC  0BDF               	andlw	-33
  2792  001BBE  1971               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  2793  001BC0  6E83               	movwf	131,c	;volatile
  2794                           
  2795                           ;lcd.c: 8:   PORTDbits.RD6 = (dado >> 2) & 0x01;
  2796  001BC2  C072  F071         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  2797  001BC6  90D8               	bcf	status,0,c
  2798  001BC8  3371               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  2799  001BCA  90D8               	bcf	status,0,c
  2800  001BCC  3371               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  2801  001BCE  0E01               	movlw	1
  2802  001BD0  1771               	andwf	??_envia_nibble_lcd& (0+255),f,b
  2803  001BD2  3B71               	swapf	??_envia_nibble_lcd& (0+255),f,b
  2804  001BD4  4771               	rlncf	??_envia_nibble_lcd& (0+255),f,b
  2805  001BD6  4771               	rlncf	??_envia_nibble_lcd& (0+255),f,b
  2806  001BD8  5083               	movf	131,w,c	;volatile
  2807  001BDA  1971               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  2808  001BDC  0BBF               	andlw	-65
  2809  001BDE  1971               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  2810  001BE0  6E83               	movwf	131,c	;volatile
  2811                           
  2812                           ;lcd.c: 9:   PORTDbits.RD7 = (dado >> 3) & 0x01;
  2813  001BE2  C072  F071         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  2814  001BE6  90D8               	bcf	status,0,c
  2815  001BE8  3371               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  2816  001BEA  90D8               	bcf	status,0,c
  2817  001BEC  3371               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  2818  001BEE  90D8               	bcf	status,0,c
  2819  001BF0  3371               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  2820  001BF2  0E01               	movlw	1
  2821  001BF4  1771               	andwf	??_envia_nibble_lcd& (0+255),f,b
  2822  001BF6  3371               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  2823  001BF8  3371               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  2824  001BFA  5083               	movf	131,w,c	;volatile
  2825  001BFC  1971               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  2826  001BFE  0B7F               	andlw	-129
  2827  001C00  1971               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  2828  001C02  6E83               	movwf	131,c	;volatile
  2829  001C04                     
  2830                           ; BSR set to: 0
  2831                           ;lcd.c: 11:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  2832  001C04  0E10               	movlw	16
  2833  001C06                     u3037:
  2834  001C06  2EE8               	decfsz	wreg,f,c
  2835  001C08  D7FE               	bra	u3037
  2836  001C0A  D000               	nop2	
  2837  001C0C                     
  2838                           ;lcd.c: 12:   PORTDbits.RD1 = 0;
  2839  001C0C  9283               	bcf	131,1,c	;volatile
  2840  001C0E                     
  2841                           ;lcd.c: 13:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  2842  001C0E  0E10               	movlw	16
  2843  001C10                     u3047:
  2844  001C10  2EE8               	decfsz	wreg,f,c
  2845  001C12  D7FE               	bra	u3047
  2846  001C14  D000               	nop2	
  2847  001C16  0012               	return		;funcret
  2848  001C18                     __end_of_envia_nibble_lcd:
  2849                           	opt callstack 0
  2850                           
  2851 ;; *************** function _abs *****************
  2852 ;; Defined at:
  2853 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  a               2   35[BANK0 ] int 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  2   35[BANK0 ] int 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2867 ;;      Params:         0       2       0       0       0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2869 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2870 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2871 ;;Total ram usage:        4 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:   12
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_dtoa
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text19
  2882  001DF0                     __ptext19:
  2883                           	opt callstack 0
  2884  001DF0                     _abs:
  2885                           	opt callstack 14
  2886  001DF0  0100               	movlb	0	; () banked
  2887  001DF2  BF84               	btfsc	(abs@a+1)& (0+255),7,b
  2888  001DF4  EF06  F00F         	goto	u2170
  2889  001DF8  5184               	movf	(abs@a+1)& (0+255),w,b
  2890  001DFA  E106               	bnz	u2171
  2891  001DFC  0583               	decf	abs@a& (0+255),w,b
  2892  001DFE  B0D8               	btfsc	status,0,c
  2893  001E00  EF04  F00F         	goto	u2171
  2894  001E04  EF06  F00F         	goto	u2170
  2895  001E08                     u2171:
  2896  001E08  EF14  F00F         	goto	l854
  2897  001E0C                     u2170:
  2898  001E0C                     
  2899                           ; BSR set to: 0
  2900  001E0C  C083  F085         	movff	abs@a,??_abs
  2901  001E10  C084  F086         	movff	abs@a+1,??_abs+1
  2902  001E14  1F85               	comf	??_abs& (0+255),f,b
  2903  001E16  1F86               	comf	(??_abs+1)& (0+255),f,b
  2904  001E18  4B85               	infsnz	??_abs& (0+255),f,b
  2905  001E1A  2B86               	incf	(??_abs+1)& (0+255),f,b
  2906  001E1C  C085  F083         	movff	??_abs,?_abs
  2907  001E20  C086  F084         	movff	??_abs+1,?_abs+1
  2908  001E24  EF18  F00F         	goto	l857
  2909  001E28                     l854:
  2910                           
  2911                           ; BSR set to: 0
  2912  001E28  C083  F083         	movff	abs@a,?_abs
  2913  001E2C  C084  F084         	movff	abs@a+1,?_abs+1
  2914  001E30                     l857:
  2915                           
  2916                           ; BSR set to: 0
  2917  001E30  0012               	return		;funcret
  2918  001E32                     __end_of_abs:
  2919                           	opt callstack 0
  2920                           
  2921 ;; *************** function ___aomod *****************
  2922 ;; Defined at:
  2923 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  dividend        8   17[BANK0 ] long long 
  2926 ;;  divisor         8   25[BANK0 ] long long 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  sign            1   34[BANK0 ] unsigned char 
  2929 ;;  counter         1   33[BANK0 ] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  8   17[BANK0 ] long long 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2939 ;;      Params:         0      16       0       0       0       0       0       0       0
  2940 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2942 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2943 ;;Total ram usage:       18 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:   12
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_dtoa
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text20
  2954  001454                     __ptext20:
  2955                           	opt callstack 0
  2956  001454                     ___aomod:
  2957                           	opt callstack 14
  2958  001454  0E00               	movlw	0
  2959  001456  0100               	movlb	0	; () banked
  2960  001458  6F82               	movwf	___aomod@sign& (0+255),b
  2961  00145A                     
  2962                           ; BSR set to: 0
  2963  00145A  BF78               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  2964  00145C  EF34  F00A         	goto	u2250
  2965  001460  EF32  F00A         	goto	u2251
  2966  001464                     u2251:
  2967  001464  EF46  F00A         	goto	l2468
  2968  001468                     u2250:
  2969  001468                     
  2970                           ; BSR set to: 0
  2971  001468  1F78               	comf	(___aomod@dividend+7)& (0+255),f,b
  2972  00146A  1F77               	comf	(___aomod@dividend+6)& (0+255),f,b
  2973  00146C  1F76               	comf	(___aomod@dividend+5)& (0+255),f,b
  2974  00146E  1F75               	comf	(___aomod@dividend+4)& (0+255),f,b
  2975  001470  1F74               	comf	(___aomod@dividend+3)& (0+255),f,b
  2976  001472  1F73               	comf	(___aomod@dividend+2)& (0+255),f,b
  2977  001474  1F72               	comf	(___aomod@dividend+1)& (0+255),f,b
  2978  001476  6D71               	negf	___aomod@dividend& (0+255),b
  2979  001478  0E00               	movlw	0
  2980  00147A  2372               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2981  00147C  2373               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2982  00147E  2374               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2983  001480  2375               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2984  001482  2376               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2985  001484  2377               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2986  001486  2378               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2987  001488                     
  2988                           ; BSR set to: 0
  2989  001488  0E01               	movlw	1
  2990  00148A  6F82               	movwf	___aomod@sign& (0+255),b
  2991  00148C                     l2468:
  2992                           
  2993                           ; BSR set to: 0
  2994  00148C  BF80               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  2995  00148E  EF4D  F00A         	goto	u2260
  2996  001492  EF4B  F00A         	goto	u2261
  2997  001496                     u2261:
  2998  001496  EF5D  F00A         	goto	l2472
  2999  00149A                     u2260:
  3000  00149A                     
  3001                           ; BSR set to: 0
  3002  00149A  1F80               	comf	(___aomod@divisor+7)& (0+255),f,b
  3003  00149C  1F7F               	comf	(___aomod@divisor+6)& (0+255),f,b
  3004  00149E  1F7E               	comf	(___aomod@divisor+5)& (0+255),f,b
  3005  0014A0  1F7D               	comf	(___aomod@divisor+4)& (0+255),f,b
  3006  0014A2  1F7C               	comf	(___aomod@divisor+3)& (0+255),f,b
  3007  0014A4  1F7B               	comf	(___aomod@divisor+2)& (0+255),f,b
  3008  0014A6  1F7A               	comf	(___aomod@divisor+1)& (0+255),f,b
  3009  0014A8  6D79               	negf	___aomod@divisor& (0+255),b
  3010  0014AA  0E00               	movlw	0
  3011  0014AC  237A               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3012  0014AE  237B               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3013  0014B0  237C               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3014  0014B2  237D               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3015  0014B4  237E               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3016  0014B6  237F               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3017  0014B8  2380               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3018  0014BA                     l2472:
  3019                           
  3020                           ; BSR set to: 0
  3021  0014BA  5179               	movf	___aomod@divisor& (0+255),w,b
  3022  0014BC  117A               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3023  0014BE  117B               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3024  0014C0  117C               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3025  0014C2  117D               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3026  0014C4  117E               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3027  0014C6  117F               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3028  0014C8  1180               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3029  0014CA  B4D8               	btfsc	status,2,c
  3030  0014CC  EF6A  F00A         	goto	u2271
  3031  0014D0  EF6C  F00A         	goto	u2270
  3032  0014D4                     u2271:
  3033  0014D4  EFB4  F00A         	goto	l2488
  3034  0014D8                     u2270:
  3035  0014D8                     
  3036                           ; BSR set to: 0
  3037  0014D8  0E01               	movlw	1
  3038  0014DA  6F81               	movwf	___aomod@counter& (0+255),b
  3039  0014DC  EF7A  F00A         	goto	l2478
  3040  0014E0                     l2476:
  3041                           
  3042                           ; BSR set to: 0
  3043  0014E0  90D8               	bcf	status,0,c
  3044  0014E2  3779               	rlcf	___aomod@divisor& (0+255),f,b
  3045  0014E4  377A               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3046  0014E6  377B               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3047  0014E8  377C               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3048  0014EA  377D               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3049  0014EC  377E               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3050  0014EE  377F               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3051  0014F0  3780               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3052  0014F2  2B81               	incf	___aomod@counter& (0+255),f,b
  3053  0014F4                     l2478:
  3054                           
  3055                           ; BSR set to: 0
  3056  0014F4  AF80               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3057  0014F6  EF7F  F00A         	goto	u2281
  3058  0014FA  EF81  F00A         	goto	u2280
  3059  0014FE                     u2281:
  3060  0014FE  EF70  F00A         	goto	l2476
  3061  001502                     u2280:
  3062  001502                     l2480:
  3063                           
  3064                           ; BSR set to: 0
  3065  001502  5179               	movf	___aomod@divisor& (0+255),w,b
  3066  001504  5D71               	subwf	___aomod@dividend& (0+255),w,b
  3067  001506  517A               	movf	(___aomod@divisor+1)& (0+255),w,b
  3068  001508  5972               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3069  00150A  517B               	movf	(___aomod@divisor+2)& (0+255),w,b
  3070  00150C  5973               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3071  00150E  517C               	movf	(___aomod@divisor+3)& (0+255),w,b
  3072  001510  5974               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3073  001512  517D               	movf	(___aomod@divisor+4)& (0+255),w,b
  3074  001514  5975               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3075  001516  517E               	movf	(___aomod@divisor+5)& (0+255),w,b
  3076  001518  5976               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3077  00151A  517F               	movf	(___aomod@divisor+6)& (0+255),w,b
  3078  00151C  5977               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3079  00151E  5180               	movf	(___aomod@divisor+7)& (0+255),w,b
  3080  001520  5978               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3081  001522  A0D8               	btfss	status,0,c
  3082  001524  EF96  F00A         	goto	u2291
  3083  001528  EF98  F00A         	goto	u2290
  3084  00152C                     u2291:
  3085  00152C  EFA8  F00A         	goto	l2484
  3086  001530                     u2290:
  3087  001530                     
  3088                           ; BSR set to: 0
  3089  001530  5179               	movf	___aomod@divisor& (0+255),w,b
  3090  001532  5F71               	subwf	___aomod@dividend& (0+255),f,b
  3091  001534  517A               	movf	(___aomod@divisor+1)& (0+255),w,b
  3092  001536  5B72               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3093  001538  517B               	movf	(___aomod@divisor+2)& (0+255),w,b
  3094  00153A  5B73               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3095  00153C  517C               	movf	(___aomod@divisor+3)& (0+255),w,b
  3096  00153E  5B74               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3097  001540  517D               	movf	(___aomod@divisor+4)& (0+255),w,b
  3098  001542  5B75               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3099  001544  517E               	movf	(___aomod@divisor+5)& (0+255),w,b
  3100  001546  5B76               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3101  001548  517F               	movf	(___aomod@divisor+6)& (0+255),w,b
  3102  00154A  5B77               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3103  00154C  5180               	movf	(___aomod@divisor+7)& (0+255),w,b
  3104  00154E  5B78               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3105  001550                     l2484:
  3106                           
  3107                           ; BSR set to: 0
  3108  001550  90D8               	bcf	status,0,c
  3109  001552  3380               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3110  001554  337F               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3111  001556  337E               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3112  001558  337D               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3113  00155A  337C               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3114  00155C  337B               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3115  00155E  337A               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3116  001560  3379               	rrcf	___aomod@divisor& (0+255),f,b
  3117  001562                     
  3118                           ; BSR set to: 0
  3119  001562  2F81               	decfsz	___aomod@counter& (0+255),f,b
  3120  001564  EF81  F00A         	goto	l2480
  3121  001568                     l2488:
  3122                           
  3123                           ; BSR set to: 0
  3124  001568  5182               	movf	___aomod@sign& (0+255),w,b
  3125  00156A  B4D8               	btfsc	status,2,c
  3126  00156C  EFBA  F00A         	goto	u2301
  3127  001570  EFBC  F00A         	goto	u2300
  3128  001574                     u2301:
  3129  001574  EFCC  F00A         	goto	l2492
  3130  001578                     u2300:
  3131  001578                     
  3132                           ; BSR set to: 0
  3133  001578  1F78               	comf	(___aomod@dividend+7)& (0+255),f,b
  3134  00157A  1F77               	comf	(___aomod@dividend+6)& (0+255),f,b
  3135  00157C  1F76               	comf	(___aomod@dividend+5)& (0+255),f,b
  3136  00157E  1F75               	comf	(___aomod@dividend+4)& (0+255),f,b
  3137  001580  1F74               	comf	(___aomod@dividend+3)& (0+255),f,b
  3138  001582  1F73               	comf	(___aomod@dividend+2)& (0+255),f,b
  3139  001584  1F72               	comf	(___aomod@dividend+1)& (0+255),f,b
  3140  001586  6D71               	negf	___aomod@dividend& (0+255),b
  3141  001588  0E00               	movlw	0
  3142  00158A  2372               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3143  00158C  2373               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3144  00158E  2374               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3145  001590  2375               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3146  001592  2376               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3147  001594  2377               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3148  001596  2378               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3149  001598                     l2492:
  3150                           
  3151                           ; BSR set to: 0
  3152  001598  C071  F071         	movff	___aomod@dividend,?___aomod
  3153  00159C  C072  F072         	movff	___aomod@dividend+1,?___aomod+1
  3154  0015A0  C073  F073         	movff	___aomod@dividend+2,?___aomod+2
  3155  0015A4  C074  F074         	movff	___aomod@dividend+3,?___aomod+3
  3156  0015A8  C075  F075         	movff	___aomod@dividend+4,?___aomod+4
  3157  0015AC  C076  F076         	movff	___aomod@dividend+5,?___aomod+5
  3158  0015B0  C077  F077         	movff	___aomod@dividend+6,?___aomod+6
  3159  0015B4  C078  F078         	movff	___aomod@dividend+7,?___aomod+7
  3160  0015B8                     
  3161                           ; BSR set to: 0
  3162  0015B8  0012               	return		;funcret
  3163  0015BA                     __end_of___aomod:
  3164                           	opt callstack 0
  3165                           
  3166 ;; *************** function ___aodiv *****************
  3167 ;; Defined at:
  3168 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  dividend        8   17[BANK0 ] long long 
  3171 ;;  divisor         8   25[BANK0 ] long long 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  quotient        8   35[BANK0 ] long long 
  3174 ;;  sign            1   34[BANK0 ] unsigned char 
  3175 ;;  counter         1   33[BANK0 ] unsigned char 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  8   17[BANK0 ] long long 
  3178 ;; Registers used:
  3179 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3185 ;;      Params:         0      16       0       0       0       0       0       0       0
  3186 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3188 ;;      Totals:         0      26       0       0       0       0       0       0       0
  3189 ;;Total ram usage:       26 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:   12
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_dtoa
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text21
  3200  001142                     __ptext21:
  3201                           	opt callstack 0
  3202  001142                     ___aodiv:
  3203                           	opt callstack 14
  3204  001142  0E00               	movlw	0
  3205  001144  0100               	movlb	0	; () banked
  3206  001146  6F82               	movwf	___aodiv@sign& (0+255),b
  3207  001148                     
  3208                           ; BSR set to: 0
  3209  001148  BF80               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  3210  00114A  EFAB  F008         	goto	u2180
  3211  00114E  EFA9  F008         	goto	u2181
  3212  001152                     u2181:
  3213  001152  EFBD  F008         	goto	l2424
  3214  001156                     u2180:
  3215  001156                     
  3216                           ; BSR set to: 0
  3217  001156  1F80               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3218  001158  1F7F               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3219  00115A  1F7E               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3220  00115C  1F7D               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3221  00115E  1F7C               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3222  001160  1F7B               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3223  001162  1F7A               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3224  001164  6D79               	negf	___aodiv@divisor& (0+255),b
  3225  001166  0E00               	movlw	0
  3226  001168  237A               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3227  00116A  237B               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3228  00116C  237C               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3229  00116E  237D               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3230  001170  237E               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3231  001172  237F               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3232  001174  2380               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3233  001176                     
  3234                           ; BSR set to: 0
  3235  001176  0E01               	movlw	1
  3236  001178  6F82               	movwf	___aodiv@sign& (0+255),b
  3237  00117A                     l2424:
  3238                           
  3239                           ; BSR set to: 0
  3240  00117A  BF78               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  3241  00117C  EFC4  F008         	goto	u2190
  3242  001180  EFC2  F008         	goto	u2191
  3243  001184                     u2191:
  3244  001184  EFD6  F008         	goto	l2430
  3245  001188                     u2190:
  3246  001188                     
  3247                           ; BSR set to: 0
  3248  001188  1F78               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3249  00118A  1F77               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3250  00118C  1F76               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3251  00118E  1F75               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3252  001190  1F74               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3253  001192  1F73               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3254  001194  1F72               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3255  001196  6D71               	negf	___aodiv@dividend& (0+255),b
  3256  001198  0E00               	movlw	0
  3257  00119A  2372               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3258  00119C  2373               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3259  00119E  2374               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3260  0011A0  2375               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3261  0011A2  2376               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3262  0011A4  2377               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3263  0011A6  2378               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3264  0011A8                     
  3265                           ; BSR set to: 0
  3266  0011A8  0E01               	movlw	1
  3267  0011AA  1B82               	xorwf	___aodiv@sign& (0+255),f,b
  3268  0011AC                     l2430:
  3269                           
  3270                           ; BSR set to: 0
  3271  0011AC  EE20  F083         	lfsr	2,___aodiv@quotient
  3272  0011B0  0E07               	movlw	7
  3273  0011B2                     u2201:
  3274  0011B2  6ADE               	clrf	postinc2,c
  3275  0011B4  06E8               	decf	wreg,f,c
  3276  0011B6  E2FD               	bc	u2201
  3277  0011B8                     
  3278                           ; BSR set to: 0
  3279  0011B8  5179               	movf	___aodiv@divisor& (0+255),w,b
  3280  0011BA  117A               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3281  0011BC  117B               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3282  0011BE  117C               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3283  0011C0  117D               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3284  0011C2  117E               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3285  0011C4  117F               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3286  0011C6  1180               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3287  0011C8  B4D8               	btfsc	status,2,c
  3288  0011CA  EFE9  F008         	goto	u2211
  3289  0011CE  EFEB  F008         	goto	u2210
  3290  0011D2                     u2211:
  3291  0011D2  EF3D  F009         	goto	l2452
  3292  0011D6                     u2210:
  3293  0011D6                     
  3294                           ; BSR set to: 0
  3295  0011D6  0E01               	movlw	1
  3296  0011D8  6F81               	movwf	___aodiv@counter& (0+255),b
  3297  0011DA  EFF9  F008         	goto	l2438
  3298  0011DE                     l2436:
  3299                           
  3300                           ; BSR set to: 0
  3301  0011DE  90D8               	bcf	status,0,c
  3302  0011E0  3779               	rlcf	___aodiv@divisor& (0+255),f,b
  3303  0011E2  377A               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3304  0011E4  377B               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3305  0011E6  377C               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3306  0011E8  377D               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3307  0011EA  377E               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3308  0011EC  377F               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3309  0011EE  3780               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3310  0011F0  2B81               	incf	___aodiv@counter& (0+255),f,b
  3311  0011F2                     l2438:
  3312                           
  3313                           ; BSR set to: 0
  3314  0011F2  AF80               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3315  0011F4  EFFE  F008         	goto	u2221
  3316  0011F8  EF00  F009         	goto	u2220
  3317  0011FC                     u2221:
  3318  0011FC  EFEF  F008         	goto	l2436
  3319  001200                     u2220:
  3320  001200                     l2440:
  3321                           
  3322                           ; BSR set to: 0
  3323  001200  90D8               	bcf	status,0,c
  3324  001202  3783               	rlcf	___aodiv@quotient& (0+255),f,b
  3325  001204  3784               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3326  001206  3785               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3327  001208  3786               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3328  00120A  3787               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3329  00120C  3788               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3330  00120E  3789               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3331  001210  378A               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3332  001212                     
  3333                           ; BSR set to: 0
  3334  001212  5179               	movf	___aodiv@divisor& (0+255),w,b
  3335  001214  5D71               	subwf	___aodiv@dividend& (0+255),w,b
  3336  001216  517A               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3337  001218  5972               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3338  00121A  517B               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3339  00121C  5973               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3340  00121E  517C               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3341  001220  5974               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3342  001222  517D               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3343  001224  5975               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3344  001226  517E               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3345  001228  5976               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3346  00122A  517F               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3347  00122C  5977               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3348  00122E  5180               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3349  001230  5978               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3350  001232  A0D8               	btfss	status,0,c
  3351  001234  EF1E  F009         	goto	u2231
  3352  001238  EF20  F009         	goto	u2230
  3353  00123C                     u2231:
  3354  00123C  EF31  F009         	goto	l2448
  3355  001240                     u2230:
  3356  001240                     
  3357                           ; BSR set to: 0
  3358  001240  5179               	movf	___aodiv@divisor& (0+255),w,b
  3359  001242  5F71               	subwf	___aodiv@dividend& (0+255),f,b
  3360  001244  517A               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3361  001246  5B72               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3362  001248  517B               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3363  00124A  5B73               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3364  00124C  517C               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3365  00124E  5B74               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3366  001250  517D               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3367  001252  5B75               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3368  001254  517E               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3369  001256  5B76               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3370  001258  517F               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3371  00125A  5B77               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3372  00125C  5180               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3373  00125E  5B78               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3374  001260                     
  3375                           ; BSR set to: 0
  3376  001260  8183               	bsf	___aodiv@quotient& (0+255),0,b
  3377  001262                     l2448:
  3378                           
  3379                           ; BSR set to: 0
  3380  001262  90D8               	bcf	status,0,c
  3381  001264  3380               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3382  001266  337F               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3383  001268  337E               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3384  00126A  337D               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3385  00126C  337C               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3386  00126E  337B               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3387  001270  337A               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3388  001272  3379               	rrcf	___aodiv@divisor& (0+255),f,b
  3389  001274                     
  3390                           ; BSR set to: 0
  3391  001274  2F81               	decfsz	___aodiv@counter& (0+255),f,b
  3392  001276  EF00  F009         	goto	l2440
  3393  00127A                     l2452:
  3394                           
  3395                           ; BSR set to: 0
  3396  00127A  5182               	movf	___aodiv@sign& (0+255),w,b
  3397  00127C  B4D8               	btfsc	status,2,c
  3398  00127E  EF43  F009         	goto	u2241
  3399  001282  EF45  F009         	goto	u2240
  3400  001286                     u2241:
  3401  001286  EF55  F009         	goto	l2456
  3402  00128A                     u2240:
  3403  00128A                     
  3404                           ; BSR set to: 0
  3405  00128A  1F8A               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3406  00128C  1F89               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3407  00128E  1F88               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3408  001290  1F87               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3409  001292  1F86               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3410  001294  1F85               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3411  001296  1F84               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3412  001298  6D83               	negf	___aodiv@quotient& (0+255),b
  3413  00129A  0E00               	movlw	0
  3414  00129C  2384               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3415  00129E  2385               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3416  0012A0  2386               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3417  0012A2  2387               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3418  0012A4  2388               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3419  0012A6  2389               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3420  0012A8  238A               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3421  0012AA                     l2456:
  3422                           
  3423                           ; BSR set to: 0
  3424  0012AA  C083  F071         	movff	___aodiv@quotient,?___aodiv
  3425  0012AE  C084  F072         	movff	___aodiv@quotient+1,?___aodiv+1
  3426  0012B2  C085  F073         	movff	___aodiv@quotient+2,?___aodiv+2
  3427  0012B6  C086  F074         	movff	___aodiv@quotient+3,?___aodiv+3
  3428  0012BA  C087  F075         	movff	___aodiv@quotient+4,?___aodiv+4
  3429  0012BE  C088  F076         	movff	___aodiv@quotient+5,?___aodiv+5
  3430  0012C2  C089  F077         	movff	___aodiv@quotient+6,?___aodiv+6
  3431  0012C6  C08A  F078         	movff	___aodiv@quotient+7,?___aodiv+7
  3432  0012CA                     
  3433                           ; BSR set to: 0
  3434  0012CA  0012               	return		;funcret
  3435  0012CC                     __end_of___aodiv:
  3436                           	opt callstack 0
  3437                           
  3438 ;; *************** function _isr *****************
  3439 ;; Defined at:
  3440 ;;		line 131 in file "main.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3454 ;;      Params:         0       0       0       0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3456 ;;      Temps:          0       9       0       0       0       0       0       0       0
  3457 ;;      Totals:         0       9       0       0       0       0       0       0       0
  3458 ;;Total ram usage:        9 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:   11
  3461 ;; This function calls:
  3462 ;;		_clearInterruptFlags
  3463 ;;		i2_limpa_lcd
  3464 ;;		i2_printf
  3465 ;; This function is called by:
  3466 ;;		Interrupt level 2
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	intcode
  3471  000008                     __pintcode:
  3472                           	opt callstack 0
  3473  000008                     _isr:
  3474                           	opt callstack 8
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;incstack = 0
  3478  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3479  00000A  ED8F  F00B         	call	int_func,f	;refresh shadow registers
  3480                           
  3481                           	psect	intcode_body
  3482  00171E                     __pintcode_body:
  3483                           	opt callstack 8
  3484  00171E                     int_func:
  3485                           	opt callstack 8
  3486  00171E  0006               	pop		; remove dummy address from shadow register refresh
  3487  001720  CFE1 F069          	movff	fsr1l,??_isr+1
  3488  001724  CFE2 F06A          	movff	fsr1h,??_isr+2
  3489  001728  CFD9 F06B          	movff	fsr2l,??_isr+3
  3490  00172C  CFDA F06C          	movff	fsr2h,??_isr+4
  3491  001730  CFF6 F06D          	movff	tblptrl,??_isr+5
  3492  001734  CFF7 F06E          	movff	tblptrh,??_isr+6
  3493  001738  CFF8 F06F          	movff	tblptru,??_isr+7
  3494  00173C  CFF5 F070          	movff	tablat,??_isr+8
  3495  001740                     
  3496                           ;main.c: 133:     if (INTCONbits.INT0IF){
  3497  001740  A2F2               	btfss	242,1,c	;volatile
  3498  001742  EFA5  F00B         	goto	i2u289_41
  3499  001746  EFA7  F00B         	goto	i2u289_40
  3500  00174A                     i2u289_41:
  3501  00174A  EFC9  F00B         	goto	i2l69
  3502  00174E                     i2u289_40:
  3503  00174E                     
  3504                           ;main.c: 134:         limpa_lcd();
  3505  00174E  EC20  F010         	call	i2_limpa_lcd	;wreg free
  3506  001752                     
  3507                           ;main.c: 135:         printf("Timmer: %d",currentTime);
  3508  001752  0E01               	movlw	low STR_2
  3509  001754  0100               	movlb	0	; () banked
  3510  001756  6F60               	movwf	i2printf@fmt& (0+255),b
  3511  001758  0E08               	movlw	high STR_2
  3512  00175A  6F61               	movwf	(i2printf@fmt+1)& (0+255),b
  3513  00175C  C0CC  F062         	movff	_currentTime,?i2_printf+2
  3514  001760  C0CD  F063         	movff	_currentTime+1,?i2_printf+3
  3515  001764  EC71  F00F         	call	i2_printf	;wreg free
  3516  001768                     
  3517                           ;main.c: 136:         PORTCbits.RC0 = ~(PORTCbits.RC0);
  3518  001768  B082               	btfsc	130,0,c	;volatile
  3519  00176A  EFB9  F00B         	goto	i2u290_41
  3520  00176E  EFBC  F00B         	goto	i2u290_40
  3521  001772                     i2u290_41:
  3522  001772  0E01               	movlw	1
  3523  001774  EFBD  F00B         	goto	i2u290_46
  3524  001778                     i2u290_40:
  3525  001778  0E00               	movlw	0
  3526  00177A                     i2u290_46:
  3527  00177A  0AFF               	xorlw	255
  3528  00177C  0100               	movlb	0	; () banked
  3529  00177E  6F68               	movwf	??_isr& (0+255),b
  3530  001780  5082               	movf	130,w,c	;volatile
  3531  001782  1968               	xorwf	??_isr& (0+255),w,b
  3532  001784  0BFE               	andlw	-2
  3533  001786  1968               	xorwf	??_isr& (0+255),w,b
  3534  001788  6E82               	movwf	130,c	;volatile
  3535  00178A                     i2l2892:
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;main.c: 137:         clearInterruptFlags();
  3539  00178A  EC54  F010         	call	_clearInterruptFlags	;wreg free
  3540  00178E  EF0C  F00C         	goto	i2l70
  3541  001792                     i2l69:
  3542                           
  3543                           ;main.c: 141:     if (INTCON3bits.INT1IF) {
  3544  001792  A0F0               	btfss	240,0,c	;volatile
  3545  001794  EFCE  F00B         	goto	i2u291_41
  3546  001798  EFD0  F00B         	goto	i2u291_40
  3547  00179C                     i2u291_41:
  3548  00179C  EFE4  F00B         	goto	i2l71
  3549  0017A0                     i2u291_40:
  3550  0017A0                     
  3551                           ;main.c: 142:         PORTCbits.RC1 = ~(PORTCbits.RC1);
  3552  0017A0  B282               	btfsc	130,1,c	;volatile
  3553  0017A2  EFD5  F00B         	goto	i2u292_41
  3554  0017A6  EFD8  F00B         	goto	i2u292_40
  3555  0017AA                     i2u292_41:
  3556  0017AA  0E01               	movlw	1
  3557  0017AC  EFD9  F00B         	goto	i2u292_46
  3558  0017B0                     i2u292_40:
  3559  0017B0  0E00               	movlw	0
  3560  0017B2                     i2u292_46:
  3561  0017B2  0AFF               	xorlw	255
  3562  0017B4  0100               	movlb	0	; () banked
  3563  0017B6  6F68               	movwf	??_isr& (0+255),b
  3564  0017B8  4768               	rlncf	??_isr& (0+255),f,b
  3565  0017BA  5082               	movf	130,w,c	;volatile
  3566  0017BC  1968               	xorwf	??_isr& (0+255),w,b
  3567  0017BE  0BFD               	andlw	-3
  3568  0017C0  1968               	xorwf	??_isr& (0+255),w,b
  3569  0017C2  6E82               	movwf	130,c	;volatile
  3570  0017C4  EFC5  F00B         	goto	i2l2892
  3571  0017C8                     i2l71:
  3572                           
  3573                           ;main.c: 148:     if (INTCON3bits.INT2IF){
  3574  0017C8  A2F0               	btfss	240,1,c	;volatile
  3575  0017CA  EFE9  F00B         	goto	i2u293_41
  3576  0017CE  EFEB  F00B         	goto	i2u293_40
  3577  0017D2                     i2u293_41:
  3578  0017D2  EF00  F00C         	goto	i2l2906
  3579  0017D6                     i2u293_40:
  3580  0017D6                     
  3581                           ;main.c: 149:         PORTCbits.RC2 = ~(PORTCbits.RC2);
  3582  0017D6  B482               	btfsc	130,2,c	;volatile
  3583  0017D8  EFF0  F00B         	goto	i2u294_41
  3584  0017DC  EFF3  F00B         	goto	i2u294_40
  3585  0017E0                     i2u294_41:
  3586  0017E0  0E01               	movlw	1
  3587  0017E2  EFF4  F00B         	goto	i2u294_46
  3588  0017E6                     i2u294_40:
  3589  0017E6  0E00               	movlw	0
  3590  0017E8                     i2u294_46:
  3591  0017E8  0AFF               	xorlw	255
  3592  0017EA  0100               	movlb	0	; () banked
  3593  0017EC  6F68               	movwf	??_isr& (0+255),b
  3594  0017EE  4768               	rlncf	??_isr& (0+255),f,b
  3595  0017F0  4768               	rlncf	??_isr& (0+255),f,b
  3596  0017F2  5082               	movf	130,w,c	;volatile
  3597  0017F4  1968               	xorwf	??_isr& (0+255),w,b
  3598  0017F6  0BFB               	andlw	-5
  3599  0017F8  1968               	xorwf	??_isr& (0+255),w,b
  3600  0017FA  6E82               	movwf	130,c	;volatile
  3601  0017FC                     
  3602                           ; BSR set to: 0
  3603                           ;main.c: 150:         clearInterruptFlags();
  3604  0017FC  EC54  F010         	call	_clearInterruptFlags	;wreg free
  3605  001800                     i2l2906:
  3606                           
  3607                           ;main.c: 154:     if(TMR2IF) {
  3608  001800  A29E               	btfss	3998,1,c	;volatile
  3609  001802  EF05  F00C         	goto	i2u295_41
  3610  001806  EF07  F00C         	goto	i2u295_40
  3611  00180A                     i2u295_41:
  3612  00180A  EF0C  F00C         	goto	i2l70
  3613  00180E                     i2u295_40:
  3614  00180E                     
  3615                           ;main.c: 155:         currentTime +=1;
  3616  00180E  0100               	movlb	0	; () banked
  3617  001810  4BCC               	infsnz	_currentTime& (0+255),f,b
  3618  001812  2BCD               	incf	(_currentTime+1)& (0+255),f,b
  3619  001814  EFC5  F00B         	goto	i2l2892
  3620  001818                     i2l70:
  3621  001818  C070  FFF5         	movff	??_isr+8,tablat
  3622  00181C  C06F  FFF8         	movff	??_isr+7,tblptru
  3623  001820  C06E  FFF7         	movff	??_isr+6,tblptrh
  3624  001824  C06D  FFF6         	movff	??_isr+5,tblptrl
  3625  001828  C06C  FFDA         	movff	??_isr+4,fsr2h
  3626  00182C  C06B  FFD9         	movff	??_isr+3,fsr2l
  3627  001830  C06A  FFE2         	movff	??_isr+2,fsr1h
  3628  001834  C069  FFE1         	movff	??_isr+1,fsr1l
  3629  001838  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3630  00183A  0011               	retfie		f
  3631  00183C                     __end_of_isr:
  3632                           	opt callstack 0
  3633                           
  3634 ;; *************** function i2_printf *****************
  3635 ;; Defined at:
  3636 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  fmt             2    0[BANK0 ] PTR const unsigned char 
  3639 ;;		 -> STR_2(11), STR_1(3), 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  printf          2    6[BANK0 ] PTR void [1]
  3642 ;;		 -> ?i2_printf(2), ?_printf(2), 
  3643 ;;  printf          2    4[BANK0 ] int 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  2    0[BANK0 ] int 
  3646 ;; Registers used:
  3647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3653 ;;      Params:         0       4       0       0       0       0       0       0       0
  3654 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3655 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3656 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3657 ;;Total ram usage:        8 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:   10
  3660 ;; This function calls:
  3661 ;;		i2_vfprintf
  3662 ;; This function is called by:
  3663 ;;		_isr
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text23
  3668  001EE2                     __ptext23:
  3669                           	opt callstack 0
  3670  001EE2                     i2_printf:
  3671                           	opt callstack 8
  3672  001EE2  0E62               	movlw	low (?i2_printf+2)
  3673  001EE4  0100               	movlb	0	; () banked
  3674  001EE6  6F66               	movwf	i2printf@ap& (0+255),b
  3675  001EE8  0E00               	movlw	high (?i2_printf+2)
  3676  001EEA  6F67               	movwf	(i2printf@ap+1)& (0+255),b
  3677  001EEC                     
  3678                           ; BSR set to: 0
  3679  001EEC  0E00               	movlw	0
  3680  001EEE  6E56               	movwf	i2vfprintf@fp^0,c
  3681  001EF0  0E00               	movlw	0
  3682  001EF2  6E57               	movwf	(i2vfprintf@fp+1)^0,c
  3683  001EF4  C060  F058         	movff	i2printf@fmt,i2vfprintf@fmt
  3684  001EF8  C061  F059         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
  3685  001EFC  0E66               	movlw	low i2printf@ap
  3686  001EFE  6E5A               	movwf	i2vfprintf@ap^0,c
  3687  001F00  0E00               	movlw	high i2printf@ap
  3688  001F02  6E5B               	movwf	(i2vfprintf@ap+1)^0,c
  3689  001F04  EC81  F00E         	call	i2_vfprintf	;wreg free
  3690  001F08  C056  F064         	movff	?i2_vfprintf,i2printf@ret
  3691  001F0C  C057  F065         	movff	?i2_vfprintf+1,i2printf@ret+1
  3692  001F10  0012               	return		;funcret
  3693  001F12                     __end_ofi2_printf:
  3694                           	opt callstack 0
  3695                           
  3696 ;; *************** function i2_vfprintf *****************
  3697 ;; Defined at:
  3698 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  3701 ;;		 -> NULL(0), 
  3702 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  3703 ;;		 -> STR_2(11), STR_1(3), 
  3704 ;;  ap              2   89[COMRAM] PTR PTR void 
  3705 ;;		 -> i2printf@ap(2), printf@ap(2), 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  vfprintf        2   91[COMRAM] PTR unsigned char 
  3708 ;;		 -> STR_2(11), STR_1(3), 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  2   85[COMRAM] int 
  3711 ;; Registers used:
  3712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3718 ;;      Params:         6       0       0       0       0       0       0       0       0
  3719 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3721 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3722 ;;Total ram usage:        8 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    9
  3725 ;; This function calls:
  3726 ;;		i2_vfpfcnvrt
  3727 ;; This function is called by:
  3728 ;;		i2_printf
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text24
  3733  001D02                     __ptext24:
  3734                           	opt callstack 0
  3735  001D02                     i2_vfprintf:
  3736                           	opt callstack 8
  3737  001D02                     
  3738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3739  001D02  C058  F05C         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  3740  001D06  C059  F05D         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  3741  001D0A                     
  3742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3743  001D0A  0E00               	movlw	0
  3744  001D0C  0100               	movlb	0	; () banked
  3745  001D0E  6FC5               	movwf	(_nout+1)& (0+255),b
  3746  001D10  0E00               	movlw	0
  3747  001D12  6FC4               	movwf	_nout& (0+255),b
  3748                           
  3749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3750  001D14  EF9F  F00E         	goto	i2l2850
  3751  001D18                     i2l2848:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3755  001D18  C056  F046         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  3756  001D1C  C057  F047         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  3757  001D20  0E5C               	movlw	low i2vfprintf@cfmt
  3758  001D22  6E48               	movwf	i2vfpfcnvrt@fmt^0,c
  3759  001D24  0E00               	movlw	high i2vfprintf@cfmt
  3760  001D26  6E49               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  3761  001D28  C05A  F04A         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  3762  001D2C  C05B  F04B         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  3763  001D30  ECC7  F007         	call	i2_vfpfcnvrt	;wreg free
  3764  001D34  5046               	movf	?i2_vfpfcnvrt^0,w,c
  3765  001D36  0100               	movlb	0	; () banked
  3766  001D38  27C4               	addwf	_nout& (0+255),f,b
  3767  001D3A  5047               	movf	(?i2_vfpfcnvrt+1)^0,w,c
  3768  001D3C  23C5               	addwfc	(_nout+1)& (0+255),f,b
  3769  001D3E                     i2l2850:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3773  001D3E  C05C  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  3774  001D42  C05D  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  3775  001D46                     	if	0	;tblptru may be non-zero
  3776  001D46                     	endif
  3777  001D46                     	if	0	;tblptru may be non-zero
  3778  001D46                     	endif
  3779  001D46  0008               	tblrd		*
  3780  001D48  50F5               	movf	tablat,w,c
  3781  001D4A  0900               	iorlw	0
  3782  001D4C  A4D8               	btfss	status,2,c
  3783  001D4E  EFAB  F00E         	goto	i2u288_41
  3784  001D52  EFAD  F00E         	goto	i2u288_40
  3785  001D56                     i2u288_41:
  3786  001D56  EF8C  F00E         	goto	i2l2848
  3787  001D5A                     i2u288_40:
  3788  001D5A                     
  3789                           ; BSR set to: 0
  3790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3791  001D5A  C0C4  F056         	movff	_nout,?i2_vfprintf
  3792  001D5E  C0C5  F057         	movff	_nout+1,?i2_vfprintf+1
  3793  001D62                     
  3794                           ; BSR set to: 0
  3795  001D62  0012               	return		;funcret
  3796  001D64                     __end_ofi2_vfprintf:
  3797                           	opt callstack 0
  3798                           
  3799 ;; *************** function i2_vfpfcnvrt *****************
  3800 ;; Defined at:
  3801 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  3804 ;;		 -> NULL(0), 
  3805 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  3806 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  3807 ;;  ap              2   73[COMRAM] PTR PTR void 
  3808 ;;		 -> i2printf@ap(2), printf@ap(2), 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  vfpfcnvrt       8   77[COMRAM] long long 
  3811 ;;  vfpfcnvrt       8    0        unsigned long long 
  3812 ;;  vfpfcnvrt       4    0        unsigned long long 
  3813 ;;  vfpfcnvrt       3    0        PTR void 
  3814 ;;  vfpfcnvrt       3    0        unsigned char [3]
  3815 ;;  vfpfcnvrt       3    0        PTR unsigned char 
  3816 ;;  vfpfcnvrt       2    0        int 
  3817 ;;  vfpfcnvrt       2    0        int 
  3818 ;;  vfpfcnvrt       1    0        unsigned char 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  2   69[COMRAM] int 
  3821 ;; Registers used:
  3822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3828 ;;      Params:         6       0       0       0       0       0       0       0       0
  3829 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3830 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3831 ;;      Totals:        16       0       0       0       0       0       0       0       0
  3832 ;;Total ram usage:       16 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; Hardware stack levels required when called:    8
  3835 ;; This function calls:
  3836 ;;		i2_dtoa
  3837 ;;		i2_fputc
  3838 ;; This function is called by:
  3839 ;;		i2_vfprintf
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text25
  3844  000F8E                     __ptext25:
  3845                           	opt callstack 0
  3846  000F8E                     i2_vfpfcnvrt:
  3847                           	opt callstack 8
  3848  000F8E                     
  3849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3850  000F8E  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  3851  000F92  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  3852  000F96  CFDE FFF6          	movff	postinc2,tblptrl
  3853  000F9A  CFDD FFF7          	movff	postdec2,tblptrh
  3854  000F9E                     	if	0	;tblptru may be non-zero
  3855  000F9E                     	endif
  3856  000F9E                     	if	0	;tblptru may be non-zero
  3857  000F9E                     	endif
  3858  000F9E  0008               	tblrd		*
  3859  000FA0  50F5               	movf	tablat,w,c
  3860  000FA2  0A25               	xorlw	37
  3861  000FA4  A4D8               	btfss	status,2,c
  3862  000FA6  EFD7  F007         	goto	i2u283_41
  3863  000FAA  EFD9  F007         	goto	i2u283_40
  3864  000FAE                     i2u283_41:
  3865  000FAE  EF85  F008         	goto	i2l2802
  3866  000FB2                     i2u283_40:
  3867  000FB2                     
  3868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3869  000FB2  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  3870  000FB6  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  3871  000FBA  2ADE               	incf	postinc2,f,c
  3872  000FBC  0E00               	movlw	0
  3873  000FBE  22DD               	addwfc	postdec2,f,c
  3874  000FC0                     
  3875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3876  000FC0  0E00               	movlw	0
  3877  000FC2  0100               	movlb	0	; () banked
  3878  000FC4  6FC7               	movwf	(_width+1)& (0+255),b
  3879  000FC6  0E00               	movlw	0
  3880  000FC8  6FC6               	movwf	_width& (0+255),b
  3881  000FCA  C0C6  F0CA         	movff	_width,_flags
  3882  000FCE  C0C7  F0CB         	movff	_width+1,_flags+1
  3883  000FD2                     
  3884                           ; BSR set to: 0
  3885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3886  000FD2  69C8               	setf	_prec& (0+255),b
  3887  000FD4  69C9               	setf	(_prec+1)& (0+255),b
  3888  000FD6                     
  3889                           ; BSR set to: 0
  3890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3891  000FD6  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  3892  000FDA  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  3893  000FDE  CFDE FFF6          	movff	postinc2,tblptrl
  3894  000FE2  CFDD FFF7          	movff	postdec2,tblptrh
  3895  000FE6                     	if	0	;tblptru may be non-zero
  3896  000FE6                     	endif
  3897  000FE6                     	if	0	;tblptru may be non-zero
  3898  000FE6                     	endif
  3899  000FE6  0008               	tblrd		*
  3900  000FE8  50F5               	movf	tablat,w,c
  3901  000FEA  0A64               	xorlw	100
  3902  000FEC  B4D8               	btfsc	status,2,c
  3903  000FEE  EFFB  F007         	goto	i2u284_41
  3904  000FF2  EFFD  F007         	goto	i2u284_40
  3905  000FF6                     i2u284_41:
  3906  000FF6  EF0F  F008         	goto	i2l2780
  3907  000FFA                     i2u284_40:
  3908  000FFA                     
  3909                           ; BSR set to: 0
  3910  000FFA  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  3911  000FFE  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  3912  001002  CFDE FFF6          	movff	postinc2,tblptrl
  3913  001006  CFDD FFF7          	movff	postdec2,tblptrh
  3914  00100A                     	if	0	;tblptru may be non-zero
  3915  00100A                     	endif
  3916  00100A                     	if	0	;tblptru may be non-zero
  3917  00100A                     	endif
  3918  00100A  0008               	tblrd		*
  3919  00100C  50F5               	movf	tablat,w,c
  3920  00100E  0A69               	xorlw	105
  3921  001010  A4D8               	btfss	status,2,c
  3922  001012  EF0D  F008         	goto	i2u285_41
  3923  001016  EF0F  F008         	goto	i2u285_40
  3924  00101A                     i2u285_41:
  3925  00101A  EF4F  F008         	goto	i2l2786
  3926  00101E                     i2u285_40:
  3927  00101E                     i2l2780:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3931  00101E  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  3932  001022  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  3933  001026  2ADE               	incf	postinc2,f,c
  3934  001028  0E00               	movlw	0
  3935  00102A  22DD               	addwfc	postdec2,f,c
  3936                           
  3937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3938  00102C  C04A  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  3939  001030  C04B  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  3940  001034  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt
  3941  001038  0E02               	movlw	2
  3942  00103A  26DE               	addwf	postinc2,f,c
  3943  00103C  CFDF F04D          	movff	indf2,??i2_vfpfcnvrt+1
  3944  001040  0E00               	movlw	0
  3945  001042  22DD               	addwfc	postdec2,f,c
  3946  001044  C04C  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  3947  001048  C04D  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  3948  00104C  CFDE F04E          	movff	postinc2,i2vfpfcnvrt@ll
  3949  001050  CFDD F04F          	movff	postdec2,i2vfpfcnvrt@ll+1
  3950  001054  0E00               	movlw	0
  3951  001056  BE4F               	btfsc	(i2vfpfcnvrt@ll+1)^0,7,c
  3952  001058  0EFF               	movlw	-1
  3953  00105A  6E50               	movwf	(i2vfpfcnvrt@ll+2)^0,c
  3954  00105C  6E51               	movwf	(i2vfpfcnvrt@ll+3)^0,c
  3955  00105E  6E52               	movwf	(i2vfpfcnvrt@ll+4)^0,c
  3956  001060  6E53               	movwf	(i2vfpfcnvrt@ll+5)^0,c
  3957  001062  6E54               	movwf	(i2vfpfcnvrt@ll+6)^0,c
  3958  001064  6E55               	movwf	(i2vfpfcnvrt@ll+7)^0,c
  3959  001066                     
  3960                           ; BSR set to: 0
  3961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3962  001066  C046  F022         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  3963  00106A  C047  F023         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  3964  00106E  C04E  F024         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  3965  001072  C04F  F025         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  3966  001076  C050  F026         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  3967  00107A  C051  F027         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  3968  00107E  C052  F028         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  3969  001082  C053  F029         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  3970  001086  C054  F02A         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  3971  00108A  C055  F02B         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  3972  00108E  EC79  F005         	call	i2_dtoa	;wreg free
  3973  001092  C022  F046         	movff	?i2_dtoa,?i2_vfpfcnvrt
  3974  001096  C023  F047         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  3975  00109A  EFA0  F008         	goto	i2l169
  3976  00109E                     i2l2786:
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3980  00109E  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  3981  0010A2  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  3982  0010A6  CFDE FFF6          	movff	postinc2,tblptrl
  3983  0010AA  CFDD FFF7          	movff	postdec2,tblptrh
  3984  0010AE                     	if	0	;tblptru may be non-zero
  3985  0010AE                     	endif
  3986  0010AE                     	if	0	;tblptru may be non-zero
  3987  0010AE                     	endif
  3988  0010AE  0008               	tblrd		*
  3989  0010B0  50F5               	movf	tablat,w,c
  3990  0010B2  0A25               	xorlw	37
  3991  0010B4  A4D8               	btfss	status,2,c
  3992  0010B6  EF5F  F008         	goto	i2u286_41
  3993  0010BA  EF61  F008         	goto	i2u286_40
  3994  0010BE                     i2u286_41:
  3995  0010BE  EF78  F008         	goto	i2l2796
  3996  0010C2                     i2u286_40:
  3997  0010C2                     
  3998                           ; BSR set to: 0
  3999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4000  0010C2  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4001  0010C6  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4002  0010CA  2ADE               	incf	postinc2,f,c
  4003  0010CC  0E00               	movlw	0
  4004  0010CE  22DD               	addwfc	postdec2,f,c
  4005  0010D0                     
  4006                           ; BSR set to: 0
  4007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4008  0010D0  0E00               	movlw	0
  4009  0010D2  6E08               	movwf	(i2fputc@c+1)^0,c
  4010  0010D4  0E25               	movlw	37
  4011  0010D6  6E07               	movwf	i2fputc@c^0,c
  4012  0010D8  C046  F009         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4013  0010DC  C047  F00A         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  4014  0010E0  EC32  F00D         	call	i2_fputc	;wreg free
  4015  0010E4                     i2l2792:
  4016                           
  4017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4018  0010E4  0E00               	movlw	0
  4019  0010E6  6E47               	movwf	(?i2_vfpfcnvrt+1)^0,c
  4020  0010E8  0E01               	movlw	1
  4021  0010EA  6E46               	movwf	?i2_vfpfcnvrt^0,c
  4022  0010EC  EFA0  F008         	goto	i2l169
  4023  0010F0                     i2l2796:
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4027  0010F0  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4028  0010F4  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4029  0010F8  2ADE               	incf	postinc2,f,c
  4030  0010FA  0E00               	movlw	0
  4031  0010FC  22DD               	addwfc	postdec2,f,c
  4032  0010FE                     
  4033                           ; BSR set to: 0
  4034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4035  0010FE  0E00               	movlw	0
  4036  001100  6E47               	movwf	(?i2_vfpfcnvrt+1)^0,c
  4037  001102  0E00               	movlw	0
  4038  001104  6E46               	movwf	?i2_vfpfcnvrt^0,c
  4039  001106  EFA0  F008         	goto	i2l169
  4040  00110A                     i2l2802:
  4041                           
  4042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4043  00110A  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4044  00110E  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4045  001112  CFDE FFF6          	movff	postinc2,tblptrl
  4046  001116  CFDD FFF7          	movff	postdec2,tblptrh
  4047  00111A                     	if	0	;tblptru may be non-zero
  4048  00111A                     	endif
  4049  00111A                     	if	0	;tblptru may be non-zero
  4050  00111A                     	endif
  4051  00111A  0008               	tblrd		*
  4052  00111C  50F5               	movf	tablat,w,c
  4053  00111E  6E07               	movwf	i2fputc@c^0,c
  4054  001120  6A08               	clrf	(i2fputc@c+1)^0,c
  4055  001122  C046  F009         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4056  001126  C047  F00A         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  4057  00112A  EC32  F00D         	call	i2_fputc	;wreg free
  4058  00112E                     
  4059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4060  00112E  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4061  001132  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4062  001136  2ADE               	incf	postinc2,f,c
  4063  001138  0E00               	movlw	0
  4064  00113A  22DD               	addwfc	postdec2,f,c
  4065  00113C  EF72  F008         	goto	i2l2792
  4066  001140                     i2l169:
  4067  001140  0012               	return		;funcret
  4068  001142                     __end_ofi2_vfpfcnvrt:
  4069                           	opt callstack 0
  4070                           
  4071 ;; *************** function i2_dtoa *****************
  4072 ;; Defined at:
  4073 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  4076 ;;		 -> NULL(0), 
  4077 ;;  d               8   35[COMRAM] long long 
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  dtoa            8   59[COMRAM] long long 
  4080 ;;  dtoa            2   67[COMRAM] int 
  4081 ;;  dtoa            2   57[COMRAM] int 
  4082 ;;  dtoa            2   55[COMRAM] int 
  4083 ;;  dtoa            2   53[COMRAM] int 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  2   33[COMRAM] int 
  4086 ;; Registers used:
  4087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4093 ;;      Params:        10       0       0       0       0       0       0       0       0
  4094 ;;      Locals:        18       0       0       0       0       0       0       0       0
  4095 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4096 ;;      Totals:        36       0       0       0       0       0       0       0       0
  4097 ;;Total ram usage:       36 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    7
  4100 ;; This function calls:
  4101 ;;		i2___aodiv
  4102 ;;		i2___aomod
  4103 ;;		i2_abs
  4104 ;;		i2_pad
  4105 ;; This function is called by:
  4106 ;;		i2_vfpfcnvrt
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text26
  4111  000AF2                     __ptext26:
  4112                           	opt callstack 0
  4113  000AF2                     i2_dtoa:
  4114                           	opt callstack 8
  4115  000AF2                     
  4116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4117  000AF2  C024  F03C         	movff	i2dtoa@d,i2dtoa@n
  4118  000AF6  C025  F03D         	movff	i2dtoa@d+1,i2dtoa@n+1
  4119  000AFA  C026  F03E         	movff	i2dtoa@d+2,i2dtoa@n+2
  4120  000AFE  C027  F03F         	movff	i2dtoa@d+3,i2dtoa@n+3
  4121  000B02  C028  F040         	movff	i2dtoa@d+4,i2dtoa@n+4
  4122  000B06  C029  F041         	movff	i2dtoa@d+5,i2dtoa@n+5
  4123  000B0A  C02A  F042         	movff	i2dtoa@d+6,i2dtoa@n+6
  4124  000B0E  C02B  F043         	movff	i2dtoa@d+7,i2dtoa@n+7
  4125  000B12                     
  4126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4127  000B12  BE43               	btfsc	(i2dtoa@n+7)^0,7,c
  4128  000B14  EF8E  F005         	goto	i2u264_41
  4129  000B18  EF91  F005         	goto	i2u264_40
  4130  000B1C                     i2u264_41:
  4131  000B1C  0E01               	movlw	1
  4132  000B1E  EF92  F005         	goto	i2u265_40
  4133  000B22                     i2u264_40:
  4134  000B22  0E00               	movlw	0
  4135  000B24                     i2u265_40:
  4136  000B24  6E3A               	movwf	i2dtoa@s^0,c
  4137  000B26  6A3B               	clrf	(i2dtoa@s+1)^0,c
  4138                           
  4139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4140  000B28  503A               	movf	i2dtoa@s^0,w,c
  4141  000B2A  103B               	iorwf	(i2dtoa@s+1)^0,w,c
  4142  000B2C  B4D8               	btfsc	status,2,c
  4143  000B2E  EF9B  F005         	goto	i2u266_41
  4144  000B32  EF9D  F005         	goto	i2u266_40
  4145  000B36                     i2u266_41:
  4146  000B36  EFAD  F005         	goto	i2l2670
  4147  000B3A                     i2u266_40:
  4148  000B3A                     
  4149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4150  000B3A  1E43               	comf	(i2dtoa@n+7)^0,f,c
  4151  000B3C  1E42               	comf	(i2dtoa@n+6)^0,f,c
  4152  000B3E  1E41               	comf	(i2dtoa@n+5)^0,f,c
  4153  000B40  1E40               	comf	(i2dtoa@n+4)^0,f,c
  4154  000B42  1E3F               	comf	(i2dtoa@n+3)^0,f,c
  4155  000B44  1E3E               	comf	(i2dtoa@n+2)^0,f,c
  4156  000B46  1E3D               	comf	(i2dtoa@n+1)^0,f,c
  4157  000B48  6C3C               	negf	i2dtoa@n^0,c
  4158  000B4A  0E00               	movlw	0
  4159  000B4C  223D               	addwfc	(i2dtoa@n+1)^0,f,c
  4160  000B4E  223E               	addwfc	(i2dtoa@n+2)^0,f,c
  4161  000B50  223F               	addwfc	(i2dtoa@n+3)^0,f,c
  4162  000B52  2240               	addwfc	(i2dtoa@n+4)^0,f,c
  4163  000B54  2241               	addwfc	(i2dtoa@n+5)^0,f,c
  4164  000B56  2242               	addwfc	(i2dtoa@n+6)^0,f,c
  4165  000B58  2243               	addwfc	(i2dtoa@n+7)^0,f,c
  4166  000B5A                     i2l2670:
  4167                           
  4168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4169  000B5A  0100               	movlb	0	; () banked
  4170  000B5C  BFC9               	btfsc	(_prec+1)& (0+255),7,b
  4171  000B5E  EFB3  F005         	goto	i2u267_41
  4172  000B62  EFB5  F005         	goto	i2u267_40
  4173  000B66                     i2u267_41:
  4174  000B66  EFB6  F005         	goto	i2l2674
  4175  000B6A                     i2u267_40:
  4176  000B6A                     
  4177                           ; BSR set to: 0
  4178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4179  000B6A  93CA               	bcf	_flags& (0+255),1,b
  4180  000B6C                     i2l2674:
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4184  000B6C  BFC9               	btfsc	(_prec+1)& (0+255),7,b
  4185  000B6E  EFC3  F005         	goto	i2u268_40
  4186  000B72  51C9               	movf	(_prec+1)& (0+255),w,b
  4187  000B74  E106               	bnz	i2u268_41
  4188  000B76  05C8               	decf	_prec& (0+255),w,b
  4189  000B78  B0D8               	btfsc	status,0,c
  4190  000B7A  EFC1  F005         	goto	i2u268_41
  4191  000B7E  EFC3  F005         	goto	i2u268_40
  4192  000B82                     i2u268_41:
  4193  000B82  EFC9  F005         	goto	i2l142
  4194  000B86                     i2u268_40:
  4195  000B86                     
  4196                           ; BSR set to: 0
  4197  000B86  0E00               	movlw	0
  4198  000B88  6E37               	movwf	(i2dtoa@p+1)^0,c
  4199  000B8A  0E01               	movlw	1
  4200  000B8C  6E36               	movwf	i2dtoa@p^0,c
  4201  000B8E  EFCD  F005         	goto	i2l144
  4202  000B92                     i2l142:
  4203                           
  4204                           ; BSR set to: 0
  4205  000B92  C0C8  F036         	movff	_prec,i2dtoa@p
  4206  000B96  C0C9  F037         	movff	_prec+1,i2dtoa@p+1
  4207  000B9A                     i2l144:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4211  000B9A  C0C6  F038         	movff	_width,i2dtoa@w
  4212  000B9E  C0C7  F039         	movff	_width+1,i2dtoa@w+1
  4213  000BA2                     
  4214                           ; BSR set to: 0
  4215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4216  000BA2  503A               	movf	i2dtoa@s^0,w,c
  4217  000BA4  103B               	iorwf	(i2dtoa@s+1)^0,w,c
  4218  000BA6  A4D8               	btfss	status,2,c
  4219  000BA8  EFD8  F005         	goto	i2u269_41
  4220  000BAC  EFDA  F005         	goto	i2u269_40
  4221  000BB0                     i2u269_41:
  4222  000BB0  EFE1  F005         	goto	i2l2682
  4223  000BB4                     i2u269_40:
  4224  000BB4                     
  4225                           ; BSR set to: 0
  4226  000BB4  A5CA               	btfss	_flags& (0+255),2,b
  4227  000BB6  EFDF  F005         	goto	i2u270_41
  4228  000BBA  EFE1  F005         	goto	i2u270_40
  4229  000BBE                     i2u270_41:
  4230  000BBE  EFE4  F005         	goto	i2l2684
  4231  000BC2                     i2u270_40:
  4232  000BC2                     i2l2682:
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4236  000BC2  0638               	decf	i2dtoa@w^0,f,c
  4237  000BC4  A0D8               	btfss	status,0,c
  4238  000BC6  0639               	decf	(i2dtoa@w+1)^0,f,c
  4239  000BC8                     i2l2684:
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4243  000BC8  0E00               	movlw	0
  4244  000BCA  6E45               	movwf	(i2dtoa@i+1)^0,c
  4245  000BCC  0E1F               	movlw	31
  4246  000BCE  6E44               	movwf	i2dtoa@i^0,c
  4247  000BD0                     
  4248                           ; BSR set to: 0
  4249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4250  000BD0  0E00               	movlw	0
  4251  000BD2  6FED               	movwf	(_dbuf+31)& (0+255),b
  4252                           
  4253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4254  000BD4  EF68  F006         	goto	i2l2698
  4255  000BD8                     i2l2688:
  4256                           
  4257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4258  000BD8  0644               	decf	i2dtoa@i^0,f,c
  4259  000BDA  A0D8               	btfss	status,0,c
  4260  000BDC  0645               	decf	(i2dtoa@i+1)^0,f,c
  4261  000BDE                     
  4262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4263  000BDE  0ECE               	movlw	low _dbuf
  4264  000BE0  2444               	addwf	i2dtoa@i^0,w,c
  4265  000BE2  6ED9               	movwf	fsr2l,c
  4266  000BE4  0E00               	movlw	high _dbuf
  4267  000BE6  2045               	addwfc	(i2dtoa@i+1)^0,w,c
  4268  000BE8  6EDA               	movwf	fsr2h,c
  4269  000BEA  C03C  F001         	movff	i2dtoa@n,i2___aomod@dividend
  4270  000BEE  C03D  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  4271  000BF2  C03E  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  4272  000BF6  C03F  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  4273  000BFA  C040  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  4274  000BFE  C041  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  4275  000C02  C042  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  4276  000C06  C043  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  4277  000C0A  0E0A               	movlw	10
  4278  000C0C  6E09               	movwf	i2___aomod@divisor^0,c
  4279  000C0E  0E00               	movlw	0
  4280  000C10  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
  4281  000C12  0E00               	movlw	0
  4282  000C14  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
  4283  000C16  0E00               	movlw	0
  4284  000C18  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
  4285  000C1A  0E00               	movlw	0
  4286  000C1C  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
  4287  000C1E  0E00               	movlw	0
  4288  000C20  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
  4289  000C22  0E00               	movlw	0
  4290  000C24  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
  4291  000C26  0E00               	movlw	0
  4292  000C28  6E10               	movwf	(i2___aomod@divisor+7)^0,c
  4293  000C2A  ECDD  F00A         	call	i2___aomod	;wreg free
  4294  000C2E  C001  F02C         	movff	?i2___aomod,??i2_dtoa
  4295  000C32  C002  F02D         	movff	?i2___aomod+1,??i2_dtoa+1
  4296  000C36  C003  F02E         	movff	?i2___aomod+2,??i2_dtoa+2
  4297  000C3A  C004  F02F         	movff	?i2___aomod+3,??i2_dtoa+3
  4298  000C3E  C005  F030         	movff	?i2___aomod+4,??i2_dtoa+4
  4299  000C42  C006  F031         	movff	?i2___aomod+5,??i2_dtoa+5
  4300  000C46  C007  F032         	movff	?i2___aomod+6,??i2_dtoa+6
  4301  000C4A  C008  F033         	movff	?i2___aomod+7,??i2_dtoa+7
  4302  000C4E  C02C  F013         	movff	??i2_dtoa,i2abs@a
  4303  000C52  C02E  F014         	movff	??i2_dtoa+2,i2abs@a+1
  4304  000C56  EC19  F00F         	call	i2_abs	;wreg free
  4305  000C5A  5013               	movf	?i2_abs^0,w,c
  4306  000C5C  0F30               	addlw	48
  4307  000C5E  6EDF               	movwf	indf2,c
  4308  000C60                     
  4309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4310  000C60  0636               	decf	i2dtoa@p^0,f,c
  4311  000C62  A0D8               	btfss	status,0,c
  4312  000C64  0637               	decf	(i2dtoa@p+1)^0,f,c
  4313  000C66                     
  4314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4315  000C66  0638               	decf	i2dtoa@w^0,f,c
  4316  000C68  A0D8               	btfss	status,0,c
  4317  000C6A  0639               	decf	(i2dtoa@w+1)^0,f,c
  4318  000C6C                     
  4319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4320  000C6C  C03C  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  4321  000C70  C03D  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  4322  000C74  C03E  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  4323  000C78  C03F  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  4324  000C7C  C040  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  4325  000C80  C041  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  4326  000C84  C042  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  4327  000C88  C043  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  4328  000C8C  0E0A               	movlw	10
  4329  000C8E  6E09               	movwf	i2___aodiv@divisor^0,c
  4330  000C90  0E00               	movlw	0
  4331  000C92  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
  4332  000C94  0E00               	movlw	0
  4333  000C96  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
  4334  000C98  0E00               	movlw	0
  4335  000C9A  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
  4336  000C9C  0E00               	movlw	0
  4337  000C9E  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
  4338  000CA0  0E00               	movlw	0
  4339  000CA2  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
  4340  000CA4  0E00               	movlw	0
  4341  000CA6  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
  4342  000CA8  0E00               	movlw	0
  4343  000CAA  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
  4344  000CAC  EC66  F009         	call	i2___aodiv	;wreg free
  4345  000CB0  C001  F03C         	movff	?i2___aodiv,i2dtoa@n
  4346  000CB4  C002  F03D         	movff	?i2___aodiv+1,i2dtoa@n+1
  4347  000CB8  C003  F03E         	movff	?i2___aodiv+2,i2dtoa@n+2
  4348  000CBC  C004  F03F         	movff	?i2___aodiv+3,i2dtoa@n+3
  4349  000CC0  C005  F040         	movff	?i2___aodiv+4,i2dtoa@n+4
  4350  000CC4  C006  F041         	movff	?i2___aodiv+5,i2dtoa@n+5
  4351  000CC8  C007  F042         	movff	?i2___aodiv+6,i2dtoa@n+6
  4352  000CCC  C008  F043         	movff	?i2___aodiv+7,i2dtoa@n+7
  4353  000CD0                     i2l2698:
  4354                           
  4355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4356  000CD0  BE45               	btfsc	(i2dtoa@i+1)^0,7,c
  4357  000CD2  EF73  F006         	goto	i2u271_41
  4358  000CD6  5045               	movf	(i2dtoa@i+1)^0,w,c
  4359  000CD8  E108               	bnz	i2u271_40
  4360  000CDA  0444               	decf	i2dtoa@i^0,w,c
  4361  000CDC  A0D8               	btfss	status,0,c
  4362  000CDE  EF73  F006         	goto	i2u271_41
  4363  000CE2  EF75  F006         	goto	i2u271_40
  4364  000CE6                     i2u271_41:
  4365  000CE6  EFA6  F006         	goto	i2l2708
  4366  000CEA                     i2u271_40:
  4367  000CEA  503C               	movf	i2dtoa@n^0,w,c
  4368  000CEC  103D               	iorwf	(i2dtoa@n+1)^0,w,c
  4369  000CEE  103E               	iorwf	(i2dtoa@n+2)^0,w,c
  4370  000CF0  103F               	iorwf	(i2dtoa@n+3)^0,w,c
  4371  000CF2  1040               	iorwf	(i2dtoa@n+4)^0,w,c
  4372  000CF4  1041               	iorwf	(i2dtoa@n+5)^0,w,c
  4373  000CF6  1042               	iorwf	(i2dtoa@n+6)^0,w,c
  4374  000CF8  1043               	iorwf	(i2dtoa@n+7)^0,w,c
  4375  000CFA  A4D8               	btfss	status,2,c
  4376  000CFC  EF82  F006         	goto	i2u272_41
  4377  000D00  EF84  F006         	goto	i2u272_40
  4378  000D04                     i2u272_41:
  4379  000D04  EFEC  F005         	goto	i2l2688
  4380  000D08                     i2u272_40:
  4381  000D08  BE37               	btfsc	(i2dtoa@p+1)^0,7,c
  4382  000D0A  EF91  F006         	goto	i2u273_40
  4383  000D0E  5037               	movf	(i2dtoa@p+1)^0,w,c
  4384  000D10  E106               	bnz	i2u273_41
  4385  000D12  0436               	decf	i2dtoa@p^0,w,c
  4386  000D14  B0D8               	btfsc	status,0,c
  4387  000D16  EF8F  F006         	goto	i2u273_41
  4388  000D1A  EF91  F006         	goto	i2u273_40
  4389  000D1E                     i2u273_41:
  4390  000D1E  EFEC  F005         	goto	i2l2688
  4391  000D22                     i2u273_40:
  4392  000D22  BE39               	btfsc	(i2dtoa@w+1)^0,7,c
  4393  000D24  EF9C  F006         	goto	i2u274_41
  4394  000D28  5039               	movf	(i2dtoa@w+1)^0,w,c
  4395  000D2A  E108               	bnz	i2u274_40
  4396  000D2C  0438               	decf	i2dtoa@w^0,w,c
  4397  000D2E  A0D8               	btfss	status,0,c
  4398  000D30  EF9C  F006         	goto	i2u274_41
  4399  000D34  EF9E  F006         	goto	i2u274_40
  4400  000D38                     i2u274_41:
  4401  000D38  EFA6  F006         	goto	i2l2708
  4402  000D3C                     i2u274_40:
  4403  000D3C  0100               	movlb	0	; () banked
  4404  000D3E  B3CA               	btfsc	_flags& (0+255),1,b
  4405  000D40  EFA4  F006         	goto	i2u275_41
  4406  000D44  EFA6  F006         	goto	i2u275_40
  4407  000D48                     i2u275_41:
  4408  000D48  EFEC  F005         	goto	i2l2688
  4409  000D4C                     i2u275_40:
  4410  000D4C                     i2l2708:
  4411                           
  4412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  4413  000D4C  503A               	movf	i2dtoa@s^0,w,c
  4414  000D4E  103B               	iorwf	(i2dtoa@s+1)^0,w,c
  4415  000D50  A4D8               	btfss	status,2,c
  4416  000D52  EFAD  F006         	goto	i2u276_41
  4417  000D56  EFAF  F006         	goto	i2u276_40
  4418  000D5A                     i2u276_41:
  4419  000D5A  EFB7  F006         	goto	i2l2712
  4420  000D5E                     i2u276_40:
  4421  000D5E  0100               	movlb	0	; () banked
  4422  000D60  A5CA               	btfss	_flags& (0+255),2,b
  4423  000D62  EFB5  F006         	goto	i2u277_41
  4424  000D66  EFB7  F006         	goto	i2u277_40
  4425  000D6A                     i2u277_41:
  4426  000D6A  EFD5  F006         	goto	i2l2722
  4427  000D6E                     i2u277_40:
  4428  000D6E                     i2l2712:
  4429                           
  4430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  4431  000D6E  0644               	decf	i2dtoa@i^0,f,c
  4432  000D70  A0D8               	btfss	status,0,c
  4433  000D72  0645               	decf	(i2dtoa@i+1)^0,f,c
  4434  000D74                     
  4435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  4436  000D74  503A               	movf	i2dtoa@s^0,w,c
  4437  000D76  103B               	iorwf	(i2dtoa@s+1)^0,w,c
  4438  000D78  A4D8               	btfss	status,2,c
  4439  000D7A  EFC1  F006         	goto	i2u278_41
  4440  000D7E  EFC3  F006         	goto	i2u278_40
  4441  000D82                     i2u278_41:
  4442  000D82  EFC9  F006         	goto	i2l2718
  4443  000D86                     i2u278_40:
  4444  000D86  0E00               	movlw	0
  4445  000D88  6E35               	movwf	(i2_dtoa$589+1)^0,c
  4446  000D8A  0E2B               	movlw	43
  4447  000D8C  6E34               	movwf	i2_dtoa$589^0,c
  4448  000D8E  EFCD  F006         	goto	i2l2720
  4449  000D92                     i2l2718:
  4450  000D92  0E00               	movlw	0
  4451  000D94  6E35               	movwf	(i2_dtoa$589+1)^0,c
  4452  000D96  0E2D               	movlw	45
  4453  000D98  6E34               	movwf	i2_dtoa$589^0,c
  4454  000D9A                     i2l2720:
  4455  000D9A  0ECE               	movlw	low _dbuf
  4456  000D9C  2444               	addwf	i2dtoa@i^0,w,c
  4457  000D9E  6ED9               	movwf	fsr2l,c
  4458  000DA0  0E00               	movlw	high _dbuf
  4459  000DA2  2045               	addwfc	(i2dtoa@i+1)^0,w,c
  4460  000DA4  6EDA               	movwf	fsr2h,c
  4461  000DA6  C034  FFDF         	movff	i2_dtoa$589,indf2
  4462  000DAA                     i2l2722:
  4463                           
  4464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  4465  000DAA  C022  F017         	movff	i2dtoa@fp,i2pad@fp
  4466  000DAE  C023  F018         	movff	i2dtoa@fp+1,i2pad@fp+1
  4467  000DB2  0ECE               	movlw	low _dbuf
  4468  000DB4  2444               	addwf	i2dtoa@i^0,w,c
  4469  000DB6  6E19               	movwf	i2pad@buf^0,c
  4470  000DB8  0E00               	movlw	high _dbuf
  4471  000DBA  2045               	addwfc	(i2dtoa@i+1)^0,w,c
  4472  000DBC  6E1A               	movwf	(i2pad@buf+1)^0,c
  4473  000DBE  C038  F01B         	movff	i2dtoa@w,i2pad@p
  4474  000DC2  C039  F01C         	movff	i2dtoa@w+1,i2pad@p+1
  4475  000DC6  EC83  F00C         	call	i2_pad	;wreg free
  4476  000DCA  C017  F022         	movff	?i2_pad,?i2_dtoa
  4477  000DCE  C018  F023         	movff	?i2_pad+1,?i2_dtoa+1
  4478  000DD2  0012               	return		;funcret
  4479  000DD4                     __end_ofi2_dtoa:
  4480                           	opt callstack 0
  4481                           
  4482 ;; *************** function i2_pad *****************
  4483 ;; Defined at:
  4484 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4487 ;;		 -> NULL(0), 
  4488 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4489 ;;		 -> dbuf(32), 
  4490 ;;  p               2   26[COMRAM] int 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  pad             2   31[COMRAM] int 
  4493 ;;  pad             2   29[COMRAM] int 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  2   22[COMRAM] int 
  4496 ;; Registers used:
  4497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4503 ;;      Params:         6       0       0       0       0       0       0       0       0
  4504 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4505 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4506 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4507 ;;Total ram usage:       11 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    6
  4510 ;; This function calls:
  4511 ;;		i2_fputc
  4512 ;;		i2_fputs
  4513 ;;		i2_strlen
  4514 ;; This function is called by:
  4515 ;;		i2_dtoa
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text27
  4520  001906                     __ptext27:
  4521                           	opt callstack 0
  4522  001906                     i2_pad:
  4523                           	opt callstack 8
  4524  001906                     
  4525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4526  001906  0100               	movlb	0	; () banked
  4527  001908  A1CA               	btfss	_flags& (0+255),0,b
  4528  00190A  EF89  F00C         	goto	i2u231_41
  4529  00190E  EF8B  F00C         	goto	i2u231_40
  4530  001912                     i2u231_41:
  4531  001912  EF95  F00C         	goto	i2l2500
  4532  001916                     i2u231_40:
  4533  001916                     
  4534                           ; BSR set to: 0
  4535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4536  001916  C019  F010         	movff	i2pad@buf,i2fputs@s
  4537  00191A  C01A  F011         	movff	i2pad@buf+1,i2fputs@s+1
  4538  00191E  C017  F012         	movff	i2pad@fp,i2fputs@fp
  4539  001922  C018  F013         	movff	i2pad@fp+1,i2fputs@fp+1
  4540  001926  ECD6  F00E         	call	i2_fputs	;wreg free
  4541  00192A                     i2l2500:
  4542                           
  4543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4544  00192A  BE1C               	btfsc	(i2pad@p+1)^0,7,c
  4545  00192C  EF9A  F00C         	goto	i2u232_41
  4546  001930  EF9C  F00C         	goto	i2u232_40
  4547  001934                     i2u232_41:
  4548  001934  EFA2  F00C         	goto	i2l2504
  4549  001938                     i2u232_40:
  4550  001938  C01B  F020         	movff	i2pad@p,i2pad@w
  4551  00193C  C01C  F021         	movff	i2pad@p+1,i2pad@w+1
  4552  001940  EFA6  F00C         	goto	i2l131
  4553  001944                     i2l2504:
  4554  001944  0E00               	movlw	0
  4555  001946  6E21               	movwf	(i2pad@w+1)^0,c
  4556  001948  0E00               	movlw	0
  4557  00194A  6E20               	movwf	i2pad@w^0,c
  4558  00194C                     i2l131:
  4559                           
  4560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4561  00194C  0E00               	movlw	0
  4562  00194E  6E1F               	movwf	(i2pad@i+1)^0,c
  4563  001950  0E00               	movlw	0
  4564  001952  6E1E               	movwf	i2pad@i^0,c
  4565                           
  4566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4567  001954  EFB8  F00C         	goto	i2l2510
  4568  001958                     i2l2506:
  4569                           
  4570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4571  001958  0E00               	movlw	0
  4572  00195A  6E08               	movwf	(i2fputc@c+1)^0,c
  4573  00195C  0E20               	movlw	32
  4574  00195E  6E07               	movwf	i2fputc@c^0,c
  4575  001960  C017  F009         	movff	i2pad@fp,i2fputc@fp
  4576  001964  C018  F00A         	movff	i2pad@fp+1,i2fputc@fp+1
  4577  001968  EC32  F00D         	call	i2_fputc	;wreg free
  4578  00196C                     
  4579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4580  00196C  4A1E               	infsnz	i2pad@i^0,f,c
  4581  00196E  2A1F               	incf	(i2pad@i+1)^0,f,c
  4582  001970                     i2l2510:
  4583                           
  4584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4585  001970  5020               	movf	i2pad@w^0,w,c
  4586  001972  5C1E               	subwf	i2pad@i^0,w,c
  4587  001974  501F               	movf	(i2pad@i+1)^0,w,c
  4588  001976  0A80               	xorlw	128
  4589  001978  6E1D               	movwf	??i2_pad^0,c
  4590  00197A  5021               	movf	(i2pad@w+1)^0,w,c
  4591  00197C  0A80               	xorlw	128
  4592  00197E  581D               	subwfb	??i2_pad^0,w,c
  4593  001980  A0D8               	btfss	status,0,c
  4594  001982  EFC5  F00C         	goto	i2u233_41
  4595  001986  EFC7  F00C         	goto	i2u233_40
  4596  00198A                     i2u233_41:
  4597  00198A  EFAC  F00C         	goto	i2l2506
  4598  00198E                     i2u233_40:
  4599  00198E                     
  4600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4601  00198E  0100               	movlb	0	; () banked
  4602  001990  B1CA               	btfsc	_flags& (0+255),0,b
  4603  001992  EFCD  F00C         	goto	i2u234_41
  4604  001996  EFCF  F00C         	goto	i2u234_40
  4605  00199A                     i2u234_41:
  4606  00199A  EFD9  F00C         	goto	i2l2514
  4607  00199E                     i2u234_40:
  4608  00199E                     
  4609                           ; BSR set to: 0
  4610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4611  00199E  C019  F010         	movff	i2pad@buf,i2fputs@s
  4612  0019A2  C01A  F011         	movff	i2pad@buf+1,i2fputs@s+1
  4613  0019A6  C017  F012         	movff	i2pad@fp,i2fputs@fp
  4614  0019AA  C018  F013         	movff	i2pad@fp+1,i2fputs@fp+1
  4615  0019AE  ECD6  F00E         	call	i2_fputs	;wreg free
  4616  0019B2                     i2l2514:
  4617                           
  4618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4619  0019B2  C019  F001         	movff	i2pad@buf,i2strlen@s
  4620  0019B6  C01A  F002         	movff	i2pad@buf+1,i2strlen@s+1
  4621  0019BA  EC56  F00F         	call	i2_strlen	;wreg free
  4622  0019BE  5020               	movf	i2pad@w^0,w,c
  4623  0019C0  2401               	addwf	?i2_strlen^0,w,c
  4624  0019C2  6E17               	movwf	?i2_pad^0,c
  4625  0019C4  5021               	movf	(i2pad@w+1)^0,w,c
  4626  0019C6  2002               	addwfc	(?i2_strlen+1)^0,w,c
  4627  0019C8  6E18               	movwf	(?i2_pad+1)^0,c
  4628  0019CA  0012               	return		;funcret
  4629  0019CC                     __end_ofi2_pad:
  4630                           	opt callstack 0
  4631                           
  4632 ;; *************** function i2_strlen *****************
  4633 ;; Defined at:
  4634 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4637 ;;		 -> dbuf(32), 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  4640 ;;		 -> dbuf(32), 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  2    0[COMRAM] unsigned int 
  4643 ;; Registers used:
  4644 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4650 ;;      Params:         2       0       0       0       0       0       0       0       0
  4651 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4653 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4654 ;;Total ram usage:        4 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; This function calls:
  4657 ;;		Nothing
  4658 ;; This function is called by:
  4659 ;;		i2_pad
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text28
  4664  001EAC                     __ptext28:
  4665                           	opt callstack 0
  4666  001EAC                     i2_strlen:
  4667                           	opt callstack 13
  4668  001EAC  C001  F003         	movff	i2strlen@s,i2strlen@a
  4669  001EB0  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  4670  001EB4  EF5E  F00F         	goto	i2l2384
  4671  001EB8                     i2l2382:
  4672  001EB8  4A01               	infsnz	i2strlen@s^0,f,c
  4673  001EBA  2A02               	incf	(i2strlen@s+1)^0,f,c
  4674  001EBC                     i2l2384:
  4675  001EBC  C001  FFD9         	movff	i2strlen@s,fsr2l
  4676  001EC0  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  4677  001EC4  50DF               	movf	indf2,w,c
  4678  001EC6  A4D8               	btfss	status,2,c
  4679  001EC8  EF68  F00F         	goto	i2u212_41
  4680  001ECC  EF6A  F00F         	goto	i2u212_40
  4681  001ED0                     i2u212_41:
  4682  001ED0  EF5C  F00F         	goto	i2l2382
  4683  001ED4                     i2u212_40:
  4684  001ED4  5003               	movf	i2strlen@a^0,w,c
  4685  001ED6  5C01               	subwf	i2strlen@s^0,w,c
  4686  001ED8  6E01               	movwf	?i2_strlen^0,c
  4687  001EDA  5004               	movf	(i2strlen@a+1)^0,w,c
  4688  001EDC  5802               	subwfb	(i2strlen@s+1)^0,w,c
  4689  001EDE  6E02               	movwf	(?i2_strlen+1)^0,c
  4690  001EE0  0012               	return		;funcret
  4691  001EE2                     __end_ofi2_strlen:
  4692                           	opt callstack 0
  4693                           
  4694 ;; *************** function i2_fputs *****************
  4695 ;; Defined at:
  4696 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4699 ;;		 -> dbuf(32), 
  4700 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4701 ;;		 -> NULL(0), 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  fputs           2   20[COMRAM] int 
  4704 ;;  fputs           1   19[COMRAM] unsigned char 
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  2   15[COMRAM] int 
  4707 ;; Registers used:
  4708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4714 ;;      Params:         4       0       0       0       0       0       0       0       0
  4715 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4717 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4718 ;;Total ram usage:        7 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    5
  4721 ;; This function calls:
  4722 ;;		i2_fputc
  4723 ;; This function is called by:
  4724 ;;		i2_pad
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text29
  4729  001DAC                     __ptext29:
  4730                           	opt callstack 0
  4731  001DAC                     i2_fputs:
  4732                           	opt callstack 8
  4733  001DAC  0E00               	movlw	0
  4734  001DAE  6E16               	movwf	(i2fputs@i+1)^0,c
  4735  001DB0  0E00               	movlw	0
  4736  001DB2  6E15               	movwf	i2fputs@i^0,c
  4737  001DB4  EFE7  F00E         	goto	i2l2378
  4738  001DB8                     i2l2374:
  4739  001DB8  C014  F007         	movff	i2fputs@c,i2fputc@c
  4740  001DBC  6A08               	clrf	(i2fputc@c+1)^0,c
  4741  001DBE  C012  F009         	movff	i2fputs@fp,i2fputc@fp
  4742  001DC2  C013  F00A         	movff	i2fputs@fp+1,i2fputc@fp+1
  4743  001DC6  EC32  F00D         	call	i2_fputc	;wreg free
  4744  001DCA  4A15               	infsnz	i2fputs@i^0,f,c
  4745  001DCC  2A16               	incf	(i2fputs@i+1)^0,f,c
  4746  001DCE                     i2l2378:
  4747  001DCE  5015               	movf	i2fputs@i^0,w,c
  4748  001DD0  2410               	addwf	i2fputs@s^0,w,c
  4749  001DD2  6ED9               	movwf	fsr2l,c
  4750  001DD4  5016               	movf	(i2fputs@i+1)^0,w,c
  4751  001DD6  2011               	addwfc	(i2fputs@s+1)^0,w,c
  4752  001DD8  6EDA               	movwf	fsr2h,c
  4753  001DDA  50DF               	movf	indf2,w,c
  4754  001DDC  6E14               	movwf	i2fputs@c^0,c
  4755  001DDE  5014               	movf	i2fputs@c^0,w,c
  4756  001DE0  A4D8               	btfss	status,2,c
  4757  001DE2  EFF5  F00E         	goto	i2u211_41
  4758  001DE6  EFF7  F00E         	goto	i2u211_40
  4759  001DEA                     i2u211_41:
  4760  001DEA  EFDC  F00E         	goto	i2l2374
  4761  001DEE                     i2u211_40:
  4762  001DEE  0012               	return		;funcret
  4763  001DF0                     __end_ofi2_fputs:
  4764                           	opt callstack 0
  4765                           
  4766 ;; *************** function i2_fputc *****************
  4767 ;; Defined at:
  4768 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  c               2    6[COMRAM] int 
  4771 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4772 ;;		 -> NULL(0), 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;		None
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  2    6[COMRAM] int 
  4777 ;; Registers used:
  4778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4784 ;;      Params:         4       0       0       0       0       0       0       0       0
  4785 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4786 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4787 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4788 ;;Total ram usage:        9 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    4
  4791 ;; This function calls:
  4792 ;;		i2_putch
  4793 ;; This function is called by:
  4794 ;;		i2_pad
  4795 ;;		i2_vfpfcnvrt
  4796 ;;		i2_fputs
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text30
  4801  001A64                     __ptext30:
  4802                           	opt callstack 0
  4803  001A64                     i2_fputc:
  4804                           	opt callstack 11
  4805  001A64  5009               	movf	i2fputc@fp^0,w,c
  4806  001A66  100A               	iorwf	(i2fputc@fp+1)^0,w,c
  4807  001A68  B4D8               	btfsc	status,2,c
  4808  001A6A  EF39  F00D         	goto	i2u205_41
  4809  001A6E  EF3B  F00D         	goto	i2u205_40
  4810  001A72                     i2u205_41:
  4811  001A72  EF44  F00D         	goto	i2l2344
  4812  001A76                     i2u205_40:
  4813  001A76  5009               	movf	i2fputc@fp^0,w,c
  4814  001A78  100A               	iorwf	(i2fputc@fp+1)^0,w,c
  4815  001A7A  A4D8               	btfss	status,2,c
  4816  001A7C  EF42  F00D         	goto	i2u206_41
  4817  001A80  EF44  F00D         	goto	i2u206_40
  4818  001A84                     i2u206_41:
  4819  001A84  EF49  F00D         	goto	i2l2346
  4820  001A88                     i2u206_40:
  4821  001A88                     i2l2344:
  4822  001A88  5007               	movf	i2fputc@c^0,w,c
  4823  001A8A  EC4F  F010         	call	i2_putch
  4824  001A8E  EF7C  F00D         	goto	i2l869
  4825  001A92                     i2l2346:
  4826  001A92  EE20 F004          	lfsr	2,4
  4827  001A96  5009               	movf	i2fputc@fp^0,w,c
  4828  001A98  26D9               	addwf	fsr2l,f,c
  4829  001A9A  500A               	movf	(i2fputc@fp+1)^0,w,c
  4830  001A9C  22DA               	addwfc	fsr2h,f,c
  4831  001A9E  50DE               	movf	postinc2,w,c
  4832  001AA0  10DE               	iorwf	postinc2,w,c
  4833  001AA2  B4D8               	btfsc	status,2,c
  4834  001AA4  EF56  F00D         	goto	i2u207_41
  4835  001AA8  EF58  F00D         	goto	i2u207_40
  4836  001AAC                     i2u207_41:
  4837  001AAC  EF73  F00D         	goto	i2l2350
  4838  001AB0                     i2u207_40:
  4839  001AB0  EE20 F004          	lfsr	2,4
  4840  001AB4  5009               	movf	i2fputc@fp^0,w,c
  4841  001AB6  26D9               	addwf	fsr2l,f,c
  4842  001AB8  500A               	movf	(i2fputc@fp+1)^0,w,c
  4843  001ABA  22DA               	addwfc	fsr2h,f,c
  4844  001ABC  EE10 F002          	lfsr	1,2
  4845  001AC0  5009               	movf	i2fputc@fp^0,w,c
  4846  001AC2  26E1               	addwf	fsr1l,f,c
  4847  001AC4  500A               	movf	(i2fputc@fp+1)^0,w,c
  4848  001AC6  22E2               	addwfc	fsr1h,f,c
  4849  001AC8  50DE               	movf	postinc2,w,c
  4850  001ACA  5CE6               	subwf	postinc1,w,c
  4851  001ACC  50E6               	movf	postinc1,w,c
  4852  001ACE  0A80               	xorlw	128
  4853  001AD0  6E0F               	movwf	(??i2_fputc+4)^0,c
  4854  001AD2  50DE               	movf	postinc2,w,c
  4855  001AD4  0A80               	xorlw	128
  4856  001AD6  580F               	subwfb	(??i2_fputc+4)^0,w,c
  4857  001AD8  B0D8               	btfsc	status,0,c
  4858  001ADA  EF71  F00D         	goto	i2u208_41
  4859  001ADE  EF73  F00D         	goto	i2u208_40
  4860  001AE2                     i2u208_41:
  4861  001AE2  EF7C  F00D         	goto	i2l869
  4862  001AE6                     i2u208_40:
  4863  001AE6                     i2l2350:
  4864  001AE6  EE20 F002          	lfsr	2,2
  4865  001AEA  5009               	movf	i2fputc@fp^0,w,c
  4866  001AEC  26D9               	addwf	fsr2l,f,c
  4867  001AEE  500A               	movf	(i2fputc@fp+1)^0,w,c
  4868  001AF0  22DA               	addwfc	fsr2h,f,c
  4869  001AF2  2ADE               	incf	postinc2,f,c
  4870  001AF4  0E00               	movlw	0
  4871  001AF6  22DD               	addwfc	postdec2,f,c
  4872  001AF8                     i2l869:
  4873  001AF8  0012               	return		;funcret
  4874  001AFA                     __end_ofi2_fputc:
  4875                           	opt callstack 0
  4876                           
  4877 ;; *************** function i2_putch *****************
  4878 ;; Defined at:
  4879 ;;		line 29 in file "main.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;  data            1    wreg     unsigned char 
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;  data            1    5[COMRAM] unsigned char 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  1    wreg      void 
  4886 ;; Registers used:
  4887 ;;		wreg, status,2, status,0, cstack
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4893 ;;      Params:         0       0       0       0       0       0       0       0       0
  4894 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4896 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4897 ;;Total ram usage:        1 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; Hardware stack levels required when called:    3
  4900 ;; This function calls:
  4901 ;;		i2_escreve_lcd
  4902 ;; This function is called by:
  4903 ;;		i2_fputc
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text31
  4908  00209E                     __ptext31:
  4909                           	opt callstack 0
  4910  00209E                     i2_putch:
  4911                           	opt callstack 11
  4912                           
  4913                           ;incstack = 0
  4914                           ;i2putch@data stored from wreg
  4915  00209E  6E06               	movwf	i2putch@data^0,c
  4916  0020A0                     
  4917                           ;main.c: 29: void putch(char data);main.c: 30: {;main.c: 31:     escreve_lcd(data);
  4918  0020A0  5006               	movf	i2putch@data^0,w,c
  4919  0020A2  EC48  F010         	call	i2_escreve_lcd
  4920  0020A6  0012               	return		;funcret
  4921  0020A8                     __end_ofi2_putch:
  4922                           	opt callstack 0
  4923                           
  4924 ;; *************** function i2_escreve_lcd *****************
  4925 ;; Defined at:
  4926 ;;		line 24 in file "lcd.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  c               1    wreg     unsigned char 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  c               1    4[COMRAM] unsigned char 
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      void 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, status,0, cstack
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4940 ;;      Params:         0       0       0       0       0       0       0       0       0
  4941 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4943 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4944 ;;Total ram usage:        1 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:    2
  4947 ;; This function calls:
  4948 ;;		i2_envia_byte_lcd
  4949 ;; This function is called by:
  4950 ;;		i2_putch
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text32
  4955  002090                     __ptext32:
  4956                           	opt callstack 0
  4957  002090                     i2_escreve_lcd:
  4958                           	opt callstack 11
  4959                           
  4960                           ;incstack = 0
  4961                           ;i2escreve_lcd@c stored from wreg
  4962  002090  6E05               	movwf	i2escreve_lcd@c^0,c
  4963  002092  C005  F003         	movff	i2escreve_lcd@c,i2envia_byte_lcd@dado
  4964  002096  0E01               	movlw	1
  4965  002098  ECB4  F00F         	call	i2_envia_byte_lcd
  4966  00209C  0012               	return		;funcret
  4967  00209E                     __end_ofi2_escreve_lcd:
  4968                           	opt callstack 0
  4969                           
  4970 ;; *************** function i2_abs *****************
  4971 ;; Defined at:
  4972 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  a               2   18[COMRAM] int 
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;		None
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  2   18[COMRAM] int 
  4979 ;; Registers used:
  4980 ;;		wreg, status,2, status,0
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4986 ;;      Params:         2       0       0       0       0       0       0       0       0
  4987 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4988 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4989 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4990 ;;Total ram usage:        4 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		i2_dtoa
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text33
  5000  001E32                     __ptext33:
  5001                           	opt callstack 0
  5002  001E32                     i2_abs:
  5003                           	opt callstack 14
  5004  001E32  BE14               	btfsc	(i2abs@a+1)^0,7,c
  5005  001E34  EF26  F00F         	goto	i2u248_40
  5006  001E38  5014               	movf	(i2abs@a+1)^0,w,c
  5007  001E3A  E106               	bnz	i2u248_41
  5008  001E3C  0413               	decf	i2abs@a^0,w,c
  5009  001E3E  B0D8               	btfsc	status,0,c
  5010  001E40  EF24  F00F         	goto	i2u248_41
  5011  001E44  EF26  F00F         	goto	i2u248_40
  5012  001E48                     i2u248_41:
  5013  001E48  EF34  F00F         	goto	i2l854
  5014  001E4C                     i2u248_40:
  5015  001E4C  C013  F015         	movff	i2abs@a,??i2_abs
  5016  001E50  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  5017  001E54  1E15               	comf	??i2_abs^0,f,c
  5018  001E56  1E16               	comf	(??i2_abs+1)^0,f,c
  5019  001E58  4A15               	infsnz	??i2_abs^0,f,c
  5020  001E5A  2A16               	incf	(??i2_abs+1)^0,f,c
  5021  001E5C  C015  F013         	movff	??i2_abs,?i2_abs
  5022  001E60  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  5023  001E64  EF38  F00F         	goto	i2l857
  5024  001E68                     i2l854:
  5025  001E68  C013  F013         	movff	i2abs@a,?i2_abs
  5026  001E6C  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  5027  001E70                     i2l857:
  5028  001E70  0012               	return		;funcret
  5029  001E72                     __end_ofi2_abs:
  5030                           	opt callstack 0
  5031                           
  5032 ;; *************** function i2___aomod *****************
  5033 ;; Defined at:
  5034 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  dividend        8    0[COMRAM] long long 
  5037 ;;  divisor         8    8[COMRAM] long long 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  __aomod         1   17[COMRAM] unsigned char 
  5040 ;;  __aomod         1   16[COMRAM] unsigned char 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  8    0[COMRAM] long long 
  5043 ;; Registers used:
  5044 ;;		wreg, status,2, status,0
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5050 ;;      Params:        16       0       0       0       0       0       0       0       0
  5051 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5053 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5054 ;;Total ram usage:       18 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		i2_dtoa
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text34
  5064  0015BA                     __ptext34:
  5065                           	opt callstack 0
  5066  0015BA                     i2___aomod:
  5067                           	opt callstack 14
  5068  0015BA  0E00               	movlw	0
  5069  0015BC  6E12               	movwf	i2___aomod@sign^0,c
  5070  0015BE  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
  5071  0015C0  EFE6  F00A         	goto	i2u242_40
  5072  0015C4  EFE4  F00A         	goto	i2u242_41
  5073  0015C8                     i2u242_41:
  5074  0015C8  EFF8  F00A         	goto	i2l2570
  5075  0015CC                     i2u242_40:
  5076  0015CC  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  5077  0015CE  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  5078  0015D0  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  5079  0015D2  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  5080  0015D4  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  5081  0015D6  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  5082  0015D8  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  5083  0015DA  6C01               	negf	i2___aomod@dividend^0,c
  5084  0015DC  0E00               	movlw	0
  5085  0015DE  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  5086  0015E0  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  5087  0015E2  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  5088  0015E4  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  5089  0015E6  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  5090  0015E8  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  5091  0015EA  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  5092  0015EC  0E01               	movlw	1
  5093  0015EE  6E12               	movwf	i2___aomod@sign^0,c
  5094  0015F0                     i2l2570:
  5095  0015F0  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
  5096  0015F2  EFFF  F00A         	goto	i2u243_40
  5097  0015F6  EFFD  F00A         	goto	i2u243_41
  5098  0015FA                     i2u243_41:
  5099  0015FA  EF0F  F00B         	goto	i2l2574
  5100  0015FE                     i2u243_40:
  5101  0015FE  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
  5102  001600  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
  5103  001602  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
  5104  001604  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
  5105  001606  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
  5106  001608  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
  5107  00160A  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
  5108  00160C  6C09               	negf	i2___aomod@divisor^0,c
  5109  00160E  0E00               	movlw	0
  5110  001610  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
  5111  001612  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
  5112  001614  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
  5113  001616  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
  5114  001618  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
  5115  00161A  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
  5116  00161C  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
  5117  00161E                     i2l2574:
  5118  00161E  5009               	movf	i2___aomod@divisor^0,w,c
  5119  001620  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
  5120  001622  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
  5121  001624  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
  5122  001626  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
  5123  001628  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
  5124  00162A  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
  5125  00162C  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
  5126  00162E  B4D8               	btfsc	status,2,c
  5127  001630  EF1C  F00B         	goto	i2u244_41
  5128  001634  EF1E  F00B         	goto	i2u244_40
  5129  001638                     i2u244_41:
  5130  001638  EF66  F00B         	goto	i2l2590
  5131  00163C                     i2u244_40:
  5132  00163C  0E01               	movlw	1
  5133  00163E  6E11               	movwf	i2___aomod@counter^0,c
  5134  001640  EF2C  F00B         	goto	i2l2580
  5135  001644                     i2l2578:
  5136  001644  90D8               	bcf	status,0,c
  5137  001646  3609               	rlcf	i2___aomod@divisor^0,f,c
  5138  001648  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
  5139  00164A  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
  5140  00164C  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
  5141  00164E  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
  5142  001650  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
  5143  001652  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
  5144  001654  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
  5145  001656  2A11               	incf	i2___aomod@counter^0,f,c
  5146  001658                     i2l2580:
  5147  001658  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
  5148  00165A  EF31  F00B         	goto	i2u245_41
  5149  00165E  EF33  F00B         	goto	i2u245_40
  5150  001662                     i2u245_41:
  5151  001662  EF22  F00B         	goto	i2l2578
  5152  001666                     i2u245_40:
  5153  001666                     i2l2582:
  5154  001666  5009               	movf	i2___aomod@divisor^0,w,c
  5155  001668  5C01               	subwf	i2___aomod@dividend^0,w,c
  5156  00166A  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  5157  00166C  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
  5158  00166E  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  5159  001670  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
  5160  001672  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  5161  001674  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
  5162  001676  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  5163  001678  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
  5164  00167A  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  5165  00167C  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
  5166  00167E  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  5167  001680  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
  5168  001682  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  5169  001684  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
  5170  001686  A0D8               	btfss	status,0,c
  5171  001688  EF48  F00B         	goto	i2u246_41
  5172  00168C  EF4A  F00B         	goto	i2u246_40
  5173  001690                     i2u246_41:
  5174  001690  EF5A  F00B         	goto	i2l2586
  5175  001694                     i2u246_40:
  5176  001694  5009               	movf	i2___aomod@divisor^0,w,c
  5177  001696  5E01               	subwf	i2___aomod@dividend^0,f,c
  5178  001698  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  5179  00169A  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
  5180  00169C  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  5181  00169E  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
  5182  0016A0  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  5183  0016A2  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
  5184  0016A4  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  5185  0016A6  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
  5186  0016A8  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  5187  0016AA  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
  5188  0016AC  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  5189  0016AE  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
  5190  0016B0  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  5191  0016B2  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
  5192  0016B4                     i2l2586:
  5193  0016B4  90D8               	bcf	status,0,c
  5194  0016B6  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
  5195  0016B8  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
  5196  0016BA  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
  5197  0016BC  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
  5198  0016BE  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
  5199  0016C0  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
  5200  0016C2  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
  5201  0016C4  3209               	rrcf	i2___aomod@divisor^0,f,c
  5202  0016C6  2E11               	decfsz	i2___aomod@counter^0,f,c
  5203  0016C8  EF33  F00B         	goto	i2l2582
  5204  0016CC                     i2l2590:
  5205  0016CC  5012               	movf	i2___aomod@sign^0,w,c
  5206  0016CE  B4D8               	btfsc	status,2,c
  5207  0016D0  EF6C  F00B         	goto	i2u247_41
  5208  0016D4  EF6E  F00B         	goto	i2u247_40
  5209  0016D8                     i2u247_41:
  5210  0016D8  EF7E  F00B         	goto	i2l2594
  5211  0016DC                     i2u247_40:
  5212  0016DC  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  5213  0016DE  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  5214  0016E0  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  5215  0016E2  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  5216  0016E4  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  5217  0016E6  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  5218  0016E8  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  5219  0016EA  6C01               	negf	i2___aomod@dividend^0,c
  5220  0016EC  0E00               	movlw	0
  5221  0016EE  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  5222  0016F0  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  5223  0016F2  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  5224  0016F4  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  5225  0016F6  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  5226  0016F8  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  5227  0016FA  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  5228  0016FC                     i2l2594:
  5229  0016FC  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  5230  001700  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  5231  001704  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  5232  001708  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  5233  00170C  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  5234  001710  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  5235  001714  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  5236  001718  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  5237  00171C  0012               	return		;funcret
  5238  00171E                     __end_ofi2___aomod:
  5239                           	opt callstack 0
  5240                           
  5241 ;; *************** function i2___aodiv *****************
  5242 ;; Defined at:
  5243 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;  dividend        8    0[COMRAM] long long 
  5246 ;;  divisor         8    8[COMRAM] long long 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  __aodiv         8   18[COMRAM] long long 
  5249 ;;  __aodiv         1   17[COMRAM] unsigned char 
  5250 ;;  __aodiv         1   16[COMRAM] unsigned char 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  8    0[COMRAM] long long 
  5253 ;; Registers used:
  5254 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5260 ;;      Params:        16       0       0       0       0       0       0       0       0
  5261 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5263 ;;      Totals:        26       0       0       0       0       0       0       0       0
  5264 ;;Total ram usage:       26 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; This function calls:
  5267 ;;		Nothing
  5268 ;; This function is called by:
  5269 ;;		i2_dtoa
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           	psect	text35
  5274  0012CC                     __ptext35:
  5275                           	opt callstack 0
  5276  0012CC                     i2___aodiv:
  5277                           	opt callstack 14
  5278  0012CC  0E00               	movlw	0
  5279  0012CE  6E12               	movwf	i2___aodiv@sign^0,c
  5280  0012D0  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
  5281  0012D2  EF6F  F009         	goto	i2u235_40
  5282  0012D6  EF6D  F009         	goto	i2u235_41
  5283  0012DA                     i2u235_41:
  5284  0012DA  EF81  F009         	goto	i2l2526
  5285  0012DE                     i2u235_40:
  5286  0012DE  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
  5287  0012E0  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
  5288  0012E2  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
  5289  0012E4  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
  5290  0012E6  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
  5291  0012E8  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
  5292  0012EA  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
  5293  0012EC  6C09               	negf	i2___aodiv@divisor^0,c
  5294  0012EE  0E00               	movlw	0
  5295  0012F0  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
  5296  0012F2  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
  5297  0012F4  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
  5298  0012F6  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
  5299  0012F8  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
  5300  0012FA  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
  5301  0012FC  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
  5302  0012FE  0E01               	movlw	1
  5303  001300  6E12               	movwf	i2___aodiv@sign^0,c
  5304  001302                     i2l2526:
  5305  001302  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
  5306  001304  EF88  F009         	goto	i2u236_40
  5307  001308  EF86  F009         	goto	i2u236_41
  5308  00130C                     i2u236_41:
  5309  00130C  EF9A  F009         	goto	i2l2532
  5310  001310                     i2u236_40:
  5311  001310  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
  5312  001312  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
  5313  001314  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
  5314  001316  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
  5315  001318  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
  5316  00131A  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
  5317  00131C  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
  5318  00131E  6C01               	negf	i2___aodiv@dividend^0,c
  5319  001320  0E00               	movlw	0
  5320  001322  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
  5321  001324  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
  5322  001326  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
  5323  001328  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
  5324  00132A  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
  5325  00132C  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
  5326  00132E  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
  5327  001330  0E01               	movlw	1
  5328  001332  1A12               	xorwf	i2___aodiv@sign^0,f,c
  5329  001334                     i2l2532:
  5330  001334  EE20  F013         	lfsr	2,i2___aodiv@quotient
  5331  001338  0E07               	movlw	7
  5332  00133A                     i2u237_41:
  5333  00133A  6ADE               	clrf	postinc2,c
  5334  00133C  06E8               	decf	wreg,f,c
  5335  00133E  E2FD               	bc	i2u237_41
  5336  001340  5009               	movf	i2___aodiv@divisor^0,w,c
  5337  001342  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
  5338  001344  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
  5339  001346  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
  5340  001348  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
  5341  00134A  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
  5342  00134C  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
  5343  00134E  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
  5344  001350  B4D8               	btfsc	status,2,c
  5345  001352  EFAD  F009         	goto	i2u238_41
  5346  001356  EFAF  F009         	goto	i2u238_40
  5347  00135A                     i2u238_41:
  5348  00135A  EF01  F00A         	goto	i2l2554
  5349  00135E                     i2u238_40:
  5350  00135E  0E01               	movlw	1
  5351  001360  6E11               	movwf	i2___aodiv@counter^0,c
  5352  001362  EFBD  F009         	goto	i2l2540
  5353  001366                     i2l2538:
  5354  001366  90D8               	bcf	status,0,c
  5355  001368  3609               	rlcf	i2___aodiv@divisor^0,f,c
  5356  00136A  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
  5357  00136C  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
  5358  00136E  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
  5359  001370  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
  5360  001372  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
  5361  001374  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
  5362  001376  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
  5363  001378  2A11               	incf	i2___aodiv@counter^0,f,c
  5364  00137A                     i2l2540:
  5365  00137A  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
  5366  00137C  EFC2  F009         	goto	i2u239_41
  5367  001380  EFC4  F009         	goto	i2u239_40
  5368  001384                     i2u239_41:
  5369  001384  EFB3  F009         	goto	i2l2538
  5370  001388                     i2u239_40:
  5371  001388                     i2l2542:
  5372  001388  90D8               	bcf	status,0,c
  5373  00138A  3613               	rlcf	i2___aodiv@quotient^0,f,c
  5374  00138C  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
  5375  00138E  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
  5376  001390  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
  5377  001392  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
  5378  001394  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
  5379  001396  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
  5380  001398  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
  5381  00139A  5009               	movf	i2___aodiv@divisor^0,w,c
  5382  00139C  5C01               	subwf	i2___aodiv@dividend^0,w,c
  5383  00139E  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  5384  0013A0  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
  5385  0013A2  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  5386  0013A4  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
  5387  0013A6  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  5388  0013A8  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
  5389  0013AA  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  5390  0013AC  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
  5391  0013AE  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  5392  0013B0  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
  5393  0013B2  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  5394  0013B4  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
  5395  0013B6  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  5396  0013B8  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
  5397  0013BA  A0D8               	btfss	status,0,c
  5398  0013BC  EFE2  F009         	goto	i2u240_41
  5399  0013C0  EFE4  F009         	goto	i2u240_40
  5400  0013C4                     i2u240_41:
  5401  0013C4  EFF5  F009         	goto	i2l2550
  5402  0013C8                     i2u240_40:
  5403  0013C8  5009               	movf	i2___aodiv@divisor^0,w,c
  5404  0013CA  5E01               	subwf	i2___aodiv@dividend^0,f,c
  5405  0013CC  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  5406  0013CE  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
  5407  0013D0  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  5408  0013D2  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
  5409  0013D4  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  5410  0013D6  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
  5411  0013D8  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  5412  0013DA  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
  5413  0013DC  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  5414  0013DE  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
  5415  0013E0  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  5416  0013E2  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
  5417  0013E4  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  5418  0013E6  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
  5419  0013E8  8013               	bsf	i2___aodiv@quotient^0,0,c
  5420  0013EA                     i2l2550:
  5421  0013EA  90D8               	bcf	status,0,c
  5422  0013EC  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
  5423  0013EE  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
  5424  0013F0  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
  5425  0013F2  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
  5426  0013F4  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
  5427  0013F6  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
  5428  0013F8  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
  5429  0013FA  3209               	rrcf	i2___aodiv@divisor^0,f,c
  5430  0013FC  2E11               	decfsz	i2___aodiv@counter^0,f,c
  5431  0013FE  EFC4  F009         	goto	i2l2542
  5432  001402                     i2l2554:
  5433  001402  5012               	movf	i2___aodiv@sign^0,w,c
  5434  001404  B4D8               	btfsc	status,2,c
  5435  001406  EF07  F00A         	goto	i2u241_41
  5436  00140A  EF09  F00A         	goto	i2u241_40
  5437  00140E                     i2u241_41:
  5438  00140E  EF19  F00A         	goto	i2l2558
  5439  001412                     i2u241_40:
  5440  001412  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
  5441  001414  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
  5442  001416  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
  5443  001418  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
  5444  00141A  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
  5445  00141C  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
  5446  00141E  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
  5447  001420  6C13               	negf	i2___aodiv@quotient^0,c
  5448  001422  0E00               	movlw	0
  5449  001424  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
  5450  001426  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
  5451  001428  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
  5452  00142A  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
  5453  00142C  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
  5454  00142E  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
  5455  001430  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
  5456  001432                     i2l2558:
  5457  001432  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  5458  001436  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  5459  00143A  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  5460  00143E  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  5461  001442  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  5462  001446  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  5463  00144A  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  5464  00144E  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  5465  001452  0012               	return		;funcret
  5466  001454                     __end_ofi2___aodiv:
  5467                           	opt callstack 0
  5468                           
  5469 ;; *************** function i2_limpa_lcd *****************
  5470 ;; Defined at:
  5471 ;;		line 26 in file "lcd.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		wreg, status,2, status,0, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5485 ;;      Params:         0       0       0       0       0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5487 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5488 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5489 ;;Total ram usage:        1 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    2
  5492 ;; This function calls:
  5493 ;;		i2_envia_byte_lcd
  5494 ;; This function is called by:
  5495 ;;		_isr
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text36
  5500  002040                     __ptext36:
  5501                           	opt callstack 0
  5502  002040                     i2_limpa_lcd:
  5503                           	opt callstack 16
  5504  002040                     
  5505                           ;lcd.c: 28:   envia_byte_lcd(0, 0x01);
  5506  002040  0E01               	movlw	1
  5507  002042  6E03               	movwf	i2envia_byte_lcd@dado^0,c
  5508  002044  0E00               	movlw	0
  5509  002046  ECB4  F00F         	call	i2_envia_byte_lcd
  5510  00204A                     
  5511                           ;lcd.c: 29:   _delay((unsigned long)((2)*(4000000/4000.0)));
  5512  00204A  0E03               	movlw	3
  5513  00204C  6E05               	movwf	??i2_limpa_lcd^0,c
  5514  00204E  0E98               	movlw	152
  5515  002050                     i2u305_47:
  5516  002050  2EE8               	decfsz	wreg,f,c
  5517  002052  D7FE               	bra	i2u305_47
  5518  002054  2E05               	decfsz	??i2_limpa_lcd^0,f,c
  5519  002056  D7FC               	bra	i2u305_47
  5520  002058  0012               	return		;funcret
  5521  00205A                     __end_ofi2_limpa_lcd:
  5522                           	opt callstack 0
  5523                           
  5524 ;; *************** function i2_envia_byte_lcd *****************
  5525 ;; Defined at:
  5526 ;;		line 16 in file "lcd.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  endereco        1    wreg     unsigned char 
  5529 ;;  dado            1    2[COMRAM] unsigned char 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  endereco        1    3[COMRAM] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      void 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2, status,0, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5541 ;;      Params:         1       0       0       0       0       0       0       0       0
  5542 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5544 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5545 ;;Total ram usage:        2 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:    1
  5548 ;; This function calls:
  5549 ;;		i2_envia_nibble_lcd
  5550 ;; This function is called by:
  5551 ;;		i2_escreve_lcd
  5552 ;;		i2_limpa_lcd
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text37
  5557  001F68                     __ptext37:
  5558                           	opt callstack 0
  5559  001F68                     i2_envia_byte_lcd:
  5560                           	opt callstack 11
  5561                           
  5562                           ;incstack = 0
  5563                           ;i2envia_byte_lcd@endereco stored from wreg
  5564  001F68  6E04               	movwf	i2envia_byte_lcd@endereco^0,c
  5565  001F6A                     
  5566                           ;lcd.c: 16: void envia_byte_lcd(char endereco, char dado);lcd.c: 17: {;lcd.c: 18:   PORT
      +                          Dbits.RD0 = endereco;
  5567  001F6A  B004               	btfsc	i2envia_byte_lcd@endereco^0,0,c
  5568  001F6C  D002               	bra	i2u200_45
  5569  001F6E  9083               	bcf	131,0,c	;volatile
  5570  001F70  D001               	bra	i2u200_46
  5571  001F72                     i2u200_45:
  5572  001F72  8083               	bsf	131,0,c	;volatile
  5573  001F74                     i2u200_46:
  5574  001F74                     
  5575                           ;lcd.c: 19:   _delay((unsigned long)((5)*(4000000/4000000.0)));
  5576  001F74  D000               	nop2		;2 cycle nop
  5577  001F76  D000               	nop2		;2 cycle nop
  5578  001F78  F000               	nop	
  5579  001F7A                     
  5580                           ;lcd.c: 20:   envia_nibble_lcd(dado >> 4);
  5581  001F7A  3803               	swapf	i2envia_byte_lcd@dado^0,w,c
  5582  001F7C  0B0F               	andlw	15
  5583  001F7E  EC0C  F00E         	call	i2_envia_nibble_lcd
  5584  001F82                     
  5585                           ;lcd.c: 21:   envia_nibble_lcd(dado & 0x0f);
  5586  001F82  5003               	movf	i2envia_byte_lcd@dado^0,w,c
  5587  001F84  0B0F               	andlw	15
  5588  001F86  EC0C  F00E         	call	i2_envia_nibble_lcd
  5589  001F8A  0012               	return		;funcret
  5590  001F8C                     __end_ofi2_envia_byte_lcd:
  5591                           	opt callstack 0
  5592                           
  5593 ;; *************** function i2_envia_nibble_lcd *****************
  5594 ;; Defined at:
  5595 ;;		line 3 in file "lcd.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  dado            1    wreg     unsigned char 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  dado            1    1[COMRAM] unsigned char 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      void 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5609 ;;      Params:         0       0       0       0       0       0       0       0       0
  5610 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5611 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5612 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5613 ;;Total ram usage:        2 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; This function calls:
  5616 ;;		Nothing
  5617 ;; This function is called by:
  5618 ;;		i2_envia_byte_lcd
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           	psect	text38
  5623  001C18                     __ptext38:
  5624                           	opt callstack 0
  5625  001C18                     i2_envia_nibble_lcd:
  5626                           	opt callstack 11
  5627                           
  5628                           ;incstack = 0
  5629                           ;i2envia_nibble_lcd@dado stored from wreg
  5630  001C18  6E02               	movwf	i2envia_nibble_lcd@dado^0,c
  5631  001C1A                     
  5632                           ;lcd.c: 3: void envia_nibble_lcd(char dado);lcd.c: 4: {;lcd.c: 5:   PORTDbits.RD1 = 1;
  5633  001C1A  8283               	bsf	131,1,c	;volatile
  5634  001C1C                     
  5635                           ;lcd.c: 6:   PORTDbits.RD4 = dado & 0x01;
  5636  001C1C  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  5637  001C20  0E01               	movlw	1
  5638  001C22  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  5639  001C24  3A01               	swapf	??i2_envia_nibble_lcd^0,f,c
  5640  001C26  5083               	movf	131,w,c	;volatile
  5641  001C28  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5642  001C2A  0BEF               	andlw	-17
  5643  001C2C  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5644  001C2E  6E83               	movwf	131,c	;volatile
  5645                           
  5646                           ;lcd.c: 7:   PORTDbits.RD5 = (dado >> 1) & 0x01;
  5647  001C30  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  5648  001C34  90D8               	bcf	status,0,c
  5649  001C36  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5650  001C38  0E01               	movlw	1
  5651  001C3A  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  5652  001C3C  3A01               	swapf	??i2_envia_nibble_lcd^0,f,c
  5653  001C3E  4601               	rlncf	??i2_envia_nibble_lcd^0,f,c
  5654  001C40  5083               	movf	131,w,c	;volatile
  5655  001C42  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5656  001C44  0BDF               	andlw	-33
  5657  001C46  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5658  001C48  6E83               	movwf	131,c	;volatile
  5659                           
  5660                           ;lcd.c: 8:   PORTDbits.RD6 = (dado >> 2) & 0x01;
  5661  001C4A  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  5662  001C4E  90D8               	bcf	status,0,c
  5663  001C50  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5664  001C52  90D8               	bcf	status,0,c
  5665  001C54  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5666  001C56  0E01               	movlw	1
  5667  001C58  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  5668  001C5A  3A01               	swapf	??i2_envia_nibble_lcd^0,f,c
  5669  001C5C  4601               	rlncf	??i2_envia_nibble_lcd^0,f,c
  5670  001C5E  4601               	rlncf	??i2_envia_nibble_lcd^0,f,c
  5671  001C60  5083               	movf	131,w,c	;volatile
  5672  001C62  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5673  001C64  0BBF               	andlw	-65
  5674  001C66  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5675  001C68  6E83               	movwf	131,c	;volatile
  5676                           
  5677                           ;lcd.c: 9:   PORTDbits.RD7 = (dado >> 3) & 0x01;
  5678  001C6A  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  5679  001C6E  90D8               	bcf	status,0,c
  5680  001C70  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5681  001C72  90D8               	bcf	status,0,c
  5682  001C74  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5683  001C76  90D8               	bcf	status,0,c
  5684  001C78  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5685  001C7A  0E01               	movlw	1
  5686  001C7C  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  5687  001C7E  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5688  001C80  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5689  001C82  5083               	movf	131,w,c	;volatile
  5690  001C84  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5691  001C86  0B7F               	andlw	-129
  5692  001C88  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5693  001C8A  6E83               	movwf	131,c	;volatile
  5694  001C8C                     
  5695                           ;lcd.c: 11:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  5696  001C8C  0E10               	movlw	16
  5697  001C8E                     i2u306_47:
  5698  001C8E  2EE8               	decfsz	wreg,f,c
  5699  001C90  D7FE               	bra	i2u306_47
  5700  001C92  D000               	nop2	
  5701  001C94                     
  5702                           ;lcd.c: 12:   PORTDbits.RD1 = 0;
  5703  001C94  9283               	bcf	131,1,c	;volatile
  5704  001C96                     
  5705                           ;lcd.c: 13:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  5706  001C96  0E10               	movlw	16
  5707  001C98                     i2u307_47:
  5708  001C98  2EE8               	decfsz	wreg,f,c
  5709  001C9A  D7FE               	bra	i2u307_47
  5710  001C9C  D000               	nop2	
  5711  001C9E  0012               	return		;funcret
  5712  001CA0                     __end_ofi2_envia_nibble_lcd:
  5713                           	opt callstack 0
  5714                           
  5715 ;; *************** function _clearInterruptFlags *****************
  5716 ;; Defined at:
  5717 ;;		line 124 in file "main.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;		None
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;		None
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  1    wreg      void 
  5724 ;; Registers used:
  5725 ;;		None
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5731 ;;      Params:         0       0       0       0       0       0       0       0       0
  5732 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5734 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5735 ;;Total ram usage:        0 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; This function calls:
  5738 ;;		Nothing
  5739 ;; This function is called by:
  5740 ;;		_isr
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text39
  5745  0020A8                     __ptext39:
  5746                           	opt callstack 0
  5747  0020A8                     _clearInterruptFlags:
  5748                           	opt callstack 18
  5749  0020A8                     
  5750                           ;main.c: 125:     TMR2IF = 0;
  5751  0020A8  929E               	bcf	3998,1,c	;volatile
  5752                           
  5753                           ;main.c: 126:     INTCONbits.INT0IF = 0;
  5754  0020AA  92F2               	bcf	242,1,c	;volatile
  5755                           
  5756                           ;main.c: 127:     INTCON3bits.INT1IF = 0;
  5757  0020AC  90F0               	bcf	240,0,c	;volatile
  5758                           
  5759                           ;main.c: 128:     INTCON3bits.INT2IF = 0;
  5760  0020AE  92F0               	bcf	240,1,c	;volatile
  5761  0020B0  0012               	return		;funcret
  5762  0020B2                     __end_of_clearInterruptFlags:
  5763                           	opt callstack 0
  5764                           
  5765                           	psect	rparam
  5766  0000                     
  5767                           	psect	temp
  5768  00005E                     btemp:
  5769                           	opt callstack 0
  5770  00005E                     	ds	1
  5771  0000                     int$flags	set	btemp
  5772  0000                     wtemp8	set	btemp+1
  5773  0000                     ttemp5	set	btemp+1
  5774  0000                     ttemp6	set	btemp+4
  5775  0000                     ttemp7	set	btemp+8
  5776                           tosu	equ	0xFFF
  5777                           tosh	equ	0xFFE
  5778                           tosl	equ	0xFFD
  5779                           stkptr	equ	0xFFC
  5780                           pclatu	equ	0xFFB
  5781                           pclath	equ	0xFFA
  5782                           pcl	equ	0xFF9
  5783                           tblptru	equ	0xFF8
  5784                           tblptrh	equ	0xFF7
  5785                           tblptrl	equ	0xFF6
  5786                           tablat	equ	0xFF5
  5787                           prodh	equ	0xFF4
  5788                           prodl	equ	0xFF3
  5789                           indf0	equ	0xFEF
  5790                           postinc0	equ	0xFEE
  5791                           postdec0	equ	0xFED
  5792                           preinc0	equ	0xFEC
  5793                           plusw0	equ	0xFEB
  5794                           fsr0h	equ	0xFEA
  5795                           fsr0l	equ	0xFE9
  5796                           wreg	equ	0xFE8
  5797                           indf1	equ	0xFE7
  5798                           postinc1	equ	0xFE6
  5799                           postdec1	equ	0xFE5
  5800                           preinc1	equ	0xFE4
  5801                           plusw1	equ	0xFE3
  5802                           fsr1h	equ	0xFE2
  5803                           fsr1l	equ	0xFE1
  5804                           bsr	equ	0xFE0
  5805                           indf2	equ	0xFDF
  5806                           postinc2	equ	0xFDE
  5807                           postdec2	equ	0xFDD
  5808                           preinc2	equ	0xFDC
  5809                           plusw2	equ	0xFDB
  5810                           fsr2h	equ	0xFDA
  5811                           fsr2l	equ	0xFD9
  5812                           status	equ	0xFD8


Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160    100     142
    BANK1           256     16      16
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1050_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_escreve_lcd
    i2_escreve_lcd->i2_envia_byte_lcd
    i2_abs->i2___aomod
    i2_limpa_lcd->i2_envia_byte_lcd
    i2_envia_byte_lcd->i2_envia_nibble_lcd

Critical Paths under _main in BANK0

    _setup->_inicializa_lcd
    _setup->_limpa_lcd
    _limpa_lcd->_envia_byte_lcd
    _inicializa_lcd->_envia_byte_lcd
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_escreve_lcd
    _escreve_lcd->_envia_byte_lcd
    _envia_byte_lcd->_envia_nibble_lcd
    _abs->___aomod

Critical Paths under _isr in BANK0

    _isr->i2_printf

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12474
                             _printf
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1818
                       _configureIRQ
                      _configurePins
                     _inicializa_lcd
                         _initTimer0
                          _limpa_lcd
 ---------------------------------------------------------------------------------
 (2) _limpa_lcd                                            1     1      0     847
                                             21 BANK0      1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (2) _initTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _inicializa_lcd                                       1     1      0     971
                                             21 BANK0      1     1      0
                     _envia_byte_lcd
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (2) _configurePins                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configureIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2   10656
                                             10 BANK1      6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   10424
                                             94 BANK0      6     0      6
                                              8 BANK1      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    9906
                                             86 BANK0      8     2      6
                                              0 BANK1      8     8      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7315
                                             50 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5049
                                             39 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             17 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2353
                                             32 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1853
                                             23 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     909
                                             22 BANK0      1     1      0
                        _escreve_lcd
 ---------------------------------------------------------------------------------
 (6) _escreve_lcd                                          1     1      0     878
                                             21 BANK0      1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (3) _envia_byte_lcd                                       2     1      1     847
                                             19 BANK0      2     1      1
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (4) _envia_nibble_lcd                                     2     2      0     124
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             35 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             17 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             17 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isr                                                 9     9      0    6627
                                              8 BANK0      9     9      0
                _clearInterruptFlags
                        i2_limpa_lcd
                           i2_printf
 ---------------------------------------------------------------------------------
 (13) i2_printf                                            8     4      4    6340
                                              0 BANK0      8     4      4
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (14) i2_vfprintf                                          8     2      6    6224
                                             85 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (15) i2_vfpfcnvrt                                        42    36      6    5916
                                             69 COMRAM    16    10      6
                             i2_dtoa
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_dtoa                                             36    26     10    4490
                                             33 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (17) i2_pad                                              11     5      6    2609
                                             22 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (18) i2_strlen                                            4     2      2     165
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (18) i2_fputs                                             7     3      4    1133
                                             15 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_fputc                                             9     5      4     853
                                              6 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (17) i2_putch                                             1     1      0     349
                                              5 COMRAM     1     1      0
                      i2_escreve_lcd
 ---------------------------------------------------------------------------------
 (18) i2_escreve_lcd                                       1     1      0     318
                                              4 COMRAM     1     1      0
                   i2_envia_byte_lcd
 ---------------------------------------------------------------------------------
 (17) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (17) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (13) i2_limpa_lcd                                         1     1      0     287
                                              4 COMRAM     1     1      0
                   i2_envia_byte_lcd
 ---------------------------------------------------------------------------------
 (19) i2_envia_byte_lcd                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 i2_envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (20) i2_envia_nibble_lcd                                  2     2      0     124
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (13) _clearInterruptFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _escreve_lcd
                   _envia_byte_lcd
                     _envia_nibble_lcd
             _fputs
               _fputc
                 _putch
                   _escreve_lcd
                     _envia_byte_lcd
                       _envia_nibble_lcd
             _strlen
         _fputc
           _putch
             _escreve_lcd
               _envia_byte_lcd
                 _envia_nibble_lcd
   _setup
     _configureIRQ
     _configurePins
     _inicializa_lcd
       _envia_byte_lcd
         _envia_nibble_lcd
       _envia_nibble_lcd
     _initTimer0
     _limpa_lcd
       _envia_byte_lcd
         _envia_nibble_lcd

 _isr (ROOT)
   _clearInterruptFlags
   i2_limpa_lcd
     i2_envia_byte_lcd
       i2_envia_nibble_lcd
   i2_printf
     i2_vfprintf
       i2_vfpfcnvrt
         i2_dtoa
           i2___aodiv
           i2___aomod
           i2_abs
             i2___aomod (ARG)
           i2_pad
             i2_fputc
               i2_putch
                 i2_escreve_lcd
                   i2_envia_byte_lcd
                     i2_envia_nibble_lcd
             i2_fputs
               i2_fputc
                 i2_putch
                   i2_escreve_lcd
                     i2_envia_byte_lcd
                       i2_envia_nibble_lcd
             i2_strlen
         i2_fputc
           i2_putch
             i2_escreve_lcd
               i2_envia_byte_lcd
                 i2_envia_nibble_lcd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     10      10       7        6.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     64      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB      20        0.0%
DATA                 0      0      FB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Nov 24 23:18:22 2022

               ?_configureIRQ 0001                            l41 208E                            l50 2070  
                          l44 1FAC                            l53 200A                            l47 1FCE  
                          l90 1F3C                            l58 2038                            l59 2038  
                          l93 2080                            l87 1C16                            l96 1FEE  
                          l99 1B8A                ?_configurePins 0001                   __CFG_BOR$ON 000000  
                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                           l131 1884  
                         l134 18C8                           l142 08B0                           l136 1904  
                         l144 08B8                           l306 15B8                           l162 0AF0  
                         l175 1CF8                           l176 1D00                           l169 0F8C  
                         l293 12CA                           l854 1E28                           l857 1E30  
                         l890 1EAA                           l884 1F66                           l869 1A62  
                         l877 1DAA                  __CFG_CPB$OFF 000000                           _PR2 000FCB  
                __CFG_CPD$OFF 000000            i2___aodiv@quotient 0013                           _abs 1DF0  
                         _pad 183C                           _isr 0008                           wreg 000FE8  
         __end_ofi2_vfpfcnvrt 1142                    i2_dtoa$589 0034                  __CFG_LVP$OFF 000000  
                __CFG_WDT$OFF 000000                          ?_abs 0083                          l2120 1F8C  
                        l2130 1FC0                          l2122 1FAE                          l2140 1FCA  
                        l2132 1FC2                          l2124 1FB4                          l2302 1F16  
                        l2142 1FCC                          l2134 1FC4                          l2126 1FBC  
                        l2150 2064                          l2304 1F22                          l2400 1890  
                        l2136 1FC6                          l2128 1FBE                          l2160 206E  
                        l2152 2066                          l2144 205A                          l2306 1F28  
                        l2322 2086                          l2330 19F2                          l2402 18A4  
                        l2138 1FC8                          l2154 2068                          l2146 205E  
                        l2420 1156                          l2412 1DF0                          l2308 1F32  
                        l2332 19FC                          l2404 18AA                          l2156 206A  
                        l2148 2062                          l2430 11AC                          l2422 1176  
                        l2414 1E0C                          l2318 2076                          l2334 1A1A  
                        l2326 19CC                          l2406 18D6                          l2158 206C  
                        l2440 1200                          l2432 11B8                          l2424 117A  
                        l2416 1142                          l2336 1A50                          l2328 19E0  
                        l2360 1D8A                          l2408 18EA                          l2450 1274  
                        l2442 1212                          l2434 11D6                          l2426 1188  
                        l2418 1148                          l2290 1C0E                          l2282 1B90  
                        l2354 1D64                          l2362 1E72                          l2610 0888  
                        l2602 0810                          l2444 1240                          l2436 11DE  
                        l2452 127A                          l2428 11A8                          l2460 1454  
                        l2284 1B92                          l2356 1D72                          l2364 1E7E  
                        l2620 08E0                          l2612 088A                          l2604 0830  
                        l2454 128A                          l2446 1260                          l2438 11F2  
                        l2470 149A                          l2462 145A                          l2286 1C04  
                        l2358 1D84                          l2366 1E84                          l2390 183C  
                        l2630 0980                          l2622 08E6                          l2614 08A4  
                        l2606 085A                          l2456 12AA                          l2448 1262  
                        l2480 1502                          l2472 14BA                          l2464 1468  
                        l2288 1C0C                          l2368 1E9C                          l2392 184C  
                        l2640 0A2A                          l2632 0986                          l2624 08EE  
                        l2616 08C0                          l2608 087A                          l2490 1578  
                        l2482 1530                          l2474 14D8                          l2466 1488  
                        l2394 1860                          l2650 0A8C                          l2642 0A44  
                        l2634 098C                          l2626 08F6                          l2618 08D2  
                        l2730 0E06                          l2810 1AFA                          l2492 1598  
                        l2484 1550                          l2476 14E0                          l2468 148C  
                        l2396 1870                          l2652 0A92                          l2660 0AC8  
                        l2644 0A5E                          l2628 08FC                          l2636 09F0  
                        l2740 0EAE                          l2732 0E18                          l2820 1B3C  
                        l2812 1B04                          l2486 1562                          l2478 14F4  
                        l2398 187C                          l2654 0AA4                          l2638 0A0C  
                        l2646 0A6C                          l2750 0F2C                          l2734 0E1C  
                        l2726 0DD4                          l2830 1B7E                          l2822 1B42  
                        l2814 1B16                          l2488 1568                          l2656 0AB0  
                        l2648 0A7E                          l2744 0EE6                          l2736 0E40  
                        l2728 0DF8                          l2760 0F54                          l2840 1CB6  
                        l2824 1B48                          l2816 1B1C                          l2832 1FD0  
                        l2658 0AB8                          l2762 0F7A                          l2746 0F0A  
                        l2754 0F3A                          l2738 0E64                          l2842 1CDC  
                        l2826 1B66                          l2818 1B34                          l2834 1FDC  
                        l2756 0F48                          l2748 0F18                          l2836 1CA0  
                        l2828 1B72                          l2860 2002                          l2852 1FF0  
                        l2838 1CA8                          l2862 2006                          l2854 1FF6  
                        ?_pad 0087                          l2864 1F3E                          l2856 1FFA  
                        l2880 2026                          l2866 1F48                          l2858 1FFE  
                        l2882 202A                          _ADIE 007CEE                          ?_isr 0001  
                        STR_1 080C                          STR_2 0801                          u2010 19E0  
                        u2011 19DC                          u2020 19F2                          u2100 1E9C  
                        u2021 19EE                          u2101 1E98                          u2030 1A1A  
                        u2031 1A16                          u2040 1A50                          u2201 11B2  
                        u2041 1A4C                          u2210 11D6                          u2130 184C  
                        u2211 11D2                          u2131 1848                          u2220 1200  
                        u2300 1578                          u2140 1870                          u2221 11FC  
                        u2301 1574                          u2141 186C                          u2230 1240  
                        u2150 18C8                          u2231 123C                          u2151 18C4  
                        u3007 1B24                          u2240 128A                          u2160 18D6  
                        u2241 1286                          u2161 18D2                          u3017 1B36  
                        u2250 1468                          u2170 1E0C                          u2090 1DAA  
                        u2251 1464                          u2171 1E08                          u2091 1DA6  
                        u3027 1B5C                          u2180 1156                          u2260 149A  
                        u2500 0844                          u2181 1152                          u2261 1496  
                        u3037 1C06                          u2190 1188                          u2270 14D8  
                        u2510 085A                          u2191 1184                          u2271 14D4  
                        u3047 1C10                          u2511 0856                          u2280 1502  
                        u2600 0A6C                          u2520 0888                          u2281 14FE  
                        u2601 0A68                          u2521 0884                          u2290 1530  
                        u2610 0A7E                          u2530 08A4                          u2291 152C  
                        u2611 0A7A                          u2531 08A0                          u2620 0A8C  
                        u2540 08D2                          u2621 0A88                          u2541 08CE  
                        u2630 0AA4                          u2550 08E0                          u2631 0AA0  
                        u2551 08DC                          u2560 0A0C                          u2800 0E40  
                        u2561 0A08                          u2801 0E3C                          u2570 0A2A  
                        u2490 0842                          u2810 0E64                          u2571 0A26  
                        u2491 083C                          u2811 0E60                          u2580 0A44  
                        u2820 0F0A                          u2581 0A40                          u2821 0F06  
                        u2590 0A5E                          u2591 0A5A                          _PEIE 007F96  
                        u2790 0DF8                          u2870 1CF8                          u2791 0DF4  
                        u2871 1CF4                          u1995 1F20                          u1996 1F22  
                        i2l41 20A6                          u2987 1FE4                          u2997 1B0C  
                        i2l70 1818                          i2l71 17C8                          i2l64 20B0  
                        i2l90 1F8A                          i2l93 209C                          i2l69 1792  
                        i2l87 1C9E                          i2l96 2058                  ?_escreve_lcd 0001  
      envia_byte_lcd@endereco 0074                          abs@a 0083                          _dbuf 00CE  
                        _main 2026                          _dtoa 0810                          _prec 00C8  
                        _nout 00C4                          pad@i 008E                          pad@p 008B  
                        fsr1h 000FE2                          fsr2h 000FDA                          indf2 000FDF  
                        fsr1l 000FE1                          pad@w 0090                          fsr2l 000FD9  
                        btemp 005E                          start 000E                 __CFG_IESO$OFF 000000  
             __end_ofi2_fputc 1AFA               __end_ofi2_fputs 1DF0               __end_ofi2_putch 20A8  
               __CFG_MCLRE$ON 000000                ??_configureIRQ 0071                  ___param_bank 000000  
                       ??_abs 0085                         ??_pad 008D                         ??_isr 0068  
                  i2_vfprintf 1D02                __CFG_CCP2MX$ON 000000               __end_of___aodiv 12CC  
                       ?_main 0001                         ?_dtoa 0092               __end_of___aomod 15BA  
                       i2l131 194C                         i2l134 198E                         i2l142 0B92  
                       i2l136 19CA                         i2l144 0B9A                         i2l306 171C  
                       i2l162 0DD2                         i2l175 1D5A                         i2l176 1D62  
                       i2l169 1140                         i2l293 1452                         i2l854 1E68  
                       i2l857 1E70                         i2l890 1EE0                         i2l884 1F10  
                       i2l869 1AF8                         i2l877 1DEE                  vfpfcnvrt@fmt 00B8  
                       i2_abs 1E32                         i2_pad 1906                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
     __size_of_envia_byte_lcd 002C                __CFG_EBTRB$OFF 000000                         _flags 00CA  
                       _fputc 19CC                         _fputs 1D64           _clearInterruptFlags 20A8  
                       _setup 1FF0                         pad@fp 0087                         _width 00C6  
                       _putch 2082                         dtoa@d 0094                         dtoa@i 00B4  
                       dtoa@n 00AC                         dtoa@p 00A6                         dtoa@s 00AA  
                       dtoa@w 00A8                   i2_limpa_lcd 2040                         tablat 000FF5  
                       ttemp5 005F                         ttemp6 0062                         ttemp7 0066  
                       status 000FD8                         wtemp8 005F                __CFG_ICPRT$OFF 000000  
          __size_ofi2___aodiv 0188            __size_ofi2___aomod 0164              __end_ofi2_printf 1F12  
            __end_ofi2_strlen 1EE2               __initialization 200C                  __end_of_main 2040  
                __end_of_dtoa 0AF2              i2_envia_byte_lcd 1F68               ??_configurePins 0071  
        ?_clearInterruptFlags 0001                    i2printf@ap 0066                   i2_vfpfcnvrt 0F8E  
               i2vfpfcnvrt@ap 004A                 i2vfpfcnvrt@fp 0046                 i2vfpfcnvrt@ll 004E  
                      ??_main 00C4                        ??_dtoa 009C                 __activetblptr 000002  
                      ?i2_abs 0013                        ?i2_pad 0017                        ?_fputc 0077  
                      ?_fputs 0080                        ?_setup 0001                        ?_putch 0001  
                      i2l2300 1C96                        i2l2222 20A8                        i2l2310 1F6A  
                      i2l2312 1F74                        i2l2320 2092                        i2l2314 1F7A  
                      i2l2316 1F82                        i2l2324 20A0                        i2l2340 1A64  
                      i2l2500 192A                        i2l2350 1AE6                        i2l2342 1A76  
                      i2l2510 1970                        i2l2502 1938                        i2l2520 12D0  
                      i2l2600 1E4C                        i2l2344 1A88                        i2l2512 199E  
                      i2l2504 1944                        i2l2530 1330                        i2l2522 12DE  
                      i2l2346 1A92                        i2l2514 19B2                        i2l2506 1958  
                      i2l2292 1C1A                        i2l2540 137A                        i2l2532 1334  
                      i2l2524 12FE                        i2l2348 1AB0                        i2l2372 1DAC  
                      i2l2380 1EAC                        i2l2508 196C                        i2l2700 0CEA  
                      i2l2294 1C1C                        i2l2550 13EA                        i2l2542 1388  
                      i2l2534 1340                        i2l2526 1302                        i2l2518 12CC  
                      i2l2374 1DB8                        i2l2382 1EB8                        i2l2710 0D5E  
                      i2l2702 0D08                        i2l2296 1C8C                        i2l2552 13FC  
                      i2l2544 139A                        i2l2536 135E                        i2l2528 1310  
                      i2l2376 1DCA                        i2l2384 1EBC                        i2l2720 0D9A  
                      i2l2712 0D6E                        i2l2704 0D22                        i2l2298 1C94  
                      i2l2546 13C8                        i2l2538 1366                        i2l2554 1402  
                      i2l2570 15F0                        i2l2562 15BA                        i2l2378 1DCE  
                      i2l2386 1ED4                        i2l2714 0D74                        i2l2722 0DAA  
                      i2l2706 0D3C                        i2l2802 110A                        i2l2556 1412  
                      i2l2548 13E8                        i2l2580 1658                        i2l2572 15FE  
                      i2l2564 15BE                        i2l2716 0D86                        i2l2708 0D4C  
                      i2l2804 112E                        i2l2558 1432                        i2l2582 1666  
                      i2l2590 16CC                        i2l2574 161E                        i2l2566 15CC  
                      i2l2718 0D92                        i2l2670 0B5A                        i2l2902 17D6  
                      i2l2592 16DC                        i2l2584 1694                        i2l2576 163C  
                      i2l2568 15EC                        i2l2496 1906                        i2l2680 0BB4  
                      i2l2672 0B6A                        i2l2664 0AF2                        i2l2904 17FC  
                      i2l2594 16FC                        i2l2586 16B4                        i2l2578 1644  
                      i2l2498 1916                        i2l2690 0BDE                        i2l2682 0BC2  
                      i2l2674 0B6C                        i2l2666 0B12                        i2l2770 0FB2  
                      i2l2850 1D3E                        i2l2906 1800                        i2l2588 16C6  
                      i2l2692 0C60                        i2l2684 0BC8                        i2l2676 0B86  
                      i2l2668 0B3A                        i2l2780 101E                        i2l2772 0FC0  
                      i2l2844 1D02                        i2l2908 180E                        i2l2870 2040  
                      i2l2598 1E32                        i2l2694 0C66                        i2l2686 0BD0  
                      i2l2678 0BA2                        i2l2790 10D0                        i2l2782 1066  
                      i2l2774 0FD2                        i2l2846 1D0A                        i2l2872 204A  
                      i2l2696 0C6C                        i2l2688 0BD8                        i2l2792 10E4  
                      i2l2776 0FD6                        i2l2768 0F8E                        i2l2848 1D18  
                      i2l2698 0CD0                        i2l2786 109E                        i2l2778 0FFA  
                      i2l2874 1EE2                        i2l2890 1768                        i2l2788 10C2  
                      i2l2796 10F0                        i2l2876 1EEC                        i2l2892 178A  
                      i2l2884 1740                        i2l2798 10FE                        i2l2886 174E  
                      i2l2896 17A0                        i2l2888 1752                     ??i2_fputc 000B  
                   ??i2_fputs 0014                     ??i2_putch 0006                        _TMR2IE 007CE9  
                      _TMR2IF 007CF1       __size_of_inicializa_lcd 0092                i2___aodiv@sign 0012  
                      i2abs@a 0013                        i2_dtoa 0AF2                        i2pad@i 001E  
                      i2pad@p 001B                        i2pad@w 0020                __CFG_XINST$OFF 000000  
            _envia_nibble_lcd 1B8C                  vfprintf@cfmt 0108         ??_clearInterruptFlags 0001  
              i2___aomod@sign 0012                     ??___aodiv 0081                 i2vfprintf@fmt 0058  
                   ??___aomod 0081                __CFG_STVREN$ON 000000                   ?i2_vfprintf 0056  
                      clear_0 2012                        _printf 1F3E                        pad@buf 0089  
                      dtoa@fp 0092                        _strlen 1E72                        fputc@c 0077  
                      fputs@c 0084                        fputs@i 0085             __end_ofi2___aodiv 1454  
                      fputs@s 0080             __end_ofi2___aomod 171E                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
          i2___aomod@dividend 0001          __end_of_configureIRQ 1FD0              __end_of_vfprintf 1D02  
                  __accesstop 0060       __end_of__initialization 2018            envia_byte_lcd@dado 0073  
             __CFG_PBADEN$OFF 000000               __CFG_FOSC$XT_XT 000000    __end_ofi2_envia_nibble_lcd 1CA0  
        __size_of_escreve_lcd 0010                 ___rparam_used 000001                  escreve_lcd@c 0075  
               __end_ofi2_abs 1E72                 __end_ofi2_pad 19CC                __pcstackCOMRAM 0001  
               __end_of_fputc 1A64                 __end_of_fputs 1DAC                 __end_of_setup 200C  
               __end_of_putch 2090                   i2printf@fmt 0060                   i2printf@ret 0064  
      __size_ofi2_escreve_lcd 000E                   i2putch@data 0006                       ??i2_abs 0015  
                     ??i2_pad 001D                _envia_byte_lcd 1F12                i2vfpfcnvrt@fmt 0048  
                   ?i2_printf 0060                     ?i2_strlen 0001                       ??_fputc 007B  
                     ??_fputs 0084                       ??_setup 0076                       ??_putch 0076  
                  __pbssBANK0 00C4           __size_ofi2_vfprintf 0062                       ?i2_dtoa 0022  
          __size_of_limpa_lcd 0020                       ?_printf 010A                       ?_strlen 0071  
      __end_of_envia_byte_lcd 1F3E                       _INTCON2 000FF1                       _INTCON3 000FF0  
          __size_of_vfpfcnvrt 01BA                    ??i2_printf 005E                    ??i2_strlen 0003  
    __end_ofi2_envia_byte_lcd 1F8C                  ?i2_limpa_lcd 0001                       i2_fputc 1A64  
                     i2_fputs 1DAC               __CFG_VREGEN$OFF 000000                _inicializa_lcd 1AFA  
                     i2pad@fp 0017                       i2_putch 209E                       i2dtoa@d 0024  
                     i2dtoa@i 0044                       i2dtoa@n 003C                       i2dtoa@p 0036  
                     i2dtoa@s 003A                       i2dtoa@w 0038                 i2_escreve_lcd 2090  
             __size_ofi2_dtoa 02E2                       __Hparam 0000                       __Lparam 0000  
                     ___aodiv 1142                       ___aomod 1454                    _initTimer0 205A  
                   ?_vfprintf 00BE                i2vfprintf@cfmt 005C                  __psmallconst 0800  
                ?i2_vfpfcnvrt 0046                       __pcinit 200C                       __ramtop 0800  
                     __ptext0 2026                       __ptext1 1FF0                       __ptext2 1FD0  
                     __ptext3 205A                       __ptext4 1AFA                       __ptext5 1F8C  
                     __ptext6 1FAE                       __ptext7 1F3E                       __ptext8 1CA0  
                     __ptext9 0DD4               __size_of_printf 002A               __size_of_strlen 003A  
       __size_of_configureIRQ 0022                     _T2CONbits 000FCA                  __size_of_abs 0042  
             ?_envia_byte_lcd 0073                  __size_of_pad 00CA                  __size_of_isr 1834  
           __end_of_limpa_lcd 1FF0      __end_of_envia_nibble_lcd 1C18      i2envia_byte_lcd@endereco 0004  
      __end_of_inicializa_lcd 1B8C                __pintcode_body 171E          end_of_initialization 2018  
              ?i2_escreve_lcd 0001                       fputc@fp 0079                 __Lmediumconst 0000  
                     int_func 171E                       fputs@fp 0082             __end_of_vfpfcnvrt 0F8E  
              i2escreve_lcd@c 0005                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                  _configureIRQ 1FAE                       postinc2 000FDE  
                ??i2_vfprintf 005C                    ??_vfprintf 00C4         __end_of_configurePins 1FAE  
                     strlen@a 0073                       strlen@s 0071                     _PORTCbits 000F82  
                   _PORTDbits 000F83             i2___aodiv@divisor 0009             i2___aodiv@counter 0011  
                   _TRISBbits 000F93                     _TRISCbits 000F94                     _TRISDbits 000F95  
                   i2___aodiv 12CC                     i2___aomod 15BA               ?_inicializa_lcd 0001  
          __end_ofi2_vfprintf 1D64   __end_of_clearInterruptFlags 20B2                __end_ofi2_dtoa 0DD4  
                 ?_initTimer0 0001                   vfpfcnvrt@ap 00BA                   vfpfcnvrt@fp 00B6  
                 vfpfcnvrt@ll 0100            i2_envia_nibble_lcd 1C18                     i2fputc@fp 0009  
                   i2fputs@fp 0012        i2envia_nibble_lcd@dado 0002                __end_of_printf 1F68  
              __end_of_strlen 1EAC           start_initialization 200C           ?i2_envia_nibble_lcd 0001  
                 __end_of_abs 1E32                   __end_of_pad 1906                   __end_of_isr 183C  
                  ?i2___aodiv 0001                    ?i2___aomod 0001               ??i2_escreve_lcd 0005  
           __size_ofi2_printf 0030                 ??_escreve_lcd 0075             __size_ofi2_strlen 0036  
                   i2strlen@a 0003                     i2strlen@s 0001          __size_ofi2_limpa_lcd 001A  
                    ??i2_dtoa 002C          ??i2_envia_nibble_lcd 0001                   vfprintf@fmt 00C0  
                i2vfprintf@ap 005A                  i2vfprintf@fp 0056              __CFG_LPT1OSC$OFF 000000  
                    ??_printf 00C4             i2___aomod@divisor 0009                      ??_strlen 0073  
           i2___aomod@counter 0011          __size_ofi2_vfpfcnvrt 01B4                 __pcstackBANK0 0060  
               __pcstackBANK1 0100              ___aodiv@dividend 0071             ?i2_envia_byte_lcd 0003  
         __size_of_initTimer0 0018                      ?i2_fputc 0007                      ?i2_fputs 0010  
          ??i2_envia_byte_lcd 0004                      ?i2_putch 0001          i2envia_byte_lcd@dado 0003  
         __end_of_escreve_lcd 2082                     __pintcode 0008                      ?___aodiv 0071  
                    ?___aomod 0071              ___aodiv@quotient 0083              ??_envia_byte_lcd 0074  
           __size_of_vfprintf 0062                   __smallconst 0800                __size_ofi2_abs 0040  
              __size_ofi2_pad 00C6             ?_envia_nibble_lcd 0001                   ??i2___aodiv 0011  
                 ??i2___aomod 0011                __size_of_fputc 0098                __size_of_fputs 0048  
                   _limpa_lcd 1FD0                __size_of_setup 001C                __size_of_putch 000E  
          ??_envia_nibble_lcd 0071                      i2u200_45 1F72                      i2u200_46 1F74  
                    i2u211_40 1DEE                      i2u211_41 1DEA                      i2u212_40 1ED4  
                    i2u212_41 1ED0                      i2u205_40 1A76                      i2u205_41 1A72  
                    i2u206_40 1A88                      i2u206_41 1A84                      i2u207_40 1AB0  
                    i2u231_40 1916                      i2u207_41 1AAC                      i2u231_41 1912  
                    i2u240_40 13C8                      i2u208_40 1AE6                      i2u232_40 1938  
                    i2u240_41 13C4                      i2u208_41 1AE2                      i2u232_41 1934  
                    i2u241_40 1412                      i2u233_40 198E                      i2u241_41 140E  
                    i2u233_41 198A                      i2u305_47 2050                      i2u242_40 15CC  
                    i2u234_40 199E                      i2u242_41 15C8                      i2u234_41 199A  
                    i2u306_47 1C8E                      i2u235_40 12DE                      i2u243_40 15FE  
                    i2u235_41 12DA                      i2u243_41 15FA                      i2u307_47 1C98  
                    i2u236_40 1310                      i2u244_40 163C                      i2u236_41 130C  
                    i2u244_41 1638                      i2u245_40 1666                      i2u237_41 133A  
                    i2u245_41 1662                      i2u238_40 135E                      i2u246_40 1694  
                    i2u270_40 0BC2                      i2u238_41 135A                      i2u246_41 1690  
                    i2u270_41 0BBE                      i2u239_40 1388                      i2u247_40 16DC  
                    i2u271_40 0CEA                      i2u239_41 1384                      i2u247_41 16D8  
                    i2u271_41 0CE6                      i2u248_40 1E4C                      i2u272_40 0D08  
                    i2u264_40 0B22                      i2u248_41 1E48                      i2u272_41 0D04  
                    i2u264_41 0B1C                      i2u273_40 0D22                      i2u265_40 0B24  
                    i2u273_41 0D1E                      i2u274_40 0D3C                      i2u266_40 0B3A  
                    i2u290_40 1778                      i2u274_41 0D38                      i2u266_41 0B36  
                    i2u290_41 1772                      i2u290_46 177A                      i2u275_40 0D4C  
                    i2u267_40 0B6A                      i2u283_40 0FB2                      i2u291_40 17A0  
                    i2u275_41 0D48                      i2u267_41 0B66                      i2u283_41 0FAE  
                    i2u291_41 179C                      i2u276_40 0D5E                      i2u268_40 0B86  
                    i2u284_40 0FFA                      i2u292_40 17B0                      i2u276_41 0D5A  
                    i2u268_41 0B82                      i2u284_41 0FF6                      i2u292_41 17AA  
                    i2u292_46 17B2                      i2u277_40 0D6E                      i2u269_40 0BB4  
                    i2u285_40 101E                      i2u293_40 17D6                      i2u277_41 0D6A  
                    i2u269_41 0BB0                      i2u285_41 101A                      i2u293_41 17D2  
                    i2u278_40 0D86                      i2u286_40 10C2                      i2u294_40 17E6  
                    i2u278_41 0D82                      i2u286_41 10BE                      i2u294_41 17E0  
                    i2u294_46 17E8                      i2u295_40 180E                      i2u295_41 180A  
                    i2u288_40 1D5A                      i2u288_41 1D56                      i2u289_40 174E  
                    i2u289_41 174A              __CFG_WDTPS$32768 000000                     _vfpfcnvrt 0DD4  
            ??_inicializa_lcd 0075                      i2_printf 1EE2                      i2pad@buf 0019  
                    i2dtoa@fp 0022                      i2_strlen 1EAC                   _INTCON3bits 000FF0  
                    i2fputc@c 0007                    ?_limpa_lcd 0001                      i2fputs@c 0014  
                    i2fputs@i 0015                      i2fputs@s 0010                   _escreve_lcd 2072  
            __size_ofi2_fputc 0096              __size_ofi2_fputs 0044              __size_ofi2_putch 000A  
                    __Hrparam 0000                    vfprintf@ap 00C2                      __Lrparam 0000  
                  vfprintf@fp 00BE                  ??_initTimer0 0071              __size_of___aodiv 018A  
            __size_of___aomod 0166                    ?_vfpfcnvrt 00B6               ___aodiv@divisor 0079  
             ___aodiv@counter 0081                   _currentTime 00CC                      _dtoa$589 00A4  
                    __ptext10 0810                      __ptext11 183C                      __ptext20 1454  
                    __ptext12 1E72                      __ptext21 1142                      __ptext13 1D64  
                    __ptext30 1A64                      __ptext14 19CC                      __ptext31 209E  
                    __ptext23 1EE2                      __ptext15 2082                      __ptext32 2090  
                    __ptext24 1D02                      __ptext16 2072                      __ptext33 1E32  
                    __ptext25 0F8E                      __ptext17 1F12                      __ptext34 15BA  
                    __ptext26 0AF2                      __ptext18 1B8C                      __ptext35 12CC  
                    __ptext27 1906                      __ptext19 1DF0                      __ptext36 2040  
                    __ptext28 1EAC                      __ptext37 1F68                      __ptext29 1DAC  
                    __ptext38 1C18                      __ptext39 20A8            __end_of_initTimer0 2072  
      __size_of_configurePins 0022                 __size_of_main 001A                 __size_of_dtoa 02E2  
                    int$flags 005E  __size_of_clearInterruptFlags 000A                      _vfprintf 1CA0  
                   printf@fmt 010A              ___aomod@dividend 0071                     putch@data 0076  
                  _INTCONbits 000FF2                 ??i2_limpa_lcd 0005                   ??_limpa_lcd 0075  
                    intlevel2 0000         __end_ofi2_escreve_lcd 209E   __size_ofi2_envia_nibble_lcd 0088  
   __size_ofi2_envia_byte_lcd 0024                      printf@ap 010E               ___aomod@divisor 0079  
               ??i2_vfpfcnvrt 004C                   ??_vfpfcnvrt 00BC               ___aomod@counter 0081  
               _configurePins 1F8C          envia_nibble_lcd@dado 0072                  ___aodiv@sign 0082  
          i2___aodiv@dividend 0001           __end_ofi2_limpa_lcd 205A                  ___aomod@sign 0082  
   __size_of_envia_nibble_lcd 008C  
