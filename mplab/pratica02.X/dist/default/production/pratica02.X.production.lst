

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec 06 23:10:03 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           ; Version 2.10
    62                           ; Generated 31/07/2019 GMT
    63                           ; 
    64                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     _PORTCbits	set	3970
    96  0000                     _PR2	set	4043
    97  0000                     _T2CONbits	set	4042
    98  0000                     _INTCON3	set	4080
    99  0000                     _INTCON2	set	4081
   100  0000                     _TRISDbits	set	3989
   101  0000                     _TRISBbits	set	3987
   102  0000                     _TRISCbits	set	3988
   103  0000                     _PORTDbits	set	3971
   104  0000                     _INTCON3bits	set	4080
   105  0000                     _INTCONbits	set	4082
   106  0000                     _TMR2IE	set	31977
   107  0000                     _PEIE	set	32662
   108  0000                     _ADIE	set	31982
   109  0000                     _TMR2IF	set	31985
   110                           
   111                           	psect	smallconst
   112  000800                     __psmallconst:
   113                           	opt callstack 0
   114  000800  00                 	db	0
   115  000801                     STR_10:
   116  000801  57                 	db	87	;'W'
   117  000802  41                 	db	65	;'A'
   118  000803  49                 	db	73	;'I'
   119  000804  54                 	db	84	;'T'
   120  000805  49                 	db	73	;'I'
   121  000806  4E                 	db	78	;'N'
   122  000807  47                 	db	71	;'G'
   123  000808  2E                 	db	46
   124  000809  2E                 	db	46
   125  00080A  2E                 	db	46
   126  00080B  00                 	db	0
   127  00080C                     STR_1:
   128  00080C  50                 	db	80	;'P'
   129  00080D  31                 	db	49	;'1'
   130  00080E  3A                 	db	58	;':'
   131  00080F  20                 	db	32
   132  000810  25                 	db	37
   133  000811  2E                 	db	46
   134  000812  32                 	db	50	;'2'
   135  000813  66                 	db	102	;'f'
   136  000814  20                 	db	32
   137  000815  73                 	db	115	;'s'
   138  000816  00                 	db	0
   139  000817                     STR_2:
   140  000817  50                 	db	80	;'P'
   141  000818  32                 	db	50	;'2'
   142  000819  3A                 	db	58	;':'
   143  00081A  20                 	db	32
   144  00081B  25                 	db	37
   145  00081C  2E                 	db	46
   146  00081D  32                 	db	50	;'2'
   147  00081E  66                 	db	102	;'f'
   148  00081F  20                 	db	32
   149  000820  73                 	db	115	;'s'
   150  000821  00                 	db	0
   151  000822                     STR_9:
   152  000822  49                 	db	73	;'I'
   153  000823  44                 	db	68	;'D'
   154  000824  4C                 	db	76	;'L'
   155  000825  45                 	db	69	;'E'
   156  000826  2E                 	db	46
   157  000827  2E                 	db	46
   158  000828  2E                 	db	46
   159  000829  00                 	db	0
   160  00082A                     STR_5:
   161  00082A  50                 	db	80	;'P'
   162  00082B  31                 	db	49	;'1'
   163  00082C  3A                 	db	58	;':'
   164  00082D  20                 	db	32
   165  00082E  2D                 	db	45
   166  00082F  20                 	db	32
   167  000830  73                 	db	115	;'s'
   168  000831  00                 	db	0
   169  000832                     STR_4:
   170  000832  50                 	db	80	;'P'
   171  000833  32                 	db	50	;'2'
   172  000834  3A                 	db	58	;':'
   173  000835  20                 	db	32
   174  000836  2D                 	db	45
   175  000837  20                 	db	32
   176  000838  73                 	db	115	;'s'
   177  000839  00                 	db	0
   178  00083A                     STR_11:
   179  00083A  49                 	db	73	;'I'
   180  00083B  4E                 	db	78	;'N'
   181  00083C  46                 	db	70	;'F'
   182  00083D  00                 	db	0
   183  00083E                     STR_15:
   184  00083E  4E                 	db	78	;'N'
   185  00083F  41                 	db	65	;'A'
   186  000840  4E                 	db	78	;'N'
   187  000841  00                 	db	0
   188  000842                     STR_12:
   189  000842  69                 	db	105	;'i'
   190  000843  6E                 	db	110	;'n'
   191  000844  66                 	db	102	;'f'
   192  000845  00                 	db	0
   193  000846                     STR_16:
   194  000846  6E                 	db	110	;'n'
   195  000847  61                 	db	97	;'a'
   196  000848  6E                 	db	110	;'n'
   197  000849  00                 	db	0
   198  00084A                     STR_19:
   199  00084A  6C                 	db	108	;'l'
   200  00084B  66                 	db	102	;'f'
   201  00084C  00                 	db	0
   202  0000                     
   203                           ; #config settings
   204  00084D  00                 	db	0	; dummy byte at the end
   205  0000                     
   206                           	psect	cinit
   207  003BA6                     __pcinit:
   208                           	opt callstack 0
   209  003BA6                     start_initialization:
   210                           	opt callstack 0
   211  003BA6                     __initialization:
   212                           	opt callstack 0
   213                           
   214                           ; Clear objects allocated to BANK1 (80 bytes)
   215  003BA6  EE01  F000         	lfsr	0,__pbssBANK1
   216  003BAA  0E50               	movlw	80
   217  003BAC                     clear_0:
   218  003BAC  6AEE               	clrf	postinc0,c
   219  003BAE  06E8               	decf	wreg,f,c
   220  003BB0  E1FD               	bnz	clear_0
   221                           
   222                           ; Clear objects allocated to BANK0 (40 bytes)
   223  003BB2  EE00  F0AC         	lfsr	0,__pbssBANK0
   224  003BB6  0E28               	movlw	40
   225  003BB8                     clear_1:
   226  003BB8  6AEE               	clrf	postinc0,c
   227  003BBA  06E8               	decf	wreg,f,c
   228  003BBC  E1FD               	bnz	clear_1
   229  003BBE                     end_of_initialization:
   230                           	opt callstack 0
   231  003BBE                     __end_of__initialization:
   232                           	opt callstack 0
   233  003BBE  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   234  003BC0  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   235  003BC2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   236  003BC4  6EF8               	movwf	tblptru,c
   237  003BC6  0100               	movlb	0
   238  003BC8  EF55  F01E         	goto	_main	;jump to C main() function
   239                           
   240                           	psect	bssBANK0
   241  0000AC                     __pbssBANK0:
   242                           	opt callstack 0
   243  0000AC                     floorf@F524:
   244                           	opt callstack 0
   245  0000AC                     	ds	4
   246  0000B0                     ___fpclassifyf@F463:
   247                           	opt callstack 0
   248  0000B0                     	ds	4
   249  0000B4                     _player2Time:
   250                           	opt callstack 0
   251  0000B4                     	ds	4
   252  0000B8                     _player1Time:
   253                           	opt callstack 0
   254  0000B8                     	ds	4
   255  0000BC                     _nout:
   256                           	opt callstack 0
   257  0000BC                     	ds	2
   258  0000BE                     _width:
   259                           	opt callstack 0
   260  0000BE                     	ds	2
   261  0000C0                     _prec:
   262                           	opt callstack 0
   263  0000C0                     	ds	2
   264  0000C2                     _flags:
   265                           	opt callstack 0
   266  0000C2                     	ds	2
   267  0000C4                     _gameStatus:
   268                           	opt callstack 0
   269  0000C4                     	ds	2
   270  0000C6                     _p2concorrency:
   271                           	opt callstack 0
   272  0000C6                     	ds	2
   273  0000C8                     _p1concorrency:
   274                           	opt callstack 0
   275  0000C8                     	ds	2
   276  0000CA                     _player2Pressed:
   277                           	opt callstack 0
   278  0000CA                     	ds	2
   279  0000CC                     _player1Pressed:
   280                           	opt callstack 0
   281  0000CC                     	ds	2
   282  0000CE                     _firstPlayer:
   283                           	opt callstack 0
   284  0000CE                     	ds	2
   285  0000D0                     _currentTime:
   286                           	opt callstack 0
   287  0000D0                     	ds	2
   288  0000D2                     _currentState:
   289                           	opt callstack 0
   290  0000D2                     	ds	2
   291                           
   292                           	psect	bssBANK1
   293  000100                     __pbssBANK1:
   294                           	opt callstack 0
   295  000100                     _dbuf:
   296                           	opt callstack 0
   297  000100                     	ds	80
   298                           
   299                           	psect	cstackBANK0
   300  000060                     __pcstackBANK0:
   301                           	opt callstack 0
   302  000060                     efgtoa@ou:
   303                           	opt callstack 0
   304                           
   305                           ; 4 bytes @ 0x0
   306  000060                     	ds	4
   307  000064                     _efgtoa$820:
   308                           	opt callstack 0
   309                           
   310                           ; 2 bytes @ 0x4
   311  000064                     	ds	2
   312  000066                     _efgtoa$821:
   313                           	opt callstack 0
   314                           
   315                           ; 2 bytes @ 0x6
   316  000066                     	ds	2
   317  000068                     _efgtoa$826:
   318                           	opt callstack 0
   319                           
   320                           ; 2 bytes @ 0x8
   321  000068                     	ds	2
   322  00006A                     _efgtoa$830:
   323                           	opt callstack 0
   324                           
   325                           ; 2 bytes @ 0xA
   326  00006A                     	ds	2
   327  00006C                     _efgtoa$831:
   328                           	opt callstack 0
   329                           
   330                           ; 2 bytes @ 0xC
   331  00006C                     	ds	2
   332  00006E                     _efgtoa$832:
   333                           	opt callstack 0
   334                           
   335                           ; 2 bytes @ 0xE
   336  00006E                     	ds	2
   337  000070                     efgtoa@t:
   338                           	opt callstack 0
   339                           
   340                           ; 2 bytes @ 0x10
   341  000070                     	ds	2
   342  000072                     efgtoa@pp:
   343                           	opt callstack 0
   344                           
   345                           ; 2 bytes @ 0x12
   346  000072                     	ds	2
   347  000074                     efgtoa@m:
   348                           	opt callstack 0
   349                           
   350                           ; 2 bytes @ 0x14
   351  000074                     	ds	2
   352  000076                     efgtoa@ne:
   353                           	opt callstack 0
   354                           
   355                           ; 2 bytes @ 0x16
   356  000076                     	ds	2
   357  000078                     efgtoa@d:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0x18
   361  000078                     	ds	2
   362  00007A                     efgtoa@sign:
   363                           	opt callstack 0
   364                           
   365                           ; 2 bytes @ 0x1A
   366  00007A                     	ds	2
   367  00007C                     efgtoa@p:
   368                           	opt callstack 0
   369                           
   370                           ; 2 bytes @ 0x1C
   371  00007C                     	ds	2
   372  00007E                     efgtoa@nmode:
   373                           	opt callstack 0
   374                           
   375                           ; 1 bytes @ 0x1E
   376  00007E                     	ds	1
   377  00007F                     efgtoa@w:
   378                           	opt callstack 0
   379                           
   380                           ; 2 bytes @ 0x1F
   381  00007F                     	ds	2
   382  000081                     efgtoa@mode:
   383                           	opt callstack 0
   384                           
   385                           ; 1 bytes @ 0x21
   386  000081                     	ds	1
   387  000082                     efgtoa@h:
   388                           	opt callstack 0
   389                           
   390                           ; 4 bytes @ 0x22
   391  000082                     	ds	4
   392  000086                     efgtoa@l:
   393                           	opt callstack 0
   394                           
   395                           ; 4 bytes @ 0x26
   396  000086                     	ds	4
   397  00008A                     efgtoa@i:
   398                           	opt callstack 0
   399                           
   400                           ; 2 bytes @ 0x2A
   401  00008A                     	ds	2
   402  00008C                     efgtoa@g:
   403                           	opt callstack 0
   404                           
   405                           ; 4 bytes @ 0x2C
   406  00008C                     	ds	4
   407  000090                     efgtoa@e:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x30
   411  000090                     	ds	2
   412  000092                     efgtoa@n:
   413                           	opt callstack 0
   414                           
   415                           ; 2 bytes @ 0x32
   416  000092                     	ds	2
   417  000094                     efgtoa@u:
   418                           	opt callstack 0
   419                           
   420                           ; 4 bytes @ 0x34
   421  000094                     	ds	4
   422  000098                     ?_vfprintf:
   423                           	opt callstack 0
   424  000098                     vfprintf@fp:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0x38
   428  000098                     	ds	2
   429  00009A                     vfprintf@fmt:
   430                           	opt callstack 0
   431                           
   432                           ; 2 bytes @ 0x3A
   433  00009A                     	ds	2
   434  00009C                     vfprintf@ap:
   435                           	opt callstack 0
   436                           
   437                           ; 2 bytes @ 0x3C
   438  00009C                     	ds	2
   439  00009E                     vfprintf@cfmt:
   440                           	opt callstack 0
   441                           
   442                           ; 2 bytes @ 0x3E
   443  00009E                     	ds	2
   444  0000A0                     ?_printf:
   445                           	opt callstack 0
   446  0000A0                     printf@fmt:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x40
   450  0000A0                     	ds	8
   451  0000A8                     printf@ap:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x48
   455  0000A8                     	ds	2
   456  0000AA                     ??_stateMachine:
   457                           
   458                           ; 1 bytes @ 0x4A
   459  0000AA                     	ds	2
   460                           
   461                           	psect	cstackCOMRAM
   462  000001                     __pcstackCOMRAM:
   463                           	opt callstack 0
   464  000001                     ??_envia_nibble_lcd:
   465  000001                     ?_strlen:
   466                           	opt callstack 0
   467  000001                     ?___fpclassifyf:
   468                           	opt callstack 0
   469  000001                     ?_isupper:
   470                           	opt callstack 0
   471  000001                     ?_isdigit:
   472                           	opt callstack 0
   473  000001                     ?_strncmp:
   474                           	opt callstack 0
   475  000001                     ?_isspace:
   476                           	opt callstack 0
   477  000001                     ?___wmul:
   478                           	opt callstack 0
   479  000001                     ?___awdiv:
   480                           	opt callstack 0
   481  000001                     ?___awmod:
   482                           	opt callstack 0
   483  000001                     ?___fladd:
   484                           	opt callstack 0
   485  000001                     ?___flmul:
   486                           	opt callstack 0
   487  000001                     ?___flneg:
   488                           	opt callstack 0
   489  000001                     ?___fltol:
   490                           	opt callstack 0
   491  000001                     ?___xxtofl:
   492                           	opt callstack 0
   493  000001                     ___wmul@multiplier:
   494                           	opt callstack 0
   495  000001                     ___awdiv@dividend:
   496                           	opt callstack 0
   497  000001                     ___awmod@dividend:
   498                           	opt callstack 0
   499  000001                     isdigit@c:
   500                           	opt callstack 0
   501  000001                     isspace@c:
   502                           	opt callstack 0
   503  000001                     isupper@c:
   504                           	opt callstack 0
   505  000001                     strcpy@dest:
   506                           	opt callstack 0
   507  000001                     strlen@s:
   508                           	opt callstack 0
   509  000001                     strncmp@_l:
   510                           	opt callstack 0
   511  000001                     ___fleq@ff1:
   512                           	opt callstack 0
   513  000001                     ___flneg@f1:
   514                           	opt callstack 0
   515  000001                     ___fltol@f1:
   516                           	opt callstack 0
   517  000001                     ___fladd@b:
   518                           	opt callstack 0
   519  000001                     ___flmul@b:
   520                           	opt callstack 0
   521  000001                     ___xxtofl@val:
   522                           	opt callstack 0
   523  000001                     ___fpclassifyf@x:
   524                           	opt callstack 0
   525                           
   526                           ; 4 bytes @ 0x0
   527  000001                     	ds	1
   528  000002                     envia_nibble_lcd@dado:
   529                           	opt callstack 0
   530                           
   531                           ; 1 bytes @ 0x1
   532  000002                     	ds	1
   533  000003                     ??_isupper:
   534  000003                     ??_isdigit:
   535  000003                     ??_isspace:
   536  000003                     envia_byte_lcd@dado:
   537                           	opt callstack 0
   538  000003                     ___wmul@multiplicand:
   539                           	opt callstack 0
   540  000003                     ___awdiv@divisor:
   541                           	opt callstack 0
   542  000003                     ___awmod@divisor:
   543                           	opt callstack 0
   544  000003                     strcpy@src:
   545                           	opt callstack 0
   546  000003                     strlen@a:
   547                           	opt callstack 0
   548  000003                     strncmp@_r:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x2
   552  000003                     	ds	1
   553  000004                     envia_byte_lcd@endereco:
   554                           	opt callstack 0
   555                           
   556                           ; 1 bytes @ 0x3
   557  000004                     	ds	1
   558  000005                     ??___fpclassifyf:
   559  000005                     ??_strcpy:
   560  000005                     ??_limpa_lcd:
   561  000005                     ??_inicializa_lcd:
   562  000005                     ??___fltol:
   563  000005                     ??___xxtofl:
   564  000005                     escreve_lcd@c:
   565                           	opt callstack 0
   566  000005                     caracter_inicio@coluna:
   567                           	opt callstack 0
   568  000005                     ___awdiv@counter:
   569                           	opt callstack 0
   570  000005                     ___awmod@counter:
   571                           	opt callstack 0
   572  000005                     ___wmul@product:
   573                           	opt callstack 0
   574  000005                     strncmp@n:
   575                           	opt callstack 0
   576  000005                     ___fleq@ff2:
   577                           	opt callstack 0
   578  000005                     ___fladd@a:
   579                           	opt callstack 0
   580  000005                     ___flmul@a:
   581                           	opt callstack 0
   582                           
   583                           ; 4 bytes @ 0x4
   584  000005                     	ds	1
   585  000006                     putch@data:
   586                           	opt callstack 0
   587  000006                     caracter_inicio@linha:
   588                           	opt callstack 0
   589  000006                     ___awdiv@sign:
   590                           	opt callstack 0
   591  000006                     ___awmod@sign:
   592                           	opt callstack 0
   593                           
   594                           ; 1 bytes @ 0x5
   595  000006                     	ds	1
   596  000007                     ??_strncmp:
   597  000007                     ?_tolower:
   598                           	opt callstack 0
   599  000007                     caracter_inicio@posicao:
   600                           	opt callstack 0
   601  000007                     _isspace$1352:
   602                           	opt callstack 0
   603  000007                     ___awdiv@quotient:
   604                           	opt callstack 0
   605  000007                     fputc@c:
   606                           	opt callstack 0
   607  000007                     strcpy@s:
   608                           	opt callstack 0
   609  000007                     tolower@c:
   610                           	opt callstack 0
   611                           
   612                           ; 2 bytes @ 0x6
   613  000007                     	ds	1
   614  000008                     ?_atoi:
   615                           	opt callstack 0
   616  000008                     atoi@s:
   617                           	opt callstack 0
   618  000008                     strncmp@l:
   619                           	opt callstack 0
   620                           
   621                           ; 2 bytes @ 0x7
   622  000008                     	ds	1
   623  000009                     ??_tolower:
   624  000009                     ??___fladd:
   625  000009                     ??___flmul:
   626  000009                     ??___fleq:
   627  000009                     ___fltol@sign1:
   628                           	opt callstack 0
   629  000009                     ___xxtofl@sign:
   630                           	opt callstack 0
   631  000009                     ___fpclassifyf@e:
   632                           	opt callstack 0
   633  000009                     fputc@fp:
   634                           	opt callstack 0
   635  000009                     strcpy@d:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0x8
   639  000009                     	ds	1
   640  00000A                     ??_atoi:
   641  00000A                     ___fltol@exp1:
   642                           	opt callstack 0
   643  00000A                     ___xxtofl@exp:
   644                           	opt callstack 0
   645  00000A                     strncmp@r:
   646                           	opt callstack 0
   647                           
   648                           ; 2 bytes @ 0x9
   649  00000A                     	ds	1
   650  00000B                     ??_fputc:
   651  00000B                     ___xxtofl@arg:
   652                           	opt callstack 0
   653  00000B                     ___fpclassifyf@u:
   654                           	opt callstack 0
   655                           
   656                           ; 4 bytes @ 0xA
   657  00000B                     	ds	2
   658  00000D                     ___fladd@signs:
   659                           	opt callstack 0
   660  00000D                     ___flmul@sign:
   661                           	opt callstack 0
   662  00000D                     _tolower$1426:
   663                           	opt callstack 0
   664                           
   665                           ; 2 bytes @ 0xC
   666  00000D                     	ds	1
   667  00000E                     ___fladd@aexp:
   668                           	opt callstack 0
   669  00000E                     atoi@neg:
   670                           	opt callstack 0
   671  00000E                     ___flmul@grs:
   672                           	opt callstack 0
   673                           
   674                           ; 4 bytes @ 0xD
   675  00000E                     	ds	1
   676  00000F                     ?___fldiv:
   677                           	opt callstack 0
   678  00000F                     ___fladd@bexp:
   679                           	opt callstack 0
   680  00000F                     ___fldiv@b:
   681                           	opt callstack 0
   682                           
   683                           ; 4 bytes @ 0xE
   684  00000F                     	ds	1
   685  000010                     ___fladd@grs:
   686                           	opt callstack 0
   687  000010                     _atoi$1321:
   688                           	opt callstack 0
   689  000010                     fputs@s:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0xF
   693  000010                     	ds	2
   694  000012                     ___flmul@aexp:
   695                           	opt callstack 0
   696  000012                     _atoi$1323:
   697                           	opt callstack 0
   698  000012                     fputs@fp:
   699                           	opt callstack 0
   700                           
   701                           ; 2 bytes @ 0x11
   702  000012                     	ds	1
   703  000013                     ___flmul@bexp:
   704                           	opt callstack 0
   705  000013                     ___fldiv@a:
   706                           	opt callstack 0
   707                           
   708                           ; 4 bytes @ 0x12
   709  000013                     	ds	1
   710  000014                     _atoi$1322:
   711                           	opt callstack 0
   712  000014                     fputs@c:
   713                           	opt callstack 0
   714  000014                     ___flmul@prod:
   715                           	opt callstack 0
   716                           
   717                           ; 4 bytes @ 0x13
   718  000014                     	ds	1
   719  000015                     atoi@n:
   720                           	opt callstack 0
   721  000015                     fputs@i:
   722                           	opt callstack 0
   723                           
   724                           ; 2 bytes @ 0x14
   725  000015                     	ds	2
   726  000017                     ??___fldiv:
   727  000017                     ?_pad:
   728                           	opt callstack 0
   729  000017                     pad@fp:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x16
   733  000017                     	ds	1
   734  000018                     ___flmul@temp:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0x17
   738  000018                     	ds	1
   739  000019                     pad@buf:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x18
   743  000019                     	ds	1
   744  00001A                     ?___flsub:
   745                           	opt callstack 0
   746  00001A                     ___flge@ff1:
   747                           	opt callstack 0
   748  00001A                     ___flsub@b:
   749                           	opt callstack 0
   750                           
   751                           ; 4 bytes @ 0x19
   752  00001A                     	ds	1
   753  00001B                     pad@p:
   754                           	opt callstack 0
   755  00001B                     ___fldiv@rem:
   756                           	opt callstack 0
   757                           
   758                           ; 4 bytes @ 0x1A
   759  00001B                     	ds	2
   760  00001D                     ??_pad:
   761                           
   762                           ; 1 bytes @ 0x1C
   763  00001D                     	ds	1
   764  00001E                     pad@i:
   765                           	opt callstack 0
   766  00001E                     ___flge@ff2:
   767                           	opt callstack 0
   768  00001E                     ___flsub@a:
   769                           	opt callstack 0
   770                           
   771                           ; 4 bytes @ 0x1D
   772  00001E                     	ds	1
   773  00001F                     ___fldiv@sign:
   774                           	opt callstack 0
   775                           
   776                           ; 1 bytes @ 0x1E
   777  00001F                     	ds	1
   778  000020                     pad@w:
   779                           	opt callstack 0
   780  000020                     ___fldiv@new_exp:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x1F
   784  000020                     	ds	2
   785  000022                     ??___flge:
   786  000022                     ___fldiv@grs:
   787                           	opt callstack 0
   788                           
   789                           ; 4 bytes @ 0x21
   790  000022                     	ds	4
   791  000026                     ___fldiv@bexp:
   792                           	opt callstack 0
   793                           
   794                           ; 1 bytes @ 0x25
   795  000026                     	ds	1
   796  000027                     ___fldiv@aexp:
   797                           	opt callstack 0
   798                           
   799                           ; 1 bytes @ 0x26
   800  000027                     	ds	1
   801  000028                     ?_floorf:
   802                           	opt callstack 0
   803  000028                     floorf@x:
   804                           	opt callstack 0
   805                           
   806                           ; 4 bytes @ 0x27
   807  000028                     	ds	4
   808  00002C                     ??_floorf:
   809                           
   810                           ; 1 bytes @ 0x2B
   811  00002C                     	ds	6
   812  000032                     floorf@m:
   813                           	opt callstack 0
   814                           
   815                           ; 4 bytes @ 0x31
   816  000032                     	ds	4
   817  000036                     floorf@e:
   818                           	opt callstack 0
   819                           
   820                           ; 2 bytes @ 0x35
   821  000036                     	ds	2
   822  000038                     floorf@u:
   823                           	opt callstack 0
   824                           
   825                           ; 4 bytes @ 0x37
   826  000038                     	ds	4
   827  00003C                     ?_efgtoa:
   828                           	opt callstack 0
   829  00003C                     efgtoa@fp:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x3B
   833  00003C                     	ds	2
   834  00003E                     efgtoa@f:
   835                           	opt callstack 0
   836                           
   837                           ; 4 bytes @ 0x3D
   838  00003E                     	ds	4
   839  000042                     efgtoa@c:
   840                           	opt callstack 0
   841                           
   842                           ; 1 bytes @ 0x41
   843  000042                     	ds	1
   844  000043                     ??_efgtoa:
   845                           
   846                           ; 1 bytes @ 0x42
   847  000043                     	ds	5
   848  000048                     ?_vfpfcnvrt:
   849                           	opt callstack 0
   850  000048                     vfpfcnvrt@fp:
   851                           	opt callstack 0
   852                           
   853                           ; 2 bytes @ 0x47
   854  000048                     	ds	2
   855  00004A                     vfpfcnvrt@fmt:
   856                           	opt callstack 0
   857                           
   858                           ; 2 bytes @ 0x49
   859  00004A                     	ds	2
   860  00004C                     vfpfcnvrt@ap:
   861                           	opt callstack 0
   862                           
   863                           ; 2 bytes @ 0x4B
   864  00004C                     	ds	2
   865  00004E                     ??_vfpfcnvrt:
   866                           
   867                           ; 1 bytes @ 0x4D
   868  00004E                     	ds	4
   869  000052                     _vfpfcnvrt$846:
   870                           	opt callstack 0
   871                           
   872                           ; 2 bytes @ 0x51
   873  000052                     	ds	2
   874  000054                     _vfpfcnvrt$850:
   875                           	opt callstack 0
   876                           
   877                           ; 2 bytes @ 0x53
   878  000054                     	ds	2
   879  000056                     vfpfcnvrt@f:
   880                           	opt callstack 0
   881                           
   882                           ; 4 bytes @ 0x55
   883  000056                     	ds	4
   884  00005A                     vfpfcnvrt@ct:
   885                           	opt callstack 0
   886                           
   887                           ; 3 bytes @ 0x59
   888  00005A                     	ds	3
   889  00005D                     vfpfcnvrt@c:
   890                           	opt callstack 0
   891                           
   892                           ; 1 bytes @ 0x5C
   893  00005D                     	ds	1
   894  00005E                     
   895                           ; 1 bytes @ 0x5D
   896 ;;
   897 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   898 ;;
   899 ;; *************** function _main *****************
   900 ;; Defined at:
   901 ;;		line 17 in file "main.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   915 ;;      Params:         0       0       0       0       0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0
   918 ;;      Totals:         0       0       0       0       0       0       0       0       0
   919 ;;Total ram usage:        0 bytes
   920 ;; Hardware stack levels required when called:   14
   921 ;; This function calls:
   922 ;;		_reset
   923 ;;		_setup
   924 ;;		_stateMachine
   925 ;; This function is called by:
   926 ;;		Startup code after reset
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text0
   931  003CAA                     __ptext0:
   932                           	opt callstack 0
   933  003CAA                     _main:
   934                           	opt callstack 17
   935  003CAA                     
   936                           ;main.c: 19:     setup();
   937  003CAA  EC2D  F01E         	call	_setup	;wreg free
   938  003CAE                     
   939                           ;main.c: 20:     reset();
   940  003CAE  ECFD  F01B         	call	_reset	;wreg free
   941  003CB2                     l4332:
   942  003CB2  ECAC  F012         	call	_stateMachine	;wreg free
   943  003CB6  EF59  F01E         	goto	l4332
   944  003CBA  EF07  F000         	goto	start
   945  003CBE                     __end_of_main:
   946                           	opt callstack 0
   947                           
   948 ;; *************** function _stateMachine *****************
   949 ;; Defined at:
   950 ;;		line 51 in file "statemachine.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;		None
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   964 ;;      Params:         0       0       0       0       0       0       0       0       0
   965 ;;      Locals:         0       0       0       0       0       0       0       0       0
   966 ;;      Temps:          0       2       0       0       0       0       0       0       0
   967 ;;      Totals:         0       2       0       0       0       0       0       0       0
   968 ;;Total ram usage:        2 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:   13
   971 ;; This function calls:
   972 ;;		___fldiv
   973 ;;		___xxtofl
   974 ;;		_displayPlayers
   975 ;;		_limpa_lcd
   976 ;;		_printf
   977 ;;		_reset
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text1
   984  002558                     __ptext1:
   985                           	opt callstack 0
   986  002558                     _stateMachine:
   987                           	opt callstack 17
   988  002558                     
   989                           ;statemachine.c: 52:     switch(currentState){
   990  002558  EFF2  F013         	goto	l4320
   991  00255C                     l4234:
   992                           
   993                           ; BSR set to: 0
   994                           ;statemachine.c: 57:             if(player1Pressed && player2Pressed) gameStatus = 0;
   995  00255C  51CC               	movf	_player1Pressed& (0+255),w,b
   996  00255E  11CD               	iorwf	(_player1Pressed+1)& (0+255),w,b
   997  002560  B4D8               	btfsc	status,2,c
   998  002562  EFB5  F012         	goto	u5111
   999  002566  EFB7  F012         	goto	u5110
  1000  00256A                     u5111:
  1001  00256A  EF1D  F014         	goto	l196
  1002  00256E                     u5110:
  1003  00256E                     
  1004                           ; BSR set to: 0
  1005  00256E  51CA               	movf	_player2Pressed& (0+255),w,b
  1006  002570  11CB               	iorwf	(_player2Pressed+1)& (0+255),w,b
  1007  002572  B4D8               	btfsc	status,2,c
  1008  002574  EFBE  F012         	goto	u5121
  1009  002578  EFC0  F012         	goto	u5120
  1010  00257C                     u5121:
  1011  00257C  EF1D  F014         	goto	l196
  1012  002580                     u5120:
  1013  002580                     
  1014                           ; BSR set to: 0
  1015  002580  0E00               	movlw	0
  1016  002582  6FC5               	movwf	(_gameStatus+1)& (0+255),b
  1017  002584  0E00               	movlw	0
  1018  002586  6FC4               	movwf	_gameStatus& (0+255),b
  1019  002588  EF1D  F014         	goto	l196
  1020  00258C                     l178:
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;statemachine.c: 61:             PORTDbits.RD2 = 1;
  1024  00258C  8483               	bsf	131,2,c	;volatile
  1025  00258E                     
  1026                           ; BSR set to: 0
  1027                           ;statemachine.c: 62:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1028  00258E  0E03               	movlw	3
  1029  002590  0100               	movlb	0	; () banked
  1030  002592  6FAB               	movwf	(??_stateMachine+1)& (0+255),b
  1031  002594  0E8A               	movlw	138
  1032  002596  6FAA               	movwf	??_stateMachine& (0+255),b
  1033  002598  0E55               	movlw	85
  1034  00259A                     u5317:
  1035  00259A  2EE8               	decfsz	wreg,f,c
  1036  00259C  D7FE               	bra	u5317
  1037  00259E  2FAA               	decfsz	??_stateMachine& (0+255),f,b
  1038  0025A0  D7FC               	bra	u5317
  1039  0025A2  2FAB               	decfsz	(??_stateMachine+1)& (0+255),f,b
  1040  0025A4  D7FA               	bra	u5317
  1041  0025A6  D000               	nop2	
  1042  0025A8                     
  1043                           ;statemachine.c: 63:             PORTDbits.RD2 = 0;
  1044  0025A8  9483               	bcf	131,2,c	;volatile
  1045  0025AA                     
  1046                           ;statemachine.c: 65:             currentState = 0xf03;
  1047  0025AA  0E0F               	movlw	15
  1048  0025AC  0100               	movlb	0	; () banked
  1049  0025AE  6FD3               	movwf	(_currentState+1)& (0+255),b
  1050  0025B0  0E03               	movlw	3
  1051  0025B2  6FD2               	movwf	_currentState& (0+255),b
  1052  0025B4                     
  1053                           ; BSR set to: 0
  1054                           ;statemachine.c: 67:             limpa_lcd();
  1055  0025B4  EC3C  F01E         	call	_limpa_lcd	;wreg free
  1056  0025B8                     
  1057                           ;statemachine.c: 68:             printf("WAITING...");
  1058  0025B8  0E01               	movlw	low STR_10
  1059  0025BA  0100               	movlb	0	; () banked
  1060  0025BC  6FA0               	movwf	printf@fmt& (0+255),b
  1061  0025BE  0E08               	movlw	high STR_10
  1062  0025C0  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1063  0025C2  ECBF  F01D         	call	_printf	;wreg free
  1064  0025C6                     
  1065                           ;statemachine.c: 69:             gameStatus = 1;
  1066  0025C6  0E00               	movlw	0
  1067  0025C8  0100               	movlb	0	; () banked
  1068  0025CA  6FC5               	movwf	(_gameStatus+1)& (0+255),b
  1069  0025CC  0E01               	movlw	1
  1070  0025CE  6FC4               	movwf	_gameStatus& (0+255),b
  1071  0025D0                     
  1072                           ; BSR set to: 0
  1073                           ;statemachine.c: 70:             currentTime = 0;
  1074  0025D0  0E00               	movlw	0
  1075  0025D2  6FD1               	movwf	(_currentTime+1)& (0+255),b
  1076  0025D4  0E00               	movlw	0
  1077  0025D6  6FD0               	movwf	_currentTime& (0+255),b
  1078                           
  1079                           ;statemachine.c: 71:             break;
  1080  0025D8  EF1D  F014         	goto	l196
  1081  0025DC                     l4254:
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;statemachine.c: 74:             reset();
  1085  0025DC  ECFD  F01B         	call	_reset	;wreg free
  1086                           
  1087                           ;statemachine.c: 75:             break;
  1088  0025E0  EF1D  F014         	goto	l196
  1089  0025E4                     l4256:
  1090                           
  1091                           ; BSR set to: 0
  1092                           ;statemachine.c: 78:             if((gameStatus) && (player1Pressed) && (player2Pressed)
      +                          ){
  1093  0025E4  51C4               	movf	_gameStatus& (0+255),w,b
  1094  0025E6  11C5               	iorwf	(_gameStatus+1)& (0+255),w,b
  1095  0025E8  B4D8               	btfsc	status,2,c
  1096  0025EA  EFF9  F012         	goto	u5131
  1097  0025EE  EFFB  F012         	goto	u5130
  1098  0025F2                     u5131:
  1099  0025F2  EF13  F013         	goto	l4264
  1100  0025F6                     u5130:
  1101  0025F6                     
  1102                           ; BSR set to: 0
  1103  0025F6  51CC               	movf	_player1Pressed& (0+255),w,b
  1104  0025F8  11CD               	iorwf	(_player1Pressed+1)& (0+255),w,b
  1105  0025FA  B4D8               	btfsc	status,2,c
  1106  0025FC  EF02  F013         	goto	u5141
  1107  002600  EF04  F013         	goto	u5140
  1108  002604                     u5141:
  1109  002604  EF13  F013         	goto	l4264
  1110  002608                     u5140:
  1111  002608                     
  1112                           ; BSR set to: 0
  1113  002608  51CA               	movf	_player2Pressed& (0+255),w,b
  1114  00260A  11CB               	iorwf	(_player2Pressed+1)& (0+255),w,b
  1115  00260C  B4D8               	btfsc	status,2,c
  1116  00260E  EF0B  F013         	goto	u5151
  1117  002612  EF0D  F013         	goto	u5150
  1118  002616                     u5151:
  1119  002616  EF13  F013         	goto	l4264
  1120  00261A                     u5150:
  1121  00261A                     
  1122                           ; BSR set to: 0
  1123                           ;statemachine.c: 79:                 currentState = 0xf04;
  1124  00261A  0E0F               	movlw	15
  1125  00261C  6FD3               	movwf	(_currentState+1)& (0+255),b
  1126  00261E  0E04               	movlw	4
  1127  002620  6FD2               	movwf	_currentState& (0+255),b
  1128                           
  1129                           ;statemachine.c: 80:             }else if(!gameStatus) {
  1130  002622  EF1D  F014         	goto	l196
  1131  002626                     l4264:
  1132                           
  1133                           ; BSR set to: 0
  1134  002626  51C4               	movf	_gameStatus& (0+255),w,b
  1135  002628  11C5               	iorwf	(_gameStatus+1)& (0+255),w,b
  1136  00262A  A4D8               	btfss	status,2,c
  1137  00262C  EF1A  F013         	goto	u5161
  1138  002630  EF1C  F013         	goto	u5160
  1139  002634                     u5161:
  1140  002634  EF22  F013         	goto	l4268
  1141  002638                     u5160:
  1142  002638                     
  1143                           ; BSR set to: 0
  1144                           ;statemachine.c: 81:                 currentState = 0xf02;
  1145  002638  0E0F               	movlw	15
  1146  00263A  6FD3               	movwf	(_currentState+1)& (0+255),b
  1147  00263C  0E02               	movlw	2
  1148  00263E  6FD2               	movwf	_currentState& (0+255),b
  1149                           
  1150                           ;statemachine.c: 82:             }
  1151  002640  EF1D  F014         	goto	l196
  1152  002644                     l4268:
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;statemachine.c: 84:                 currentState = 0xf03;
  1156  002644  0E0F               	movlw	15
  1157  002646  6FD3               	movwf	(_currentState+1)& (0+255),b
  1158  002648  0E03               	movlw	3
  1159  00264A  6FD2               	movwf	_currentState& (0+255),b
  1160  00264C  EF1D  F014         	goto	l196
  1161  002650                     l4270:
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;statemachine.c: 89:             if(gameStatus){
  1165  002650  51C4               	movf	_gameStatus& (0+255),w,b
  1166  002652  11C5               	iorwf	(_gameStatus+1)& (0+255),w,b
  1167  002654  B4D8               	btfsc	status,2,c
  1168  002656  EF2F  F013         	goto	u5171
  1169  00265A  EF31  F013         	goto	u5170
  1170  00265E                     u5171:
  1171  00265E  EF1D  F014         	goto	l196
  1172  002662                     u5170:
  1173  002662                     
  1174                           ; BSR set to: 0
  1175                           ;statemachine.c: 90:                 if(!player1Pressed){
  1176  002662  51CC               	movf	_player1Pressed& (0+255),w,b
  1177  002664  11CD               	iorwf	(_player1Pressed+1)& (0+255),w,b
  1178  002666  A4D8               	btfss	status,2,c
  1179  002668  EF38  F013         	goto	u5181
  1180  00266C  EF3A  F013         	goto	u5180
  1181  002670                     u5181:
  1182  002670  EF1D  F014         	goto	l196
  1183  002674                     u5180:
  1184  002674                     
  1185                           ; BSR set to: 0
  1186                           ;statemachine.c: 91:                     player1Time = (float)currentTime/100.0;
  1187  002674  C0D0  F001         	movff	_currentTime,___xxtofl@val
  1188  002678  C0D1  F002         	movff	_currentTime+1,___xxtofl@val+1
  1189  00267C  0E00               	movlw	0
  1190  00267E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1191  002680  0EFF               	movlw	-1
  1192  002682  6E03               	movwf	(___xxtofl@val+2)^0,c
  1193  002684  6E04               	movwf	(___xxtofl@val+3)^0,c
  1194  002686  0E01               	movlw	1
  1195  002688  EC27  F015         	call	___xxtofl
  1196  00268C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1197  002690  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1198  002694  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1199  002698  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1200  00269C  0E00               	movlw	0
  1201  00269E  6E13               	movwf	___fldiv@a^0,c
  1202  0026A0  0E00               	movlw	0
  1203  0026A2  6E14               	movwf	(___fldiv@a+1)^0,c
  1204  0026A4  0EC8               	movlw	200
  1205  0026A6  6E15               	movwf	(___fldiv@a+2)^0,c
  1206  0026A8  0E42               	movlw	66
  1207  0026AA  6E16               	movwf	(___fldiv@a+3)^0,c
  1208  0026AC  ECDF  F010         	call	___fldiv	;wreg free
  1209  0026B0  C00F  F0B8         	movff	?___fldiv,_player1Time
  1210  0026B4  C010  F0B9         	movff	?___fldiv+1,_player1Time+1
  1211  0026B8  C011  F0BA         	movff	?___fldiv+2,_player1Time+2
  1212  0026BC  C012  F0BB         	movff	?___fldiv+3,_player1Time+3
  1213  0026C0                     
  1214                           ;statemachine.c: 93:                     if(p1concorrency){
  1215  0026C0  0100               	movlb	0	; () banked
  1216  0026C2  51C8               	movf	_p1concorrency& (0+255),w,b
  1217  0026C4  11C9               	iorwf	(_p1concorrency+1)& (0+255),w,b
  1218  0026C6  B4D8               	btfsc	status,2,c
  1219  0026C8  EF68  F013         	goto	u5191
  1220  0026CC  EF6A  F013         	goto	u5190
  1221  0026D0                     u5191:
  1222  0026D0  EF78  F013         	goto	l4286
  1223  0026D4                     u5190:
  1224  0026D4                     
  1225                           ; BSR set to: 0
  1226                           ;statemachine.c: 94:                         player2Time = player1Time;
  1227  0026D4  C0B8  F0B4         	movff	_player1Time,_player2Time
  1228  0026D8  C0B9  F0B5         	movff	_player1Time+1,_player2Time+1
  1229  0026DC  C0BA  F0B6         	movff	_player1Time+2,_player2Time+2
  1230  0026E0  C0BB  F0B7         	movff	_player1Time+3,_player2Time+3
  1231  0026E4                     
  1232                           ; BSR set to: 0
  1233                           ;statemachine.c: 95:                         player2Pressed = 1;
  1234  0026E4  0E00               	movlw	0
  1235  0026E6  6FCB               	movwf	(_player2Pressed+1)& (0+255),b
  1236  0026E8  0E01               	movlw	1
  1237  0026EA  6FCA               	movwf	_player2Pressed& (0+255),b
  1238  0026EC                     
  1239                           ; BSR set to: 0
  1240                           ;statemachine.c: 96:                         PORTCbits.RC0 = 1;
  1241  0026EC  8082               	bsf	130,0,c	;volatile
  1242  0026EE                     
  1243                           ; BSR set to: 0
  1244                           ;statemachine.c: 97:                         PORTCbits.RC1 = 1;
  1245  0026EE  8282               	bsf	130,1,c	;volatile
  1246  0026F0                     l4286:
  1247                           
  1248                           ; BSR set to: 0
  1249                           ;statemachine.c: 100:                     if(!player2Pressed) {
  1250  0026F0  51CA               	movf	_player2Pressed& (0+255),w,b
  1251  0026F2  11CB               	iorwf	(_player2Pressed+1)& (0+255),w,b
  1252  0026F4  A4D8               	btfss	status,2,c
  1253  0026F6  EF7F  F013         	goto	u5201
  1254  0026FA  EF81  F013         	goto	u5200
  1255  0026FE                     u5201:
  1256  0026FE  EF86  F013         	goto	l189
  1257  002702                     u5200:
  1258  002702                     
  1259                           ; BSR set to: 0
  1260                           ;statemachine.c: 101:                         firstPlayer = 0xd01;
  1261  002702  0E0D               	movlw	13
  1262  002704  6FCF               	movwf	(_firstPlayer+1)& (0+255),b
  1263  002706  0E01               	movlw	1
  1264  002708  6FCE               	movwf	_firstPlayer& (0+255),b
  1265  00270A                     
  1266                           ; BSR set to: 0
  1267                           ;statemachine.c: 102:                         PORTCbits.RC0 = 1;
  1268  00270A  8082               	bsf	130,0,c	;volatile
  1269  00270C                     l189:
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;statemachine.c: 105:                     player1Pressed = 1;
  1273  00270C  0E00               	movlw	0
  1274  00270E  6FCD               	movwf	(_player1Pressed+1)& (0+255),b
  1275  002710  0E01               	movlw	1
  1276  002712  6FCC               	movwf	_player1Pressed& (0+255),b
  1277  002714                     l4292:
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;statemachine.c: 106:                     displayPlayers();
  1281  002714  ECC9  F016         	call	_displayPlayers	;wreg free
  1282  002718  EF1D  F014         	goto	l196
  1283  00271C                     l4294:
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;statemachine.c: 112:             if(gameStatus){
  1287  00271C  51C4               	movf	_gameStatus& (0+255),w,b
  1288  00271E  11C5               	iorwf	(_gameStatus+1)& (0+255),w,b
  1289  002720  B4D8               	btfsc	status,2,c
  1290  002722  EF95  F013         	goto	u5211
  1291  002726  EF97  F013         	goto	u5210
  1292  00272A                     u5211:
  1293  00272A  EF1D  F014         	goto	l196
  1294  00272E                     u5210:
  1295  00272E                     
  1296                           ; BSR set to: 0
  1297                           ;statemachine.c: 113:                 if(!player2Pressed){
  1298  00272E  51CA               	movf	_player2Pressed& (0+255),w,b
  1299  002730  11CB               	iorwf	(_player2Pressed+1)& (0+255),w,b
  1300  002732  A4D8               	btfss	status,2,c
  1301  002734  EF9E  F013         	goto	u5221
  1302  002738  EFA0  F013         	goto	u5220
  1303  00273C                     u5221:
  1304  00273C  EF1D  F014         	goto	l196
  1305  002740                     u5220:
  1306  002740                     
  1307                           ; BSR set to: 0
  1308                           ;statemachine.c: 114:                     player2Time = (float)currentTime/100.0;
  1309  002740  C0D0  F001         	movff	_currentTime,___xxtofl@val
  1310  002744  C0D1  F002         	movff	_currentTime+1,___xxtofl@val+1
  1311  002748  0E00               	movlw	0
  1312  00274A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1313  00274C  0EFF               	movlw	-1
  1314  00274E  6E03               	movwf	(___xxtofl@val+2)^0,c
  1315  002750  6E04               	movwf	(___xxtofl@val+3)^0,c
  1316  002752  0E01               	movlw	1
  1317  002754  EC27  F015         	call	___xxtofl
  1318  002758  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1319  00275C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1320  002760  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1321  002764  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1322  002768  0E00               	movlw	0
  1323  00276A  6E13               	movwf	___fldiv@a^0,c
  1324  00276C  0E00               	movlw	0
  1325  00276E  6E14               	movwf	(___fldiv@a+1)^0,c
  1326  002770  0EC8               	movlw	200
  1327  002772  6E15               	movwf	(___fldiv@a+2)^0,c
  1328  002774  0E42               	movlw	66
  1329  002776  6E16               	movwf	(___fldiv@a+3)^0,c
  1330  002778  ECDF  F010         	call	___fldiv	;wreg free
  1331  00277C  C00F  F0B4         	movff	?___fldiv,_player2Time
  1332  002780  C010  F0B5         	movff	?___fldiv+1,_player2Time+1
  1333  002784  C011  F0B6         	movff	?___fldiv+2,_player2Time+2
  1334  002788  C012  F0B7         	movff	?___fldiv+3,_player2Time+3
  1335  00278C                     
  1336                           ;statemachine.c: 116:                     if(p2concorrency){
  1337  00278C  0100               	movlb	0	; () banked
  1338  00278E  51C6               	movf	_p2concorrency& (0+255),w,b
  1339  002790  11C7               	iorwf	(_p2concorrency+1)& (0+255),w,b
  1340  002792  B4D8               	btfsc	status,2,c
  1341  002794  EFCE  F013         	goto	u5231
  1342  002798  EFD0  F013         	goto	u5230
  1343  00279C                     u5231:
  1344  00279C  EFDE  F013         	goto	l4310
  1345  0027A0                     u5230:
  1346  0027A0                     
  1347                           ; BSR set to: 0
  1348                           ;statemachine.c: 117:                         player1Time = player2Time;
  1349  0027A0  C0B4  F0B8         	movff	_player2Time,_player1Time
  1350  0027A4  C0B5  F0B9         	movff	_player2Time+1,_player1Time+1
  1351  0027A8  C0B6  F0BA         	movff	_player2Time+2,_player1Time+2
  1352  0027AC  C0B7  F0BB         	movff	_player2Time+3,_player1Time+3
  1353  0027B0                     
  1354                           ; BSR set to: 0
  1355                           ;statemachine.c: 118:                         player1Pressed = 1;
  1356  0027B0  0E00               	movlw	0
  1357  0027B2  6FCD               	movwf	(_player1Pressed+1)& (0+255),b
  1358  0027B4  0E01               	movlw	1
  1359  0027B6  6FCC               	movwf	_player1Pressed& (0+255),b
  1360  0027B8                     
  1361                           ; BSR set to: 0
  1362                           ;statemachine.c: 119:                         PORTCbits.RC0 = 1;
  1363  0027B8  8082               	bsf	130,0,c	;volatile
  1364  0027BA                     
  1365                           ; BSR set to: 0
  1366                           ;statemachine.c: 120:                         PORTCbits.RC1 = 1;
  1367  0027BA  8282               	bsf	130,1,c	;volatile
  1368  0027BC                     l4310:
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;statemachine.c: 123:                     if(!player1Pressed) {
  1372  0027BC  51CC               	movf	_player1Pressed& (0+255),w,b
  1373  0027BE  11CD               	iorwf	(_player1Pressed+1)& (0+255),w,b
  1374  0027C0  A4D8               	btfss	status,2,c
  1375  0027C2  EFE5  F013         	goto	u5241
  1376  0027C6  EFE7  F013         	goto	u5240
  1377  0027CA                     u5241:
  1378  0027CA  EFEC  F013         	goto	l194
  1379  0027CE                     u5240:
  1380  0027CE                     
  1381                           ; BSR set to: 0
  1382                           ;statemachine.c: 124:                         firstPlayer = 0xd02;
  1383  0027CE  0E0D               	movlw	13
  1384  0027D0  6FCF               	movwf	(_firstPlayer+1)& (0+255),b
  1385  0027D2  0E02               	movlw	2
  1386  0027D4  6FCE               	movwf	_firstPlayer& (0+255),b
  1387  0027D6                     
  1388                           ; BSR set to: 0
  1389                           ;statemachine.c: 125:                         PORTCbits.RC1 = 1;
  1390  0027D6  8282               	bsf	130,1,c	;volatile
  1391  0027D8                     l194:
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;statemachine.c: 128:                     player2Pressed = 1;
  1395  0027D8  0E00               	movlw	0
  1396  0027DA  6FCB               	movwf	(_player2Pressed+1)& (0+255),b
  1397  0027DC  0E01               	movlw	1
  1398  0027DE  6FCA               	movwf	_player2Pressed& (0+255),b
  1399  0027E0  EF8A  F013         	goto	l4292
  1400  0027E4                     l4320:
  1401  0027E4  C0D2  F0AA         	movff	_currentState,??_stateMachine
  1402  0027E8  C0D3  F0AB         	movff	_currentState+1,??_stateMachine+1
  1403                           
  1404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1405                           ; Switch size 1, requested type "simple"
  1406                           ; Number of cases is 1, Range of values is 15 to 15
  1407                           ; switch strategies available:
  1408                           ; Name         Instructions Cycles
  1409                           ; simple_byte            4     3 (average)
  1410                           ;	Chosen strategy is simple_byte
  1411  0027EC  0100               	movlb	0	; () banked
  1412  0027EE  51AB               	movf	(??_stateMachine+1)& (0+255),w,b
  1413  0027F0  0A0F               	xorlw	15	; case 15
  1414  0027F2  B4D8               	btfsc	status,2,c
  1415  0027F4  EFFE  F013         	goto	l4414
  1416  0027F8  EF1D  F014         	goto	l196
  1417  0027FC                     l4414:
  1418                           
  1419                           ; BSR set to: 0
  1420                           ; Switch size 1, requested type "simple"
  1421                           ; Number of cases is 7, Range of values is 1 to 7
  1422                           ; switch strategies available:
  1423                           ; Name         Instructions Cycles
  1424                           ; simple_byte           22    12 (average)
  1425                           ;	Chosen strategy is simple_byte
  1426  0027FC  51AA               	movf	??_stateMachine& (0+255),w,b
  1427  0027FE  0A01               	xorlw	1	; case 1
  1428  002800  B4D8               	btfsc	status,2,c
  1429  002802  EF1D  F014         	goto	l196
  1430  002806  0A03               	xorlw	3	; case 2
  1431  002808  B4D8               	btfsc	status,2,c
  1432  00280A  EFC6  F012         	goto	l178
  1433  00280E  0A01               	xorlw	1	; case 3
  1434  002810  B4D8               	btfsc	status,2,c
  1435  002812  EFAE  F012         	goto	l4234
  1436  002816  0A07               	xorlw	7	; case 4
  1437  002818  B4D8               	btfsc	status,2,c
  1438  00281A  EFEE  F012         	goto	l4254
  1439  00281E  0A01               	xorlw	1	; case 5
  1440  002820  B4D8               	btfsc	status,2,c
  1441  002822  EF28  F013         	goto	l4270
  1442  002826  0A03               	xorlw	3	; case 6
  1443  002828  B4D8               	btfsc	status,2,c
  1444  00282A  EF8E  F013         	goto	l4294
  1445  00282E  0A01               	xorlw	1	; case 7
  1446  002830  B4D8               	btfsc	status,2,c
  1447  002832  EFF2  F012         	goto	l4256
  1448  002836  EF1D  F014         	goto	l196
  1449  00283A                     l196:
  1450  00283A  0012               	return		;funcret
  1451  00283C                     __end_of_stateMachine:
  1452                           	opt callstack 0
  1453                           
  1454 ;; *************** function _reset *****************
  1455 ;; Defined at:
  1456 ;;		line 31 in file "statemachine.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0
  1471 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1473 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1474 ;;Total ram usage:        0 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:   12
  1477 ;; This function calls:
  1478 ;;		_limpa_lcd
  1479 ;;		_printf
  1480 ;; This function is called by:
  1481 ;;		_main
  1482 ;;		_stateMachine
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text2
  1487  0037FA                     __ptext2:
  1488                           	opt callstack 0
  1489  0037FA                     _reset:
  1490                           	opt callstack 17
  1491  0037FA                     
  1492                           ;statemachine.c: 32:     gameStatus = 0;
  1493  0037FA  0E00               	movlw	0
  1494  0037FC  0100               	movlb	0	; () banked
  1495  0037FE  6FC5               	movwf	(_gameStatus+1)& (0+255),b
  1496  003800  0E00               	movlw	0
  1497  003802  6FC4               	movwf	_gameStatus& (0+255),b
  1498                           
  1499                           ;statemachine.c: 34:     currentTime = 0;
  1500  003804  0E00               	movlw	0
  1501  003806  6FD1               	movwf	(_currentTime+1)& (0+255),b
  1502  003808  0E00               	movlw	0
  1503  00380A  6FD0               	movwf	_currentTime& (0+255),b
  1504                           
  1505                           ;statemachine.c: 35:     firstPlayer = 0;
  1506  00380C  0E00               	movlw	0
  1507  00380E  6FCF               	movwf	(_firstPlayer+1)& (0+255),b
  1508  003810  0E00               	movlw	0
  1509  003812  6FCE               	movwf	_firstPlayer& (0+255),b
  1510                           
  1511                           ;statemachine.c: 36:     player1Time = 0;
  1512  003814  0E00               	movlw	0
  1513  003816  6FB8               	movwf	_player1Time& (0+255),b
  1514  003818  0E00               	movlw	0
  1515  00381A  6FB9               	movwf	(_player1Time+1)& (0+255),b
  1516  00381C  0E00               	movlw	0
  1517  00381E  6FBA               	movwf	(_player1Time+2)& (0+255),b
  1518  003820  0E00               	movlw	0
  1519  003822  6FBB               	movwf	(_player1Time+3)& (0+255),b
  1520                           
  1521                           ;statemachine.c: 37:     player2Time = 0;
  1522  003824  0E00               	movlw	0
  1523  003826  6FB4               	movwf	_player2Time& (0+255),b
  1524  003828  0E00               	movlw	0
  1525  00382A  6FB5               	movwf	(_player2Time+1)& (0+255),b
  1526  00382C  0E00               	movlw	0
  1527  00382E  6FB6               	movwf	(_player2Time+2)& (0+255),b
  1528  003830  0E00               	movlw	0
  1529  003832  6FB7               	movwf	(_player2Time+3)& (0+255),b
  1530                           
  1531                           ;statemachine.c: 39:     player1Pressed = 0;
  1532  003834  0E00               	movlw	0
  1533  003836  6FCD               	movwf	(_player1Pressed+1)& (0+255),b
  1534  003838  0E00               	movlw	0
  1535  00383A  6FCC               	movwf	_player1Pressed& (0+255),b
  1536                           
  1537                           ;statemachine.c: 40:     player2Pressed = 0;
  1538  00383C  0E00               	movlw	0
  1539  00383E  6FCB               	movwf	(_player2Pressed+1)& (0+255),b
  1540  003840  0E00               	movlw	0
  1541  003842  6FCA               	movwf	_player2Pressed& (0+255),b
  1542  003844                     
  1543                           ; BSR set to: 0
  1544                           ;statemachine.c: 42:     PORTCbits.RC0 = 0;
  1545  003844  9082               	bcf	130,0,c	;volatile
  1546  003846                     
  1547                           ; BSR set to: 0
  1548                           ;statemachine.c: 43:     PORTCbits.RC1 = 0;
  1549  003846  9282               	bcf	130,1,c	;volatile
  1550                           
  1551                           ;statemachine.c: 45:     currentState = 0xf01;
  1552  003848  0E0F               	movlw	15
  1553  00384A  6FD3               	movwf	(_currentState+1)& (0+255),b
  1554  00384C  0E01               	movlw	1
  1555  00384E  6FD2               	movwf	_currentState& (0+255),b
  1556  003850                     
  1557                           ; BSR set to: 0
  1558                           ;statemachine.c: 47:     limpa_lcd();
  1559  003850  EC3C  F01E         	call	_limpa_lcd	;wreg free
  1560  003854                     
  1561                           ;statemachine.c: 48:     printf("IDLE...");
  1562  003854  0E22               	movlw	low STR_9
  1563  003856  0100               	movlb	0	; () banked
  1564  003858  6FA0               	movwf	printf@fmt& (0+255),b
  1565  00385A  0E08               	movlw	high STR_9
  1566  00385C  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1567  00385E  ECBF  F01D         	call	_printf	;wreg free
  1568  003862  0012               	return		;funcret
  1569  003864                     __end_of_reset:
  1570                           	opt callstack 0
  1571                           
  1572 ;; *************** function _displayPlayers *****************
  1573 ;; Defined at:
  1574 ;;		line 10 in file "statemachine.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1588 ;;      Params:         0       0       0       0       0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1591 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:   12
  1595 ;; This function calls:
  1596 ;;		_caracter_inicio
  1597 ;;		_limpa_lcd
  1598 ;;		_printf
  1599 ;; This function is called by:
  1600 ;;		_stateMachine
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text3
  1605  002D92                     __ptext3:
  1606                           	opt callstack 0
  1607  002D92                     _displayPlayers:
  1608                           	opt callstack 17
  1609  002D92                     
  1610                           ;statemachine.c: 11:     limpa_lcd();
  1611  002D92  EC3C  F01E         	call	_limpa_lcd	;wreg free
  1612  002D96                     
  1613                           ;statemachine.c: 12:     if(player1Pressed && player2Pressed) {
  1614  002D96  0100               	movlb	0	; () banked
  1615  002D98  51CC               	movf	_player1Pressed& (0+255),w,b
  1616  002D9A  11CD               	iorwf	(_player1Pressed+1)& (0+255),w,b
  1617  002D9C  B4D8               	btfsc	status,2,c
  1618  002D9E  EFD3  F016         	goto	u4951
  1619  002DA2  EFD5  F016         	goto	u4950
  1620  002DA6                     u4951:
  1621  002DA6  EF02  F017         	goto	l4148
  1622  002DAA                     u4950:
  1623  002DAA                     
  1624                           ; BSR set to: 0
  1625  002DAA  51CA               	movf	_player2Pressed& (0+255),w,b
  1626  002DAC  11CB               	iorwf	(_player2Pressed+1)& (0+255),w,b
  1627  002DAE  B4D8               	btfsc	status,2,c
  1628  002DB0  EFDC  F016         	goto	u4961
  1629  002DB4  EFDE  F016         	goto	u4960
  1630  002DB8                     u4961:
  1631  002DB8  EF02  F017         	goto	l4148
  1632  002DBC                     u4960:
  1633  002DBC                     
  1634                           ; BSR set to: 0
  1635                           ;statemachine.c: 13:         printf("P1: %.2f s",player1Time);
  1636  002DBC  0E0C               	movlw	low STR_1
  1637  002DBE  6FA0               	movwf	printf@fmt& (0+255),b
  1638  002DC0  0E08               	movlw	high STR_1
  1639  002DC2  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1640  002DC4  C0B8  F0A2         	movff	_player1Time,?_printf+2
  1641  002DC8  C0B9  F0A3         	movff	_player1Time+1,?_printf+3
  1642  002DCC  C0BA  F0A4         	movff	_player1Time+2,?_printf+4
  1643  002DD0  C0BB  F0A5         	movff	_player1Time+3,?_printf+5
  1644  002DD4  ECBF  F01D         	call	_printf	;wreg free
  1645  002DD8                     
  1646                           ;statemachine.c: 14:         caracter_inicio(2,0);
  1647  002DD8  0E00               	movlw	0
  1648  002DDA  6E05               	movwf	caracter_inicio@coluna^0,c
  1649  002DDC  0E02               	movlw	2
  1650  002DDE  EC2F  F01D         	call	_caracter_inicio
  1651  002DE2                     
  1652                           ;statemachine.c: 15:         printf("P2: %.2f s", player2Time);
  1653  002DE2  0E17               	movlw	low STR_2
  1654  002DE4  0100               	movlb	0	; () banked
  1655  002DE6  6FA0               	movwf	printf@fmt& (0+255),b
  1656  002DE8  0E08               	movlw	high STR_2
  1657  002DEA  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1658  002DEC  C0B4  F0A2         	movff	_player2Time,?_printf+2
  1659  002DF0  C0B5  F0A3         	movff	_player2Time+1,?_printf+3
  1660  002DF4  C0B6  F0A4         	movff	_player2Time+2,?_printf+4
  1661  002DF8  C0B7  F0A5         	movff	_player2Time+3,?_printf+5
  1662  002DFC  ECBF  F01D         	call	_printf	;wreg free
  1663                           
  1664                           ;statemachine.c: 16:     }else if(player1Pressed && !player2Pressed) {
  1665  002E00  EF70  F017         	goto	l167
  1666  002E04                     l4148:
  1667                           
  1668                           ; BSR set to: 0
  1669  002E04  51CC               	movf	_player1Pressed& (0+255),w,b
  1670  002E06  11CD               	iorwf	(_player1Pressed+1)& (0+255),w,b
  1671  002E08  B4D8               	btfsc	status,2,c
  1672  002E0A  EF09  F017         	goto	u4971
  1673  002E0E  EF0B  F017         	goto	u4970
  1674  002E12                     u4971:
  1675  002E12  EF30  F017         	goto	l4158
  1676  002E16                     u4970:
  1677  002E16                     
  1678                           ; BSR set to: 0
  1679  002E16  51CA               	movf	_player2Pressed& (0+255),w,b
  1680  002E18  11CB               	iorwf	(_player2Pressed+1)& (0+255),w,b
  1681  002E1A  A4D8               	btfss	status,2,c
  1682  002E1C  EF12  F017         	goto	u4981
  1683  002E20  EF14  F017         	goto	u4980
  1684  002E24                     u4981:
  1685  002E24  EF30  F017         	goto	l4158
  1686  002E28                     u4980:
  1687  002E28                     
  1688                           ; BSR set to: 0
  1689                           ;statemachine.c: 17:         printf("P1: %.2f s",player1Time);
  1690  002E28  0E0C               	movlw	low STR_1
  1691  002E2A  6FA0               	movwf	printf@fmt& (0+255),b
  1692  002E2C  0E08               	movlw	high STR_1
  1693  002E2E  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1694  002E30  C0B8  F0A2         	movff	_player1Time,?_printf+2
  1695  002E34  C0B9  F0A3         	movff	_player1Time+1,?_printf+3
  1696  002E38  C0BA  F0A4         	movff	_player1Time+2,?_printf+4
  1697  002E3C  C0BB  F0A5         	movff	_player1Time+3,?_printf+5
  1698  002E40  ECBF  F01D         	call	_printf	;wreg free
  1699  002E44                     
  1700                           ;statemachine.c: 18:         caracter_inicio(2,0);
  1701  002E44  0E00               	movlw	0
  1702  002E46  6E05               	movwf	caracter_inicio@coluna^0,c
  1703  002E48  0E02               	movlw	2
  1704  002E4A  EC2F  F01D         	call	_caracter_inicio
  1705  002E4E                     
  1706                           ;statemachine.c: 19:         printf("P2: - s");
  1707  002E4E  0E32               	movlw	low STR_4
  1708  002E50  0100               	movlb	0	; () banked
  1709  002E52  6FA0               	movwf	printf@fmt& (0+255),b
  1710  002E54  0E08               	movlw	high STR_4
  1711  002E56  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1712  002E58  ECBF  F01D         	call	_printf	;wreg free
  1713                           
  1714                           ;statemachine.c: 20:     }else if(!player1Pressed && player2Pressed) {
  1715  002E5C  EF70  F017         	goto	l167
  1716  002E60                     l4158:
  1717                           
  1718                           ; BSR set to: 0
  1719  002E60  51CC               	movf	_player1Pressed& (0+255),w,b
  1720  002E62  11CD               	iorwf	(_player1Pressed+1)& (0+255),w,b
  1721  002E64  A4D8               	btfss	status,2,c
  1722  002E66  EF37  F017         	goto	u4991
  1723  002E6A  EF39  F017         	goto	u4990
  1724  002E6E                     u4991:
  1725  002E6E  EF5E  F017         	goto	l4168
  1726  002E72                     u4990:
  1727  002E72                     
  1728                           ; BSR set to: 0
  1729  002E72  51CA               	movf	_player2Pressed& (0+255),w,b
  1730  002E74  11CB               	iorwf	(_player2Pressed+1)& (0+255),w,b
  1731  002E76  B4D8               	btfsc	status,2,c
  1732  002E78  EF40  F017         	goto	u5001
  1733  002E7C  EF42  F017         	goto	u5000
  1734  002E80                     u5001:
  1735  002E80  EF5E  F017         	goto	l4168
  1736  002E84                     u5000:
  1737  002E84                     
  1738                           ; BSR set to: 0
  1739                           ;statemachine.c: 21:         printf("P1: - s");
  1740  002E84  0E2A               	movlw	low STR_5
  1741  002E86  6FA0               	movwf	printf@fmt& (0+255),b
  1742  002E88  0E08               	movlw	high STR_5
  1743  002E8A  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1744  002E8C  ECBF  F01D         	call	_printf	;wreg free
  1745  002E90                     
  1746                           ;statemachine.c: 22:         caracter_inicio(2,0);
  1747  002E90  0E00               	movlw	0
  1748  002E92  6E05               	movwf	caracter_inicio@coluna^0,c
  1749  002E94  0E02               	movlw	2
  1750  002E96  EC2F  F01D         	call	_caracter_inicio
  1751  002E9A                     
  1752                           ;statemachine.c: 23:         printf("P2: %.2f s", player2Time);
  1753  002E9A  0E17               	movlw	low STR_2
  1754  002E9C  0100               	movlb	0	; () banked
  1755  002E9E  6FA0               	movwf	printf@fmt& (0+255),b
  1756  002EA0  0E08               	movlw	high STR_2
  1757  002EA2  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1758  002EA4  C0B4  F0A2         	movff	_player2Time,?_printf+2
  1759  002EA8  C0B5  F0A3         	movff	_player2Time+1,?_printf+3
  1760  002EAC  C0B6  F0A4         	movff	_player2Time+2,?_printf+4
  1761  002EB0  C0B7  F0A5         	movff	_player2Time+3,?_printf+5
  1762  002EB4  ECBF  F01D         	call	_printf	;wreg free
  1763                           
  1764                           ;statemachine.c: 24:     }else {
  1765  002EB8  EF70  F017         	goto	l167
  1766  002EBC                     l4168:
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;statemachine.c: 25:         printf("P1: - s");
  1770  002EBC  0E2A               	movlw	low STR_5
  1771  002EBE  6FA0               	movwf	printf@fmt& (0+255),b
  1772  002EC0  0E08               	movlw	high STR_5
  1773  002EC2  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1774  002EC4  ECBF  F01D         	call	_printf	;wreg free
  1775  002EC8                     
  1776                           ;statemachine.c: 26:         caracter_inicio(2,0);
  1777  002EC8  0E00               	movlw	0
  1778  002ECA  6E05               	movwf	caracter_inicio@coluna^0,c
  1779  002ECC  0E02               	movlw	2
  1780  002ECE  EC2F  F01D         	call	_caracter_inicio
  1781  002ED2                     
  1782                           ;statemachine.c: 27:         printf("P2: - s");
  1783  002ED2  0E32               	movlw	low STR_4
  1784  002ED4  0100               	movlb	0	; () banked
  1785  002ED6  6FA0               	movwf	printf@fmt& (0+255),b
  1786  002ED8  0E08               	movlw	high STR_4
  1787  002EDA  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1788  002EDC  ECBF  F01D         	call	_printf	;wreg free
  1789  002EE0                     l167:
  1790  002EE0  0012               	return		;funcret
  1791  002EE2                     __end_of_displayPlayers:
  1792                           	opt callstack 0
  1793                           
  1794 ;; *************** function _printf *****************
  1795 ;; Defined at:
  1796 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  1799 ;;		 -> STR_10(11), STR_9(8), STR_8(8), STR_7(8), 
  1800 ;;		 -> STR_6(11), STR_5(8), STR_4(8), STR_3(11), 
  1801 ;;		 -> STR_2(11), STR_1(11), 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  ap              2   72[BANK0 ] PTR void [1]
  1804 ;;		 -> ?_printf(2), 
  1805 ;;  ret             2    0        int 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  2   64[BANK0 ] int 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1815 ;;      Params:         0       6       0       0       0       0       0       0       0
  1816 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1818 ;;      Totals:         0      10       0       0       0       0       0       0       0
  1819 ;;Total ram usage:       10 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:   11
  1822 ;; This function calls:
  1823 ;;		_vfprintf
  1824 ;; This function is called by:
  1825 ;;		_displayPlayers
  1826 ;;		_reset
  1827 ;;		_stateMachine
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text4
  1832  003B7E                     __ptext4:
  1833                           	opt callstack 0
  1834  003B7E                     _printf:
  1835                           	opt callstack 17
  1836  003B7E  0EA2               	movlw	low (?_printf+2)
  1837  003B80  0100               	movlb	0	; () banked
  1838  003B82  6FA8               	movwf	printf@ap& (0+255),b
  1839  003B84  0E00               	movlw	high (?_printf+2)
  1840  003B86  6FA9               	movwf	(printf@ap+1)& (0+255),b
  1841  003B88                     
  1842                           ; BSR set to: 0
  1843  003B88  0E00               	movlw	0
  1844  003B8A  6F98               	movwf	vfprintf@fp& (0+255),b
  1845  003B8C  0E00               	movlw	0
  1846  003B8E  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  1847  003B90  C0A0  F09A         	movff	printf@fmt,vfprintf@fmt
  1848  003B94  C0A1  F09B         	movff	printf@fmt+1,vfprintf@fmt+1
  1849  003B98  0EA8               	movlw	low printf@ap
  1850  003B9A  6F9C               	movwf	vfprintf@ap& (0+255),b
  1851  003B9C  0E00               	movlw	high printf@ap
  1852  003B9E  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  1853  003BA0  EC32  F01C         	call	_vfprintf	;wreg free
  1854  003BA4  0012               	return		;funcret
  1855  003BA6                     __end_of_printf:
  1856                           	opt callstack 0
  1857                           
  1858 ;; *************** function _vfprintf *****************
  1859 ;; Defined at:
  1860 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1863 ;;		 -> NULL(0), 
  1864 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1865 ;;		 -> STR_10(11), STR_9(8), STR_8(8), STR_7(8), 
  1866 ;;		 -> STR_6(11), STR_5(8), STR_4(8), STR_3(11), 
  1867 ;;		 -> STR_2(11), STR_1(11), 
  1868 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1869 ;;		 -> printf@ap(2), 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  cfmt            2   62[BANK0 ] PTR unsigned char 
  1872 ;;		 -> STR_10(11), STR_9(8), STR_8(8), STR_7(8), 
  1873 ;;		 -> STR_6(11), STR_5(8), STR_4(8), STR_3(11), 
  1874 ;;		 -> STR_2(11), STR_1(11), 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  2   56[BANK0 ] int 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1884 ;;      Params:         0       6       0       0       0       0       0       0       0
  1885 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1887 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1888 ;;Total ram usage:        8 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:   10
  1891 ;; This function calls:
  1892 ;;		_vfpfcnvrt
  1893 ;; This function is called by:
  1894 ;;		_printf
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text5
  1899  003864                     __ptext5:
  1900                           	opt callstack 0
  1901  003864                     _vfprintf:
  1902                           	opt callstack 17
  1903  003864                     
  1904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1905  003864  C09A  F09E         	movff	vfprintf@fmt,vfprintf@cfmt
  1906  003868  C09B  F09F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1907  00386C                     
  1908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1909  00386C  0E00               	movlw	0
  1910  00386E  0100               	movlb	0	; () banked
  1911  003870  6FBD               	movwf	(_nout+1)& (0+255),b
  1912  003872  0E00               	movlw	0
  1913  003874  6FBC               	movwf	_nout& (0+255),b
  1914                           
  1915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1916  003876  EF50  F01C         	goto	l4078
  1917  00387A                     l4076:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1921  00387A  C098  F048         	movff	vfprintf@fp,vfpfcnvrt@fp
  1922  00387E  C099  F049         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1923  003882  0E9E               	movlw	low vfprintf@cfmt
  1924  003884  6E4A               	movwf	vfpfcnvrt@fmt^0,c
  1925  003886  0E00               	movlw	high vfprintf@cfmt
  1926  003888  6E4B               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1927  00388A  C09C  F04C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1928  00388E  C09D  F04D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1929  003892  EC86  F00C         	call	_vfpfcnvrt	;wreg free
  1930  003896  5048               	movf	?_vfpfcnvrt^0,w,c
  1931  003898  0100               	movlb	0	; () banked
  1932  00389A  27BC               	addwf	_nout& (0+255),f,b
  1933  00389C  5049               	movf	(?_vfpfcnvrt+1)^0,w,c
  1934  00389E  23BD               	addwfc	(_nout+1)& (0+255),f,b
  1935  0038A0                     l4078:
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1939  0038A0  C09E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1940  0038A4  C09F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1941  0038A8                     	if	0	;tblptru may be non-zero
  1942  0038A8                     	endif
  1943  0038A8                     	if	0	;tblptru may be non-zero
  1944  0038A8                     	endif
  1945  0038A8  0008               	tblrd		*
  1946  0038AA  50F5               	movf	tablat,w,c
  1947  0038AC  0900               	iorlw	0
  1948  0038AE  A4D8               	btfss	status,2,c
  1949  0038B0  EF5C  F01C         	goto	u4921
  1950  0038B4  EF5E  F01C         	goto	u4920
  1951  0038B8                     u4921:
  1952  0038B8  EF3D  F01C         	goto	l4076
  1953  0038BC                     u4920:
  1954  0038BC                     
  1955                           ; BSR set to: 0
  1956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1957  0038BC  C0BC  F098         	movff	_nout,?_vfprintf
  1958  0038C0  C0BD  F099         	movff	_nout+1,?_vfprintf+1
  1959  0038C4                     
  1960                           ; BSR set to: 0
  1961  0038C4  0012               	return		;funcret
  1962  0038C6                     __end_of_vfprintf:
  1963                           	opt callstack 0
  1964                           
  1965 ;; *************** function _vfpfcnvrt *****************
  1966 ;; Defined at:
  1967 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  fp              2   71[COMRAM] PTR struct _IO_FILE
  1970 ;;		 -> NULL(0), 
  1971 ;;  fmt             2   73[COMRAM] PTR PTR unsigned char 
  1972 ;;		 -> vfprintf@cfmt(2), 
  1973 ;;  ap              2   75[COMRAM] PTR PTR void 
  1974 ;;		 -> printf@ap(2), 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;  llu             8    0        unsigned long long 
  1977 ;;  ll              8    0        long long 
  1978 ;;  f               4   85[COMRAM] long long 
  1979 ;;  ct              3   89[COMRAM] unsigned char [3]
  1980 ;;  vp              3    0        PTR void 
  1981 ;;  cp              3    0        PTR unsigned char 
  1982 ;;  i               2    0        int 
  1983 ;;  done            2    0        int 
  1984 ;;  c               1   92[COMRAM] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  2   71[COMRAM] int 
  1987 ;; Registers used:
  1988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1994 ;;      Params:         6       0       0       0       0       0       0       0       0
  1995 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1996 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1997 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1998 ;;Total ram usage:       22 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    9
  2001 ;; This function calls:
  2002 ;;		_atoi
  2003 ;;		_efgtoa
  2004 ;;		_fputc
  2005 ;;		_isdigit
  2006 ;;		_isupper
  2007 ;;		_strncmp
  2008 ;;		_tolower
  2009 ;; This function is called by:
  2010 ;;		_vfprintf
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text6
  2015  00190C                     __ptext6:
  2016                           	opt callstack 0
  2017  00190C                     _vfpfcnvrt:
  2018                           	opt callstack 17
  2019  00190C                     
  2020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2021  00190C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2022  001910  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2023  001914  CFDE FFF6          	movff	postinc2,tblptrl
  2024  001918  CFDD FFF7          	movff	postdec2,tblptrh
  2025  00191C                     	if	0	;tblptru may be non-zero
  2026  00191C                     	endif
  2027  00191C                     	if	0	;tblptru may be non-zero
  2028  00191C                     	endif
  2029  00191C  0008               	tblrd		*
  2030  00191E  50F5               	movf	tablat,w,c
  2031  001920  0A25               	xorlw	37
  2032  001922  A4D8               	btfss	status,2,c
  2033  001924  EF96  F00C         	goto	u4781
  2034  001928  EF98  F00C         	goto	u4780
  2035  00192C                     u4781:
  2036  00192C  EFAE  F00E         	goto	l4064
  2037  001930                     u4780:
  2038  001930                     
  2039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2040  001930  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2041  001934  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2042  001938  2ADE               	incf	postinc2,f,c
  2043  00193A  0E00               	movlw	0
  2044  00193C  22DD               	addwfc	postdec2,f,c
  2045  00193E                     
  2046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2047  00193E  0E00               	movlw	0
  2048  001940  0100               	movlb	0	; () banked
  2049  001942  6FBF               	movwf	(_width+1)& (0+255),b
  2050  001944  0E00               	movlw	0
  2051  001946  6FBE               	movwf	_width& (0+255),b
  2052  001948  C0BE  F0C2         	movff	_width,_flags
  2053  00194C  C0BF  F0C3         	movff	_width+1,_flags+1
  2054  001950                     
  2055                           ; BSR set to: 0
  2056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2057  001950  69C0               	setf	_prec& (0+255),b
  2058  001952  69C1               	setf	(_prec+1)& (0+255),b
  2059  001954                     
  2060                           ; BSR set to: 0
  2061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2062  001954  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2063  001958  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2064  00195C  CFDE FFF6          	movff	postinc2,tblptrl
  2065  001960  CFDD FFF7          	movff	postdec2,tblptrh
  2066  001964                     	if	0	;tblptru may be non-zero
  2067  001964                     	endif
  2068  001964                     	if	0	;tblptru may be non-zero
  2069  001964                     	endif
  2070  001964  0008               	tblrd		*
  2071  001966  50F5               	movf	tablat,w,c
  2072  001968  0A2E               	xorlw	46
  2073  00196A  A4D8               	btfss	status,2,c
  2074  00196C  EFBA  F00C         	goto	u4791
  2075  001970  EFBC  F00C         	goto	u4790
  2076  001974                     u4791:
  2077  001974  EF39  F00D         	goto	l4010
  2078  001978                     u4790:
  2079  001978                     
  2080                           ; BSR set to: 0
  2081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2082  001978  0E00               	movlw	0
  2083  00197A  6FC1               	movwf	(_prec+1)& (0+255),b
  2084  00197C  0E00               	movlw	0
  2085  00197E  6FC0               	movwf	_prec& (0+255),b
  2086  001980                     
  2087                           ; BSR set to: 0
  2088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2089  001980  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2090  001984  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2091  001988  2ADE               	incf	postinc2,f,c
  2092  00198A  0E00               	movlw	0
  2093  00198C  22DD               	addwfc	postdec2,f,c
  2094  00198E                     
  2095                           ; BSR set to: 0
  2096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2097  00198E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2098  001992  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2099  001996  CFDE FFF6          	movff	postinc2,tblptrl
  2100  00199A  CFDD FFF7          	movff	postdec2,tblptrh
  2101  00199E                     	if	0	;tblptru may be non-zero
  2102  00199E                     	endif
  2103  00199E                     	if	0	;tblptru may be non-zero
  2104  00199E                     	endif
  2105  00199E  0008               	tblrd		*
  2106  0019A0  50F5               	movf	tablat,w,c
  2107  0019A2  0A2A               	xorlw	42
  2108  0019A4  A4D8               	btfss	status,2,c
  2109  0019A6  EFD7  F00C         	goto	u4801
  2110  0019AA  EFD9  F00C         	goto	u4800
  2111  0019AE                     u4801:
  2112  0019AE  EFF6  F00C         	goto	l4000
  2113  0019B2                     u4800:
  2114  0019B2                     
  2115                           ; BSR set to: 0
  2116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2117  0019B2  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2118  0019B6  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2119  0019BA  2ADE               	incf	postinc2,f,c
  2120  0019BC  0E00               	movlw	0
  2121  0019BE  22DD               	addwfc	postdec2,f,c
  2122                           
  2123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2124  0019C0  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2125  0019C4  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2126  0019C8  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  2127  0019CC  0E02               	movlw	2
  2128  0019CE  26DE               	addwf	postinc2,f,c
  2129  0019D0  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  2130  0019D4  0E00               	movlw	0
  2131  0019D6  22DD               	addwfc	postdec2,f,c
  2132  0019D8  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2133  0019DC  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2134  0019E0  CFDE F0C0          	movff	postinc2,_prec
  2135  0019E4  CFDD F0C1          	movff	postdec2,_prec+1
  2136                           
  2137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2138  0019E8  EF39  F00D         	goto	l4010
  2139  0019EC                     l4000:
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2143  0019EC  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2144  0019F0  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2145  0019F4  CFDE F008          	movff	postinc2,atoi@s
  2146  0019F8  CFDD F009          	movff	postdec2,atoi@s+1
  2147  0019FC  EC01  F016         	call	_atoi	;wreg free
  2148  001A00  C008  F0C0         	movff	?_atoi,_prec
  2149  001A04  C009  F0C1         	movff	?_atoi+1,_prec+1
  2150                           
  2151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2152  001A08  EF0D  F00D         	goto	l4004
  2153  001A0C                     l4002:
  2154                           
  2155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2156  001A0C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2157  001A10  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2158  001A14  2ADE               	incf	postinc2,f,c
  2159  001A16  0E00               	movlw	0
  2160  001A18  22DD               	addwfc	postdec2,f,c
  2161  001A1A                     l4004:
  2162  001A1A  0ED0               	movlw	208
  2163  001A1C  6E4E               	movwf	??_vfpfcnvrt^0,c
  2164  001A1E  0EFF               	movlw	255
  2165  001A20  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  2166  001A22  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2167  001A26  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2168  001A2A  CFDE FFF6          	movff	postinc2,tblptrl
  2169  001A2E  CFDD FFF7          	movff	postdec2,tblptrh
  2170  001A32                     	if	0	;tblptru may be non-zero
  2171  001A32                     	endif
  2172  001A32                     	if	0	;tblptru may be non-zero
  2173  001A32                     	endif
  2174  001A32  0008               	tblrd		*
  2175  001A34  50F5               	movf	tablat,w,c
  2176  001A36  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  2177  001A38  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  2178  001A3A  504E               	movf	??_vfpfcnvrt^0,w,c
  2179  001A3C  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2180  001A3E  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2181  001A40  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2182  001A42  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  2183  001A44  E10A               	bnz	u4810
  2184  001A46  0E0A               	movlw	10
  2185  001A48  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2186  001A4A  A0D8               	btfss	status,0,c
  2187  001A4C  EF2A  F00D         	goto	u4811
  2188  001A50  EF2D  F00D         	goto	u4810
  2189  001A54                     u4811:
  2190  001A54  0E01               	movlw	1
  2191  001A56  EF2E  F00D         	goto	u4820
  2192  001A5A                     u4810:
  2193  001A5A  0E00               	movlw	0
  2194  001A5C                     u4820:
  2195  001A5C  6E52               	movwf	_vfpfcnvrt$846^0,c
  2196  001A5E  6A53               	clrf	(_vfpfcnvrt$846+1)^0,c
  2197  001A60  5052               	movf	_vfpfcnvrt$846^0,w,c
  2198  001A62  1053               	iorwf	(_vfpfcnvrt$846+1)^0,w,c
  2199  001A64  A4D8               	btfss	status,2,c
  2200  001A66  EF37  F00D         	goto	u4831
  2201  001A6A  EF39  F00D         	goto	u4830
  2202  001A6E                     u4831:
  2203  001A6E  EF06  F00D         	goto	l4002
  2204  001A72                     u4830:
  2205  001A72                     l4010:
  2206                           
  2207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2208  001A72  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2209  001A76  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2210  001A7A  CFDE FFF6          	movff	postinc2,tblptrl
  2211  001A7E  CFDD FFF7          	movff	postdec2,tblptrh
  2212  001A82                     	if	0	;tblptru may be non-zero
  2213  001A82                     	endif
  2214  001A82                     	if	0	;tblptru may be non-zero
  2215  001A82                     	endif
  2216  001A82  0008               	tblrd		*
  2217  001A84  50F5               	movf	tablat,w,c
  2218  001A86  6E07               	movwf	tolower@c^0,c
  2219  001A88  6A08               	clrf	(tolower@c+1)^0,c
  2220  001A8A  EC63  F01C         	call	_tolower	;wreg free
  2221  001A8E  5007               	movf	?_tolower^0,w,c
  2222  001A90  6E5A               	movwf	vfpfcnvrt@ct^0,c
  2223  001A92                     
  2224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2225  001A92  505A               	movf	vfpfcnvrt@ct^0,w,c
  2226  001A94  B4D8               	btfsc	status,2,c
  2227  001A96  EF4F  F00D         	goto	u4841
  2228  001A9A  EF51  F00D         	goto	u4840
  2229  001A9E                     u4841:
  2230  001A9E  EF89  F00D         	goto	l4020
  2231  001AA2                     u4840:
  2232  001AA2                     
  2233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2234  001AA2  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2235  001AA6  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2236  001AAA  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  2237  001AAE  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  2238  001AB2  0E01               	movlw	1
  2239  001AB4  264E               	addwf	??_vfpfcnvrt^0,f,c
  2240  001AB6  0E00               	movlw	0
  2241  001AB8  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2242  001ABA  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2243  001ABE  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2244  001AC2                     	if	0	;tblptru may be non-zero
  2245  001AC2                     	endif
  2246  001AC2                     	if	0	;tblptru may be non-zero
  2247  001AC2                     	endif
  2248  001AC2  0008               	tblrd		*
  2249  001AC4  50F5               	movf	tablat,w,c
  2250  001AC6  6E07               	movwf	tolower@c^0,c
  2251  001AC8  6A08               	clrf	(tolower@c+1)^0,c
  2252  001ACA  EC63  F01C         	call	_tolower	;wreg free
  2253  001ACE  5007               	movf	?_tolower^0,w,c
  2254  001AD0  6E5B               	movwf	(vfpfcnvrt@ct+1)^0,c
  2255  001AD2                     
  2256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2257  001AD2  505B               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2258  001AD4  B4D8               	btfsc	status,2,c
  2259  001AD6  EF6F  F00D         	goto	u4851
  2260  001ADA  EF71  F00D         	goto	u4850
  2261  001ADE                     u4851:
  2262  001ADE  EF89  F00D         	goto	l4020
  2263  001AE2                     u4850:
  2264  001AE2                     
  2265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2266  001AE2  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2267  001AE6  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2268  001AEA  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  2269  001AEE  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  2270  001AF2  0E02               	movlw	2
  2271  001AF4  264E               	addwf	??_vfpfcnvrt^0,f,c
  2272  001AF6  0E00               	movlw	0
  2273  001AF8  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2274  001AFA  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2275  001AFE  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2276  001B02                     	if	0	;tblptru may be non-zero
  2277  001B02                     	endif
  2278  001B02                     	if	0	;tblptru may be non-zero
  2279  001B02                     	endif
  2280  001B02  0008               	tblrd		*
  2281  001B04  50F5               	movf	tablat,w,c
  2282  001B06  6E07               	movwf	tolower@c^0,c
  2283  001B08  6A08               	clrf	(tolower@c+1)^0,c
  2284  001B0A  EC63  F01C         	call	_tolower	;wreg free
  2285  001B0E  5007               	movf	?_tolower^0,w,c
  2286  001B10  6E5C               	movwf	(vfpfcnvrt@ct+2)^0,c
  2287  001B12                     l4020:
  2288                           
  2289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2290  001B12  0E66               	movlw	102
  2291  001B14  185A               	xorwf	vfpfcnvrt@ct^0,w,c
  2292  001B16  A4D8               	btfss	status,2,c
  2293  001B18  EF90  F00D         	goto	u4861
  2294  001B1C  EF92  F00D         	goto	u4860
  2295  001B20                     u4861:
  2296  001B20  EFD2  F00D         	goto	l4032
  2297  001B24                     u4860:
  2298  001B24                     
  2299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2300  001B24  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2301  001B28  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2302  001B2C  CFDE FFF6          	movff	postinc2,tblptrl
  2303  001B30  CFDD FFF7          	movff	postdec2,tblptrh
  2304  001B34                     	if	0	;tblptru may be non-zero
  2305  001B34                     	endif
  2306  001B34                     	if	0	;tblptru may be non-zero
  2307  001B34                     	endif
  2308  001B34  0008               	tblrd		*
  2309  001B36  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  2310  001B3A                     
  2311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2312  001B3A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2313  001B3E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2314  001B42  2ADE               	incf	postinc2,f,c
  2315  001B44  0E00               	movlw	0
  2316  001B46  22DD               	addwfc	postdec2,f,c
  2317  001B48                     
  2318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2319  001B48  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2320  001B4C  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2321  001B50  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  2322  001B54  0E04               	movlw	4
  2323  001B56  26DE               	addwf	postinc2,f,c
  2324  001B58  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  2325  001B5C  0E00               	movlw	0
  2326  001B5E  22DD               	addwfc	postdec2,f,c
  2327  001B60  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2328  001B64  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2329  001B68  CFDE F056          	movff	postinc2,vfpfcnvrt@f
  2330  001B6C  CFDE F057          	movff	postinc2,vfpfcnvrt@f+1
  2331  001B70  CFDE F058          	movff	postinc2,vfpfcnvrt@f+2
  2332  001B74  CFDE F059          	movff	postinc2,vfpfcnvrt@f+3
  2333  001B78                     
  2334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2335  001B78  C048  F03C         	movff	vfpfcnvrt@fp,efgtoa@fp
  2336  001B7C  C049  F03D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2337  001B80  C056  F03E         	movff	vfpfcnvrt@f,efgtoa@f
  2338  001B84  C057  F03F         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2339  001B88  C058  F040         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2340  001B8C  C059  F041         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2341  001B90  C05D  F042         	movff	vfpfcnvrt@c,efgtoa@c
  2342  001B94  EC27  F004         	call	_efgtoa	;wreg free
  2343  001B98  C03C  F048         	movff	?_efgtoa,?_vfpfcnvrt
  2344  001B9C  C03D  F049         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2345  001BA0  EFC9  F00E         	goto	l350
  2346  001BA4                     l4032:
  2347                           
  2348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2349  001BA4  0E5A               	movlw	low vfpfcnvrt@ct
  2350  001BA6  6E01               	movwf	strncmp@_l^0,c
  2351  001BA8  0E00               	movlw	high vfpfcnvrt@ct
  2352  001BAA  6E02               	movwf	(strncmp@_l+1)^0,c
  2353  001BAC  0E4A               	movlw	low STR_19
  2354  001BAE  6E03               	movwf	strncmp@_r^0,c
  2355  001BB0  0E08               	movlw	high STR_19
  2356  001BB2  6E04               	movwf	(strncmp@_r+1)^0,c
  2357  001BB4  0E00               	movlw	0
  2358  001BB6  6E06               	movwf	(strncmp@n+1)^0,c
  2359  001BB8  0E02               	movlw	2
  2360  001BBA  6E05               	movwf	strncmp@n^0,c
  2361  001BBC  ECF5  F018         	call	_strncmp	;wreg free
  2362  001BC0  5001               	movf	?_strncmp^0,w,c
  2363  001BC2  1002               	iorwf	(?_strncmp+1)^0,w,c
  2364  001BC4  A4D8               	btfss	status,2,c
  2365  001BC6  EFE7  F00D         	goto	u4871
  2366  001BCA  EFE9  F00D         	goto	u4870
  2367  001BCE                     u4871:
  2368  001BCE  EF78  F00E         	goto	l4048
  2369  001BD2                     u4870:
  2370  001BD2                     
  2371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2372  001BD2  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2373  001BD6  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2374  001BDA  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  2375  001BDE  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  2376  001BE2  0E01               	movlw	1
  2377  001BE4  264E               	addwf	??_vfpfcnvrt^0,f,c
  2378  001BE6  0E00               	movlw	0
  2379  001BE8  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2380  001BEA  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2381  001BEE  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2382  001BF2                     	if	0	;tblptru may be non-zero
  2383  001BF2                     	endif
  2384  001BF2                     	if	0	;tblptru may be non-zero
  2385  001BF2                     	endif
  2386  001BF2  0008               	tblrd		*
  2387  001BF4  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  2388  001BF8  0EBF               	movlw	191
  2389  001BFA  6E4E               	movwf	??_vfpfcnvrt^0,c
  2390  001BFC  0EFF               	movlw	255
  2391  001BFE  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  2392  001C00  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2393  001C04  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2394  001C08  CFDE FFF6          	movff	postinc2,tblptrl
  2395  001C0C  CFDD FFF7          	movff	postdec2,tblptrh
  2396  001C10                     	if	0	;tblptru may be non-zero
  2397  001C10                     	endif
  2398  001C10                     	if	0	;tblptru may be non-zero
  2399  001C10                     	endif
  2400  001C10  0008               	tblrd		*
  2401  001C12  50F5               	movf	tablat,w,c
  2402  001C14  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  2403  001C16  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  2404  001C18  504E               	movf	??_vfpfcnvrt^0,w,c
  2405  001C1A  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2406  001C1C  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2407  001C1E  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2408  001C20  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  2409  001C22  E10A               	bnz	u4880
  2410  001C24  0E1A               	movlw	26
  2411  001C26  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2412  001C28  A0D8               	btfss	status,0,c
  2413  001C2A  EF19  F00E         	goto	u4881
  2414  001C2E  EF1C  F00E         	goto	u4880
  2415  001C32                     u4881:
  2416  001C32  0E01               	movlw	1
  2417  001C34  EF1D  F00E         	goto	u4890
  2418  001C38                     u4880:
  2419  001C38  0E00               	movlw	0
  2420  001C3A                     u4890:
  2421  001C3A  6E54               	movwf	_vfpfcnvrt$850^0,c
  2422  001C3C  6A55               	clrf	(_vfpfcnvrt$850+1)^0,c
  2423  001C3E  5054               	movf	_vfpfcnvrt$850^0,w,c
  2424  001C40  1055               	iorwf	(_vfpfcnvrt$850+1)^0,w,c
  2425  001C42  B4D8               	btfsc	status,2,c
  2426  001C44  EF26  F00E         	goto	u4901
  2427  001C48  EF28  F00E         	goto	u4900
  2428  001C4C                     u4901:
  2429  001C4C  EF42  F00E         	goto	l4042
  2430  001C50                     u4900:
  2431  001C50                     
  2432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2433  001C50  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2434  001C54  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2435  001C58  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  2436  001C5C  0E04               	movlw	4
  2437  001C5E  26DE               	addwf	postinc2,f,c
  2438  001C60  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  2439  001C64  0E00               	movlw	0
  2440  001C66  22DD               	addwfc	postdec2,f,c
  2441  001C68  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2442  001C6C  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2443  001C70  CFDE F056          	movff	postinc2,vfpfcnvrt@f
  2444  001C74  CFDE F057          	movff	postinc2,vfpfcnvrt@f+1
  2445  001C78  CFDE F058          	movff	postinc2,vfpfcnvrt@f+2
  2446  001C7C  CFDE F059          	movff	postinc2,vfpfcnvrt@f+3
  2447                           
  2448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2449  001C80  EF5A  F00E         	goto	l357
  2450  001C84                     l4042:
  2451                           
  2452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2453  001C84  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2454  001C88  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2455  001C8C  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  2456  001C90  0E04               	movlw	4
  2457  001C92  26DE               	addwf	postinc2,f,c
  2458  001C94  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  2459  001C98  0E00               	movlw	0
  2460  001C9A  22DD               	addwfc	postdec2,f,c
  2461  001C9C  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2462  001CA0  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2463  001CA4  CFDE F056          	movff	postinc2,vfpfcnvrt@f
  2464  001CA8  CFDE F057          	movff	postinc2,vfpfcnvrt@f+1
  2465  001CAC  CFDE F058          	movff	postinc2,vfpfcnvrt@f+2
  2466  001CB0  CFDE F059          	movff	postinc2,vfpfcnvrt@f+3
  2467  001CB4                     l357:
  2468                           
  2469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2470  001CB4  0E02               	movlw	2
  2471  001CB6  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2472  001CBA  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2473  001CBE  26DE               	addwf	postinc2,f,c
  2474  001CC0  0E00               	movlw	0
  2475  001CC2  22DD               	addwfc	postdec2,f,c
  2476  001CC4                     
  2477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
  2478  001CC4  C048  F03C         	movff	vfpfcnvrt@fp,efgtoa@fp
  2479  001CC8  C049  F03D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2480  001CCC  C056  F03E         	movff	vfpfcnvrt@f,efgtoa@f
  2481  001CD0  C057  F03F         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2482  001CD4  C058  F040         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2483  001CD8  C059  F041         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2484  001CDC  C05D  F042         	movff	vfpfcnvrt@c,efgtoa@c
  2485  001CE0  EC27  F004         	call	_efgtoa	;wreg free
  2486  001CE4  C03C  F048         	movff	?_efgtoa,?_vfpfcnvrt
  2487  001CE8  C03D  F049         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2488  001CEC  EFC9  F00E         	goto	l350
  2489  001CF0                     l4048:
  2490                           
  2491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2492  001CF0  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2493  001CF4  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2494  001CF8  CFDE FFF6          	movff	postinc2,tblptrl
  2495  001CFC  CFDD FFF7          	movff	postdec2,tblptrh
  2496  001D00                     	if	0	;tblptru may be non-zero
  2497  001D00                     	endif
  2498  001D00                     	if	0	;tblptru may be non-zero
  2499  001D00                     	endif
  2500  001D00  0008               	tblrd		*
  2501  001D02  50F5               	movf	tablat,w,c
  2502  001D04  0A25               	xorlw	37
  2503  001D06  A4D8               	btfss	status,2,c
  2504  001D08  EF88  F00E         	goto	u4911
  2505  001D0C  EF8A  F00E         	goto	u4910
  2506  001D10                     u4911:
  2507  001D10  EFA1  F00E         	goto	l4058
  2508  001D14                     u4910:
  2509  001D14                     
  2510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2511  001D14  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2512  001D18  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2513  001D1C  2ADE               	incf	postinc2,f,c
  2514  001D1E  0E00               	movlw	0
  2515  001D20  22DD               	addwfc	postdec2,f,c
  2516  001D22                     
  2517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2518  001D22  0E00               	movlw	0
  2519  001D24  6E08               	movwf	(fputc@c+1)^0,c
  2520  001D26  0E25               	movlw	37
  2521  001D28  6E07               	movwf	fputc@c^0,c
  2522  001D2A  C048  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2523  001D2E  C049  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2524  001D32  EC2D  F01B         	call	_fputc	;wreg free
  2525  001D36                     l4054:
  2526                           
  2527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2528  001D36  0E00               	movlw	0
  2529  001D38  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  2530  001D3A  0E01               	movlw	1
  2531  001D3C  6E48               	movwf	?_vfpfcnvrt^0,c
  2532  001D3E  EFC9  F00E         	goto	l350
  2533  001D42                     l4058:
  2534                           
  2535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2536  001D42  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2537  001D46  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2538  001D4A  2ADE               	incf	postinc2,f,c
  2539  001D4C  0E00               	movlw	0
  2540  001D4E  22DD               	addwfc	postdec2,f,c
  2541  001D50                     
  2542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2543  001D50  0E00               	movlw	0
  2544  001D52  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  2545  001D54  0E00               	movlw	0
  2546  001D56  6E48               	movwf	?_vfpfcnvrt^0,c
  2547  001D58  EFC9  F00E         	goto	l350
  2548  001D5C                     l4064:
  2549                           
  2550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2551  001D5C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2552  001D60  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2553  001D64  CFDE FFF6          	movff	postinc2,tblptrl
  2554  001D68  CFDD FFF7          	movff	postdec2,tblptrh
  2555  001D6C                     	if	0	;tblptru may be non-zero
  2556  001D6C                     	endif
  2557  001D6C                     	if	0	;tblptru may be non-zero
  2558  001D6C                     	endif
  2559  001D6C  0008               	tblrd		*
  2560  001D6E  50F5               	movf	tablat,w,c
  2561  001D70  6E07               	movwf	fputc@c^0,c
  2562  001D72  6A08               	clrf	(fputc@c+1)^0,c
  2563  001D74  C048  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2564  001D78  C049  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2565  001D7C  EC2D  F01B         	call	_fputc	;wreg free
  2566  001D80                     
  2567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2568  001D80  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2569  001D84  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2570  001D88  2ADE               	incf	postinc2,f,c
  2571  001D8A  0E00               	movlw	0
  2572  001D8C  22DD               	addwfc	postdec2,f,c
  2573  001D8E  EF9B  F00E         	goto	l4054
  2574  001D92                     l350:
  2575  001D92  0012               	return		;funcret
  2576  001D94                     __end_of_vfpfcnvrt:
  2577                           	opt callstack 0
  2578                           
  2579 ;; *************** function _strncmp *****************
  2580 ;; Defined at:
  2581 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2584 ;;		 -> vfpfcnvrt@ct(3), 
  2585 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2586 ;;		 -> STR_21(3), 
  2587 ;;  n               2    4[COMRAM] unsigned int 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2590 ;;		 -> STR_21(3), 
  2591 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2592 ;;		 -> vfpfcnvrt@ct(3), 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  2    0[COMRAM] int 
  2595 ;; Registers used:
  2596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2602 ;;      Params:         6       0       0       0       0       0       0       0       0
  2603 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2604 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2605 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2606 ;;Total ram usage:       11 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    1
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_vfpfcnvrt
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text7
  2617  0031EA                     __ptext7:
  2618                           	opt callstack 0
  2619  0031EA                     _strncmp:
  2620                           	opt callstack 24
  2621  0031EA  C001  F008         	movff	strncmp@_l,strncmp@l
  2622  0031EE  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2623  0031F2  C003  F00A         	movff	strncmp@_r,strncmp@r
  2624  0031F6  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2625  0031FA  0605               	decf	strncmp@n^0,f,c
  2626  0031FC  A0D8               	btfss	status,0,c
  2627  0031FE  0606               	decf	(strncmp@n+1)^0,f,c
  2628  003200  2805               	incf	strncmp@n^0,w,c
  2629  003202  E106               	bnz	u4731
  2630  003204  2806               	incf	(strncmp@n+1)^0,w,c
  2631  003206  A4D8               	btfss	status,2,c
  2632  003208  EF08  F019         	goto	u4731
  2633  00320C  EF0A  F019         	goto	u4730
  2634  003210                     u4731:
  2635  003210  EF17  F019         	goto	l3970
  2636  003214                     u4730:
  2637  003214  0E00               	movlw	0
  2638  003216  6E02               	movwf	(?_strncmp+1)^0,c
  2639  003218  0E00               	movlw	0
  2640  00321A  6E01               	movwf	?_strncmp^0,c
  2641  00321C  EF5F  F019         	goto	l1156
  2642  003220                     l3968:
  2643  003220  4A08               	infsnz	strncmp@l^0,f,c
  2644  003222  2A09               	incf	(strncmp@l+1)^0,f,c
  2645  003224  4A0A               	infsnz	strncmp@r^0,f,c
  2646  003226  2A0B               	incf	(strncmp@r+1)^0,f,c
  2647  003228  0605               	decf	strncmp@n^0,f,c
  2648  00322A  A0D8               	btfss	status,0,c
  2649  00322C  0606               	decf	(strncmp@n+1)^0,f,c
  2650  00322E                     l3970:
  2651  00322E  C008  FFD9         	movff	strncmp@l,fsr2l
  2652  003232  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2653  003236  50DF               	movf	indf2,w,c
  2654  003238  B4D8               	btfsc	status,2,c
  2655  00323A  EF21  F019         	goto	u4741
  2656  00323E  EF23  F019         	goto	u4740
  2657  003242                     u4741:
  2658  003242  EF4E  F019         	goto	l3978
  2659  003246                     u4740:
  2660  003246  C00A  FFF6         	movff	strncmp@r,tblptrl
  2661  00324A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2662  00324E                     	if	0	;tblptru may be non-zero
  2663  00324E                     	endif
  2664  00324E                     	if	0	;tblptru may be non-zero
  2665  00324E                     	endif
  2666  00324E  0008               	tblrd		*
  2667  003250  50F5               	movf	tablat,w,c
  2668  003252  0900               	iorlw	0
  2669  003254  B4D8               	btfsc	status,2,c
  2670  003256  EF2F  F019         	goto	u4751
  2671  00325A  EF31  F019         	goto	u4750
  2672  00325E                     u4751:
  2673  00325E  EF4E  F019         	goto	l3978
  2674  003262                     u4750:
  2675  003262  5005               	movf	strncmp@n^0,w,c
  2676  003264  1006               	iorwf	(strncmp@n+1)^0,w,c
  2677  003266  B4D8               	btfsc	status,2,c
  2678  003268  EF38  F019         	goto	u4761
  2679  00326C  EF3A  F019         	goto	u4760
  2680  003270                     u4761:
  2681  003270  EF4E  F019         	goto	l3978
  2682  003274                     u4760:
  2683  003274  C008  FFD9         	movff	strncmp@l,fsr2l
  2684  003278  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2685  00327C  50DF               	movf	indf2,w,c
  2686  00327E  6E07               	movwf	??_strncmp^0,c
  2687  003280  C00A  FFF6         	movff	strncmp@r,tblptrl
  2688  003284  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2689  003288                     	if	0	;tblptru may be non-zero
  2690  003288                     	endif
  2691  003288                     	if	0	;tblptru may be non-zero
  2692  003288                     	endif
  2693  003288  0008               	tblrd		*
  2694  00328A  50F5               	movf	tablat,w,c
  2695  00328C  1807               	xorwf	??_strncmp^0,w,c
  2696  00328E  B4D8               	btfsc	status,2,c
  2697  003290  EF4C  F019         	goto	u4771
  2698  003294  EF4E  F019         	goto	u4770
  2699  003298                     u4771:
  2700  003298  EF10  F019         	goto	l3968
  2701  00329C                     u4770:
  2702  00329C                     l3978:
  2703  00329C  C008  FFD9         	movff	strncmp@l,fsr2l
  2704  0032A0  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2705  0032A4  50DF               	movf	indf2,w,c
  2706  0032A6  6E07               	movwf	??_strncmp^0,c
  2707  0032A8  C00A  FFF6         	movff	strncmp@r,tblptrl
  2708  0032AC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2709  0032B0                     	if	0	;tblptru may be non-zero
  2710  0032B0                     	endif
  2711  0032B0                     	if	0	;tblptru may be non-zero
  2712  0032B0                     	endif
  2713  0032B0  0008               	tblrd		*
  2714  0032B2  50F5               	movf	tablat,w,c
  2715  0032B4  5C07               	subwf	??_strncmp^0,w,c
  2716  0032B6  6E01               	movwf	?_strncmp^0,c
  2717  0032B8  6A02               	clrf	(?_strncmp+1)^0,c
  2718  0032BA  A0D8               	btfss	status,0,c
  2719  0032BC  0602               	decf	(?_strncmp+1)^0,f,c
  2720  0032BE                     l1156:
  2721  0032BE  0012               	return		;funcret
  2722  0032C0                     __end_of_strncmp:
  2723                           	opt callstack 0
  2724                           
  2725 ;; *************** function _efgtoa *****************
  2726 ;; Defined at:
  2727 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  2730 ;;		 -> NULL(0), 
  2731 ;;  f               4   61[COMRAM] PTR struct _IO_FILE
  2732 ;;  c               1   65[COMRAM] unsigned char 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  u               4   52[BANK0 ] unsigned char 
  2735 ;;  g               4   44[BANK0 ] unsigned char 
  2736 ;;  l               4   38[BANK0 ] unsigned char 
  2737 ;;  h               4   34[BANK0 ] unsigned char 
  2738 ;;  ou              4    0[BANK0 ] unsigned char 
  2739 ;;  n               2   50[BANK0 ] int 
  2740 ;;  e               2   48[BANK0 ] int 
  2741 ;;  i               2   42[BANK0 ] int 
  2742 ;;  w               2   31[BANK0 ] int 
  2743 ;;  p               2   28[BANK0 ] int 
  2744 ;;  sign            2   26[BANK0 ] int 
  2745 ;;  d               2   24[BANK0 ] int 
  2746 ;;  ne              2   22[BANK0 ] int 
  2747 ;;  m               2   20[BANK0 ] int 
  2748 ;;  pp              2   18[BANK0 ] int 
  2749 ;;  t               2   16[BANK0 ] int 
  2750 ;;  mode            1   33[BANK0 ] unsigned char 
  2751 ;;  nmode           1   30[BANK0 ] unsigned char 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  2   59[COMRAM] int 
  2754 ;; Registers used:
  2755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2761 ;;      Params:         7       0       0       0       0       0       0       0       0
  2762 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2763 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2764 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2765 ;;Total ram usage:       68 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    8
  2768 ;; This function calls:
  2769 ;;		___awdiv
  2770 ;;		___awmod
  2771 ;;		___fladd
  2772 ;;		___fldiv
  2773 ;;		___fleq
  2774 ;;		___flge
  2775 ;;		___flmul
  2776 ;;		___flneg
  2777 ;;		___flsub
  2778 ;;		___fltol
  2779 ;;		___fpclassifyf
  2780 ;;		_floorf
  2781 ;;		_isupper
  2782 ;;		_pad
  2783 ;;		_strcpy
  2784 ;;		_tolower
  2785 ;; This function is called by:
  2786 ;;		_vfpfcnvrt
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text8
  2791  00084E                     __ptext8:
  2792                           	opt callstack 0
  2793  00084E                     _efgtoa:
  2794                           	opt callstack 17
  2795  00084E                     
  2796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2797  00084E  0E00               	movlw	0
  2798  000850  0100               	movlb	0	; () banked
  2799  000852  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2800  000854  0E00               	movlw	0
  2801  000856  6F7A               	movwf	efgtoa@sign& (0+255),b
  2802  000858                     
  2803                           ; BSR set to: 0
  2804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2805  000858  C03E  F08C         	movff	efgtoa@f,efgtoa@g
  2806  00085C  C03F  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2807  000860  C040  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2808  000864  C041  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2809  000868                     
  2810                           ; BSR set to: 0
  2811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2812  000868  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2813  00086A  EF3B  F004         	goto	u4140
  2814  00086E  EF39  F004         	goto	u4141
  2815  000872                     u4141:
  2816  000872  EF51  F004         	goto	l3632
  2817  000876                     u4140:
  2818  000876                     
  2819                           ; BSR set to: 0
  2820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2821  000876  0E00               	movlw	0
  2822  000878  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2823  00087A  0E01               	movlw	1
  2824  00087C  6F7A               	movwf	efgtoa@sign& (0+255),b
  2825  00087E                     
  2826                           ; BSR set to: 0
  2827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2828  00087E  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2829  000882  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2830  000886  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2831  00088A  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2832  00088E  EC6C  F01D         	call	___flneg	;wreg free
  2833  000892  C001  F08C         	movff	?___flneg,efgtoa@g
  2834  000896  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2835  00089A  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2836  00089E  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2837  0008A2                     l3632:
  2838                           
  2839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2840  0008A2  0E00               	movlw	0
  2841  0008A4  0100               	movlb	0	; () banked
  2842  0008A6  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2843  0008A8  0E00               	movlw	0
  2844  0008AA  6F92               	movwf	efgtoa@n& (0+255),b
  2845  0008AC                     
  2846                           ; BSR set to: 0
  2847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2848  0008AC  C0BE  F07F         	movff	_width,efgtoa@w
  2849  0008B0  C0BF  F080         	movff	_width+1,efgtoa@w+1
  2850  0008B4                     
  2851                           ; BSR set to: 0
  2852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2853  0008B4  517A               	movf	efgtoa@sign& (0+255),w,b
  2854  0008B6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2855  0008B8  A4D8               	btfss	status,2,c
  2856  0008BA  EF61  F004         	goto	u4151
  2857  0008BE  EF63  F004         	goto	u4150
  2858  0008C2                     u4151:
  2859  0008C2  EF6A  F004         	goto	l3640
  2860  0008C6                     u4150:
  2861  0008C6                     
  2862                           ; BSR set to: 0
  2863  0008C6  A5C2               	btfss	_flags& (0+255),2,b
  2864  0008C8  EF68  F004         	goto	u4161
  2865  0008CC  EF6A  F004         	goto	u4160
  2866  0008D0                     u4161:
  2867  0008D0  EF84  F004         	goto	l3652
  2868  0008D4                     u4160:
  2869  0008D4                     l3640:
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2873  0008D4  517A               	movf	efgtoa@sign& (0+255),w,b
  2874  0008D6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2875  0008D8  A4D8               	btfss	status,2,c
  2876  0008DA  EF71  F004         	goto	u4171
  2877  0008DE  EF73  F004         	goto	u4170
  2878  0008E2                     u4171:
  2879  0008E2  EF79  F004         	goto	l3644
  2880  0008E6                     u4170:
  2881  0008E6                     
  2882                           ; BSR set to: 0
  2883  0008E6  0E00               	movlw	0
  2884  0008E8  6F65               	movwf	(_efgtoa$820+1)& (0+255),b
  2885  0008EA  0E2B               	movlw	43
  2886  0008EC  6F64               	movwf	_efgtoa$820& (0+255),b
  2887  0008EE  EF7D  F004         	goto	l3646
  2888  0008F2                     l3644:
  2889                           
  2890                           ; BSR set to: 0
  2891  0008F2  0E00               	movlw	0
  2892  0008F4  6F65               	movwf	(_efgtoa$820+1)& (0+255),b
  2893  0008F6  0E2D               	movlw	45
  2894  0008F8  6F64               	movwf	_efgtoa$820& (0+255),b
  2895  0008FA                     l3646:
  2896                           
  2897                           ; BSR set to: 0
  2898  0008FA  C064  F100         	movff	_efgtoa$820,_dbuf
  2899  0008FE                     
  2900                           ; BSR set to: 0
  2901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2902  0008FE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2903  000900  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2904  000902                     
  2905                           ; BSR set to: 0
  2906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2907  000902  077F               	decf	efgtoa@w& (0+255),f,b
  2908  000904  A0D8               	btfss	status,0,c
  2909  000906  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2910  000908                     l3652:
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2914  000908  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2915  00090C  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2916  000910  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2917  000914  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2918  000918  EC76  F018         	call	___fpclassifyf	;wreg free
  2919  00091C  0401               	decf	?___fpclassifyf^0,w,c
  2920  00091E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2921  000920  A4D8               	btfss	status,2,c
  2922  000922  EF95  F004         	goto	u4181
  2923  000926  EF97  F004         	goto	u4180
  2924  00092A                     u4181:
  2925  00092A  EFEE  F004         	goto	l3670
  2926  00092E                     u4180:
  2927  00092E  0EBF               	movlw	191
  2928  000930  6E43               	movwf	??_efgtoa^0,c
  2929  000932  0EFF               	movlw	255
  2930  000934  6E44               	movwf	(??_efgtoa+1)^0,c
  2931  000936  5042               	movf	efgtoa@c^0,w,c
  2932  000938  6E45               	movwf	(??_efgtoa+2)^0,c
  2933  00093A  6A46               	clrf	(??_efgtoa+3)^0,c
  2934  00093C  5043               	movf	??_efgtoa^0,w,c
  2935  00093E  2645               	addwf	(??_efgtoa+2)^0,f,c
  2936  000940  5044               	movf	(??_efgtoa+1)^0,w,c
  2937  000942  2246               	addwfc	(??_efgtoa+3)^0,f,c
  2938  000944  5046               	movf	(??_efgtoa+3)^0,w,c
  2939  000946  E10A               	bnz	u4190
  2940  000948  0E1A               	movlw	26
  2941  00094A  5C45               	subwf	(??_efgtoa+2)^0,w,c
  2942  00094C  A0D8               	btfss	status,0,c
  2943  00094E  EFAB  F004         	goto	u4191
  2944  000952  EFAE  F004         	goto	u4190
  2945  000956                     u4191:
  2946  000956  0E01               	movlw	1
  2947  000958  EFAF  F004         	goto	u4200
  2948  00095C                     u4190:
  2949  00095C  0E00               	movlw	0
  2950  00095E                     u4200:
  2951  00095E  0100               	movlb	0	; () banked
  2952  000960  6F66               	movwf	_efgtoa$821& (0+255),b
  2953  000962  6B67               	clrf	(_efgtoa$821+1)& (0+255),b
  2954  000964                     
  2955                           ; BSR set to: 0
  2956  000964  5166               	movf	_efgtoa$821& (0+255),w,b
  2957  000966  1167               	iorwf	(_efgtoa$821+1)& (0+255),w,b
  2958  000968  B4D8               	btfsc	status,2,c
  2959  00096A  EFB9  F004         	goto	u4211
  2960  00096E  EFBB  F004         	goto	u4210
  2961  000972                     u4211:
  2962  000972  EFC9  F004         	goto	l3662
  2963  000976                     u4210:
  2964  000976                     
  2965                           ; BSR set to: 0
  2966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2967  000976  0E00               	movlw	low _dbuf
  2968  000978  2592               	addwf	efgtoa@n& (0+255),w,b
  2969  00097A  6E01               	movwf	strcpy@dest^0,c
  2970  00097C  0E01               	movlw	high _dbuf
  2971  00097E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2972  000980  6E02               	movwf	(strcpy@dest+1)^0,c
  2973  000982  0E3A               	movlw	low STR_11
  2974  000984  6E03               	movwf	strcpy@src^0,c
  2975  000986  0E08               	movlw	high STR_11
  2976  000988  6E04               	movwf	(strcpy@src+1)^0,c
  2977  00098A  EC93  F01C         	call	_strcpy	;wreg free
  2978                           
  2979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2980  00098E  EFD5  F004         	goto	l3664
  2981  000992                     l3662:
  2982                           
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2985  000992  0E00               	movlw	low _dbuf
  2986  000994  2592               	addwf	efgtoa@n& (0+255),w,b
  2987  000996  6E01               	movwf	strcpy@dest^0,c
  2988  000998  0E01               	movlw	high _dbuf
  2989  00099A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2990  00099C  6E02               	movwf	(strcpy@dest+1)^0,c
  2991  00099E  0E42               	movlw	low STR_12
  2992  0009A0  6E03               	movwf	strcpy@src^0,c
  2993  0009A2  0E08               	movlw	high STR_12
  2994  0009A4  6E04               	movwf	(strcpy@src+1)^0,c
  2995  0009A6  EC93  F01C         	call	_strcpy	;wreg free
  2996  0009AA                     l3664:
  2997                           
  2998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2999  0009AA  0100               	movlb	0	; () banked
  3000  0009AC  0EFD               	movlw	253
  3001  0009AE  277F               	addwf	efgtoa@w& (0+255),f,b
  3002  0009B0  0EFF               	movlw	255
  3003  0009B2  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3004  0009B4                     
  3005                           ; BSR set to: 0
  3006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3007  0009B4  C03C  F017         	movff	efgtoa@fp,pad@fp
  3008  0009B8  C03D  F018         	movff	efgtoa@fp+1,pad@fp+1
  3009  0009BC  0E00               	movlw	low _dbuf
  3010  0009BE  6E19               	movwf	pad@buf^0,c
  3011  0009C0  0E01               	movlw	high _dbuf
  3012  0009C2  6E1A               	movwf	(pad@buf+1)^0,c
  3013  0009C4  C07F  F01B         	movff	efgtoa@w,pad@p
  3014  0009C8  C080  F01C         	movff	efgtoa@w+1,pad@p+1
  3015  0009CC  EC60  F019         	call	_pad	;wreg free
  3016  0009D0  C017  F03C         	movff	?_pad,?_efgtoa
  3017  0009D4  C018  F03D         	movff	?_pad+1,?_efgtoa+1
  3018  0009D8  EF25  F00A         	goto	l260
  3019  0009DC                     l3670:
  3020                           
  3021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3022  0009DC  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3023  0009E0  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3024  0009E4  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3025  0009E8  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3026  0009EC  EC76  F018         	call	___fpclassifyf	;wreg free
  3027  0009F0  5001               	movf	?___fpclassifyf^0,w,c
  3028  0009F2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3029  0009F4  A4D8               	btfss	status,2,c
  3030  0009F6  EFFF  F004         	goto	u4221
  3031  0009FA  EF01  F005         	goto	u4220
  3032  0009FE                     u4221:
  3033  0009FE  EF58  F005         	goto	l3688
  3034  000A02                     u4220:
  3035  000A02  0EBF               	movlw	191
  3036  000A04  6E43               	movwf	??_efgtoa^0,c
  3037  000A06  0EFF               	movlw	255
  3038  000A08  6E44               	movwf	(??_efgtoa+1)^0,c
  3039  000A0A  5042               	movf	efgtoa@c^0,w,c
  3040  000A0C  6E45               	movwf	(??_efgtoa+2)^0,c
  3041  000A0E  6A46               	clrf	(??_efgtoa+3)^0,c
  3042  000A10  5043               	movf	??_efgtoa^0,w,c
  3043  000A12  2645               	addwf	(??_efgtoa+2)^0,f,c
  3044  000A14  5044               	movf	(??_efgtoa+1)^0,w,c
  3045  000A16  2246               	addwfc	(??_efgtoa+3)^0,f,c
  3046  000A18  5046               	movf	(??_efgtoa+3)^0,w,c
  3047  000A1A  E10A               	bnz	u4230
  3048  000A1C  0E1A               	movlw	26
  3049  000A1E  5C45               	subwf	(??_efgtoa+2)^0,w,c
  3050  000A20  A0D8               	btfss	status,0,c
  3051  000A22  EF15  F005         	goto	u4231
  3052  000A26  EF18  F005         	goto	u4230
  3053  000A2A                     u4231:
  3054  000A2A  0E01               	movlw	1
  3055  000A2C  EF19  F005         	goto	u4240
  3056  000A30                     u4230:
  3057  000A30  0E00               	movlw	0
  3058  000A32                     u4240:
  3059  000A32  0100               	movlb	0	; () banked
  3060  000A34  6F68               	movwf	_efgtoa$826& (0+255),b
  3061  000A36  6B69               	clrf	(_efgtoa$826+1)& (0+255),b
  3062  000A38                     
  3063                           ; BSR set to: 0
  3064  000A38  5168               	movf	_efgtoa$826& (0+255),w,b
  3065  000A3A  1169               	iorwf	(_efgtoa$826+1)& (0+255),w,b
  3066  000A3C  B4D8               	btfsc	status,2,c
  3067  000A3E  EF23  F005         	goto	u4251
  3068  000A42  EF25  F005         	goto	u4250
  3069  000A46                     u4251:
  3070  000A46  EF33  F005         	goto	l3680
  3071  000A4A                     u4250:
  3072  000A4A                     
  3073                           ; BSR set to: 0
  3074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3075  000A4A  0E00               	movlw	low _dbuf
  3076  000A4C  2592               	addwf	efgtoa@n& (0+255),w,b
  3077  000A4E  6E01               	movwf	strcpy@dest^0,c
  3078  000A50  0E01               	movlw	high _dbuf
  3079  000A52  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3080  000A54  6E02               	movwf	(strcpy@dest+1)^0,c
  3081  000A56  0E3E               	movlw	low STR_15
  3082  000A58  6E03               	movwf	strcpy@src^0,c
  3083  000A5A  0E08               	movlw	high STR_15
  3084  000A5C  6E04               	movwf	(strcpy@src+1)^0,c
  3085  000A5E  EC93  F01C         	call	_strcpy	;wreg free
  3086                           
  3087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3088  000A62  EF3F  F005         	goto	l3682
  3089  000A66                     l3680:
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3093  000A66  0E00               	movlw	low _dbuf
  3094  000A68  2592               	addwf	efgtoa@n& (0+255),w,b
  3095  000A6A  6E01               	movwf	strcpy@dest^0,c
  3096  000A6C  0E01               	movlw	high _dbuf
  3097  000A6E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3098  000A70  6E02               	movwf	(strcpy@dest+1)^0,c
  3099  000A72  0E46               	movlw	low STR_16
  3100  000A74  6E03               	movwf	strcpy@src^0,c
  3101  000A76  0E08               	movlw	high STR_16
  3102  000A78  6E04               	movwf	(strcpy@src+1)^0,c
  3103  000A7A  EC93  F01C         	call	_strcpy	;wreg free
  3104  000A7E                     l3682:
  3105                           
  3106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3107  000A7E  0100               	movlb	0	; () banked
  3108  000A80  0EFD               	movlw	253
  3109  000A82  277F               	addwf	efgtoa@w& (0+255),f,b
  3110  000A84  0EFF               	movlw	255
  3111  000A86  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3112  000A88                     
  3113                           ; BSR set to: 0
  3114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  3115  000A88  C03C  F017         	movff	efgtoa@fp,pad@fp
  3116  000A8C  C03D  F018         	movff	efgtoa@fp+1,pad@fp+1
  3117  000A90  0E00               	movlw	low _dbuf
  3118  000A92  6E19               	movwf	pad@buf^0,c
  3119  000A94  0E01               	movlw	high _dbuf
  3120  000A96  6E1A               	movwf	(pad@buf+1)^0,c
  3121  000A98  C07F  F01B         	movff	efgtoa@w,pad@p
  3122  000A9C  C080  F01C         	movff	efgtoa@w+1,pad@p+1
  3123  000AA0  EC60  F019         	call	_pad	;wreg free
  3124  000AA4  C017  F03C         	movff	?_pad,?_efgtoa
  3125  000AA8  C018  F03D         	movff	?_pad+1,?_efgtoa+1
  3126  000AAC  EF25  F00A         	goto	l260
  3127  000AB0                     l3688:
  3128                           
  3129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3130  000AB0  0E00               	movlw	0
  3131  000AB2  0100               	movlb	0	; () banked
  3132  000AB4  6F94               	movwf	efgtoa@u& (0+255),b
  3133  000AB6  0E00               	movlw	0
  3134  000AB8  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3135  000ABA  0E80               	movlw	128
  3136  000ABC  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3137  000ABE  0E3F               	movlw	63
  3138  000AC0  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3139                           
  3140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3141  000AC2  0E00               	movlw	0
  3142  000AC4  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3143  000AC6  0E00               	movlw	0
  3144  000AC8  6F90               	movwf	efgtoa@e& (0+255),b
  3145  000ACA                     
  3146                           ; BSR set to: 0
  3147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3148  000ACA  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  3149  000ACE  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3150  000AD2  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3151  000AD6  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3152  000ADA  0E00               	movlw	0
  3153  000ADC  6E05               	movwf	___fleq@ff2^0,c
  3154  000ADE  0E00               	movlw	0
  3155  000AE0  6E06               	movwf	(___fleq@ff2+1)^0,c
  3156  000AE2  0E00               	movlw	0
  3157  000AE4  6E07               	movwf	(___fleq@ff2+2)^0,c
  3158  000AE6  0E00               	movlw	0
  3159  000AE8  6E08               	movwf	(___fleq@ff2+3)^0,c
  3160  000AEA  ECD8  F01A         	call	___fleq	;wreg free
  3161  000AEE  B0D8               	btfsc	status,0,c
  3162  000AF0  EF7C  F005         	goto	u4261
  3163  000AF4  EF7E  F005         	goto	u4260
  3164  000AF8                     u4261:
  3165  000AF8  EF01  F006         	goto	l3706
  3166  000AFC                     u4260:
  3167  000AFC  EF9D  F005         	goto	l3698
  3168  000B00                     l3694:
  3169                           
  3170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3171  000B00  C094  F001         	movff	efgtoa@u,___flmul@b
  3172  000B04  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3173  000B08  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3174  000B0C  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3175  000B10  0E00               	movlw	0
  3176  000B12  6E05               	movwf	___flmul@a^0,c
  3177  000B14  0E00               	movlw	0
  3178  000B16  6E06               	movwf	(___flmul@a+1)^0,c
  3179  000B18  0E20               	movlw	32
  3180  000B1A  6E07               	movwf	(___flmul@a+2)^0,c
  3181  000B1C  0E41               	movlw	65
  3182  000B1E  6E08               	movwf	(___flmul@a+3)^0,c
  3183  000B20  ECCA  F00E         	call	___flmul	;wreg free
  3184  000B24  C001  F094         	movff	?___flmul,efgtoa@u
  3185  000B28  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  3186  000B2C  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  3187  000B30  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  3188  000B34                     
  3189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3190  000B34  0100               	movlb	0	; () banked
  3191  000B36  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3192  000B38  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3193  000B3A                     l3698:
  3194                           
  3195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3196  000B3A  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3197  000B3E  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3198  000B42  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3199  000B46  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3200  000B4A  0E00               	movlw	0
  3201  000B4C  6E05               	movwf	___flmul@a^0,c
  3202  000B4E  0E00               	movlw	0
  3203  000B50  6E06               	movwf	(___flmul@a+1)^0,c
  3204  000B52  0E20               	movlw	32
  3205  000B54  6E07               	movwf	(___flmul@a+2)^0,c
  3206  000B56  0E41               	movlw	65
  3207  000B58  6E08               	movwf	(___flmul@a+3)^0,c
  3208  000B5A  C094  F001         	movff	efgtoa@u,___flmul@b
  3209  000B5E  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3210  000B62  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3211  000B66  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3212  000B6A  ECCA  F00E         	call	___flmul	;wreg free
  3213  000B6E  C001  F01E         	movff	?___flmul,___flge@ff2
  3214  000B72  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3215  000B76  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3216  000B7A  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3217  000B7E  ECF4  F017         	call	___flge	;wreg free
  3218  000B82  B0D8               	btfsc	status,0,c
  3219  000B84  EFC6  F005         	goto	u4271
  3220  000B88  EFC8  F005         	goto	u4270
  3221  000B8C                     u4271:
  3222  000B8C  EF80  F005         	goto	l3694
  3223  000B90                     u4270:
  3224  000B90  EFE8  F005         	goto	l3704
  3225  000B94                     l3700:
  3226                           
  3227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3228  000B94  C094  F00F         	movff	efgtoa@u,___fldiv@b
  3229  000B98  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  3230  000B9C  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  3231  000BA0  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  3232  000BA4  0E00               	movlw	0
  3233  000BA6  6E13               	movwf	___fldiv@a^0,c
  3234  000BA8  0E00               	movlw	0
  3235  000BAA  6E14               	movwf	(___fldiv@a+1)^0,c
  3236  000BAC  0E20               	movlw	32
  3237  000BAE  6E15               	movwf	(___fldiv@a+2)^0,c
  3238  000BB0  0E41               	movlw	65
  3239  000BB2  6E16               	movwf	(___fldiv@a+3)^0,c
  3240  000BB4  ECDF  F010         	call	___fldiv	;wreg free
  3241  000BB8  C00F  F094         	movff	?___fldiv,efgtoa@u
  3242  000BBC  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  3243  000BC0  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  3244  000BC4  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  3245  000BC8                     
  3246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3247  000BC8  0100               	movlb	0	; () banked
  3248  000BCA  0790               	decf	efgtoa@e& (0+255),f,b
  3249  000BCC  A0D8               	btfss	status,0,c
  3250  000BCE  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3251  000BD0                     l3704:
  3252                           
  3253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3254  000BD0  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3255  000BD4  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3256  000BD8  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3257  000BDC  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3258  000BE0  C094  F01E         	movff	efgtoa@u,___flge@ff2
  3259  000BE4  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3260  000BE8  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3261  000BEC  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3262  000BF0  ECF4  F017         	call	___flge	;wreg free
  3263  000BF4  A0D8               	btfss	status,0,c
  3264  000BF6  EFFF  F005         	goto	u4281
  3265  000BFA  EF01  F006         	goto	u4280
  3266  000BFE                     u4281:
  3267  000BFE  EFCA  F005         	goto	l3700
  3268  000C02                     u4280:
  3269  000C02                     l3706:
  3270                           
  3271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3272  000C02  C042  F007         	movff	efgtoa@c,tolower@c
  3273  000C06  6A08               	clrf	(tolower@c+1)^0,c
  3274  000C08  EC63  F01C         	call	_tolower	;wreg free
  3275  000C0C  5007               	movf	?_tolower^0,w,c
  3276  000C0E  0100               	movlb	0	; () banked
  3277  000C10  6F81               	movwf	efgtoa@mode& (0+255),b
  3278  000C12                     
  3279                           ; BSR set to: 0
  3280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3281  000C12  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  3282  000C16                     
  3283                           ; BSR set to: 0
  3284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3285  000C16  0E67               	movlw	103
  3286  000C18  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3287  000C1A  A4D8               	btfss	status,2,c
  3288  000C1C  EF12  F006         	goto	u4291
  3289  000C20  EF14  F006         	goto	u4290
  3290  000C24                     u4291:
  3291  000C24  EF3A  F006         	goto	l3720
  3292  000C28                     u4290:
  3293  000C28                     
  3294                           ; BSR set to: 0
  3295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3296  000C28  51C0               	movf	_prec& (0+255),w,b
  3297  000C2A  11C1               	iorwf	(_prec+1)& (0+255),w,b
  3298  000C2C  A4D8               	btfss	status,2,c
  3299  000C2E  EF1B  F006         	goto	u4301
  3300  000C32  EF1D  F006         	goto	u4300
  3301  000C36                     u4301:
  3302  000C36  EF21  F006         	goto	l3716
  3303  000C3A                     u4300:
  3304  000C3A                     
  3305                           ; BSR set to: 0
  3306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3307  000C3A  0E00               	movlw	0
  3308  000C3C  6FC1               	movwf	(_prec+1)& (0+255),b
  3309  000C3E  0E01               	movlw	1
  3310  000C40  6FC0               	movwf	_prec& (0+255),b
  3311  000C42                     l3716:
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3315  000C42  BFC1               	btfsc	(_prec+1)& (0+255),7,b
  3316  000C44  EF2E  F006         	goto	u4310
  3317  000C48  51C1               	movf	(_prec+1)& (0+255),w,b
  3318  000C4A  E106               	bnz	u4311
  3319  000C4C  05C0               	decf	_prec& (0+255),w,b
  3320  000C4E  B0D8               	btfsc	status,0,c
  3321  000C50  EF2C  F006         	goto	u4311
  3322  000C54  EF2E  F006         	goto	u4310
  3323  000C58                     u4311:
  3324  000C58  EF34  F006         	goto	l278
  3325  000C5C                     u4310:
  3326  000C5C                     l3718:
  3327                           
  3328                           ; BSR set to: 0
  3329  000C5C  0E00               	movlw	0
  3330  000C5E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3331  000C60  0E06               	movlw	6
  3332  000C62  6F7C               	movwf	efgtoa@p& (0+255),b
  3333  000C64  EF43  F006         	goto	l3726
  3334  000C68                     l278:
  3335                           
  3336                           ; BSR set to: 0
  3337  000C68  C0C0  F07C         	movff	_prec,efgtoa@p
  3338  000C6C  C0C1  F07D         	movff	_prec+1,efgtoa@p+1
  3339  000C70  EF43  F006         	goto	l3726
  3340  000C74                     l3720:
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3344  000C74  BFC1               	btfsc	(_prec+1)& (0+255),7,b
  3345  000C76  EF3F  F006         	goto	u4321
  3346  000C7A  EF41  F006         	goto	u4320
  3347  000C7E                     u4321:
  3348  000C7E  EF2E  F006         	goto	l3718
  3349  000C82                     u4320:
  3350  000C82  EF34  F006         	goto	l278
  3351  000C86                     l3726:
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3355  000C86  0E67               	movlw	103
  3356  000C88  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3357  000C8A  A4D8               	btfss	status,2,c
  3358  000C8C  EF4A  F006         	goto	u4331
  3359  000C90  EF4C  F006         	goto	u4330
  3360  000C94                     u4331:
  3361  000C94  EF7B  F006         	goto	l3736
  3362  000C98                     u4330:
  3363  000C98                     
  3364                           ; BSR set to: 0
  3365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3366  000C98  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3367  000C9A  EF5A  F006         	goto	u4340
  3368  000C9E  0EFC               	movlw	252
  3369  000CA0  5D90               	subwf	efgtoa@e& (0+255),w,b
  3370  000CA2  0EFF               	movlw	255
  3371  000CA4  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3372  000CA6  A0D8               	btfss	status,0,c
  3373  000CA8  EF58  F006         	goto	u4341
  3374  000CAC  EF5A  F006         	goto	u4340
  3375  000CB0                     u4341:
  3376  000CB0  EF79  F006         	goto	l3734
  3377  000CB4                     u4340:
  3378  000CB4                     
  3379                           ; BSR set to: 0
  3380  000CB4  0EFF               	movlw	255
  3381  000CB6  6E43               	movwf	??_efgtoa^0,c
  3382  000CB8  0EFF               	movlw	255
  3383  000CBA  6E44               	movwf	(??_efgtoa+1)^0,c
  3384  000CBC  C07C  F045         	movff	efgtoa@p,??_efgtoa+2
  3385  000CC0  C07D  F046         	movff	efgtoa@p+1,??_efgtoa+3
  3386  000CC4  5043               	movf	??_efgtoa^0,w,c
  3387  000CC6  2645               	addwf	(??_efgtoa+2)^0,f,c
  3388  000CC8  5044               	movf	(??_efgtoa+1)^0,w,c
  3389  000CCA  2246               	addwfc	(??_efgtoa+3)^0,f,c
  3390  000CCC  5190               	movf	efgtoa@e& (0+255),w,b
  3391  000CCE  5C45               	subwf	(??_efgtoa+2)^0,w,c
  3392  000CD0  5046               	movf	(??_efgtoa+3)^0,w,c
  3393  000CD2  0A80               	xorlw	128
  3394  000CD4  6E47               	movwf	(??_efgtoa+4)^0,c
  3395  000CD6  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3396  000CD8  0A80               	xorlw	128
  3397  000CDA  5847               	subwfb	(??_efgtoa+4)^0,w,c
  3398  000CDC  A0D8               	btfss	status,0,c
  3399  000CDE  EF73  F006         	goto	u4351
  3400  000CE2  EF75  F006         	goto	u4350
  3401  000CE6                     u4351:
  3402  000CE6  EF79  F006         	goto	l3734
  3403  000CEA                     u4350:
  3404  000CEA                     
  3405                           ; BSR set to: 0
  3406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3407  000CEA  0E66               	movlw	102
  3408  000CEC  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3409                           
  3410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3411  000CEE  EF7B  F006         	goto	l3736
  3412  000CF2                     l3734:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3416  000CF2  0E65               	movlw	101
  3417  000CF4  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3418  000CF6                     l3736:
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3422  000CF6  C07C  F074         	movff	efgtoa@p,efgtoa@m
  3423  000CFA  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  3424  000CFE                     
  3425                           ; BSR set to: 0
  3426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3427  000CFE  0E67               	movlw	103
  3428  000D00  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3429  000D02  A4D8               	btfss	status,2,c
  3430  000D04  EF86  F006         	goto	u4361
  3431  000D08  EF88  F006         	goto	u4360
  3432  000D0C                     u4361:
  3433  000D0C  EF98  F006         	goto	l3744
  3434  000D10                     u4360:
  3435  000D10                     
  3436                           ; BSR set to: 0
  3437  000D10  0E66               	movlw	102
  3438  000D12  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3439  000D14  A4D8               	btfss	status,2,c
  3440  000D16  EF8F  F006         	goto	u4371
  3441  000D1A  EF91  F006         	goto	u4370
  3442  000D1E                     u4371:
  3443  000D1E  EF9A  F006         	goto	l3746
  3444  000D22                     u4370:
  3445  000D22                     
  3446                           ; BSR set to: 0
  3447  000D22  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3448  000D24  EF98  F006         	goto	u4380
  3449  000D28  EF96  F006         	goto	u4381
  3450  000D2C                     u4381:
  3451  000D2C  EF9A  F006         	goto	l3746
  3452  000D30                     u4380:
  3453  000D30                     l3744:
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3457  000D30  4B74               	infsnz	efgtoa@m& (0+255),f,b
  3458  000D32  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  3459  000D34                     l3746:
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3463  000D34  0E66               	movlw	102
  3464  000D36  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3465  000D38  A4D8               	btfss	status,2,c
  3466  000D3A  EFA1  F006         	goto	u4391
  3467  000D3E  EFA3  F006         	goto	u4390
  3468  000D42                     u4391:
  3469  000D42  EFC3  F006         	goto	l3756
  3470  000D46                     u4390:
  3471  000D46                     
  3472                           ; BSR set to: 0
  3473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3474  000D46  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3475  000D48  EFAA  F006         	goto	u4400
  3476  000D4C  EFA8  F006         	goto	u4401
  3477  000D50                     u4401:
  3478  000D50  EFB6  F006         	goto	l3752
  3479  000D54                     u4400:
  3480  000D54                     
  3481                           ; BSR set to: 0
  3482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3483  000D54  0E00               	movlw	0
  3484  000D56  6F94               	movwf	efgtoa@u& (0+255),b
  3485  000D58  0E00               	movlw	0
  3486  000D5A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3487  000D5C  0E80               	movlw	128
  3488  000D5E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3489  000D60  0E3F               	movlw	63
  3490  000D62  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3491                           
  3492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3493  000D64  0E00               	movlw	0
  3494  000D66  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3495  000D68  0E00               	movlw	0
  3496  000D6A  6F90               	movwf	efgtoa@e& (0+255),b
  3497  000D6C                     l3752:
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3501  000D6C  0E67               	movlw	103
  3502  000D6E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3503  000D70  B4D8               	btfsc	status,2,c
  3504  000D72  EFBD  F006         	goto	u4411
  3505  000D76  EFBF  F006         	goto	u4410
  3506  000D7A                     u4411:
  3507  000D7A  EFC3  F006         	goto	l3756
  3508  000D7E                     u4410:
  3509  000D7E                     
  3510                           ; BSR set to: 0
  3511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3512  000D7E  5190               	movf	efgtoa@e& (0+255),w,b
  3513  000D80  2774               	addwf	efgtoa@m& (0+255),f,b
  3514  000D82  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3515  000D84  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3516  000D86                     l3756:
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3520  000D86  0E00               	movlw	0
  3521  000D88  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3522  000D8A  0E00               	movlw	0
  3523  000D8C  6F8A               	movwf	efgtoa@i& (0+255),b
  3524  000D8E                     
  3525                           ; BSR set to: 0
  3526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3527  000D8E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3528  000D92  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3529  000D96  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3530  000D9A  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3531  000D9E                     
  3532                           ; BSR set to: 0
  3533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3534  000D9E  C094  F060         	movff	efgtoa@u,efgtoa@ou
  3535  000DA2  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  3536  000DA6  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  3537  000DAA  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  3538                           
  3539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3540  000DAE  EF54  F007         	goto	l3770
  3541  000DB2                     l3762:
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3545  000DB2  C082  F00F         	movff	efgtoa@h,___fldiv@b
  3546  000DB6  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  3547  000DBA  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  3548  000DBE  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  3549  000DC2  C094  F013         	movff	efgtoa@u,___fldiv@a
  3550  000DC6  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  3551  000DCA  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  3552  000DCE  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  3553  000DD2  ECDF  F010         	call	___fldiv	;wreg free
  3554  000DD6  C00F  F028         	movff	?___fldiv,floorf@x
  3555  000DDA  C010  F029         	movff	?___fldiv+1,floorf@x+1
  3556  000DDE  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  3557  000DE2  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  3558  000DE6  EC1E  F014         	call	_floorf	;wreg free
  3559  000DEA  C028  F086         	movff	?_floorf,efgtoa@l
  3560  000DEE  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  3561  000DF2  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  3562  000DF6  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  3563                           
  3564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3565  000DFA  C086  F001         	movff	efgtoa@l,___fltol@f1
  3566  000DFE  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3567  000E02  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3568  000E06  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3569  000E0A  EC71  F017         	call	___fltol	;wreg free
  3570  000E0E  C001  F078         	movff	?___fltol,efgtoa@d
  3571  000E12  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3572  000E16                     
  3573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3574  000E16  C082  F01A         	movff	efgtoa@h,___flsub@b
  3575  000E1A  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3576  000E1E  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3577  000E22  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3578  000E26  C094  F005         	movff	efgtoa@u,___flmul@a
  3579  000E2A  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3580  000E2E  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3581  000E32  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3582  000E36  C086  F001         	movff	efgtoa@l,___flmul@b
  3583  000E3A  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3584  000E3E  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3585  000E42  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3586  000E46  ECCA  F00E         	call	___flmul	;wreg free
  3587  000E4A  C001  F01E         	movff	?___flmul,___flsub@a
  3588  000E4E  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3589  000E52  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3590  000E56  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3591  000E5A  ECEA  F01C         	call	___flsub	;wreg free
  3592  000E5E  C01A  F082         	movff	?___flsub,efgtoa@h
  3593  000E62  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3594  000E66  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3595  000E6A  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3596  000E6E                     
  3597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3598  000E6E  C094  F00F         	movff	efgtoa@u,___fldiv@b
  3599  000E72  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  3600  000E76  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  3601  000E7A  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  3602  000E7E  0E00               	movlw	0
  3603  000E80  6E13               	movwf	___fldiv@a^0,c
  3604  000E82  0E00               	movlw	0
  3605  000E84  6E14               	movwf	(___fldiv@a+1)^0,c
  3606  000E86  0E20               	movlw	32
  3607  000E88  6E15               	movwf	(___fldiv@a+2)^0,c
  3608  000E8A  0E41               	movlw	65
  3609  000E8C  6E16               	movwf	(___fldiv@a+3)^0,c
  3610  000E8E  ECDF  F010         	call	___fldiv	;wreg free
  3611  000E92  C00F  F094         	movff	?___fldiv,efgtoa@u
  3612  000E96  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  3613  000E9A  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  3614  000E9E  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  3615  000EA2                     
  3616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3617  000EA2  0100               	movlb	0	; () banked
  3618  000EA4  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3619  000EA6  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3620  000EA8                     l3770:
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3624  000EA8  5174               	movf	efgtoa@m& (0+255),w,b
  3625  000EAA  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3626  000EAC  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3627  000EAE  0A80               	xorlw	128
  3628  000EB0  6E43               	movwf	??_efgtoa^0,c
  3629  000EB2  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3630  000EB4  0A80               	xorlw	128
  3631  000EB6  5843               	subwfb	??_efgtoa^0,w,c
  3632  000EB8  A0D8               	btfss	status,0,c
  3633  000EBA  EF61  F007         	goto	u4421
  3634  000EBE  EF63  F007         	goto	u4420
  3635  000EC2                     u4421:
  3636  000EC2  EFD9  F006         	goto	l3762
  3637  000EC6                     u4420:
  3638  000EC6                     
  3639                           ; BSR set to: 0
  3640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3641  000EC6  C094  F001         	movff	efgtoa@u,___flmul@b
  3642  000ECA  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3643  000ECE  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3644  000ED2  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3645  000ED6  0E00               	movlw	0
  3646  000ED8  6E05               	movwf	___flmul@a^0,c
  3647  000EDA  0E00               	movlw	0
  3648  000EDC  6E06               	movwf	(___flmul@a+1)^0,c
  3649  000EDE  0EA0               	movlw	160
  3650  000EE0  6E07               	movwf	(___flmul@a+2)^0,c
  3651  000EE2  0E40               	movlw	64
  3652  000EE4  6E08               	movwf	(___flmul@a+3)^0,c
  3653  000EE6  ECCA  F00E         	call	___flmul	;wreg free
  3654  000EEA  C001  F086         	movff	?___flmul,efgtoa@l
  3655  000EEE  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  3656  000EF2  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  3657  000EF6  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  3658  000EFA                     
  3659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3660  000EFA  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3661  000EFE  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3662  000F02  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3663  000F06  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3664  000F0A  C086  F01E         	movff	efgtoa@l,___flge@ff2
  3665  000F0E  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3666  000F12  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3667  000F16  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3668  000F1A  ECF4  F017         	call	___flge	;wreg free
  3669  000F1E  B0D8               	btfsc	status,0,c
  3670  000F20  EF94  F007         	goto	u4431
  3671  000F24  EF96  F007         	goto	u4430
  3672  000F28                     u4431:
  3673  000F28  EFA1  F007         	goto	l3778
  3674  000F2C                     u4430:
  3675  000F2C                     
  3676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3677  000F2C  0E00               	movlw	0
  3678  000F2E  0100               	movlb	0	; () banked
  3679  000F30  6F86               	movwf	efgtoa@l& (0+255),b
  3680  000F32  0E00               	movlw	0
  3681  000F34  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3682  000F36  0E00               	movlw	0
  3683  000F38  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3684  000F3A  0E00               	movlw	0
  3685  000F3C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3686                           
  3687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  3688  000F3E  EFCA  F007         	goto	l3784
  3689  000F42                     l3778:
  3690                           
  3691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3692  000F42  C082  F001         	movff	efgtoa@h,___fleq@ff1
  3693  000F46  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3694  000F4A  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3695  000F4E  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3696  000F52  C086  F005         	movff	efgtoa@l,___fleq@ff2
  3697  000F56  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3698  000F5A  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3699  000F5E  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3700  000F62  ECD8  F01A         	call	___fleq	;wreg free
  3701  000F66  A0D8               	btfss	status,0,c
  3702  000F68  EFB8  F007         	goto	u4441
  3703  000F6C  EFBA  F007         	goto	u4440
  3704  000F70                     u4441:
  3705  000F70  EFCA  F007         	goto	l3784
  3706  000F74                     u4440:
  3707  000F74  0100               	movlb	0	; () banked
  3708  000F76  B178               	btfsc	efgtoa@d& (0+255),0,b
  3709  000F78  EFC0  F007         	goto	u4451
  3710  000F7C  EFC2  F007         	goto	u4450
  3711  000F80                     u4451:
  3712  000F80  EFCA  F007         	goto	l3784
  3713  000F84                     u4450:
  3714  000F84                     
  3715                           ; BSR set to: 0
  3716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3717  000F84  0E00               	movlw	0
  3718  000F86  6F86               	movwf	efgtoa@l& (0+255),b
  3719  000F88  0E00               	movlw	0
  3720  000F8A  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3721  000F8C  0E00               	movlw	0
  3722  000F8E  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3723  000F90  0E00               	movlw	0
  3724  000F92  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3725  000F94                     l3784:
  3726                           
  3727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3728  000F94  C08C  F001         	movff	efgtoa@g,___fladd@b
  3729  000F98  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  3730  000F9C  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  3731  000FA0  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  3732  000FA4  C086  F005         	movff	efgtoa@l,___fladd@a
  3733  000FA8  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3734  000FAC  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3735  000FB0  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3736  000FB4  EC26  F00A         	call	___fladd	;wreg free
  3737  000FB8  C001  F082         	movff	?___fladd,efgtoa@h
  3738  000FBC  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3739  000FC0  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3740  000FC4  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3741  000FC8                     
  3742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3743  000FC8  C060  F094         	movff	efgtoa@ou,efgtoa@u
  3744  000FCC  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3745  000FD0  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3746  000FD4  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3747  000FD8                     
  3748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3749  000FD8  0E65               	movlw	101
  3750  000FDA  0100               	movlb	0	; () banked
  3751  000FDC  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3752  000FDE  B4D8               	btfsc	status,2,c
  3753  000FE0  EFF4  F007         	goto	u4461
  3754  000FE4  EFF6  F007         	goto	u4460
  3755  000FE8                     u4461:
  3756  000FE8  EFFC  F007         	goto	l3792
  3757  000FEC                     u4460:
  3758  000FEC                     
  3759                           ; BSR set to: 0
  3760  000FEC  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3761  000FF0  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3762  000FF4  EF00  F008         	goto	l304
  3763  000FF8                     l3792:
  3764                           
  3765                           ; BSR set to: 0
  3766  000FF8  0E00               	movlw	0
  3767  000FFA  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3768  000FFC  0E00               	movlw	0
  3769  000FFE  6F76               	movwf	efgtoa@ne& (0+255),b
  3770  001000                     l304:
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3774  001000  0E00               	movlw	0
  3775  001002  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3776  001004  0E00               	movlw	0
  3777  001006  6F72               	movwf	efgtoa@pp& (0+255),b
  3778                           
  3779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3780  001008  0E00               	movlw	0
  3781  00100A  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3782  00100C  0E00               	movlw	0
  3783  00100E  6F70               	movwf	efgtoa@t& (0+255),b
  3784                           
  3785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3786  001010  0E00               	movlw	0
  3787  001012  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3788  001014  0E00               	movlw	0
  3789  001016  6F8A               	movwf	efgtoa@i& (0+255),b
  3790                           
  3791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3792  001018  EFFB  F008         	goto	l3842
  3793  00101C                     l3794:
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3797  00101C  C082  F00F         	movff	efgtoa@h,___fldiv@b
  3798  001020  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  3799  001024  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  3800  001028  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  3801  00102C  C094  F013         	movff	efgtoa@u,___fldiv@a
  3802  001030  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  3803  001034  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  3804  001038  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  3805  00103C  ECDF  F010         	call	___fldiv	;wreg free
  3806  001040  C00F  F028         	movff	?___fldiv,floorf@x
  3807  001044  C010  F029         	movff	?___fldiv+1,floorf@x+1
  3808  001048  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  3809  00104C  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  3810  001050  EC1E  F014         	call	_floorf	;wreg free
  3811  001054  C028  F086         	movff	?_floorf,efgtoa@l
  3812  001058  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  3813  00105C  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  3814  001060  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  3815                           
  3816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3817  001064  C086  F001         	movff	efgtoa@l,___fltol@f1
  3818  001068  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3819  00106C  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3820  001070  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3821  001074  EC71  F017         	call	___fltol	;wreg free
  3822  001078  C001  F078         	movff	?___fltol,efgtoa@d
  3823  00107C  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3824  001080                     
  3825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3826  001080  0100               	movlb	0	; () banked
  3827  001082  B9C2               	btfsc	_flags& (0+255),4,b
  3828  001084  EF46  F008         	goto	u4471
  3829  001088  EF48  F008         	goto	u4470
  3830  00108C                     u4471:
  3831  00108C  EF65  F008         	goto	l3806
  3832  001090                     u4470:
  3833  001090                     
  3834                           ; BSR set to: 0
  3835  001090  5178               	movf	efgtoa@d& (0+255),w,b
  3836  001092  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3837  001094  A4D8               	btfss	status,2,c
  3838  001096  EF4F  F008         	goto	u4481
  3839  00109A  EF51  F008         	goto	u4480
  3840  00109E                     u4481:
  3841  00109E  EF65  F008         	goto	l3806
  3842  0010A2                     u4480:
  3843  0010A2                     
  3844                           ; BSR set to: 0
  3845  0010A2  0E67               	movlw	103
  3846  0010A4  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3847  0010A6  A4D8               	btfss	status,2,c
  3848  0010A8  EF58  F008         	goto	u4491
  3849  0010AC  EF5A  F008         	goto	u4490
  3850  0010B0                     u4491:
  3851  0010B0  EF65  F008         	goto	l3806
  3852  0010B4                     u4490:
  3853  0010B4                     
  3854                           ; BSR set to: 0
  3855  0010B4  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3856  0010B6  EF61  F008         	goto	u4500
  3857  0010BA  EF5F  F008         	goto	u4501
  3858  0010BE                     u4501:
  3859  0010BE  EF65  F008         	goto	l3806
  3860  0010C2                     u4500:
  3861  0010C2                     
  3862                           ; BSR set to: 0
  3863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3864  0010C2  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3865  0010C4  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3866                           
  3867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3868  0010C6  EFAF  F008         	goto	l3834
  3869  0010CA                     l3806:
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3873  0010CA  5172               	movf	efgtoa@pp& (0+255),w,b
  3874  0010CC  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3875  0010CE  A4D8               	btfss	status,2,c
  3876  0010D0  EF6C  F008         	goto	u4511
  3877  0010D4  EF6E  F008         	goto	u4510
  3878  0010D8                     u4511:
  3879  0010D8  EF98  F008         	goto	l3826
  3880  0010DC                     u4510:
  3881  0010DC                     
  3882                           ; BSR set to: 0
  3883  0010DC  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3884  0010DE  EF75  F008         	goto	u4520
  3885  0010E2  EF73  F008         	goto	u4521
  3886  0010E6                     u4521:
  3887  0010E6  EF98  F008         	goto	l3826
  3888  0010EA                     u4520:
  3889  0010EA                     
  3890                           ; BSR set to: 0
  3891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3892  0010EA  0E00               	movlw	low _dbuf
  3893  0010EC  2592               	addwf	efgtoa@n& (0+255),w,b
  3894  0010EE  6ED9               	movwf	fsr2l,c
  3895  0010F0  0E01               	movlw	high _dbuf
  3896  0010F2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3897  0010F4  6EDA               	movwf	fsr2h,c
  3898  0010F6  0E2E               	movlw	46
  3899  0010F8  6EDF               	movwf	indf2,c
  3900  0010FA                     
  3901                           ; BSR set to: 0
  3902  0010FA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3903  0010FC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3904  0010FE                     
  3905                           ; BSR set to: 0
  3906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3907  0010FE  077F               	decf	efgtoa@w& (0+255),f,b
  3908  001100  A0D8               	btfss	status,0,c
  3909  001102  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3910  001104                     
  3911                           ; BSR set to: 0
  3912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3913  001104  0E00               	movlw	0
  3914  001106  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3915  001108  0E01               	movlw	1
  3916  00110A  6F72               	movwf	efgtoa@pp& (0+255),b
  3917  00110C  EF98  F008         	goto	l3826
  3918  001110                     l3818:
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3922  001110  0E00               	movlw	low _dbuf
  3923  001112  2592               	addwf	efgtoa@n& (0+255),w,b
  3924  001114  6ED9               	movwf	fsr2l,c
  3925  001116  0E01               	movlw	high _dbuf
  3926  001118  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3927  00111A  6EDA               	movwf	fsr2h,c
  3928  00111C  0E30               	movlw	48
  3929  00111E  6EDF               	movwf	indf2,c
  3930  001120                     
  3931                           ; BSR set to: 0
  3932  001120  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3933  001122  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3934  001124                     
  3935                           ; BSR set to: 0
  3936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3937  001124  077F               	decf	efgtoa@w& (0+255),f,b
  3938  001126  A0D8               	btfss	status,0,c
  3939  001128  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3940  00112A                     
  3941                           ; BSR set to: 0
  3942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3943  00112A  0770               	decf	efgtoa@t& (0+255),f,b
  3944  00112C  A0D8               	btfss	status,0,c
  3945  00112E  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3946  001130                     l3826:
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3950  001130  5170               	movf	efgtoa@t& (0+255),w,b
  3951  001132  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3952  001134  A4D8               	btfss	status,2,c
  3953  001136  EF9F  F008         	goto	u4531
  3954  00113A  EFA1  F008         	goto	u4530
  3955  00113E                     u4531:
  3956  00113E  EF88  F008         	goto	l3818
  3957  001142                     u4530:
  3958  001142                     
  3959                           ; BSR set to: 0
  3960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3961  001142  0E00               	movlw	low _dbuf
  3962  001144  2592               	addwf	efgtoa@n& (0+255),w,b
  3963  001146  6ED9               	movwf	fsr2l,c
  3964  001148  0E01               	movlw	high _dbuf
  3965  00114A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3966  00114C  6EDA               	movwf	fsr2h,c
  3967  00114E  5178               	movf	efgtoa@d& (0+255),w,b
  3968  001150  0F30               	addlw	48
  3969  001152  6EDF               	movwf	indf2,c
  3970  001154                     
  3971                           ; BSR set to: 0
  3972  001154  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3973  001156  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3974  001158                     
  3975                           ; BSR set to: 0
  3976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3977  001158  077F               	decf	efgtoa@w& (0+255),f,b
  3978  00115A  A0D8               	btfss	status,0,c
  3979  00115C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3980  00115E                     l3834:
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3984  00115E  C082  F01A         	movff	efgtoa@h,___flsub@b
  3985  001162  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3986  001166  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3987  00116A  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3988  00116E  C094  F005         	movff	efgtoa@u,___flmul@a
  3989  001172  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3990  001176  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3991  00117A  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3992  00117E  C086  F001         	movff	efgtoa@l,___flmul@b
  3993  001182  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3994  001186  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3995  00118A  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3996  00118E  ECCA  F00E         	call	___flmul	;wreg free
  3997  001192  C001  F01E         	movff	?___flmul,___flsub@a
  3998  001196  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3999  00119A  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4000  00119E  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4001  0011A2  ECEA  F01C         	call	___flsub	;wreg free
  4002  0011A6  C01A  F082         	movff	?___flsub,efgtoa@h
  4003  0011AA  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  4004  0011AE  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  4005  0011B2  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  4006  0011B6                     
  4007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4008  0011B6  C094  F00F         	movff	efgtoa@u,___fldiv@b
  4009  0011BA  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  4010  0011BE  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  4011  0011C2  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  4012  0011C6  0E00               	movlw	0
  4013  0011C8  6E13               	movwf	___fldiv@a^0,c
  4014  0011CA  0E00               	movlw	0
  4015  0011CC  6E14               	movwf	(___fldiv@a+1)^0,c
  4016  0011CE  0E20               	movlw	32
  4017  0011D0  6E15               	movwf	(___fldiv@a+2)^0,c
  4018  0011D2  0E41               	movlw	65
  4019  0011D4  6E16               	movwf	(___fldiv@a+3)^0,c
  4020  0011D6  ECDF  F010         	call	___fldiv	;wreg free
  4021  0011DA  C00F  F094         	movff	?___fldiv,efgtoa@u
  4022  0011DE  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  4023  0011E2  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  4024  0011E6  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  4025  0011EA                     
  4026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4027  0011EA  0100               	movlb	0	; () banked
  4028  0011EC  0776               	decf	efgtoa@ne& (0+255),f,b
  4029  0011EE  A0D8               	btfss	status,0,c
  4030  0011F0  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  4031  0011F2                     
  4032                           ; BSR set to: 0
  4033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4034  0011F2  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4035  0011F4  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4036  0011F6                     l3842:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4040  0011F6  5174               	movf	efgtoa@m& (0+255),w,b
  4041  0011F8  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4042  0011FA  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4043  0011FC  0A80               	xorlw	128
  4044  0011FE  6E43               	movwf	??_efgtoa^0,c
  4045  001200  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  4046  001202  0A80               	xorlw	128
  4047  001204  5843               	subwfb	??_efgtoa^0,w,c
  4048  001206  B0D8               	btfsc	status,0,c
  4049  001208  EF08  F009         	goto	u4541
  4050  00120C  EF0A  F009         	goto	u4540
  4051  001210                     u4541:
  4052  001210  EF18  F009         	goto	l3846
  4053  001214                     u4540:
  4054  001214                     
  4055                           ; BSR set to: 0
  4056  001214  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4057  001216  EF16  F009         	goto	u4551
  4058  00121A  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4059  00121C  E109               	bnz	u4550
  4060  00121E  0E4B               	movlw	75
  4061  001220  5D92               	subwf	efgtoa@n& (0+255),w,b
  4062  001222  A0D8               	btfss	status,0,c
  4063  001224  EF16  F009         	goto	u4551
  4064  001228  EF18  F009         	goto	u4550
  4065  00122C                     u4551:
  4066  00122C  EF0E  F008         	goto	l3794
  4067  001230                     u4550:
  4068  001230                     l3846:
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4072  001230  5172               	movf	efgtoa@pp& (0+255),w,b
  4073  001232  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4074  001234  A4D8               	btfss	status,2,c
  4075  001236  EF1F  F009         	goto	u4561
  4076  00123A  EF21  F009         	goto	u4560
  4077  00123E                     u4561:
  4078  00123E  EF32  F009         	goto	l3854
  4079  001242                     u4560:
  4080  001242                     
  4081                           ; BSR set to: 0
  4082  001242  A9C2               	btfss	_flags& (0+255),4,b
  4083  001244  EF26  F009         	goto	u4571
  4084  001248  EF28  F009         	goto	u4570
  4085  00124C                     u4571:
  4086  00124C  EF32  F009         	goto	l3854
  4087  001250                     u4570:
  4088  001250                     
  4089                           ; BSR set to: 0
  4090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4091  001250  0E00               	movlw	low _dbuf
  4092  001252  2592               	addwf	efgtoa@n& (0+255),w,b
  4093  001254  6ED9               	movwf	fsr2l,c
  4094  001256  0E01               	movlw	high _dbuf
  4095  001258  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4096  00125A  6EDA               	movwf	fsr2h,c
  4097  00125C  0E2E               	movlw	46
  4098  00125E  6EDF               	movwf	indf2,c
  4099  001260                     
  4100                           ; BSR set to: 0
  4101  001260  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4102  001262  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4103  001264                     l3854:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4107  001264  0E00               	movlw	low _dbuf
  4108  001266  2592               	addwf	efgtoa@n& (0+255),w,b
  4109  001268  6ED9               	movwf	fsr2l,c
  4110  00126A  0E01               	movlw	high _dbuf
  4111  00126C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4112  00126E  6EDA               	movwf	fsr2h,c
  4113  001270  0E00               	movlw	0
  4114  001272  6EDF               	movwf	indf2,c
  4115  001274                     
  4116                           ; BSR set to: 0
  4117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4118  001274  0E65               	movlw	101
  4119  001276  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4120  001278  A4D8               	btfss	status,2,c
  4121  00127A  EF41  F009         	goto	u4581
  4122  00127E  EF43  F009         	goto	u4580
  4123  001282                     u4581:
  4124  001282  EF13  F00A         	goto	l3916
  4125  001286                     u4580:
  4126  001286                     
  4127                           ; BSR set to: 0
  4128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4129  001286  0E00               	movlw	0
  4130  001288  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4131  00128A  0E4F               	movlw	79
  4132  00128C  6F8A               	movwf	efgtoa@i& (0+255),b
  4133  00128E                     
  4134                           ; BSR set to: 0
  4135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4136  00128E  0E00               	movlw	low _dbuf
  4137  001290  258A               	addwf	efgtoa@i& (0+255),w,b
  4138  001292  6ED9               	movwf	fsr2l,c
  4139  001294  0E01               	movlw	high _dbuf
  4140  001296  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4141  001298  6EDA               	movwf	fsr2h,c
  4142  00129A  0E00               	movlw	0
  4143  00129C  6EDF               	movwf	indf2,c
  4144  00129E                     
  4145                           ; BSR set to: 0
  4146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4147  00129E  0E00               	movlw	0
  4148  0012A0  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4149  0012A2  0E00               	movlw	0
  4150  0012A4  6F7A               	movwf	efgtoa@sign& (0+255),b
  4151  0012A6                     
  4152                           ; BSR set to: 0
  4153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4154  0012A6  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4155  0012A8  EF5A  F009         	goto	u4590
  4156  0012AC  EF58  F009         	goto	u4591
  4157  0012B0                     u4591:
  4158  0012B0  EF62  F009         	goto	l3870
  4159  0012B4                     u4590:
  4160  0012B4                     
  4161                           ; BSR set to: 0
  4162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4163  0012B4  0E00               	movlw	0
  4164  0012B6  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4165  0012B8  0E01               	movlw	1
  4166  0012BA  6F7A               	movwf	efgtoa@sign& (0+255),b
  4167  0012BC                     
  4168                           ; BSR set to: 0
  4169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4170  0012BC  6D90               	negf	efgtoa@e& (0+255),b
  4171  0012BE  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4172  0012C0  B0D8               	btfsc	status,0,c
  4173  0012C2  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4174  0012C4                     l3870:
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4178  0012C4  0E00               	movlw	0
  4179  0012C6  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4180  0012C8  0E02               	movlw	2
  4181  0012CA  6F7C               	movwf	efgtoa@p& (0+255),b
  4182                           
  4183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4184  0012CC  EF93  F009         	goto	l3882
  4185  0012D0                     l3872:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4189  0012D0  078A               	decf	efgtoa@i& (0+255),f,b
  4190  0012D2  A0D8               	btfss	status,0,c
  4191  0012D4  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4192  0012D6                     
  4193                           ; BSR set to: 0
  4194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4195  0012D6  0E00               	movlw	low _dbuf
  4196  0012D8  258A               	addwf	efgtoa@i& (0+255),w,b
  4197  0012DA  6ED9               	movwf	fsr2l,c
  4198  0012DC  0E01               	movlw	high _dbuf
  4199  0012DE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4200  0012E0  6EDA               	movwf	fsr2h,c
  4201  0012E2  C090  F001         	movff	efgtoa@e,___awmod@dividend
  4202  0012E6  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4203  0012EA  0E00               	movlw	0
  4204  0012EC  6E04               	movwf	(___awmod@divisor+1)^0,c
  4205  0012EE  0E0A               	movlw	10
  4206  0012F0  6E03               	movwf	___awmod@divisor^0,c
  4207  0012F2  EC80  F01A         	call	___awmod	;wreg free
  4208  0012F6  5001               	movf	?___awmod^0,w,c
  4209  0012F8  0F30               	addlw	48
  4210  0012FA  6EDF               	movwf	indf2,c
  4211  0012FC                     
  4212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4213  0012FC  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  4214  001300  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4215  001304  0E00               	movlw	0
  4216  001306  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4217  001308  0E0A               	movlw	10
  4218  00130A  6E03               	movwf	___awdiv@divisor^0,c
  4219  00130C  ECC3  F019         	call	___awdiv	;wreg free
  4220  001310  C001  F090         	movff	?___awdiv,efgtoa@e
  4221  001314  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  4222  001318                     
  4223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4224  001318  0100               	movlb	0	; () banked
  4225  00131A  077C               	decf	efgtoa@p& (0+255),f,b
  4226  00131C  A0D8               	btfss	status,0,c
  4227  00131E  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4228  001320                     
  4229                           ; BSR set to: 0
  4230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4231  001320  077F               	decf	efgtoa@w& (0+255),f,b
  4232  001322  A0D8               	btfss	status,0,c
  4233  001324  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4234  001326                     l3882:
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4238  001326  5190               	movf	efgtoa@e& (0+255),w,b
  4239  001328  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4240  00132A  A4D8               	btfss	status,2,c
  4241  00132C  EF9A  F009         	goto	u4601
  4242  001330  EF9C  F009         	goto	u4600
  4243  001334                     u4601:
  4244  001334  EF68  F009         	goto	l3872
  4245  001338                     u4600:
  4246  001338                     
  4247                           ; BSR set to: 0
  4248  001338  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4249  00133A  EFA9  F009         	goto	u4610
  4250  00133E  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4251  001340  E106               	bnz	u4611
  4252  001342  057C               	decf	efgtoa@p& (0+255),w,b
  4253  001344  B0D8               	btfsc	status,0,c
  4254  001346  EFA7  F009         	goto	u4611
  4255  00134A  EFA9  F009         	goto	u4610
  4256  00134E                     u4611:
  4257  00134E  EF68  F009         	goto	l3872
  4258  001352                     u4610:
  4259  001352                     
  4260                           ; BSR set to: 0
  4261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4262  001352  078A               	decf	efgtoa@i& (0+255),f,b
  4263  001354  A0D8               	btfss	status,0,c
  4264  001356  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4265  001358                     
  4266                           ; BSR set to: 0
  4267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4268  001358  517A               	movf	efgtoa@sign& (0+255),w,b
  4269  00135A  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4270  00135C  A4D8               	btfss	status,2,c
  4271  00135E  EFB3  F009         	goto	u4621
  4272  001362  EFB5  F009         	goto	u4620
  4273  001366                     u4621:
  4274  001366  EFBB  F009         	goto	l3892
  4275  00136A                     u4620:
  4276  00136A                     
  4277                           ; BSR set to: 0
  4278  00136A  0E00               	movlw	0
  4279  00136C  6F6B               	movwf	(_efgtoa$830+1)& (0+255),b
  4280  00136E  0E2B               	movlw	43
  4281  001370  6F6A               	movwf	_efgtoa$830& (0+255),b
  4282  001372  EFBF  F009         	goto	l3894
  4283  001376                     l3892:
  4284                           
  4285                           ; BSR set to: 0
  4286  001376  0E00               	movlw	0
  4287  001378  6F6B               	movwf	(_efgtoa$830+1)& (0+255),b
  4288  00137A  0E2D               	movlw	45
  4289  00137C  6F6A               	movwf	_efgtoa$830& (0+255),b
  4290  00137E                     l3894:
  4291                           
  4292                           ; BSR set to: 0
  4293  00137E  0E00               	movlw	low _dbuf
  4294  001380  258A               	addwf	efgtoa@i& (0+255),w,b
  4295  001382  6ED9               	movwf	fsr2l,c
  4296  001384  0E01               	movlw	high _dbuf
  4297  001386  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4298  001388  6EDA               	movwf	fsr2h,c
  4299  00138A  C06A  FFDF         	movff	_efgtoa$830,indf2
  4300  00138E                     
  4301                           ; BSR set to: 0
  4302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4303  00138E  077F               	decf	efgtoa@w& (0+255),f,b
  4304  001390  A0D8               	btfss	status,0,c
  4305  001392  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4306  001394                     
  4307                           ; BSR set to: 0
  4308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4309  001394  078A               	decf	efgtoa@i& (0+255),f,b
  4310  001396  A0D8               	btfss	status,0,c
  4311  001398  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4312  00139A                     
  4313                           ; BSR set to: 0
  4314  00139A  0EBF               	movlw	191
  4315  00139C  6E43               	movwf	??_efgtoa^0,c
  4316  00139E  0EFF               	movlw	255
  4317  0013A0  6E44               	movwf	(??_efgtoa+1)^0,c
  4318  0013A2  5042               	movf	efgtoa@c^0,w,c
  4319  0013A4  6E45               	movwf	(??_efgtoa+2)^0,c
  4320  0013A6  6A46               	clrf	(??_efgtoa+3)^0,c
  4321  0013A8  5043               	movf	??_efgtoa^0,w,c
  4322  0013AA  2645               	addwf	(??_efgtoa+2)^0,f,c
  4323  0013AC  5044               	movf	(??_efgtoa+1)^0,w,c
  4324  0013AE  2246               	addwfc	(??_efgtoa+3)^0,f,c
  4325  0013B0  5046               	movf	(??_efgtoa+3)^0,w,c
  4326  0013B2  E10A               	bnz	u4630
  4327  0013B4  0E1A               	movlw	26
  4328  0013B6  5C45               	subwf	(??_efgtoa+2)^0,w,c
  4329  0013B8  A0D8               	btfss	status,0,c
  4330  0013BA  EFE1  F009         	goto	u4631
  4331  0013BE  EFE4  F009         	goto	u4630
  4332  0013C2                     u4631:
  4333  0013C2  0E01               	movlw	1
  4334  0013C4  EFE5  F009         	goto	u4640
  4335  0013C8                     u4630:
  4336  0013C8  0E00               	movlw	0
  4337  0013CA                     u4640:
  4338  0013CA  6F6E               	movwf	_efgtoa$832& (0+255),b
  4339  0013CC  6B6F               	clrf	(_efgtoa$832+1)& (0+255),b
  4340  0013CE                     
  4341                           ; BSR set to: 0
  4342  0013CE  516E               	movf	_efgtoa$832& (0+255),w,b
  4343  0013D0  116F               	iorwf	(_efgtoa$832+1)& (0+255),w,b
  4344  0013D2  A4D8               	btfss	status,2,c
  4345  0013D4  EFEE  F009         	goto	u4651
  4346  0013D8  EFF0  F009         	goto	u4650
  4347  0013DC                     u4651:
  4348  0013DC  EFF6  F009         	goto	l3908
  4349  0013E0                     u4650:
  4350  0013E0                     
  4351                           ; BSR set to: 0
  4352  0013E0  0E00               	movlw	0
  4353  0013E2  6F6D               	movwf	(_efgtoa$831+1)& (0+255),b
  4354  0013E4  0E65               	movlw	101
  4355  0013E6  6F6C               	movwf	_efgtoa$831& (0+255),b
  4356  0013E8  EFFA  F009         	goto	l3910
  4357  0013EC                     l3908:
  4358                           
  4359                           ; BSR set to: 0
  4360  0013EC  0E00               	movlw	0
  4361  0013EE  6F6D               	movwf	(_efgtoa$831+1)& (0+255),b
  4362  0013F0  0E45               	movlw	69
  4363  0013F2  6F6C               	movwf	_efgtoa$831& (0+255),b
  4364  0013F4                     l3910:
  4365                           
  4366                           ; BSR set to: 0
  4367  0013F4  0E00               	movlw	low _dbuf
  4368  0013F6  258A               	addwf	efgtoa@i& (0+255),w,b
  4369  0013F8  6ED9               	movwf	fsr2l,c
  4370  0013FA  0E01               	movlw	high _dbuf
  4371  0013FC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4372  0013FE  6EDA               	movwf	fsr2h,c
  4373  001400  C06C  FFDF         	movff	_efgtoa$831,indf2
  4374  001404                     
  4375                           ; BSR set to: 0
  4376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4377  001404  077F               	decf	efgtoa@w& (0+255),f,b
  4378  001406  A0D8               	btfss	status,0,c
  4379  001408  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4380  00140A                     
  4381                           ; BSR set to: 0
  4382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4383  00140A  0E00               	movlw	low _dbuf
  4384  00140C  2592               	addwf	efgtoa@n& (0+255),w,b
  4385  00140E  6E01               	movwf	strcpy@dest^0,c
  4386  001410  0E01               	movlw	high _dbuf
  4387  001412  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4388  001414  6E02               	movwf	(strcpy@dest+1)^0,c
  4389  001416  0E00               	movlw	low _dbuf
  4390  001418  258A               	addwf	efgtoa@i& (0+255),w,b
  4391  00141A  6E03               	movwf	strcpy@src^0,c
  4392  00141C  0E01               	movlw	high _dbuf
  4393  00141E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4394  001420  6E04               	movwf	(strcpy@src+1)^0,c
  4395  001422  EC93  F01C         	call	_strcpy	;wreg free
  4396  001426                     l3916:
  4397                           
  4398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
  4399  001426  C03C  F017         	movff	efgtoa@fp,pad@fp
  4400  00142A  C03D  F018         	movff	efgtoa@fp+1,pad@fp+1
  4401  00142E  0E00               	movlw	low _dbuf
  4402  001430  6E19               	movwf	pad@buf^0,c
  4403  001432  0E01               	movlw	high _dbuf
  4404  001434  6E1A               	movwf	(pad@buf+1)^0,c
  4405  001436  C07F  F01B         	movff	efgtoa@w,pad@p
  4406  00143A  C080  F01C         	movff	efgtoa@w+1,pad@p+1
  4407  00143E  EC60  F019         	call	_pad	;wreg free
  4408  001442  C017  F03C         	movff	?_pad,?_efgtoa
  4409  001446  C018  F03D         	movff	?_pad+1,?_efgtoa+1
  4410  00144A                     l260:
  4411  00144A  0012               	return		;funcret
  4412  00144C                     __end_of_efgtoa:
  4413                           	opt callstack 0
  4414                           
  4415 ;; *************** function _tolower *****************
  4416 ;; Defined at:
  4417 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;  c               2    6[COMRAM] int 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  2    6[COMRAM] int 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4431 ;;      Params:         2       0       0       0       0       0       0       0       0
  4432 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4433 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4434 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4435 ;;Total ram usage:        8 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    2
  4438 ;; This function calls:
  4439 ;;		_isupper
  4440 ;; This function is called by:
  4441 ;;		_efgtoa
  4442 ;;		_vfpfcnvrt
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text9
  4447  0038C6                     __ptext9:
  4448                           	opt callstack 0
  4449  0038C6                     _tolower:
  4450                           	opt callstack 23
  4451  0038C6  0EBF               	movlw	191
  4452  0038C8  6E09               	movwf	??_tolower^0,c
  4453  0038CA  0EFF               	movlw	255
  4454  0038CC  6E0A               	movwf	(??_tolower+1)^0,c
  4455  0038CE  C007  F00B         	movff	tolower@c,??_tolower+2
  4456  0038D2  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4457  0038D6  5009               	movf	??_tolower^0,w,c
  4458  0038D8  260B               	addwf	(??_tolower+2)^0,f,c
  4459  0038DA  500A               	movf	(??_tolower+1)^0,w,c
  4460  0038DC  220C               	addwfc	(??_tolower+3)^0,f,c
  4461  0038DE  500C               	movf	(??_tolower+3)^0,w,c
  4462  0038E0  E10A               	bnz	u3270
  4463  0038E2  0E1A               	movlw	26
  4464  0038E4  5C0B               	subwf	(??_tolower+2)^0,w,c
  4465  0038E6  A0D8               	btfss	status,0,c
  4466  0038E8  EF78  F01C         	goto	u3271
  4467  0038EC  EF7B  F01C         	goto	u3270
  4468  0038F0                     u3271:
  4469  0038F0  0E01               	movlw	1
  4470  0038F2  EF7C  F01C         	goto	u3280
  4471  0038F6                     u3270:
  4472  0038F6  0E00               	movlw	0
  4473  0038F8                     u3280:
  4474  0038F8  6E0D               	movwf	_tolower$1426^0,c
  4475  0038FA  6A0E               	clrf	(_tolower$1426+1)^0,c
  4476  0038FC  500D               	movf	_tolower$1426^0,w,c
  4477  0038FE  100E               	iorwf	(_tolower$1426+1)^0,w,c
  4478  003900  B4D8               	btfsc	status,2,c
  4479  003902  EF85  F01C         	goto	u3291
  4480  003906  EF87  F01C         	goto	u3290
  4481  00390A                     u3291:
  4482  00390A  EF8E  F01C         	goto	l1166
  4483  00390E                     u3290:
  4484  00390E  0E20               	movlw	32
  4485  003910  1007               	iorwf	tolower@c^0,w,c
  4486  003912  6E07               	movwf	?_tolower^0,c
  4487  003914  5008               	movf	(tolower@c+1)^0,w,c
  4488  003916  6E08               	movwf	(?_tolower+1)^0,c
  4489  003918  EF92  F01C         	goto	l1171
  4490  00391C                     l1166:
  4491  00391C  C007  F007         	movff	tolower@c,?_tolower
  4492  003920  C008  F008         	movff	tolower@c+1,?_tolower+1
  4493  003924                     l1171:
  4494  003924  0012               	return		;funcret
  4495  003926                     __end_of_tolower:
  4496                           	opt callstack 0
  4497                           
  4498 ;; *************** function _isupper *****************
  4499 ;; Defined at:
  4500 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;  c               2    0[COMRAM] int 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;		None
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  2    0[COMRAM] int 
  4507 ;; Registers used:
  4508 ;;		wreg, status,2, status,0
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4514 ;;      Params:         2       0       0       0       0       0       0       0       0
  4515 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4516 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4517 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4518 ;;Total ram usage:        6 bytes
  4519 ;; Hardware stack levels used:    1
  4520 ;; Hardware stack levels required when called:    1
  4521 ;; This function calls:
  4522 ;;		Nothing
  4523 ;; This function is called by:
  4524 ;;		_efgtoa
  4525 ;;		_vfpfcnvrt
  4526 ;;		_tolower
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text10
  4531  003AA0                     __ptext10:
  4532                           	opt callstack 0
  4533  003AA0                     _isupper:
  4534                           	opt callstack 23
  4535  003AA0  0EBF               	movlw	191
  4536  003AA2  6E03               	movwf	??_isupper^0,c
  4537  003AA4  0EFF               	movlw	255
  4538  003AA6  6E04               	movwf	(??_isupper+1)^0,c
  4539  003AA8  C001  F005         	movff	isupper@c,??_isupper+2
  4540  003AAC  C002  F006         	movff	isupper@c+1,??_isupper+3
  4541  003AB0  5003               	movf	??_isupper^0,w,c
  4542  003AB2  2605               	addwf	(??_isupper+2)^0,f,c
  4543  003AB4  5004               	movf	(??_isupper+1)^0,w,c
  4544  003AB6  2206               	addwfc	(??_isupper+3)^0,f,c
  4545  003AB8  5006               	movf	(??_isupper+3)^0,w,c
  4546  003ABA  E10A               	bnz	u2730
  4547  003ABC  0E1A               	movlw	26
  4548  003ABE  5C05               	subwf	(??_isupper+2)^0,w,c
  4549  003AC0  A0D8               	btfss	status,0,c
  4550  003AC2  EF65  F01D         	goto	u2731
  4551  003AC6  EF68  F01D         	goto	u2730
  4552  003ACA                     u2731:
  4553  003ACA  0E01               	movlw	1
  4554  003ACC  EF69  F01D         	goto	u2740
  4555  003AD0                     u2730:
  4556  003AD0  0E00               	movlw	0
  4557  003AD2                     u2740:
  4558  003AD2  6E01               	movwf	?_isupper^0,c
  4559  003AD4  6A02               	clrf	(?_isupper+1)^0,c
  4560  003AD6  0012               	return		;funcret
  4561  003AD8                     __end_of_isupper:
  4562                           	opt callstack 0
  4563                           
  4564 ;; *************** function _strcpy *****************
  4565 ;; Defined at:
  4566 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4569 ;;		 -> dbuf(80), 
  4570 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4571 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  4572 ;;		 -> dbuf(80), 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  d               2    8[COMRAM] PTR unsigned char 
  4575 ;;		 -> dbuf(80), 
  4576 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4577 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  4578 ;;		 -> dbuf(80), 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  2    0[COMRAM] PTR unsigned char 
  4581 ;; Registers used:
  4582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4588 ;;      Params:         4       0       0       0       0       0       0       0       0
  4589 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4590 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4591 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4592 ;;Total ram usage:       10 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    1
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_efgtoa
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text11
  4603  003926                     __ptext11:
  4604                           	opt callstack 0
  4605  003926                     _strcpy:
  4606                           	opt callstack 23
  4607  003926  C003  F007         	movff	strcpy@src,strcpy@s
  4608  00392A  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4609  00392E  C001  F009         	movff	strcpy@dest,strcpy@d
  4610  003932  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4611  003936                     l3116:
  4612  003936  5007               	movf	strcpy@s^0,w,c
  4613  003938  6E05               	movwf	??_strcpy^0,c
  4614  00393A  5008               	movf	(strcpy@s+1)^0,w,c
  4615  00393C  6E06               	movwf	(??_strcpy+1)^0,c
  4616  00393E  4A07               	infsnz	strcpy@s^0,f,c
  4617  003940  2A08               	incf	(strcpy@s+1)^0,f,c
  4618  003942  C005  FFF6         	movff	??_strcpy,tblptrl
  4619  003946  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4620  00394A  6AF8               	clrf	tblptru,c
  4621  00394C  C009  FFD9         	movff	strcpy@d,fsr2l
  4622  003950  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4623  003954  4A09               	infsnz	strcpy@d^0,f,c
  4624  003956  2A0A               	incf	(strcpy@d+1)^0,f,c
  4625  003958  0E07               	movlw	(high __ramtop+-1)
  4626  00395A  64F7               	cpfsgt	tblptrh,c
  4627  00395C  D003               	bra	u3257
  4628  00395E  0008               	tblrd		*
  4629  003960  50F5               	movf	tablat,w,c
  4630  003962  D005               	bra	u3250
  4631  003964                     u3257:
  4632  003964  CFF6 FFE1          	movff	tblptrl,fsr1l
  4633  003968  CFF7 FFE2          	movff	tblptrh,fsr1h
  4634  00396C  50E7               	movf	indf1,w,c
  4635  00396E                     u3250:
  4636  00396E  6EDF               	movwf	indf2,c
  4637  003970  50DF               	movf	indf2,w,c
  4638  003972  A4D8               	btfss	status,2,c
  4639  003974  EFBE  F01C         	goto	u3261
  4640  003978  EFC0  F01C         	goto	u3260
  4641  00397C                     u3261:
  4642  00397C  EF9B  F01C         	goto	l3116
  4643  003980                     u3260:
  4644  003980  0012               	return		;funcret
  4645  003982                     __end_of_strcpy:
  4646                           	opt callstack 0
  4647                           
  4648 ;; *************** function _pad *****************
  4649 ;; Defined at:
  4650 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4653 ;;		 -> NULL(0), 
  4654 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4655 ;;		 -> dbuf(80), 
  4656 ;;  p               2   26[COMRAM] int 
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  w               2   31[COMRAM] int 
  4659 ;;  i               2   29[COMRAM] int 
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  2   22[COMRAM] int 
  4662 ;; Registers used:
  4663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4669 ;;      Params:         6       0       0       0       0       0       0       0       0
  4670 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4671 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4672 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4673 ;;Total ram usage:       11 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    7
  4676 ;; This function calls:
  4677 ;;		_fputc
  4678 ;;		_fputs
  4679 ;;		_strlen
  4680 ;; This function is called by:
  4681 ;;		_efgtoa
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text12
  4686  0032C0                     __ptext12:
  4687                           	opt callstack 0
  4688  0032C0                     _pad:
  4689                           	opt callstack 17
  4690  0032C0                     
  4691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4692  0032C0  0100               	movlb	0	; () banked
  4693  0032C2  A1C2               	btfss	_flags& (0+255),0,b
  4694  0032C4  EF66  F019         	goto	u3141
  4695  0032C8  EF68  F019         	goto	u3140
  4696  0032CC                     u3141:
  4697  0032CC  EF72  F019         	goto	l3074
  4698  0032D0                     u3140:
  4699  0032D0                     
  4700                           ; BSR set to: 0
  4701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4702  0032D0  C019  F010         	movff	pad@buf,fputs@s
  4703  0032D4  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4704  0032D8  C017  F012         	movff	pad@fp,fputs@fp
  4705  0032DC  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4706  0032E0  EC0D  F01D         	call	_fputs	;wreg free
  4707  0032E4                     l3074:
  4708                           
  4709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4710  0032E4  BE1C               	btfsc	(pad@p+1)^0,7,c
  4711  0032E6  EF77  F019         	goto	u3151
  4712  0032EA  EF79  F019         	goto	u3150
  4713  0032EE                     u3151:
  4714  0032EE  EF7F  F019         	goto	l3078
  4715  0032F2                     u3150:
  4716  0032F2  C01B  F020         	movff	pad@p,pad@w
  4717  0032F6  C01C  F021         	movff	pad@p+1,pad@w+1
  4718  0032FA  EF83  F019         	goto	l237
  4719  0032FE                     l3078:
  4720  0032FE  0E00               	movlw	0
  4721  003300  6E21               	movwf	(pad@w+1)^0,c
  4722  003302  0E00               	movlw	0
  4723  003304  6E20               	movwf	pad@w^0,c
  4724  003306                     l237:
  4725                           
  4726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4727  003306  0E00               	movlw	0
  4728  003308  6E1F               	movwf	(pad@i+1)^0,c
  4729  00330A  0E00               	movlw	0
  4730  00330C  6E1E               	movwf	pad@i^0,c
  4731                           
  4732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4733  00330E  EF95  F019         	goto	l3084
  4734  003312                     l3080:
  4735                           
  4736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4737  003312  0E00               	movlw	0
  4738  003314  6E08               	movwf	(fputc@c+1)^0,c
  4739  003316  0E20               	movlw	32
  4740  003318  6E07               	movwf	fputc@c^0,c
  4741  00331A  C017  F009         	movff	pad@fp,fputc@fp
  4742  00331E  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4743  003322  EC2D  F01B         	call	_fputc	;wreg free
  4744  003326                     
  4745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4746  003326  4A1E               	infsnz	pad@i^0,f,c
  4747  003328  2A1F               	incf	(pad@i+1)^0,f,c
  4748  00332A                     l3084:
  4749                           
  4750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4751  00332A  5020               	movf	pad@w^0,w,c
  4752  00332C  5C1E               	subwf	pad@i^0,w,c
  4753  00332E  501F               	movf	(pad@i+1)^0,w,c
  4754  003330  0A80               	xorlw	128
  4755  003332  6E1D               	movwf	??_pad^0,c
  4756  003334  5021               	movf	(pad@w+1)^0,w,c
  4757  003336  0A80               	xorlw	128
  4758  003338  581D               	subwfb	??_pad^0,w,c
  4759  00333A  A0D8               	btfss	status,0,c
  4760  00333C  EFA2  F019         	goto	u3161
  4761  003340  EFA4  F019         	goto	u3160
  4762  003344                     u3161:
  4763  003344  EF89  F019         	goto	l3080
  4764  003348                     u3160:
  4765  003348                     
  4766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4767  003348  0100               	movlb	0	; () banked
  4768  00334A  B1C2               	btfsc	_flags& (0+255),0,b
  4769  00334C  EFAA  F019         	goto	u3171
  4770  003350  EFAC  F019         	goto	u3170
  4771  003354                     u3171:
  4772  003354  EFB6  F019         	goto	l3088
  4773  003358                     u3170:
  4774  003358                     
  4775                           ; BSR set to: 0
  4776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4777  003358  C019  F010         	movff	pad@buf,fputs@s
  4778  00335C  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4779  003360  C017  F012         	movff	pad@fp,fputs@fp
  4780  003364  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4781  003368  EC0D  F01D         	call	_fputs	;wreg free
  4782  00336C                     l3088:
  4783                           
  4784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4785  00336C  C019  F001         	movff	pad@buf,strlen@s
  4786  003370  C01A  F002         	movff	pad@buf+1,strlen@s+1
  4787  003374  ECA4  F01D         	call	_strlen	;wreg free
  4788  003378  5020               	movf	pad@w^0,w,c
  4789  00337A  2401               	addwf	?_strlen^0,w,c
  4790  00337C  6E17               	movwf	?_pad^0,c
  4791  00337E  5021               	movf	(pad@w+1)^0,w,c
  4792  003380  2002               	addwfc	(?_strlen+1)^0,w,c
  4793  003382  6E18               	movwf	(?_pad+1)^0,c
  4794  003384  0012               	return		;funcret
  4795  003386                     __end_of_pad:
  4796                           	opt callstack 0
  4797                           
  4798 ;; *************** function _strlen *****************
  4799 ;; Defined at:
  4800 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4803 ;;		 -> dbuf(80), 
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4806 ;;		 -> dbuf(80), 
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  2    0[COMRAM] unsigned int 
  4809 ;; Registers used:
  4810 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4816 ;;      Params:         2       0       0       0       0       0       0       0       0
  4817 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4819 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4820 ;;Total ram usage:        4 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; Hardware stack levels required when called:    1
  4823 ;; This function calls:
  4824 ;;		Nothing
  4825 ;; This function is called by:
  4826 ;;		_pad
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           	psect	text13
  4831  003B48                     __ptext13:
  4832                           	opt callstack 0
  4833  003B48                     _strlen:
  4834                           	opt callstack 22
  4835  003B48  C001  F003         	movff	strlen@s,strlen@a
  4836  003B4C  C002  F004         	movff	strlen@s+1,strlen@a+1
  4837  003B50  EFAC  F01D         	goto	l2858
  4838  003B54                     l2856:
  4839  003B54  4A01               	infsnz	strlen@s^0,f,c
  4840  003B56  2A02               	incf	(strlen@s+1)^0,f,c
  4841  003B58                     l2858:
  4842  003B58  C001  FFD9         	movff	strlen@s,fsr2l
  4843  003B5C  C002  FFDA         	movff	strlen@s+1,fsr2h
  4844  003B60  50DF               	movf	indf2,w,c
  4845  003B62  A4D8               	btfss	status,2,c
  4846  003B64  EFB6  F01D         	goto	u2721
  4847  003B68  EFB8  F01D         	goto	u2720
  4848  003B6C                     u2721:
  4849  003B6C  EFAA  F01D         	goto	l2856
  4850  003B70                     u2720:
  4851  003B70  5003               	movf	strlen@a^0,w,c
  4852  003B72  5C01               	subwf	strlen@s^0,w,c
  4853  003B74  6E01               	movwf	?_strlen^0,c
  4854  003B76  5004               	movf	(strlen@a+1)^0,w,c
  4855  003B78  5802               	subwfb	(strlen@s+1)^0,w,c
  4856  003B7A  6E02               	movwf	(?_strlen+1)^0,c
  4857  003B7C  0012               	return		;funcret
  4858  003B7E                     __end_of_strlen:
  4859                           	opt callstack 0
  4860                           
  4861 ;; *************** function _fputs *****************
  4862 ;; Defined at:
  4863 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4866 ;;		 -> dbuf(80), 
  4867 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4868 ;;		 -> NULL(0), 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  i               2   20[COMRAM] int 
  4871 ;;  c               1   19[COMRAM] unsigned char 
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  2   15[COMRAM] int 
  4874 ;; Registers used:
  4875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4881 ;;      Params:         4       0       0       0       0       0       0       0       0
  4882 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4883 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4884 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4885 ;;Total ram usage:        7 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:    6
  4888 ;; This function calls:
  4889 ;;		_fputc
  4890 ;; This function is called by:
  4891 ;;		_pad
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text14
  4896  003A1A                     __ptext14:
  4897                           	opt callstack 0
  4898  003A1A                     _fputs:
  4899                           	opt callstack 17
  4900  003A1A  0E00               	movlw	0
  4901  003A1C  6E16               	movwf	(fputs@i+1)^0,c
  4902  003A1E  0E00               	movlw	0
  4903  003A20  6E15               	movwf	fputs@i^0,c
  4904  003A22  EF1E  F01D         	goto	l2852
  4905  003A26                     l2848:
  4906  003A26  C014  F007         	movff	fputs@c,fputc@c
  4907  003A2A  6A08               	clrf	(fputc@c+1)^0,c
  4908  003A2C  C012  F009         	movff	fputs@fp,fputc@fp
  4909  003A30  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4910  003A34  EC2D  F01B         	call	_fputc	;wreg free
  4911  003A38  4A15               	infsnz	fputs@i^0,f,c
  4912  003A3A  2A16               	incf	(fputs@i+1)^0,f,c
  4913  003A3C                     l2852:
  4914  003A3C  5015               	movf	fputs@i^0,w,c
  4915  003A3E  2410               	addwf	fputs@s^0,w,c
  4916  003A40  6ED9               	movwf	fsr2l,c
  4917  003A42  5016               	movf	(fputs@i+1)^0,w,c
  4918  003A44  2011               	addwfc	(fputs@s+1)^0,w,c
  4919  003A46  6EDA               	movwf	fsr2h,c
  4920  003A48  50DF               	movf	indf2,w,c
  4921  003A4A  6E14               	movwf	fputs@c^0,c
  4922  003A4C  5014               	movf	fputs@c^0,w,c
  4923  003A4E  A4D8               	btfss	status,2,c
  4924  003A50  EF2C  F01D         	goto	u2711
  4925  003A54  EF2E  F01D         	goto	u2710
  4926  003A58                     u2711:
  4927  003A58  EF13  F01D         	goto	l2848
  4928  003A5C                     u2710:
  4929  003A5C  0012               	return		;funcret
  4930  003A5E                     __end_of_fputs:
  4931                           	opt callstack 0
  4932                           
  4933 ;; *************** function _fputc *****************
  4934 ;; Defined at:
  4935 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  c               2    6[COMRAM] int 
  4938 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4939 ;;		 -> NULL(0), 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;		None
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  2    6[COMRAM] int 
  4944 ;; Registers used:
  4945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4951 ;;      Params:         4       0       0       0       0       0       0       0       0
  4952 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4953 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4954 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4955 ;;Total ram usage:        9 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; Hardware stack levels required when called:    5
  4958 ;; This function calls:
  4959 ;;		_putch
  4960 ;; This function is called by:
  4961 ;;		_pad
  4962 ;;		_vfpfcnvrt
  4963 ;;		_fputs
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text15
  4968  00365A                     __ptext15:
  4969                           	opt callstack 0
  4970  00365A                     _fputc:
  4971                           	opt callstack 20
  4972  00365A  5009               	movf	fputc@fp^0,w,c
  4973  00365C  100A               	iorwf	(fputc@fp+1)^0,w,c
  4974  00365E  B4D8               	btfsc	status,2,c
  4975  003660  EF34  F01B         	goto	u2671
  4976  003664  EF36  F01B         	goto	u2670
  4977  003668                     u2671:
  4978  003668  EF3F  F01B         	goto	l2836
  4979  00366C                     u2670:
  4980  00366C  5009               	movf	fputc@fp^0,w,c
  4981  00366E  100A               	iorwf	(fputc@fp+1)^0,w,c
  4982  003670  A4D8               	btfss	status,2,c
  4983  003672  EF3D  F01B         	goto	u2681
  4984  003676  EF3F  F01B         	goto	u2680
  4985  00367A                     u2681:
  4986  00367A  EF44  F01B         	goto	l2838
  4987  00367E                     u2680:
  4988  00367E                     l2836:
  4989  00367E  5007               	movf	fputc@c^0,w,c
  4990  003680  EC66  F01E         	call	_putch
  4991  003684  EF77  F01B         	goto	l1125
  4992  003688                     l2838:
  4993  003688  EE20 F004          	lfsr	2,4
  4994  00368C  5009               	movf	fputc@fp^0,w,c
  4995  00368E  26D9               	addwf	fsr2l,f,c
  4996  003690  500A               	movf	(fputc@fp+1)^0,w,c
  4997  003692  22DA               	addwfc	fsr2h,f,c
  4998  003694  50DE               	movf	postinc2,w,c
  4999  003696  10DE               	iorwf	postinc2,w,c
  5000  003698  B4D8               	btfsc	status,2,c
  5001  00369A  EF51  F01B         	goto	u2691
  5002  00369E  EF53  F01B         	goto	u2690
  5003  0036A2                     u2691:
  5004  0036A2  EF6E  F01B         	goto	l2842
  5005  0036A6                     u2690:
  5006  0036A6  EE20 F004          	lfsr	2,4
  5007  0036AA  5009               	movf	fputc@fp^0,w,c
  5008  0036AC  26D9               	addwf	fsr2l,f,c
  5009  0036AE  500A               	movf	(fputc@fp+1)^0,w,c
  5010  0036B0  22DA               	addwfc	fsr2h,f,c
  5011  0036B2  EE10 F002          	lfsr	1,2
  5012  0036B6  5009               	movf	fputc@fp^0,w,c
  5013  0036B8  26E1               	addwf	fsr1l,f,c
  5014  0036BA  500A               	movf	(fputc@fp+1)^0,w,c
  5015  0036BC  22E2               	addwfc	fsr1h,f,c
  5016  0036BE  50DE               	movf	postinc2,w,c
  5017  0036C0  5CE6               	subwf	postinc1,w,c
  5018  0036C2  50E6               	movf	postinc1,w,c
  5019  0036C4  0A80               	xorlw	128
  5020  0036C6  6E0F               	movwf	(??_fputc+4)^0,c
  5021  0036C8  50DE               	movf	postinc2,w,c
  5022  0036CA  0A80               	xorlw	128
  5023  0036CC  580F               	subwfb	(??_fputc+4)^0,w,c
  5024  0036CE  B0D8               	btfsc	status,0,c
  5025  0036D0  EF6C  F01B         	goto	u2701
  5026  0036D4  EF6E  F01B         	goto	u2700
  5027  0036D8                     u2701:
  5028  0036D8  EF77  F01B         	goto	l1125
  5029  0036DC                     u2700:
  5030  0036DC                     l2842:
  5031  0036DC  EE20 F002          	lfsr	2,2
  5032  0036E0  5009               	movf	fputc@fp^0,w,c
  5033  0036E2  26D9               	addwf	fsr2l,f,c
  5034  0036E4  500A               	movf	(fputc@fp+1)^0,w,c
  5035  0036E6  22DA               	addwfc	fsr2h,f,c
  5036  0036E8  2ADE               	incf	postinc2,f,c
  5037  0036EA  0E00               	movlw	0
  5038  0036EC  22DD               	addwfc	postdec2,f,c
  5039  0036EE                     l1125:
  5040  0036EE  0012               	return		;funcret
  5041  0036F0                     __end_of_fputc:
  5042                           	opt callstack 0
  5043                           
  5044 ;; *************** function _putch *****************
  5045 ;; Defined at:
  5046 ;;		line 12 in file "main.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  data            1    wreg     unsigned char 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  data            1    5[COMRAM] unsigned char 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  1    wreg      void 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0, cstack
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5060 ;;      Params:         0       0       0       0       0       0       0       0       0
  5061 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5063 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5064 ;;Total ram usage:        1 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:    4
  5067 ;; This function calls:
  5068 ;;		_escreve_lcd
  5069 ;; This function is called by:
  5070 ;;		_fputc
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073                           
  5074                           	psect	text16
  5075  003CCC                     __ptext16:
  5076                           	opt callstack 0
  5077  003CCC                     _putch:
  5078                           	opt callstack 20
  5079                           
  5080                           ;incstack = 0
  5081                           ;putch@data stored from wreg
  5082  003CCC  6E06               	movwf	putch@data^0,c
  5083  003CCE                     
  5084                           ;main.c: 12: void putch(char data);main.c: 13: {;main.c: 14:     escreve_lcd(data);
  5085  003CCE  5006               	movf	putch@data^0,w,c
  5086  003CD0  EC5F  F01E         	call	_escreve_lcd
  5087  003CD4  0012               	return		;funcret
  5088  003CD6                     __end_of_putch:
  5089                           	opt callstack 0
  5090                           
  5091 ;; *************** function _escreve_lcd *****************
  5092 ;; Defined at:
  5093 ;;		line 24 in file "lcd.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  c               1    wreg     unsigned char 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  c               1    4[COMRAM] unsigned char 
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      void 
  5100 ;; Registers used:
  5101 ;;		wreg, status,2, status,0, cstack
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5107 ;;      Params:         0       0       0       0       0       0       0       0       0
  5108 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5110 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5111 ;;Total ram usage:        1 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    3
  5114 ;; This function calls:
  5115 ;;		_envia_byte_lcd
  5116 ;; This function is called by:
  5117 ;;		_putch
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text17
  5122  003CBE                     __ptext17:
  5123                           	opt callstack 0
  5124  003CBE                     _escreve_lcd:
  5125                           	opt callstack 20
  5126                           
  5127                           ;incstack = 0
  5128                           ;escreve_lcd@c stored from wreg
  5129  003CBE  6E05               	movwf	escreve_lcd@c^0,c
  5130  003CC0  C005  F003         	movff	escreve_lcd@c,envia_byte_lcd@dado
  5131  003CC4  0E01               	movlw	1
  5132  003CC6  ECF9  F01D         	call	_envia_byte_lcd
  5133  003CCA  0012               	return		;funcret
  5134  003CCC                     __end_of_escreve_lcd:
  5135                           	opt callstack 0
  5136                           
  5137 ;; *************** function _floorf *****************
  5138 ;; Defined at:
  5139 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;  x               4   39[COMRAM] float 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  u               4   55[COMRAM] struct .
  5144 ;;  m               4   49[COMRAM] unsigned long 
  5145 ;;  e               2   53[COMRAM] int 
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  4   39[COMRAM] float 
  5148 ;; Registers used:
  5149 ;;		wreg, status,2, status,0
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5155 ;;      Params:         4       0       0       0       0       0       0       0       0
  5156 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5157 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5158 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5159 ;;Total ram usage:       20 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; Hardware stack levels required when called:    1
  5162 ;; This function calls:
  5163 ;;		Nothing
  5164 ;; This function is called by:
  5165 ;;		_efgtoa
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text18
  5170  00283C                     __ptext18:
  5171                           	opt callstack 0
  5172  00283C                     _floorf:
  5173                           	opt callstack 23
  5174  00283C  C0AC  F038         	movff	floorf@F524,floorf@u
  5175  002840  C0AD  F039         	movff	floorf@F524+1,floorf@u+1
  5176  002844  C0AE  F03A         	movff	floorf@F524+2,floorf@u+2
  5177  002848  C0AF  F03B         	movff	floorf@F524+3,floorf@u+3
  5178  00284C  C028  F038         	movff	floorf@x,floorf@u
  5179  002850  C029  F039         	movff	floorf@x+1,floorf@u+1
  5180  002854  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  5181  002858  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  5182  00285C  0E81               	movlw	129
  5183  00285E  6E2C               	movwf	??_floorf^0,c
  5184  002860  0EFF               	movlw	255
  5185  002862  6E2D               	movwf	(??_floorf+1)^0,c
  5186  002864  C038  F02E         	movff	floorf@u,??_floorf+2
  5187  002868  C039  F02F         	movff	floorf@u+1,??_floorf+3
  5188  00286C  C03A  F030         	movff	floorf@u+2,??_floorf+4
  5189  002870  C03B  F031         	movff	floorf@u+3,??_floorf+5
  5190  002874  0E18               	movlw	24
  5191  002876  EF42  F014         	goto	u3300
  5192  00287A                     u3305:
  5193  00287A  90D8               	bcf	status,0,c
  5194  00287C  3231               	rrcf	(??_floorf+5)^0,f,c
  5195  00287E  3230               	rrcf	(??_floorf+4)^0,f,c
  5196  002880  322F               	rrcf	(??_floorf+3)^0,f,c
  5197  002882  322E               	rrcf	(??_floorf+2)^0,f,c
  5198  002884                     u3300:
  5199  002884  2EE8               	decfsz	wreg,f,c
  5200  002886  EF3D  F014         	goto	u3305
  5201  00288A  502E               	movf	(??_floorf+2)^0,w,c
  5202  00288C  242C               	addwf	??_floorf^0,w,c
  5203  00288E  6E36               	movwf	floorf@e^0,c
  5204  002890  0E00               	movlw	0
  5205  002892  202D               	addwfc	(??_floorf+1)^0,w,c
  5206  002894  6E37               	movwf	(floorf@e+1)^0,c
  5207  002896  BE37               	btfsc	(floorf@e+1)^0,7,c
  5208  002898  EF57  F014         	goto	u3311
  5209  00289C  5037               	movf	(floorf@e+1)^0,w,c
  5210  00289E  E109               	bnz	u3310
  5211  0028A0  0E17               	movlw	23
  5212  0028A2  5C36               	subwf	floorf@e^0,w,c
  5213  0028A4  A0D8               	btfss	status,0,c
  5214  0028A6  EF57  F014         	goto	u3311
  5215  0028AA  EF59  F014         	goto	u3310
  5216  0028AE                     u3311:
  5217  0028AE  EF63  F014         	goto	l3134
  5218  0028B2                     u3310:
  5219  0028B2                     l3132:
  5220  0028B2  C028  F028         	movff	floorf@x,?_floorf
  5221  0028B6  C029  F029         	movff	floorf@x+1,?_floorf+1
  5222  0028BA  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  5223  0028BE  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  5224  0028C2  EF26  F015         	goto	l1086
  5225  0028C6                     l3134:
  5226  0028C6  BE37               	btfsc	(floorf@e+1)^0,7,c
  5227  0028C8  EF68  F014         	goto	u3321
  5228  0028CC  EF6A  F014         	goto	u3320
  5229  0028D0                     u3321:
  5230  0028D0  EFDA  F014         	goto	l3144
  5231  0028D4                     u3320:
  5232  0028D4  C036  F02C         	movff	floorf@e,??_floorf
  5233  0028D8  0EFF               	movlw	255
  5234  0028DA  6E2D               	movwf	(??_floorf+1)^0,c
  5235  0028DC  0EFF               	movlw	255
  5236  0028DE  6E2E               	movwf	(??_floorf+2)^0,c
  5237  0028E0  0E7F               	movlw	127
  5238  0028E2  6E2F               	movwf	(??_floorf+3)^0,c
  5239  0028E4  0E00               	movlw	0
  5240  0028E6  6E30               	movwf	(??_floorf+4)^0,c
  5241  0028E8                     u3335:
  5242  0028E8  662C               	tstfsz	??_floorf^0,c
  5243  0028EA  EF79  F014         	goto	u3336
  5244  0028EE  EF81  F014         	goto	u3337
  5245  0028F2                     u3336:
  5246  0028F2  3430               	rlcf	(??_floorf+4)^0,w,c
  5247  0028F4  3230               	rrcf	(??_floorf+4)^0,f,c
  5248  0028F6  322F               	rrcf	(??_floorf+3)^0,f,c
  5249  0028F8  322E               	rrcf	(??_floorf+2)^0,f,c
  5250  0028FA  322D               	rrcf	(??_floorf+1)^0,f,c
  5251  0028FC  2E2C               	decfsz	??_floorf^0,f,c
  5252  0028FE  EF74  F014         	goto	u3335
  5253  002902                     u3337:
  5254  002902  C02D  F032         	movff	??_floorf+1,floorf@m
  5255  002906  C02E  F033         	movff	??_floorf+2,floorf@m+1
  5256  00290A  C02F  F034         	movff	??_floorf+3,floorf@m+2
  5257  00290E  C030  F035         	movff	??_floorf+4,floorf@m+3
  5258  002912  5032               	movf	floorf@m^0,w,c
  5259  002914  1438               	andwf	floorf@u^0,w,c
  5260  002916  6E2C               	movwf	??_floorf^0,c
  5261  002918  5033               	movf	(floorf@m+1)^0,w,c
  5262  00291A  1439               	andwf	(floorf@u+1)^0,w,c
  5263  00291C  6E2D               	movwf	(??_floorf+1)^0,c
  5264  00291E  5034               	movf	(floorf@m+2)^0,w,c
  5265  002920  143A               	andwf	(floorf@u+2)^0,w,c
  5266  002922  6E2E               	movwf	(??_floorf+2)^0,c
  5267  002924  5035               	movf	(floorf@m+3)^0,w,c
  5268  002926  143B               	andwf	(floorf@u+3)^0,w,c
  5269  002928  6E2F               	movwf	(??_floorf+3)^0,c
  5270  00292A  502C               	movf	??_floorf^0,w,c
  5271  00292C  102D               	iorwf	(??_floorf+1)^0,w,c
  5272  00292E  102E               	iorwf	(??_floorf+2)^0,w,c
  5273  002930  102F               	iorwf	(??_floorf+3)^0,w,c
  5274  002932  A4D8               	btfss	status,2,c
  5275  002934  EF9E  F014         	goto	u3341
  5276  002938  EFA0  F014         	goto	u3340
  5277  00293C                     u3341:
  5278  00293C  EFA2  F014         	goto	l3140
  5279  002940                     u3340:
  5280  002940  EF59  F014         	goto	l3132
  5281  002944                     l3140:
  5282  002944  C038  F02C         	movff	floorf@u,??_floorf
  5283  002948  C039  F02D         	movff	floorf@u+1,??_floorf+1
  5284  00294C  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  5285  002950  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  5286  002954  0E20               	movlw	32
  5287  002956  EFB2  F014         	goto	u3350
  5288  00295A                     u3355:
  5289  00295A  90D8               	bcf	status,0,c
  5290  00295C  322F               	rrcf	(??_floorf+3)^0,f,c
  5291  00295E  322E               	rrcf	(??_floorf+2)^0,f,c
  5292  002960  322D               	rrcf	(??_floorf+1)^0,f,c
  5293  002962  322C               	rrcf	??_floorf^0,f,c
  5294  002964                     u3350:
  5295  002964  2EE8               	decfsz	wreg,f,c
  5296  002966  EFAD  F014         	goto	u3355
  5297  00296A  502C               	movf	??_floorf^0,w,c
  5298  00296C  102D               	iorwf	(??_floorf+1)^0,w,c
  5299  00296E  102E               	iorwf	(??_floorf+2)^0,w,c
  5300  002970  102F               	iorwf	(??_floorf+3)^0,w,c
  5301  002972  B4D8               	btfsc	status,2,c
  5302  002974  EFBE  F014         	goto	u3361
  5303  002978  EFC0  F014         	goto	u3360
  5304  00297C                     u3361:
  5305  00297C  EFC8  F014         	goto	l1089
  5306  002980                     u3360:
  5307  002980  5032               	movf	floorf@m^0,w,c
  5308  002982  2638               	addwf	floorf@u^0,f,c
  5309  002984  5033               	movf	(floorf@m+1)^0,w,c
  5310  002986  2239               	addwfc	(floorf@u+1)^0,f,c
  5311  002988  5034               	movf	(floorf@m+2)^0,w,c
  5312  00298A  223A               	addwfc	(floorf@u+2)^0,f,c
  5313  00298C  5035               	movf	(floorf@m+3)^0,w,c
  5314  00298E  223B               	addwfc	(floorf@u+3)^0,f,c
  5315  002990                     l1089:
  5316  002990  1C32               	comf	floorf@m^0,w,c
  5317  002992  6E2C               	movwf	??_floorf^0,c
  5318  002994  1C33               	comf	(floorf@m+1)^0,w,c
  5319  002996  6E2D               	movwf	(??_floorf+1)^0,c
  5320  002998  1C34               	comf	(floorf@m+2)^0,w,c
  5321  00299A  6E2E               	movwf	(??_floorf+2)^0,c
  5322  00299C  1C35               	comf	(floorf@m+3)^0,w,c
  5323  00299E  6E2F               	movwf	(??_floorf+3)^0,c
  5324  0029A0  502C               	movf	??_floorf^0,w,c
  5325  0029A2  1638               	andwf	floorf@u^0,f,c
  5326  0029A4  502D               	movf	(??_floorf+1)^0,w,c
  5327  0029A6  1639               	andwf	(floorf@u+1)^0,f,c
  5328  0029A8  502E               	movf	(??_floorf+2)^0,w,c
  5329  0029AA  163A               	andwf	(floorf@u+2)^0,f,c
  5330  0029AC  502F               	movf	(??_floorf+3)^0,w,c
  5331  0029AE  163B               	andwf	(floorf@u+3)^0,f,c
  5332  0029B0  EF1E  F015         	goto	l3152
  5333  0029B4                     l3144:
  5334  0029B4  C038  F02C         	movff	floorf@u,??_floorf
  5335  0029B8  C039  F02D         	movff	floorf@u+1,??_floorf+1
  5336  0029BC  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  5337  0029C0  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  5338  0029C4  0E20               	movlw	32
  5339  0029C6  EFEA  F014         	goto	u3370
  5340  0029CA                     u3375:
  5341  0029CA  90D8               	bcf	status,0,c
  5342  0029CC  322F               	rrcf	(??_floorf+3)^0,f,c
  5343  0029CE  322E               	rrcf	(??_floorf+2)^0,f,c
  5344  0029D0  322D               	rrcf	(??_floorf+1)^0,f,c
  5345  0029D2  322C               	rrcf	??_floorf^0,f,c
  5346  0029D4                     u3370:
  5347  0029D4  2EE8               	decfsz	wreg,f,c
  5348  0029D6  EFE5  F014         	goto	u3375
  5349  0029DA  502C               	movf	??_floorf^0,w,c
  5350  0029DC  102D               	iorwf	(??_floorf+1)^0,w,c
  5351  0029DE  102E               	iorwf	(??_floorf+2)^0,w,c
  5352  0029E0  102F               	iorwf	(??_floorf+3)^0,w,c
  5353  0029E2  A4D8               	btfss	status,2,c
  5354  0029E4  EFF6  F014         	goto	u3381
  5355  0029E8  EFF8  F014         	goto	u3380
  5356  0029EC                     u3381:
  5357  0029EC  EF02  F015         	goto	l3148
  5358  0029F0                     u3380:
  5359  0029F0  0E00               	movlw	0
  5360  0029F2  6E38               	movwf	floorf@u^0,c
  5361  0029F4  0E00               	movlw	0
  5362  0029F6  6E39               	movwf	(floorf@u+1)^0,c
  5363  0029F8  0E00               	movlw	0
  5364  0029FA  6E3A               	movwf	(floorf@u+2)^0,c
  5365  0029FC  0E00               	movlw	0
  5366  0029FE  6E3B               	movwf	(floorf@u+3)^0,c
  5367  002A00  EF1E  F015         	goto	l3152
  5368  002A04                     l3148:
  5369  002A04  90D8               	bcf	status,0,c
  5370  002A06  3438               	rlcf	floorf@u^0,w,c
  5371  002A08  6E2C               	movwf	??_floorf^0,c
  5372  002A0A  3439               	rlcf	(floorf@u+1)^0,w,c
  5373  002A0C  6E2D               	movwf	(??_floorf+1)^0,c
  5374  002A0E  343A               	rlcf	(floorf@u+2)^0,w,c
  5375  002A10  6E2E               	movwf	(??_floorf+2)^0,c
  5376  002A12  343B               	rlcf	(floorf@u+3)^0,w,c
  5377  002A14  6E2F               	movwf	(??_floorf+3)^0,c
  5378  002A16  502C               	movf	??_floorf^0,w,c
  5379  002A18  102D               	iorwf	(??_floorf+1)^0,w,c
  5380  002A1A  102E               	iorwf	(??_floorf+2)^0,w,c
  5381  002A1C  102F               	iorwf	(??_floorf+3)^0,w,c
  5382  002A1E  B4D8               	btfsc	status,2,c
  5383  002A20  EF14  F015         	goto	u3391
  5384  002A24  EF16  F015         	goto	u3390
  5385  002A28                     u3391:
  5386  002A28  EF1E  F015         	goto	l3152
  5387  002A2C                     u3390:
  5388  002A2C  0E00               	movlw	0
  5389  002A2E  6E38               	movwf	floorf@u^0,c
  5390  002A30  0E00               	movlw	0
  5391  002A32  6E39               	movwf	(floorf@u+1)^0,c
  5392  002A34  0E80               	movlw	128
  5393  002A36  6E3A               	movwf	(floorf@u+2)^0,c
  5394  002A38  0EBF               	movlw	191
  5395  002A3A  6E3B               	movwf	(floorf@u+3)^0,c
  5396  002A3C                     l3152:
  5397  002A3C  C038  F028         	movff	floorf@u,?_floorf
  5398  002A40  C039  F029         	movff	floorf@u+1,?_floorf+1
  5399  002A44  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  5400  002A48  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  5401  002A4C                     l1086:
  5402  002A4C  0012               	return		;funcret
  5403  002A4E                     __end_of_floorf:
  5404                           	opt callstack 0
  5405                           
  5406 ;; *************** function ___fpclassifyf *****************
  5407 ;; Defined at:
  5408 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  x               4    0[COMRAM] float 
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;  u               4   10[COMRAM] struct .
  5413 ;;  e               2    8[COMRAM] int 
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  2    0[COMRAM] int 
  5416 ;; Registers used:
  5417 ;;		wreg, status,2, status,0
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5423 ;;      Params:         4       0       0       0       0       0       0       0       0
  5424 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5425 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5426 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5427 ;;Total ram usage:       14 bytes
  5428 ;; Hardware stack levels used:    1
  5429 ;; Hardware stack levels required when called:    1
  5430 ;; This function calls:
  5431 ;;		Nothing
  5432 ;; This function is called by:
  5433 ;;		_efgtoa
  5434 ;; This function uses a non-reentrant model
  5435 ;;
  5436                           
  5437                           	psect	text19
  5438  0030EC                     __ptext19:
  5439                           	opt callstack 0
  5440  0030EC                     ___fpclassifyf:
  5441                           	opt callstack 23
  5442  0030EC  C0B0  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5443  0030F0  C0B1  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5444  0030F4  C0B2  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5445  0030F8  C0B3  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5446  0030FC  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5447  003100  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5448  003104  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5449  003108  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5450  00310C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5451  003110  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5452  003114  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5453  003118  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5454  00311C  0E18               	movlw	24
  5455  00311E  EF96  F018         	goto	u3180
  5456  003122                     u3185:
  5457  003122  90D8               	bcf	status,0,c
  5458  003124  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5459  003126  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5460  003128  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5461  00312A  3205               	rrcf	??___fpclassifyf^0,f,c
  5462  00312C                     u3180:
  5463  00312C  2EE8               	decfsz	wreg,f,c
  5464  00312E  EF91  F018         	goto	u3185
  5465  003132  5005               	movf	??___fpclassifyf^0,w,c
  5466  003134  6E09               	movwf	___fpclassifyf@e^0,c
  5467  003136  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5468  003138  5009               	movf	___fpclassifyf@e^0,w,c
  5469  00313A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5470  00313C  A4D8               	btfss	status,2,c
  5471  00313E  EFA3  F018         	goto	u3191
  5472  003142  EFA5  F018         	goto	u3190
  5473  003146                     u3191:
  5474  003146  EFC5  F018         	goto	l3104
  5475  00314A                     u3190:
  5476  00314A  90D8               	bcf	status,0,c
  5477  00314C  340B               	rlcf	___fpclassifyf@u^0,w,c
  5478  00314E  6E05               	movwf	??___fpclassifyf^0,c
  5479  003150  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5480  003152  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5481  003154  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5482  003156  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5483  003158  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5484  00315A  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5485  00315C  5005               	movf	??___fpclassifyf^0,w,c
  5486  00315E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5487  003160  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5488  003162  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5489  003164  A4D8               	btfss	status,2,c
  5490  003166  EFB7  F018         	goto	u3201
  5491  00316A  EFB9  F018         	goto	u3200
  5492  00316E                     u3201:
  5493  00316E  EFBF  F018         	goto	l3100
  5494  003172                     u3200:
  5495  003172  0E00               	movlw	0
  5496  003174  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5497  003176  0E02               	movlw	2
  5498  003178  6E01               	movwf	?___fpclassifyf^0,c
  5499  00317A  EFF4  F018         	goto	l1048
  5500  00317E                     l3100:
  5501  00317E  0E00               	movlw	0
  5502  003180  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5503  003182  0E03               	movlw	3
  5504  003184  6E01               	movwf	?___fpclassifyf^0,c
  5505  003186  EFF4  F018         	goto	l1048
  5506  00318A                     l3104:
  5507  00318A  2809               	incf	___fpclassifyf@e^0,w,c
  5508  00318C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5509  00318E  A4D8               	btfss	status,2,c
  5510  003190  EFCC  F018         	goto	u3211
  5511  003194  EFCE  F018         	goto	u3210
  5512  003198                     u3211:
  5513  003198  EFF0  F018         	goto	l3110
  5514  00319C                     u3210:
  5515  00319C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5516  0031A0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5517  0031A4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5518  0031A8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5519  0031AC  0E09               	movlw	9
  5520  0031AE                     u3225:
  5521  0031AE  90D8               	bcf	status,0,c
  5522  0031B0  3605               	rlcf	??___fpclassifyf^0,f,c
  5523  0031B2  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5524  0031B4  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5525  0031B6  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5526  0031B8  2EE8               	decfsz	wreg,f,c
  5527  0031BA  EFD7  F018         	goto	u3225
  5528  0031BE  5005               	movf	??___fpclassifyf^0,w,c
  5529  0031C0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5530  0031C2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5531  0031C4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5532  0031C6  B4D8               	btfsc	status,2,c
  5533  0031C8  EFE8  F018         	goto	u3231
  5534  0031CC  EFEB  F018         	goto	u3230
  5535  0031D0                     u3231:
  5536  0031D0  0E01               	movlw	1
  5537  0031D2  EFEC  F018         	goto	u3240
  5538  0031D6                     u3230:
  5539  0031D6  0E00               	movlw	0
  5540  0031D8                     u3240:
  5541  0031D8  6E01               	movwf	?___fpclassifyf^0,c
  5542  0031DA  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5543  0031DC  EFF4  F018         	goto	l1048
  5544  0031E0                     l3110:
  5545  0031E0  0E00               	movlw	0
  5546  0031E2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5547  0031E4  0E04               	movlw	4
  5548  0031E6  6E01               	movwf	?___fpclassifyf^0,c
  5549  0031E8                     l1048:
  5550  0031E8  0012               	return		;funcret
  5551  0031EA                     __end_of___fpclassifyf:
  5552                           	opt callstack 0
  5553                           
  5554 ;; *************** function ___fltol *****************
  5555 ;; Defined at:
  5556 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  f1              4    0[COMRAM] int 
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;  exp1            1    9[COMRAM] unsigned char 
  5561 ;;  sign1           1    8[COMRAM] unsigned char 
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  4    0[COMRAM] long 
  5564 ;; Registers used:
  5565 ;;		wreg, status,2, status,0
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5571 ;;      Params:         4       0       0       0       0       0       0       0       0
  5572 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5573 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5574 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5575 ;;Total ram usage:       10 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; Hardware stack levels required when called:    1
  5578 ;; This function calls:
  5579 ;;		Nothing
  5580 ;; This function is called by:
  5581 ;;		_efgtoa
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           	psect	text20
  5586  002EE2                     __ptext20:
  5587                           	opt callstack 0
  5588  002EE2                     ___fltol:
  5589                           	opt callstack 23
  5590  002EE2  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5591  002EE4  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5592  002EE6  6E0A               	movwf	___fltol@exp1^0,c
  5593  002EE8  500A               	movf	___fltol@exp1^0,w,c
  5594  002EEA  A4D8               	btfss	status,2,c
  5595  002EEC  EF7A  F017         	goto	u4051
  5596  002EF0  EF7C  F017         	goto	u4050
  5597  002EF4                     u4051:
  5598  002EF4  EF86  F017         	goto	l3572
  5599  002EF8                     u4050:
  5600  002EF8                     l3568:
  5601  002EF8  0E00               	movlw	0
  5602  002EFA  6E01               	movwf	?___fltol^0,c
  5603  002EFC  0E00               	movlw	0
  5604  002EFE  6E02               	movwf	(?___fltol+1)^0,c
  5605  002F00  0E00               	movlw	0
  5606  002F02  6E03               	movwf	(?___fltol+2)^0,c
  5607  002F04  0E00               	movlw	0
  5608  002F06  6E04               	movwf	(?___fltol+3)^0,c
  5609  002F08  EFF3  F017         	goto	l664
  5610  002F0C                     l3572:
  5611  002F0C  C001  F005         	movff	___fltol@f1,??___fltol
  5612  002F10  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5613  002F14  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5614  002F18  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5615  002F1C  0E20               	movlw	32
  5616  002F1E  EF96  F017         	goto	u4060
  5617  002F22                     u4065:
  5618  002F22  90D8               	bcf	status,0,c
  5619  002F24  3208               	rrcf	(??___fltol+3)^0,f,c
  5620  002F26  3207               	rrcf	(??___fltol+2)^0,f,c
  5621  002F28  3206               	rrcf	(??___fltol+1)^0,f,c
  5622  002F2A  3205               	rrcf	??___fltol^0,f,c
  5623  002F2C                     u4060:
  5624  002F2C  2EE8               	decfsz	wreg,f,c
  5625  002F2E  EF91  F017         	goto	u4065
  5626  002F32  5005               	movf	??___fltol^0,w,c
  5627  002F34  6E09               	movwf	___fltol@sign1^0,c
  5628  002F36  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5629  002F38  0EFF               	movlw	255
  5630  002F3A  1601               	andwf	___fltol@f1^0,f,c
  5631  002F3C  0EFF               	movlw	255
  5632  002F3E  1602               	andwf	(___fltol@f1+1)^0,f,c
  5633  002F40  0EFF               	movlw	255
  5634  002F42  1603               	andwf	(___fltol@f1+2)^0,f,c
  5635  002F44  0E00               	movlw	0
  5636  002F46  1604               	andwf	(___fltol@f1+3)^0,f,c
  5637  002F48  0E96               	movlw	150
  5638  002F4A  5E0A               	subwf	___fltol@exp1^0,f,c
  5639  002F4C  BE0A               	btfsc	___fltol@exp1^0,7,c
  5640  002F4E  EFAD  F017         	goto	u4070
  5641  002F52  EFAB  F017         	goto	u4071
  5642  002F56                     u4071:
  5643  002F56  EFC3  F017         	goto	l3592
  5644  002F5A                     u4070:
  5645  002F5A  500A               	movf	___fltol@exp1^0,w,c
  5646  002F5C  0A80               	xorlw	128
  5647  002F5E  0F97               	addlw	151
  5648  002F60  B0D8               	btfsc	status,0,c
  5649  002F62  EFB5  F017         	goto	u4081
  5650  002F66  EFB7  F017         	goto	u4080
  5651  002F6A                     u4081:
  5652  002F6A  EFB9  F017         	goto	l3588
  5653  002F6E                     u4080:
  5654  002F6E  EF7C  F017         	goto	l3568
  5655  002F72                     l3588:
  5656  002F72  90D8               	bcf	status,0,c
  5657  002F74  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5658  002F76  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5659  002F78  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5660  002F7A  3201               	rrcf	___fltol@f1^0,f,c
  5661  002F7C  3E0A               	incfsz	___fltol@exp1^0,f,c
  5662  002F7E  EFB9  F017         	goto	l3588
  5663  002F82  EFDB  F017         	goto	l3602
  5664  002F86                     l3592:
  5665  002F86  0E1F               	movlw	31
  5666  002F88  640A               	cpfsgt	___fltol@exp1^0,c
  5667  002F8A  EFC9  F017         	goto	u4091
  5668  002F8E  EFCB  F017         	goto	u4090
  5669  002F92                     u4091:
  5670  002F92  EFD3  F017         	goto	l3600
  5671  002F96                     u4090:
  5672  002F96  EF7C  F017         	goto	l3568
  5673  002F9A                     l3598:
  5674  002F9A  90D8               	bcf	status,0,c
  5675  002F9C  3601               	rlcf	___fltol@f1^0,f,c
  5676  002F9E  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5677  002FA0  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5678  002FA2  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5679  002FA4  060A               	decf	___fltol@exp1^0,f,c
  5680  002FA6                     l3600:
  5681  002FA6  500A               	movf	___fltol@exp1^0,w,c
  5682  002FA8  A4D8               	btfss	status,2,c
  5683  002FAA  EFD9  F017         	goto	u4101
  5684  002FAE  EFDB  F017         	goto	u4100
  5685  002FB2                     u4101:
  5686  002FB2  EFCD  F017         	goto	l3598
  5687  002FB6                     u4100:
  5688  002FB6                     l3602:
  5689  002FB6  5009               	movf	___fltol@sign1^0,w,c
  5690  002FB8  B4D8               	btfsc	status,2,c
  5691  002FBA  EFE1  F017         	goto	u4111
  5692  002FBE  EFE3  F017         	goto	u4110
  5693  002FC2                     u4111:
  5694  002FC2  EFEB  F017         	goto	l3606
  5695  002FC6                     u4110:
  5696  002FC6  1E04               	comf	(___fltol@f1+3)^0,f,c
  5697  002FC8  1E03               	comf	(___fltol@f1+2)^0,f,c
  5698  002FCA  1E02               	comf	(___fltol@f1+1)^0,f,c
  5699  002FCC  6C01               	negf	___fltol@f1^0,c
  5700  002FCE  0E00               	movlw	0
  5701  002FD0  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5702  002FD2  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5703  002FD4  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5704  002FD6                     l3606:
  5705  002FD6  C001  F001         	movff	___fltol@f1,?___fltol
  5706  002FDA  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5707  002FDE  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5708  002FE2  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5709  002FE6                     l664:
  5710  002FE6  0012               	return		;funcret
  5711  002FE8                     __end_of___fltol:
  5712                           	opt callstack 0
  5713                           
  5714 ;; *************** function ___flsub *****************
  5715 ;; Defined at:
  5716 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  b               4   25[COMRAM] long 
  5719 ;;  a               4   29[COMRAM] long 
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;		None
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  4   25[COMRAM] long 
  5724 ;; Registers used:
  5725 ;;		wreg, status,2, status,0, cstack
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5731 ;;      Params:         8       0       0       0       0       0       0       0       0
  5732 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5734 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5735 ;;Total ram usage:        8 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; Hardware stack levels required when called:    2
  5738 ;; This function calls:
  5739 ;;		___fladd
  5740 ;; This function is called by:
  5741 ;;		_efgtoa
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           	psect	text21
  5746  0039D4                     __ptext21:
  5747                           	opt callstack 0
  5748  0039D4                     ___flsub:
  5749                           	opt callstack 22
  5750  0039D4  0E00               	movlw	0
  5751  0039D6  1A1E               	xorwf	___flsub@a^0,f,c
  5752  0039D8  0E00               	movlw	0
  5753  0039DA  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5754  0039DC  0E00               	movlw	0
  5755  0039DE  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5756  0039E0  0E80               	movlw	128
  5757  0039E2  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5758  0039E4  C01A  F001         	movff	___flsub@b,___fladd@b
  5759  0039E8  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5760  0039EC  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5761  0039F0  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5762  0039F4  C01E  F005         	movff	___flsub@a,___fladd@a
  5763  0039F8  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5764  0039FC  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5765  003A00  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5766  003A04  EC26  F00A         	call	___fladd	;wreg free
  5767  003A08  C001  F01A         	movff	?___fladd,?___flsub
  5768  003A0C  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5769  003A10  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5770  003A14  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5771  003A18  0012               	return		;funcret
  5772  003A1A                     __end_of___flsub:
  5773                           	opt callstack 0
  5774                           
  5775 ;; *************** function ___fladd *****************
  5776 ;; Defined at:
  5777 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  b               4    0[COMRAM] long 
  5780 ;;  a               4    4[COMRAM] long 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  grs             1   15[COMRAM] unsigned char 
  5783 ;;  bexp            1   14[COMRAM] unsigned char 
  5784 ;;  aexp            1   13[COMRAM] unsigned char 
  5785 ;;  signs           1   12[COMRAM] unsigned char 
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  4    0[COMRAM] unsigned char 
  5788 ;; Registers used:
  5789 ;;		wreg, status,2, status,0
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5795 ;;      Params:         8       0       0       0       0       0       0       0       0
  5796 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5797 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5798 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5799 ;;Total ram usage:       16 bytes
  5800 ;; Hardware stack levels used:    1
  5801 ;; Hardware stack levels required when called:    1
  5802 ;; This function calls:
  5803 ;;		Nothing
  5804 ;; This function is called by:
  5805 ;;		_efgtoa
  5806 ;;		___flsub
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           	psect	text22
  5811  00144C                     __ptext22:
  5812                           	opt callstack 0
  5813  00144C                     ___fladd:
  5814                           	opt callstack 22
  5815  00144C  5004               	movf	(___fladd@b+3)^0,w,c
  5816  00144E  0B80               	andlw	128
  5817  001450  6E0D               	movwf	___fladd@signs^0,c
  5818  001452  5004               	movf	(___fladd@b+3)^0,w,c
  5819  001454  2404               	addwf	(___fladd@b+3)^0,w,c
  5820  001456  6E0F               	movwf	___fladd@bexp^0,c
  5821  001458  AE03               	btfss	(___fladd@b+2)^0,7,c
  5822  00145A  EF31  F00A         	goto	u2751
  5823  00145E  EF33  F00A         	goto	u2750
  5824  001462                     u2751:
  5825  001462  EF34  F00A         	goto	l2874
  5826  001466                     u2750:
  5827  001466  800F               	bsf	___fladd@bexp^0,0,c
  5828  001468                     l2874:
  5829  001468  500F               	movf	___fladd@bexp^0,w,c
  5830  00146A  B4D8               	btfsc	status,2,c
  5831  00146C  EF3A  F00A         	goto	u2761
  5832  001470  EF3C  F00A         	goto	u2760
  5833  001474                     u2761:
  5834  001474  EF51  F00A         	goto	l2884
  5835  001478                     u2760:
  5836  001478  280F               	incf	___fladd@bexp^0,w,c
  5837  00147A  A4D8               	btfss	status,2,c
  5838  00147C  EF42  F00A         	goto	u2771
  5839  001480  EF44  F00A         	goto	u2770
  5840  001484                     u2771:
  5841  001484  EF4C  F00A         	goto	l2880
  5842  001488                     u2770:
  5843  001488  0E00               	movlw	0
  5844  00148A  6E01               	movwf	___fladd@b^0,c
  5845  00148C  0E00               	movlw	0
  5846  00148E  6E02               	movwf	(___fladd@b+1)^0,c
  5847  001490  0E00               	movlw	0
  5848  001492  6E03               	movwf	(___fladd@b+2)^0,c
  5849  001494  0E00               	movlw	0
  5850  001496  6E04               	movwf	(___fladd@b+3)^0,c
  5851  001498                     l2880:
  5852  001498  8E03               	bsf	(___fladd@b+2)^0,7,c
  5853  00149A  0E00               	movlw	0
  5854  00149C  6E04               	movwf	(___fladd@b+3)^0,c
  5855  00149E  EF59  F00A         	goto	l2886
  5856  0014A2                     l2884:
  5857  0014A2  0E00               	movlw	0
  5858  0014A4  6E01               	movwf	___fladd@b^0,c
  5859  0014A6  0E00               	movlw	0
  5860  0014A8  6E02               	movwf	(___fladd@b+1)^0,c
  5861  0014AA  0E00               	movlw	0
  5862  0014AC  6E03               	movwf	(___fladd@b+2)^0,c
  5863  0014AE  0E00               	movlw	0
  5864  0014B0  6E04               	movwf	(___fladd@b+3)^0,c
  5865  0014B2                     l2886:
  5866  0014B2  5008               	movf	(___fladd@a+3)^0,w,c
  5867  0014B4  0B80               	andlw	128
  5868  0014B6  6E0E               	movwf	___fladd@aexp^0,c
  5869  0014B8  500D               	movf	___fladd@signs^0,w,c
  5870  0014BA  180E               	xorwf	___fladd@aexp^0,w,c
  5871  0014BC  B4D8               	btfsc	status,2,c
  5872  0014BE  EF63  F00A         	goto	u2781
  5873  0014C2  EF65  F00A         	goto	u2780
  5874  0014C6                     u2781:
  5875  0014C6  EF66  F00A         	goto	l2892
  5876  0014CA                     u2780:
  5877  0014CA  8C0D               	bsf	___fladd@signs^0,6,c
  5878  0014CC                     l2892:
  5879  0014CC  5008               	movf	(___fladd@a+3)^0,w,c
  5880  0014CE  2408               	addwf	(___fladd@a+3)^0,w,c
  5881  0014D0  6E0E               	movwf	___fladd@aexp^0,c
  5882  0014D2  AE07               	btfss	(___fladd@a+2)^0,7,c
  5883  0014D4  EF6E  F00A         	goto	u2791
  5884  0014D8  EF70  F00A         	goto	u2790
  5885  0014DC                     u2791:
  5886  0014DC  EF71  F00A         	goto	l2898
  5887  0014E0                     u2790:
  5888  0014E0  800E               	bsf	___fladd@aexp^0,0,c
  5889  0014E2                     l2898:
  5890  0014E2  500E               	movf	___fladd@aexp^0,w,c
  5891  0014E4  B4D8               	btfsc	status,2,c
  5892  0014E6  EF77  F00A         	goto	u2801
  5893  0014EA  EF79  F00A         	goto	u2800
  5894  0014EE                     u2801:
  5895  0014EE  EF8E  F00A         	goto	l2908
  5896  0014F2                     u2800:
  5897  0014F2  280E               	incf	___fladd@aexp^0,w,c
  5898  0014F4  A4D8               	btfss	status,2,c
  5899  0014F6  EF7F  F00A         	goto	u2811
  5900  0014FA  EF81  F00A         	goto	u2810
  5901  0014FE                     u2811:
  5902  0014FE  EF89  F00A         	goto	l2904
  5903  001502                     u2810:
  5904  001502  0E00               	movlw	0
  5905  001504  6E05               	movwf	___fladd@a^0,c
  5906  001506  0E00               	movlw	0
  5907  001508  6E06               	movwf	(___fladd@a+1)^0,c
  5908  00150A  0E00               	movlw	0
  5909  00150C  6E07               	movwf	(___fladd@a+2)^0,c
  5910  00150E  0E00               	movlw	0
  5911  001510  6E08               	movwf	(___fladd@a+3)^0,c
  5912  001512                     l2904:
  5913  001512  8E07               	bsf	(___fladd@a+2)^0,7,c
  5914  001514  0E00               	movlw	0
  5915  001516  6E08               	movwf	(___fladd@a+3)^0,c
  5916  001518  EF96  F00A         	goto	l2910
  5917  00151C                     l2908:
  5918  00151C  0E00               	movlw	0
  5919  00151E  6E05               	movwf	___fladd@a^0,c
  5920  001520  0E00               	movlw	0
  5921  001522  6E06               	movwf	(___fladd@a+1)^0,c
  5922  001524  0E00               	movlw	0
  5923  001526  6E07               	movwf	(___fladd@a+2)^0,c
  5924  001528  0E00               	movlw	0
  5925  00152A  6E08               	movwf	(___fladd@a+3)^0,c
  5926  00152C                     l2910:
  5927  00152C  500F               	movf	___fladd@bexp^0,w,c
  5928  00152E  5C0E               	subwf	___fladd@aexp^0,w,c
  5929  001530  B0D8               	btfsc	status,0,c
  5930  001532  EF9D  F00A         	goto	u2821
  5931  001536  EF9F  F00A         	goto	u2820
  5932  00153A                     u2821:
  5933  00153A  EFC6  F00A         	goto	l2946
  5934  00153E                     u2820:
  5935  00153E  AC0D               	btfss	___fladd@signs^0,6,c
  5936  001540  EFA4  F00A         	goto	u2831
  5937  001544  EFA6  F00A         	goto	u2830
  5938  001548                     u2831:
  5939  001548  EFA8  F00A         	goto	l2916
  5940  00154C                     u2830:
  5941  00154C  0E80               	movlw	128
  5942  00154E  1A0D               	xorwf	___fladd@signs^0,f,c
  5943  001550                     l2916:
  5944  001550  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5945  001554  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5946  001558  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5947  00155C  C001  F010         	movff	___fladd@b,___fladd@grs
  5948  001560  C005  F001         	movff	___fladd@a,___fladd@b
  5949  001564  C010  F005         	movff	___fladd@grs,___fladd@a
  5950  001568  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5951  00156C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5952  001570  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5953  001574  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5954  001578  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5955  00157C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5956  001580  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5957  001584  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5958  001588  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5959  00158C                     l2946:
  5960  00158C  0E00               	movlw	0
  5961  00158E  6E10               	movwf	___fladd@grs^0,c
  5962  001590  500F               	movf	___fladd@bexp^0,w,c
  5963  001592  C00E  F009         	movff	___fladd@aexp,??___fladd
  5964  001596  6A0A               	clrf	(??___fladd+1)^0,c
  5965  001598  5E09               	subwf	??___fladd^0,f,c
  5966  00159A  0E00               	movlw	0
  5967  00159C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5968  00159E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5969  0015A0  EFDB  F00A         	goto	u2841
  5970  0015A4  500A               	movf	(??___fladd+1)^0,w,c
  5971  0015A6  E109               	bnz	u2840
  5972  0015A8  0E1A               	movlw	26
  5973  0015AA  5C09               	subwf	??___fladd^0,w,c
  5974  0015AC  A0D8               	btfss	status,0,c
  5975  0015AE  EFDB  F00A         	goto	u2841
  5976  0015B2  EFDD  F00A         	goto	u2840
  5977  0015B6                     u2841:
  5978  0015B6  EF14  F00B         	goto	l896
  5979  0015BA                     u2840:
  5980  0015BA  5001               	movf	___fladd@b^0,w,c
  5981  0015BC  1002               	iorwf	(___fladd@b+1)^0,w,c
  5982  0015BE  1003               	iorwf	(___fladd@b+2)^0,w,c
  5983  0015C0  1004               	iorwf	(___fladd@b+3)^0,w,c
  5984  0015C2  A4D8               	btfss	status,2,c
  5985  0015C4  EFE6  F00A         	goto	u2851
  5986  0015C8  EFE9  F00A         	goto	u2850
  5987  0015CC                     u2851:
  5988  0015CC  0E01               	movlw	1
  5989  0015CE  EFEA  F00A         	goto	u2860
  5990  0015D2                     u2850:
  5991  0015D2  0E00               	movlw	0
  5992  0015D4                     u2860:
  5993  0015D4  6E10               	movwf	___fladd@grs^0,c
  5994  0015D6  0E00               	movlw	0
  5995  0015D8  6E01               	movwf	___fladd@b^0,c
  5996  0015DA  0E00               	movlw	0
  5997  0015DC  6E02               	movwf	(___fladd@b+1)^0,c
  5998  0015DE  0E00               	movlw	0
  5999  0015E0  6E03               	movwf	(___fladd@b+2)^0,c
  6000  0015E2  0E00               	movlw	0
  6001  0015E4  6E04               	movwf	(___fladd@b+3)^0,c
  6002  0015E6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6003  0015EA  EF1D  F00B         	goto	l895
  6004  0015EE                     l897:
  6005  0015EE  A010               	btfss	___fladd@grs^0,0,c
  6006  0015F0  EFFC  F00A         	goto	u2871
  6007  0015F4  EFFE  F00A         	goto	u2870
  6008  0015F8                     u2871:
  6009  0015F8  EF04  F00B         	goto	l2958
  6010  0015FC                     u2870:
  6011  0015FC  90D8               	bcf	status,0,c
  6012  0015FE  3010               	rrcf	___fladd@grs^0,w,c
  6013  001600  0901               	iorlw	1
  6014  001602  6E10               	movwf	___fladd@grs^0,c
  6015  001604  EF06  F00B         	goto	l2960
  6016  001608                     l2958:
  6017  001608  90D8               	bcf	status,0,c
  6018  00160A  3210               	rrcf	___fladd@grs^0,f,c
  6019  00160C                     l2960:
  6020  00160C  A001               	btfss	___fladd@b^0,0,c
  6021  00160E  EF0B  F00B         	goto	u2881
  6022  001612  EF0D  F00B         	goto	u2880
  6023  001616                     u2881:
  6024  001616  EF0E  F00B         	goto	l2964
  6025  00161A                     u2880:
  6026  00161A  8E10               	bsf	___fladd@grs^0,7,c
  6027  00161C                     l2964:
  6028  00161C  3404               	rlcf	(___fladd@b+3)^0,w,c
  6029  00161E  3204               	rrcf	(___fladd@b+3)^0,f,c
  6030  001620  3203               	rrcf	(___fladd@b+2)^0,f,c
  6031  001622  3202               	rrcf	(___fladd@b+1)^0,f,c
  6032  001624  3201               	rrcf	___fladd@b^0,f,c
  6033  001626  2A0F               	incf	___fladd@bexp^0,f,c
  6034  001628                     l896:
  6035  001628  500E               	movf	___fladd@aexp^0,w,c
  6036  00162A  5C0F               	subwf	___fladd@bexp^0,w,c
  6037  00162C  A0D8               	btfss	status,0,c
  6038  00162E  EF1B  F00B         	goto	u2891
  6039  001632  EF1D  F00B         	goto	u2890
  6040  001636                     u2891:
  6041  001636  EFF7  F00A         	goto	l897
  6042  00163A                     u2890:
  6043  00163A                     l895:
  6044  00163A  BC0D               	btfsc	___fladd@signs^0,6,c
  6045  00163C  EF22  F00B         	goto	u2901
  6046  001640  EF24  F00B         	goto	u2900
  6047  001644                     u2901:
  6048  001644  EF64  F00B         	goto	l2992
  6049  001648                     u2900:
  6050  001648  500F               	movf	___fladd@bexp^0,w,c
  6051  00164A  A4D8               	btfss	status,2,c
  6052  00164C  EF2A  F00B         	goto	u2911
  6053  001650  EF2C  F00B         	goto	u2910
  6054  001654                     u2911:
  6055  001654  EF36  F00B         	goto	l2974
  6056  001658                     u2910:
  6057  001658  0E00               	movlw	0
  6058  00165A  6E01               	movwf	?___fladd^0,c
  6059  00165C  0E00               	movlw	0
  6060  00165E  6E02               	movwf	(?___fladd+1)^0,c
  6061  001660  0E00               	movlw	0
  6062  001662  6E03               	movwf	(?___fladd+2)^0,c
  6063  001664  0E00               	movlw	0
  6064  001666  6E04               	movwf	(?___fladd+3)^0,c
  6065  001668  EF85  F00C         	goto	l904
  6066  00166C                     l2974:
  6067  00166C  5005               	movf	___fladd@a^0,w,c
  6068  00166E  2601               	addwf	___fladd@b^0,f,c
  6069  001670  5006               	movf	(___fladd@a+1)^0,w,c
  6070  001672  2202               	addwfc	(___fladd@b+1)^0,f,c
  6071  001674  5007               	movf	(___fladd@a+2)^0,w,c
  6072  001676  2203               	addwfc	(___fladd@b+2)^0,f,c
  6073  001678  5008               	movf	(___fladd@a+3)^0,w,c
  6074  00167A  2204               	addwfc	(___fladd@b+3)^0,f,c
  6075  00167C  A004               	btfss	(___fladd@b+3)^0,0,c
  6076  00167E  EF43  F00B         	goto	u2921
  6077  001682  EF45  F00B         	goto	u2920
  6078  001686                     u2921:
  6079  001686  EFF1  F00B         	goto	l3028
  6080  00168A                     u2920:
  6081  00168A  A010               	btfss	___fladd@grs^0,0,c
  6082  00168C  EF4A  F00B         	goto	u2931
  6083  001690  EF4C  F00B         	goto	u2930
  6084  001694                     u2931:
  6085  001694  EF52  F00B         	goto	l2982
  6086  001698                     u2930:
  6087  001698  90D8               	bcf	status,0,c
  6088  00169A  3010               	rrcf	___fladd@grs^0,w,c
  6089  00169C  0901               	iorlw	1
  6090  00169E  6E10               	movwf	___fladd@grs^0,c
  6091  0016A0  EF54  F00B         	goto	l2984
  6092  0016A4                     l2982:
  6093  0016A4  90D8               	bcf	status,0,c
  6094  0016A6  3210               	rrcf	___fladd@grs^0,f,c
  6095  0016A8                     l2984:
  6096  0016A8  A001               	btfss	___fladd@b^0,0,c
  6097  0016AA  EF59  F00B         	goto	u2941
  6098  0016AE  EF5B  F00B         	goto	u2940
  6099  0016B2                     u2941:
  6100  0016B2  EF5C  F00B         	goto	l2988
  6101  0016B6                     u2940:
  6102  0016B6  8E10               	bsf	___fladd@grs^0,7,c
  6103  0016B8                     l2988:
  6104  0016B8  3404               	rlcf	(___fladd@b+3)^0,w,c
  6105  0016BA  3204               	rrcf	(___fladd@b+3)^0,f,c
  6106  0016BC  3203               	rrcf	(___fladd@b+2)^0,f,c
  6107  0016BE  3202               	rrcf	(___fladd@b+1)^0,f,c
  6108  0016C0  3201               	rrcf	___fladd@b^0,f,c
  6109  0016C2  2A0F               	incf	___fladd@bexp^0,f,c
  6110  0016C4  EFF1  F00B         	goto	l3028
  6111  0016C8                     l2992:
  6112  0016C8  5005               	movf	___fladd@a^0,w,c
  6113  0016CA  5C01               	subwf	___fladd@b^0,w,c
  6114  0016CC  5006               	movf	(___fladd@a+1)^0,w,c
  6115  0016CE  5802               	subwfb	(___fladd@b+1)^0,w,c
  6116  0016D0  5007               	movf	(___fladd@a+2)^0,w,c
  6117  0016D2  5803               	subwfb	(___fladd@b+2)^0,w,c
  6118  0016D4  5004               	movf	(___fladd@b+3)^0,w,c
  6119  0016D6  0A80               	xorlw	128
  6120  0016D8  6E09               	movwf	??___fladd^0,c
  6121  0016DA  5008               	movf	(___fladd@a+3)^0,w,c
  6122  0016DC  0A80               	xorlw	128
  6123  0016DE  5809               	subwfb	??___fladd^0,w,c
  6124  0016E0  B0D8               	btfsc	status,0,c
  6125  0016E2  EF75  F00B         	goto	u2951
  6126  0016E6  EF77  F00B         	goto	u2950
  6127  0016EA                     u2951:
  6128  0016EA  EFA2  F00B         	goto	l3002
  6129  0016EE                     u2950:
  6130  0016EE  5001               	movf	___fladd@b^0,w,c
  6131  0016F0  5C05               	subwf	___fladd@a^0,w,c
  6132  0016F2  6E09               	movwf	??___fladd^0,c
  6133  0016F4  5002               	movf	(___fladd@b+1)^0,w,c
  6134  0016F6  5806               	subwfb	(___fladd@a+1)^0,w,c
  6135  0016F8  6E0A               	movwf	(??___fladd+1)^0,c
  6136  0016FA  5003               	movf	(___fladd@b+2)^0,w,c
  6137  0016FC  5807               	subwfb	(___fladd@a+2)^0,w,c
  6138  0016FE  6E0B               	movwf	(??___fladd+2)^0,c
  6139  001700  5004               	movf	(___fladd@b+3)^0,w,c
  6140  001702  5808               	subwfb	(___fladd@a+3)^0,w,c
  6141  001704  6E0C               	movwf	(??___fladd+3)^0,c
  6142  001706  0EFF               	movlw	255
  6143  001708  2409               	addwf	??___fladd^0,w,c
  6144  00170A  6E01               	movwf	___fladd@b^0,c
  6145  00170C  0EFF               	movlw	255
  6146  00170E  200A               	addwfc	(??___fladd+1)^0,w,c
  6147  001710  6E02               	movwf	(___fladd@b+1)^0,c
  6148  001712  0EFF               	movlw	255
  6149  001714  200B               	addwfc	(??___fladd+2)^0,w,c
  6150  001716  6E03               	movwf	(___fladd@b+2)^0,c
  6151  001718  0EFF               	movlw	255
  6152  00171A  200C               	addwfc	(??___fladd+3)^0,w,c
  6153  00171C  6E04               	movwf	(___fladd@b+3)^0,c
  6154  00171E  0E80               	movlw	128
  6155  001720  1A0D               	xorwf	___fladd@signs^0,f,c
  6156  001722  6C10               	negf	___fladd@grs^0,c
  6157  001724  5010               	movf	___fladd@grs^0,w,c
  6158  001726  A4D8               	btfss	status,2,c
  6159  001728  EF98  F00B         	goto	u2961
  6160  00172C  EF9A  F00B         	goto	u2960
  6161  001730                     u2961:
  6162  001730  EFAA  F00B         	goto	l912
  6163  001734                     u2960:
  6164  001734  0E01               	movlw	1
  6165  001736  2601               	addwf	___fladd@b^0,f,c
  6166  001738  0E00               	movlw	0
  6167  00173A  2202               	addwfc	(___fladd@b+1)^0,f,c
  6168  00173C  2203               	addwfc	(___fladd@b+2)^0,f,c
  6169  00173E  2204               	addwfc	(___fladd@b+3)^0,f,c
  6170  001740  EFAA  F00B         	goto	l912
  6171  001744                     l3002:
  6172  001744  5005               	movf	___fladd@a^0,w,c
  6173  001746  5E01               	subwf	___fladd@b^0,f,c
  6174  001748  5006               	movf	(___fladd@a+1)^0,w,c
  6175  00174A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6176  00174C  5007               	movf	(___fladd@a+2)^0,w,c
  6177  00174E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6178  001750  5008               	movf	(___fladd@a+3)^0,w,c
  6179  001752  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6180  001754                     l912:
  6181  001754  5001               	movf	___fladd@b^0,w,c
  6182  001756  1002               	iorwf	(___fladd@b+1)^0,w,c
  6183  001758  1003               	iorwf	(___fladd@b+2)^0,w,c
  6184  00175A  1004               	iorwf	(___fladd@b+3)^0,w,c
  6185  00175C  A4D8               	btfss	status,2,c
  6186  00175E  EFB3  F00B         	goto	u2971
  6187  001762  EFB5  F00B         	goto	u2970
  6188  001766                     u2971:
  6189  001766  EFEA  F00B         	goto	l3026
  6190  00176A                     u2970:
  6191  00176A  5010               	movf	___fladd@grs^0,w,c
  6192  00176C  A4D8               	btfss	status,2,c
  6193  00176E  EFBB  F00B         	goto	u2981
  6194  001772  EFBD  F00B         	goto	u2980
  6195  001776                     u2981:
  6196  001776  EFEA  F00B         	goto	l3026
  6197  00177A                     u2980:
  6198  00177A  0E00               	movlw	0
  6199  00177C  6E01               	movwf	?___fladd^0,c
  6200  00177E  0E00               	movlw	0
  6201  001780  6E02               	movwf	(?___fladd+1)^0,c
  6202  001782  0E00               	movlw	0
  6203  001784  6E03               	movwf	(?___fladd+2)^0,c
  6204  001786  0E00               	movlw	0
  6205  001788  6E04               	movwf	(?___fladd+3)^0,c
  6206  00178A  EF85  F00C         	goto	l904
  6207  00178E                     l3010:
  6208  00178E  90D8               	bcf	status,0,c
  6209  001790  3601               	rlcf	___fladd@b^0,f,c
  6210  001792  3602               	rlcf	(___fladd@b+1)^0,f,c
  6211  001794  3603               	rlcf	(___fladd@b+2)^0,f,c
  6212  001796  3604               	rlcf	(___fladd@b+3)^0,f,c
  6213  001798  AE10               	btfss	___fladd@grs^0,7,c
  6214  00179A  EFD1  F00B         	goto	u2991
  6215  00179E  EFD3  F00B         	goto	u2990
  6216  0017A2                     u2991:
  6217  0017A2  EFD4  F00B         	goto	l3016
  6218  0017A6                     u2990:
  6219  0017A6  8001               	bsf	___fladd@b^0,0,c
  6220  0017A8                     l3016:
  6221  0017A8  A010               	btfss	___fladd@grs^0,0,c
  6222  0017AA  EFD9  F00B         	goto	u3001
  6223  0017AE  EFDB  F00B         	goto	u3000
  6224  0017B2                     u3001:
  6225  0017B2  EFDF  F00B         	goto	l3020
  6226  0017B6                     u3000:
  6227  0017B6  80D8               	bsf	status,0,c
  6228  0017B8  3610               	rlcf	___fladd@grs^0,f,c
  6229  0017BA  EFE1  F00B         	goto	l3022
  6230  0017BE                     l3020:
  6231  0017BE  90D8               	bcf	status,0,c
  6232  0017C0  3610               	rlcf	___fladd@grs^0,f,c
  6233  0017C2                     l3022:
  6234  0017C2  500F               	movf	___fladd@bexp^0,w,c
  6235  0017C4  B4D8               	btfsc	status,2,c
  6236  0017C6  EFE7  F00B         	goto	u3011
  6237  0017CA  EFE9  F00B         	goto	u3010
  6238  0017CE                     u3011:
  6239  0017CE  EFEA  F00B         	goto	l3026
  6240  0017D2                     u3010:
  6241  0017D2  060F               	decf	___fladd@bexp^0,f,c
  6242  0017D4                     l3026:
  6243  0017D4  AE03               	btfss	(___fladd@b+2)^0,7,c
  6244  0017D6  EFEF  F00B         	goto	u3021
  6245  0017DA  EFF1  F00B         	goto	u3020
  6246  0017DE                     u3021:
  6247  0017DE  EFC7  F00B         	goto	l3010
  6248  0017E2                     u3020:
  6249  0017E2                     l3028:
  6250  0017E2  0E00               	movlw	0
  6251  0017E4  6E0E               	movwf	___fladd@aexp^0,c
  6252  0017E6  AE10               	btfss	___fladd@grs^0,7,c
  6253  0017E8  EFF8  F00B         	goto	u3031
  6254  0017EC  EFFA  F00B         	goto	u3030
  6255  0017F0                     u3031:
  6256  0017F0  EF12  F00C         	goto	l921
  6257  0017F4                     u3030:
  6258  0017F4  C010  F009         	movff	___fladd@grs,??___fladd
  6259  0017F8  0E7F               	movlw	127
  6260  0017FA  1609               	andwf	??___fladd^0,f,c
  6261  0017FC  B4D8               	btfsc	status,2,c
  6262  0017FE  EF03  F00C         	goto	u3041
  6263  001802  EF05  F00C         	goto	u3040
  6264  001806                     u3041:
  6265  001806  EF09  F00C         	goto	l922
  6266  00180A                     u3040:
  6267  00180A                     l3034:
  6268  00180A  0E01               	movlw	1
  6269  00180C  6E0E               	movwf	___fladd@aexp^0,c
  6270  00180E  EF12  F00C         	goto	l921
  6271  001812                     l922:
  6272  001812  A001               	btfss	___fladd@b^0,0,c
  6273  001814  EF0E  F00C         	goto	u3051
  6274  001818  EF10  F00C         	goto	u3050
  6275  00181C                     u3051:
  6276  00181C  EF12  F00C         	goto	l921
  6277  001820                     u3050:
  6278  001820  EF05  F00C         	goto	l3034
  6279  001824                     l921:
  6280  001824  500E               	movf	___fladd@aexp^0,w,c
  6281  001826  B4D8               	btfsc	status,2,c
  6282  001828  EF18  F00C         	goto	u3061
  6283  00182C  EF1A  F00C         	goto	u3060
  6284  001830                     u3061:
  6285  001830  EF45  F00C         	goto	l3046
  6286  001834                     u3060:
  6287  001834  0E01               	movlw	1
  6288  001836  2601               	addwf	___fladd@b^0,f,c
  6289  001838  0E00               	movlw	0
  6290  00183A  2202               	addwfc	(___fladd@b+1)^0,f,c
  6291  00183C  2203               	addwfc	(___fladd@b+2)^0,f,c
  6292  00183E  2204               	addwfc	(___fladd@b+3)^0,f,c
  6293  001840  A004               	btfss	(___fladd@b+3)^0,0,c
  6294  001842  EF25  F00C         	goto	u3071
  6295  001846  EF27  F00C         	goto	u3070
  6296  00184A                     u3071:
  6297  00184A  EF45  F00C         	goto	l3046
  6298  00184E                     u3070:
  6299  00184E  C001  F009         	movff	___fladd@b,??___fladd
  6300  001852  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6301  001856  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6302  00185A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6303  00185E  340C               	rlcf	(??___fladd+3)^0,w,c
  6304  001860  320C               	rrcf	(??___fladd+3)^0,f,c
  6305  001862  320B               	rrcf	(??___fladd+2)^0,f,c
  6306  001864  320A               	rrcf	(??___fladd+1)^0,f,c
  6307  001866  3209               	rrcf	??___fladd^0,f,c
  6308  001868  C009  F001         	movff	??___fladd,___fladd@b
  6309  00186C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6310  001870  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6311  001874  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6312  001878  280F               	incf	___fladd@bexp^0,w,c
  6313  00187A  B4D8               	btfsc	status,2,c
  6314  00187C  EF42  F00C         	goto	u3081
  6315  001880  EF44  F00C         	goto	u3080
  6316  001884                     u3081:
  6317  001884  EF45  F00C         	goto	l3046
  6318  001888                     u3080:
  6319  001888  2A0F               	incf	___fladd@bexp^0,f,c
  6320  00188A                     l3046:
  6321  00188A  280F               	incf	___fladd@bexp^0,w,c
  6322  00188C  B4D8               	btfsc	status,2,c
  6323  00188E  EF4B  F00C         	goto	u3091
  6324  001892  EF4D  F00C         	goto	u3090
  6325  001896                     u3091:
  6326  001896  EF55  F00C         	goto	l3050
  6327  00189A                     u3090:
  6328  00189A  500F               	movf	___fladd@bexp^0,w,c
  6329  00189C  A4D8               	btfss	status,2,c
  6330  00189E  EF53  F00C         	goto	u3101
  6331  0018A2  EF55  F00C         	goto	u3100
  6332  0018A6                     u3101:
  6333  0018A6  EF67  F00C         	goto	l3054
  6334  0018AA                     u3100:
  6335  0018AA                     l3050:
  6336  0018AA  0E00               	movlw	0
  6337  0018AC  6E01               	movwf	___fladd@b^0,c
  6338  0018AE  0E00               	movlw	0
  6339  0018B0  6E02               	movwf	(___fladd@b+1)^0,c
  6340  0018B2  0E00               	movlw	0
  6341  0018B4  6E03               	movwf	(___fladd@b+2)^0,c
  6342  0018B6  0E00               	movlw	0
  6343  0018B8  6E04               	movwf	(___fladd@b+3)^0,c
  6344  0018BA  500F               	movf	___fladd@bexp^0,w,c
  6345  0018BC  A4D8               	btfss	status,2,c
  6346  0018BE  EF63  F00C         	goto	u3111
  6347  0018C2  EF65  F00C         	goto	u3110
  6348  0018C6                     u3111:
  6349  0018C6  EF67  F00C         	goto	l3054
  6350  0018CA                     u3110:
  6351  0018CA  0E00               	movlw	0
  6352  0018CC  6E0D               	movwf	___fladd@signs^0,c
  6353  0018CE                     l3054:
  6354  0018CE  A00F               	btfss	___fladd@bexp^0,0,c
  6355  0018D0  EF6C  F00C         	goto	u3121
  6356  0018D4  EF6E  F00C         	goto	u3120
  6357  0018D8                     u3121:
  6358  0018D8  EF71  F00C         	goto	l3058
  6359  0018DC                     u3120:
  6360  0018DC  8E03               	bsf	(___fladd@b+2)^0,7,c
  6361  0018DE  EF72  F00C         	goto	l3060
  6362  0018E2                     l3058:
  6363  0018E2  9E03               	bcf	(___fladd@b+2)^0,7,c
  6364  0018E4                     l3060:
  6365  0018E4  90D8               	bcf	status,0,c
  6366  0018E6  300F               	rrcf	___fladd@bexp^0,w,c
  6367  0018E8  6E04               	movwf	(___fladd@b+3)^0,c
  6368  0018EA  AE0D               	btfss	___fladd@signs^0,7,c
  6369  0018EC  EF7A  F00C         	goto	u3131
  6370  0018F0  EF7C  F00C         	goto	u3130
  6371  0018F4                     u3131:
  6372  0018F4  EF7D  F00C         	goto	l3066
  6373  0018F8                     u3130:
  6374  0018F8  8E04               	bsf	(___fladd@b+3)^0,7,c
  6375  0018FA                     l3066:
  6376  0018FA  C001  F001         	movff	___fladd@b,?___fladd
  6377  0018FE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6378  001902  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6379  001906  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6380  00190A                     l904:
  6381  00190A  0012               	return		;funcret
  6382  00190C                     __end_of___fladd:
  6383                           	opt callstack 0
  6384                           
  6385 ;; *************** function ___flneg *****************
  6386 ;; Defined at:
  6387 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;  f1              4    0[COMRAM] unsigned char 
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  4    0[COMRAM] unsigned char 
  6394 ;; Registers used:
  6395 ;;		wreg, status,2, status,0
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6401 ;;      Params:         4       0       0       0       0       0       0       0       0
  6402 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6404 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6405 ;;Total ram usage:        4 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    1
  6408 ;; This function calls:
  6409 ;;		Nothing
  6410 ;; This function is called by:
  6411 ;;		_efgtoa
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text23
  6416  003AD8                     __ptext23:
  6417                           	opt callstack 0
  6418  003AD8                     ___flneg:
  6419                           	opt callstack 23
  6420  003AD8  5001               	movf	___flneg@f1^0,w,c
  6421  003ADA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6422  003ADC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6423  003ADE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6424  003AE0  B4D8               	btfsc	status,2,c
  6425  003AE2  EF75  F01D         	goto	u4041
  6426  003AE6  EF77  F01D         	goto	u4040
  6427  003AEA                     u4041:
  6428  003AEA  EF7F  F01D         	goto	l3562
  6429  003AEE                     u4040:
  6430  003AEE  0E00               	movlw	0
  6431  003AF0  1A01               	xorwf	___flneg@f1^0,f,c
  6432  003AF2  0E00               	movlw	0
  6433  003AF4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6434  003AF6  0E00               	movlw	0
  6435  003AF8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6436  003AFA  0E80               	movlw	128
  6437  003AFC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6438  003AFE                     l3562:
  6439  003AFE  C001  F001         	movff	___flneg@f1,?___flneg
  6440  003B02  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6441  003B06  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6442  003B0A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6443  003B0E  0012               	return		;funcret
  6444  003B10                     __end_of___flneg:
  6445                           	opt callstack 0
  6446                           
  6447 ;; *************** function ___flmul *****************
  6448 ;; Defined at:
  6449 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  b               4    0[COMRAM] unsigned char 
  6452 ;;  a               4    4[COMRAM] unsigned char 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  prod            4   19[COMRAM] struct .
  6455 ;;  grs             4   13[COMRAM] unsigned long 
  6456 ;;  temp            2   23[COMRAM] struct .
  6457 ;;  bexp            1   18[COMRAM] unsigned char 
  6458 ;;  aexp            1   17[COMRAM] unsigned char 
  6459 ;;  sign            1   12[COMRAM] unsigned char 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  4    0[COMRAM] unsigned char 
  6462 ;; Registers used:
  6463 ;;		wreg, status,2, status,0, prodl, prodh
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6469 ;;      Params:         8       0       0       0       0       0       0       0       0
  6470 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6471 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6472 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6473 ;;Total ram usage:       25 bytes
  6474 ;; Hardware stack levels used:    1
  6475 ;; Hardware stack levels required when called:    1
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		_efgtoa
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text24
  6484  001D94                     __ptext24:
  6485                           	opt callstack 0
  6486  001D94                     ___flmul:
  6487                           	opt callstack 23
  6488  001D94  5004               	movf	(___flmul@b+3)^0,w,c
  6489  001D96  0B80               	andlw	128
  6490  001D98  6E0D               	movwf	___flmul@sign^0,c
  6491  001D9A  5004               	movf	(___flmul@b+3)^0,w,c
  6492  001D9C  2404               	addwf	(___flmul@b+3)^0,w,c
  6493  001D9E  6E13               	movwf	___flmul@bexp^0,c
  6494  001DA0  AE03               	btfss	(___flmul@b+2)^0,7,c
  6495  001DA2  EFD5  F00E         	goto	u3651
  6496  001DA6  EFD7  F00E         	goto	u3650
  6497  001DAA                     u3651:
  6498  001DAA  EFD8  F00E         	goto	l3310
  6499  001DAE                     u3650:
  6500  001DAE  8013               	bsf	___flmul@bexp^0,0,c
  6501  001DB0                     l3310:
  6502  001DB0  5013               	movf	___flmul@bexp^0,w,c
  6503  001DB2  B4D8               	btfsc	status,2,c
  6504  001DB4  EFDE  F00E         	goto	u3661
  6505  001DB8  EFE0  F00E         	goto	u3660
  6506  001DBC                     u3661:
  6507  001DBC  EFF3  F00E         	goto	l3318
  6508  001DC0                     u3660:
  6509  001DC0  2813               	incf	___flmul@bexp^0,w,c
  6510  001DC2  A4D8               	btfss	status,2,c
  6511  001DC4  EFE6  F00E         	goto	u3671
  6512  001DC8  EFE8  F00E         	goto	u3670
  6513  001DCC                     u3671:
  6514  001DCC  EFF0  F00E         	goto	l3316
  6515  001DD0                     u3670:
  6516  001DD0  0E00               	movlw	0
  6517  001DD2  6E01               	movwf	___flmul@b^0,c
  6518  001DD4  0E00               	movlw	0
  6519  001DD6  6E02               	movwf	(___flmul@b+1)^0,c
  6520  001DD8  0E00               	movlw	0
  6521  001DDA  6E03               	movwf	(___flmul@b+2)^0,c
  6522  001DDC  0E00               	movlw	0
  6523  001DDE  6E04               	movwf	(___flmul@b+3)^0,c
  6524  001DE0                     l3316:
  6525  001DE0  8E03               	bsf	(___flmul@b+2)^0,7,c
  6526  001DE2  EFFB  F00E         	goto	l3320
  6527  001DE6                     l3318:
  6528  001DE6  0E00               	movlw	0
  6529  001DE8  6E01               	movwf	___flmul@b^0,c
  6530  001DEA  0E00               	movlw	0
  6531  001DEC  6E02               	movwf	(___flmul@b+1)^0,c
  6532  001DEE  0E00               	movlw	0
  6533  001DF0  6E03               	movwf	(___flmul@b+2)^0,c
  6534  001DF2  0E00               	movlw	0
  6535  001DF4  6E04               	movwf	(___flmul@b+3)^0,c
  6536  001DF6                     l3320:
  6537  001DF6  5008               	movf	(___flmul@a+3)^0,w,c
  6538  001DF8  0B80               	andlw	128
  6539  001DFA  1A0D               	xorwf	___flmul@sign^0,f,c
  6540  001DFC  5008               	movf	(___flmul@a+3)^0,w,c
  6541  001DFE  2408               	addwf	(___flmul@a+3)^0,w,c
  6542  001E00  6E12               	movwf	___flmul@aexp^0,c
  6543  001E02  AE07               	btfss	(___flmul@a+2)^0,7,c
  6544  001E04  EF06  F00F         	goto	u3681
  6545  001E08  EF08  F00F         	goto	u3680
  6546  001E0C                     u3681:
  6547  001E0C  EF09  F00F         	goto	l3328
  6548  001E10                     u3680:
  6549  001E10  8012               	bsf	___flmul@aexp^0,0,c
  6550  001E12                     l3328:
  6551  001E12  5012               	movf	___flmul@aexp^0,w,c
  6552  001E14  B4D8               	btfsc	status,2,c
  6553  001E16  EF0F  F00F         	goto	u3691
  6554  001E1A  EF11  F00F         	goto	u3690
  6555  001E1E                     u3691:
  6556  001E1E  EF24  F00F         	goto	l3336
  6557  001E22                     u3690:
  6558  001E22  2812               	incf	___flmul@aexp^0,w,c
  6559  001E24  A4D8               	btfss	status,2,c
  6560  001E26  EF17  F00F         	goto	u3701
  6561  001E2A  EF19  F00F         	goto	u3700
  6562  001E2E                     u3701:
  6563  001E2E  EF21  F00F         	goto	l3334
  6564  001E32                     u3700:
  6565  001E32  0E00               	movlw	0
  6566  001E34  6E05               	movwf	___flmul@a^0,c
  6567  001E36  0E00               	movlw	0
  6568  001E38  6E06               	movwf	(___flmul@a+1)^0,c
  6569  001E3A  0E00               	movlw	0
  6570  001E3C  6E07               	movwf	(___flmul@a+2)^0,c
  6571  001E3E  0E00               	movlw	0
  6572  001E40  6E08               	movwf	(___flmul@a+3)^0,c
  6573  001E42                     l3334:
  6574  001E42  8E07               	bsf	(___flmul@a+2)^0,7,c
  6575  001E44  EF2C  F00F         	goto	l981
  6576  001E48                     l3336:
  6577  001E48  0E00               	movlw	0
  6578  001E4A  6E05               	movwf	___flmul@a^0,c
  6579  001E4C  0E00               	movlw	0
  6580  001E4E  6E06               	movwf	(___flmul@a+1)^0,c
  6581  001E50  0E00               	movlw	0
  6582  001E52  6E07               	movwf	(___flmul@a+2)^0,c
  6583  001E54  0E00               	movlw	0
  6584  001E56  6E08               	movwf	(___flmul@a+3)^0,c
  6585  001E58                     l981:
  6586  001E58  5012               	movf	___flmul@aexp^0,w,c
  6587  001E5A  B4D8               	btfsc	status,2,c
  6588  001E5C  EF32  F00F         	goto	u3711
  6589  001E60  EF34  F00F         	goto	u3710
  6590  001E64                     u3711:
  6591  001E64  EF3C  F00F         	goto	l3340
  6592  001E68                     u3710:
  6593  001E68  5013               	movf	___flmul@bexp^0,w,c
  6594  001E6A  A4D8               	btfss	status,2,c
  6595  001E6C  EF3A  F00F         	goto	u3721
  6596  001E70  EF3C  F00F         	goto	u3720
  6597  001E74                     u3721:
  6598  001E74  EF46  F00F         	goto	l3344
  6599  001E78                     u3720:
  6600  001E78                     l3340:
  6601  001E78  0E00               	movlw	0
  6602  001E7A  6E01               	movwf	?___flmul^0,c
  6603  001E7C  0E00               	movlw	0
  6604  001E7E  6E02               	movwf	(?___flmul+1)^0,c
  6605  001E80  0E00               	movlw	0
  6606  001E82  6E03               	movwf	(?___flmul+2)^0,c
  6607  001E84  0E00               	movlw	0
  6608  001E86  6E04               	movwf	(?___flmul+3)^0,c
  6609  001E88  EFDE  F010         	goto	l985
  6610  001E8C                     l3344:
  6611  001E8C  5007               	movf	(___flmul@a+2)^0,w,c
  6612  001E8E  0201               	mulwf	___flmul@b^0,c
  6613  001E90  CFF3 F018          	movff	prodl,___flmul@temp
  6614  001E94  CFF4 F019          	movff	prodh,___flmul@temp+1
  6615  001E98  5018               	movf	___flmul@temp^0,w,c
  6616  001E9A  6E0E               	movwf	___flmul@grs^0,c
  6617  001E9C  6A0F               	clrf	(___flmul@grs+1)^0,c
  6618  001E9E  6A10               	clrf	(___flmul@grs+2)^0,c
  6619  001EA0  6A11               	clrf	(___flmul@grs+3)^0,c
  6620  001EA2  5019               	movf	(___flmul@temp+1)^0,w,c
  6621  001EA4  6E14               	movwf	___flmul@prod^0,c
  6622  001EA6  6A15               	clrf	(___flmul@prod+1)^0,c
  6623  001EA8  6A16               	clrf	(___flmul@prod+2)^0,c
  6624  001EAA  6A17               	clrf	(___flmul@prod+3)^0,c
  6625  001EAC  5006               	movf	(___flmul@a+1)^0,w,c
  6626  001EAE  0202               	mulwf	(___flmul@b+1)^0,c
  6627  001EB0  CFF3 F018          	movff	prodl,___flmul@temp
  6628  001EB4  CFF4 F019          	movff	prodh,___flmul@temp+1
  6629  001EB8  5018               	movf	___flmul@temp^0,w,c
  6630  001EBA  260E               	addwf	___flmul@grs^0,f,c
  6631  001EBC  0E00               	movlw	0
  6632  001EBE  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6633  001EC0  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6634  001EC2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6635  001EC4  5019               	movf	(___flmul@temp+1)^0,w,c
  6636  001EC6  2614               	addwf	___flmul@prod^0,f,c
  6637  001EC8  0E00               	movlw	0
  6638  001ECA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6639  001ECC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6640  001ECE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6641  001ED0  5005               	movf	___flmul@a^0,w,c
  6642  001ED2  0203               	mulwf	(___flmul@b+2)^0,c
  6643  001ED4  CFF3 F018          	movff	prodl,___flmul@temp
  6644  001ED8  CFF4 F019          	movff	prodh,___flmul@temp+1
  6645  001EDC  5018               	movf	___flmul@temp^0,w,c
  6646  001EDE  260E               	addwf	___flmul@grs^0,f,c
  6647  001EE0  0E00               	movlw	0
  6648  001EE2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6649  001EE4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6650  001EE6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6651  001EE8  5019               	movf	(___flmul@temp+1)^0,w,c
  6652  001EEA  2614               	addwf	___flmul@prod^0,f,c
  6653  001EEC  0E00               	movlw	0
  6654  001EEE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6655  001EF0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6656  001EF2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6657  001EF4  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6658  001EF8  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6659  001EFC  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6660  001F00  6A0E               	clrf	___flmul@grs^0,c
  6661  001F02  5005               	movf	___flmul@a^0,w,c
  6662  001F04  0202               	mulwf	(___flmul@b+1)^0,c
  6663  001F06  CFF3 F018          	movff	prodl,___flmul@temp
  6664  001F0A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6665  001F0E  5018               	movf	___flmul@temp^0,w,c
  6666  001F10  260E               	addwf	___flmul@grs^0,f,c
  6667  001F12  5019               	movf	(___flmul@temp+1)^0,w,c
  6668  001F14  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6669  001F16  0E00               	movlw	0
  6670  001F18  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6671  001F1A  0E00               	movlw	0
  6672  001F1C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6673  001F1E  5006               	movf	(___flmul@a+1)^0,w,c
  6674  001F20  0201               	mulwf	___flmul@b^0,c
  6675  001F22  CFF3 F018          	movff	prodl,___flmul@temp
  6676  001F26  CFF4 F019          	movff	prodh,___flmul@temp+1
  6677  001F2A  5018               	movf	___flmul@temp^0,w,c
  6678  001F2C  260E               	addwf	___flmul@grs^0,f,c
  6679  001F2E  5019               	movf	(___flmul@temp+1)^0,w,c
  6680  001F30  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6681  001F32  0E00               	movlw	0
  6682  001F34  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6683  001F36  0E00               	movlw	0
  6684  001F38  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6685  001F3A  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6686  001F3E  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6687  001F42  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6688  001F46  6A0E               	clrf	___flmul@grs^0,c
  6689  001F48  5005               	movf	___flmul@a^0,w,c
  6690  001F4A  0201               	mulwf	___flmul@b^0,c
  6691  001F4C  CFF3 F018          	movff	prodl,___flmul@temp
  6692  001F50  CFF4 F019          	movff	prodh,___flmul@temp+1
  6693  001F54  5018               	movf	___flmul@temp^0,w,c
  6694  001F56  260E               	addwf	___flmul@grs^0,f,c
  6695  001F58  5019               	movf	(___flmul@temp+1)^0,w,c
  6696  001F5A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6697  001F5C  0E00               	movlw	0
  6698  001F5E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6699  001F60  0E00               	movlw	0
  6700  001F62  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6701  001F64  5007               	movf	(___flmul@a+2)^0,w,c
  6702  001F66  0202               	mulwf	(___flmul@b+1)^0,c
  6703  001F68  CFF3 F018          	movff	prodl,___flmul@temp
  6704  001F6C  CFF4 F019          	movff	prodh,___flmul@temp+1
  6705  001F70  5018               	movf	___flmul@temp^0,w,c
  6706  001F72  2614               	addwf	___flmul@prod^0,f,c
  6707  001F74  5019               	movf	(___flmul@temp+1)^0,w,c
  6708  001F76  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6709  001F78  0E00               	movlw	0
  6710  001F7A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6711  001F7C  0E00               	movlw	0
  6712  001F7E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6713  001F80  5006               	movf	(___flmul@a+1)^0,w,c
  6714  001F82  0203               	mulwf	(___flmul@b+2)^0,c
  6715  001F84  CFF3 F018          	movff	prodl,___flmul@temp
  6716  001F88  CFF4 F019          	movff	prodh,___flmul@temp+1
  6717  001F8C  5018               	movf	___flmul@temp^0,w,c
  6718  001F8E  2614               	addwf	___flmul@prod^0,f,c
  6719  001F90  5019               	movf	(___flmul@temp+1)^0,w,c
  6720  001F92  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6721  001F94  0E00               	movlw	0
  6722  001F96  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6723  001F98  0E00               	movlw	0
  6724  001F9A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6725  001F9C  5007               	movf	(___flmul@a+2)^0,w,c
  6726  001F9E  0203               	mulwf	(___flmul@b+2)^0,c
  6727  001FA0  CFF3 F018          	movff	prodl,___flmul@temp
  6728  001FA4  CFF4 F019          	movff	prodh,___flmul@temp+1
  6729  001FA8  5018               	movf	___flmul@temp^0,w,c
  6730  001FAA  6E09               	movwf	??___flmul^0,c
  6731  001FAC  5019               	movf	(___flmul@temp+1)^0,w,c
  6732  001FAE  6E0A               	movwf	(??___flmul+1)^0,c
  6733  001FB0  6A0B               	clrf	(??___flmul+2)^0,c
  6734  001FB2  6A0C               	clrf	(??___flmul+3)^0,c
  6735  001FB4  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6736  001FB8  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6737  001FBC  C009  F00A         	movff	??___flmul,??___flmul+1
  6738  001FC0  6A09               	clrf	??___flmul^0,c
  6739  001FC2  5009               	movf	??___flmul^0,w,c
  6740  001FC4  2614               	addwf	___flmul@prod^0,f,c
  6741  001FC6  500A               	movf	(??___flmul+1)^0,w,c
  6742  001FC8  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6743  001FCA  500B               	movf	(??___flmul+2)^0,w,c
  6744  001FCC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6745  001FCE  500C               	movf	(??___flmul+3)^0,w,c
  6746  001FD0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6747  001FD2  C00E  F009         	movff	___flmul@grs,??___flmul
  6748  001FD6  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6749  001FDA  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6750  001FDE  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6751  001FE2  0E19               	movlw	25
  6752  001FE4  EFF9  F00F         	goto	u3730
  6753  001FE8                     u3735:
  6754  001FE8  90D8               	bcf	status,0,c
  6755  001FEA  320C               	rrcf	(??___flmul+3)^0,f,c
  6756  001FEC  320B               	rrcf	(??___flmul+2)^0,f,c
  6757  001FEE  320A               	rrcf	(??___flmul+1)^0,f,c
  6758  001FF0  3209               	rrcf	??___flmul^0,f,c
  6759  001FF2                     u3730:
  6760  001FF2  2EE8               	decfsz	wreg,f,c
  6761  001FF4  EFF4  F00F         	goto	u3735
  6762  001FF8  5009               	movf	??___flmul^0,w,c
  6763  001FFA  2614               	addwf	___flmul@prod^0,f,c
  6764  001FFC  500A               	movf	(??___flmul+1)^0,w,c
  6765  001FFE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6766  002000  500B               	movf	(??___flmul+2)^0,w,c
  6767  002002  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6768  002004  500C               	movf	(??___flmul+3)^0,w,c
  6769  002006  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6770  002008  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6771  00200C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6772  002010  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6773  002014  6A0E               	clrf	___flmul@grs^0,c
  6774  002016  5012               	movf	___flmul@aexp^0,w,c
  6775  002018  C013  F009         	movff	___flmul@bexp,??___flmul
  6776  00201C  6A0A               	clrf	(??___flmul+1)^0,c
  6777  00201E  2609               	addwf	??___flmul^0,f,c
  6778  002020  0E00               	movlw	0
  6779  002022  220A               	addwfc	(??___flmul+1)^0,f,c
  6780  002024  0E82               	movlw	130
  6781  002026  2409               	addwf	??___flmul^0,w,c
  6782  002028  6E18               	movwf	___flmul@temp^0,c
  6783  00202A  0EFF               	movlw	255
  6784  00202C  200A               	addwfc	(??___flmul+1)^0,w,c
  6785  00202E  6E19               	movwf	(___flmul@temp+1)^0,c
  6786  002030  EF2F  F010         	goto	l3392
  6787  002034                     l3386:
  6788  002034  90D8               	bcf	status,0,c
  6789  002036  3614               	rlcf	___flmul@prod^0,f,c
  6790  002038  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6791  00203A  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6792  00203C  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6793  00203E  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6794  002040  EF24  F010         	goto	u3741
  6795  002044  EF26  F010         	goto	u3740
  6796  002048                     u3741:
  6797  002048  EF27  F010         	goto	l988
  6798  00204C                     u3740:
  6799  00204C  8014               	bsf	___flmul@prod^0,0,c
  6800  00204E                     l988:
  6801  00204E  90D8               	bcf	status,0,c
  6802  002050  360E               	rlcf	___flmul@grs^0,f,c
  6803  002052  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6804  002054  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6805  002056  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6806  002058  0618               	decf	___flmul@temp^0,f,c
  6807  00205A  A0D8               	btfss	status,0,c
  6808  00205C  0619               	decf	(___flmul@temp+1)^0,f,c
  6809  00205E                     l3392:
  6810  00205E  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6811  002060  EF34  F010         	goto	u3751
  6812  002064  EF36  F010         	goto	u3750
  6813  002068                     u3751:
  6814  002068  EF1A  F010         	goto	l3386
  6815  00206C                     u3750:
  6816  00206C  0E00               	movlw	0
  6817  00206E  6E12               	movwf	___flmul@aexp^0,c
  6818  002070  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6819  002072  EF3D  F010         	goto	u3761
  6820  002076  EF3F  F010         	goto	u3760
  6821  00207A                     u3761:
  6822  00207A  EF63  F010         	goto	l990
  6823  00207E                     u3760:
  6824  00207E  0EFF               	movlw	255
  6825  002080  140E               	andwf	___flmul@grs^0,w,c
  6826  002082  6E09               	movwf	??___flmul^0,c
  6827  002084  0EFF               	movlw	255
  6828  002086  140F               	andwf	(___flmul@grs+1)^0,w,c
  6829  002088  6E0A               	movwf	(??___flmul+1)^0,c
  6830  00208A  0EFF               	movlw	255
  6831  00208C  1410               	andwf	(___flmul@grs+2)^0,w,c
  6832  00208E  6E0B               	movwf	(??___flmul+2)^0,c
  6833  002090  0E7F               	movlw	127
  6834  002092  1411               	andwf	(___flmul@grs+3)^0,w,c
  6835  002094  6E0C               	movwf	(??___flmul+3)^0,c
  6836  002096  5009               	movf	??___flmul^0,w,c
  6837  002098  100A               	iorwf	(??___flmul+1)^0,w,c
  6838  00209A  100B               	iorwf	(??___flmul+2)^0,w,c
  6839  00209C  100C               	iorwf	(??___flmul+3)^0,w,c
  6840  00209E  B4D8               	btfsc	status,2,c
  6841  0020A0  EF54  F010         	goto	u3771
  6842  0020A4  EF56  F010         	goto	u3770
  6843  0020A8                     u3771:
  6844  0020A8  EF5A  F010         	goto	l991
  6845  0020AC                     u3770:
  6846  0020AC                     l3400:
  6847  0020AC  0E01               	movlw	1
  6848  0020AE  6E12               	movwf	___flmul@aexp^0,c
  6849  0020B0  EF63  F010         	goto	l990
  6850  0020B4                     l991:
  6851  0020B4  A014               	btfss	___flmul@prod^0,0,c
  6852  0020B6  EF5F  F010         	goto	u3781
  6853  0020BA  EF61  F010         	goto	u3780
  6854  0020BE                     u3781:
  6855  0020BE  EF63  F010         	goto	l990
  6856  0020C2                     u3780:
  6857  0020C2  EF56  F010         	goto	l3400
  6858  0020C6                     l990:
  6859  0020C6  5012               	movf	___flmul@aexp^0,w,c
  6860  0020C8  B4D8               	btfsc	status,2,c
  6861  0020CA  EF69  F010         	goto	u3791
  6862  0020CE  EF6B  F010         	goto	u3790
  6863  0020D2                     u3791:
  6864  0020D2  EF8F  F010         	goto	l3412
  6865  0020D6                     u3790:
  6866  0020D6  0E01               	movlw	1
  6867  0020D8  2614               	addwf	___flmul@prod^0,f,c
  6868  0020DA  0E00               	movlw	0
  6869  0020DC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6870  0020DE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6871  0020E0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6872  0020E2  A017               	btfss	(___flmul@prod+3)^0,0,c
  6873  0020E4  EF76  F010         	goto	u3801
  6874  0020E8  EF78  F010         	goto	u3800
  6875  0020EC                     u3801:
  6876  0020EC  EF8F  F010         	goto	l3412
  6877  0020F0                     u3800:
  6878  0020F0  C014  F009         	movff	___flmul@prod,??___flmul
  6879  0020F4  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6880  0020F8  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6881  0020FC  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6882  002100  340C               	rlcf	(??___flmul+3)^0,w,c
  6883  002102  320C               	rrcf	(??___flmul+3)^0,f,c
  6884  002104  320B               	rrcf	(??___flmul+2)^0,f,c
  6885  002106  320A               	rrcf	(??___flmul+1)^0,f,c
  6886  002108  3209               	rrcf	??___flmul^0,f,c
  6887  00210A  C009  F014         	movff	??___flmul,___flmul@prod
  6888  00210E  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6889  002112  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6890  002116  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6891  00211A  4A18               	infsnz	___flmul@temp^0,f,c
  6892  00211C  2A19               	incf	(___flmul@temp+1)^0,f,c
  6893  00211E                     l3412:
  6894  00211E  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6895  002120  EF9A  F010         	goto	u3811
  6896  002124  5019               	movf	(___flmul@temp+1)^0,w,c
  6897  002126  E108               	bnz	u3810
  6898  002128  2818               	incf	___flmul@temp^0,w,c
  6899  00212A  A0D8               	btfss	status,0,c
  6900  00212C  EF9A  F010         	goto	u3811
  6901  002130  EF9C  F010         	goto	u3810
  6902  002134                     u3811:
  6903  002134  EFA6  F010         	goto	l3416
  6904  002138                     u3810:
  6905  002138  0E00               	movlw	0
  6906  00213A  6E14               	movwf	___flmul@prod^0,c
  6907  00213C  0E00               	movlw	0
  6908  00213E  6E15               	movwf	(___flmul@prod+1)^0,c
  6909  002140  0E80               	movlw	128
  6910  002142  6E16               	movwf	(___flmul@prod+2)^0,c
  6911  002144  0E7F               	movlw	127
  6912  002146  6E17               	movwf	(___flmul@prod+3)^0,c
  6913  002148  EFD4  F010         	goto	l3428
  6914  00214C                     l3416:
  6915  00214C  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6916  00214E  EFB3  F010         	goto	u3820
  6917  002152  5019               	movf	(___flmul@temp+1)^0,w,c
  6918  002154  E106               	bnz	u3821
  6919  002156  0418               	decf	___flmul@temp^0,w,c
  6920  002158  B0D8               	btfsc	status,0,c
  6921  00215A  EFB1  F010         	goto	u3821
  6922  00215E  EFB3  F010         	goto	u3820
  6923  002162                     u3821:
  6924  002162  EFBF  F010         	goto	l998
  6925  002166                     u3820:
  6926  002166  0E00               	movlw	0
  6927  002168  6E14               	movwf	___flmul@prod^0,c
  6928  00216A  0E00               	movlw	0
  6929  00216C  6E15               	movwf	(___flmul@prod+1)^0,c
  6930  00216E  0E00               	movlw	0
  6931  002170  6E16               	movwf	(___flmul@prod+2)^0,c
  6932  002172  0E00               	movlw	0
  6933  002174  6E17               	movwf	(___flmul@prod+3)^0,c
  6934  002176  0E00               	movlw	0
  6935  002178  6E0D               	movwf	___flmul@sign^0,c
  6936  00217A  EFD4  F010         	goto	l3428
  6937  00217E                     l998:
  6938  00217E  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6939  002182  0EFF               	movlw	255
  6940  002184  1614               	andwf	___flmul@prod^0,f,c
  6941  002186  0EFF               	movlw	255
  6942  002188  1615               	andwf	(___flmul@prod+1)^0,f,c
  6943  00218A  0E7F               	movlw	127
  6944  00218C  1616               	andwf	(___flmul@prod+2)^0,f,c
  6945  00218E  0E00               	movlw	0
  6946  002190  1617               	andwf	(___flmul@prod+3)^0,f,c
  6947  002192  A013               	btfss	___flmul@bexp^0,0,c
  6948  002194  EFCE  F010         	goto	u3831
  6949  002198  EFD0  F010         	goto	u3830
  6950  00219C                     u3831:
  6951  00219C  EFD1  F010         	goto	l3426
  6952  0021A0                     u3830:
  6953  0021A0  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6954  0021A2                     l3426:
  6955  0021A2  90D8               	bcf	status,0,c
  6956  0021A4  3013               	rrcf	___flmul@bexp^0,w,c
  6957  0021A6  6E17               	movwf	(___flmul@prod+3)^0,c
  6958  0021A8                     l3428:
  6959  0021A8  500D               	movf	___flmul@sign^0,w,c
  6960  0021AA  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6961  0021AC  C014  F001         	movff	___flmul@prod,?___flmul
  6962  0021B0  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6963  0021B4  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6964  0021B8  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6965  0021BC                     l985:
  6966  0021BC  0012               	return		;funcret
  6967  0021BE                     __end_of___flmul:
  6968                           	opt callstack 0
  6969                           
  6970 ;; *************** function ___flge *****************
  6971 ;; Defined at:
  6972 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  ff1             4   25[COMRAM] unsigned char 
  6975 ;;  ff2             4   29[COMRAM] unsigned char 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;		None
  6978 ;; Return value:  Size  Location     Type
  6979 ;;		None               void
  6980 ;; Registers used:
  6981 ;;		wreg, status,2, status,0
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6987 ;;      Params:         8       0       0       0       0       0       0       0       0
  6988 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6989 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6990 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6991 ;;Total ram usage:       12 bytes
  6992 ;; Hardware stack levels used:    1
  6993 ;; Hardware stack levels required when called:    1
  6994 ;; This function calls:
  6995 ;;		Nothing
  6996 ;; This function is called by:
  6997 ;;		_efgtoa
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           	psect	text25
  7002  002FE8                     __ptext25:
  7003                           	opt callstack 0
  7004  002FE8                     ___flge:
  7005                           	opt callstack 23
  7006  002FE8  0E00               	movlw	0
  7007  002FEA  141A               	andwf	___flge@ff1^0,w,c
  7008  002FEC  6E22               	movwf	??___flge^0,c
  7009  002FEE  0E00               	movlw	0
  7010  002FF0  141B               	andwf	(___flge@ff1+1)^0,w,c
  7011  002FF2  6E23               	movwf	(??___flge+1)^0,c
  7012  002FF4  0E80               	movlw	128
  7013  002FF6  141C               	andwf	(___flge@ff1+2)^0,w,c
  7014  002FF8  6E24               	movwf	(??___flge+2)^0,c
  7015  002FFA  0E7F               	movlw	127
  7016  002FFC  141D               	andwf	(___flge@ff1+3)^0,w,c
  7017  002FFE  6E25               	movwf	(??___flge+3)^0,c
  7018  003000  5022               	movf	??___flge^0,w,c
  7019  003002  1023               	iorwf	(??___flge+1)^0,w,c
  7020  003004  1024               	iorwf	(??___flge+2)^0,w,c
  7021  003006  1025               	iorwf	(??___flge+3)^0,w,c
  7022  003008  A4D8               	btfss	status,2,c
  7023  00300A  EF09  F018         	goto	u3991
  7024  00300E  EF0B  F018         	goto	u3990
  7025  003012                     u3991:
  7026  003012  EF13  F018         	goto	l3540
  7027  003016                     u3990:
  7028  003016  0E00               	movlw	0
  7029  003018  6E1A               	movwf	___flge@ff1^0,c
  7030  00301A  0E00               	movlw	0
  7031  00301C  6E1B               	movwf	(___flge@ff1+1)^0,c
  7032  00301E  0E00               	movlw	0
  7033  003020  6E1C               	movwf	(___flge@ff1+2)^0,c
  7034  003022  0E00               	movlw	0
  7035  003024  6E1D               	movwf	(___flge@ff1+3)^0,c
  7036  003026                     l3540:
  7037  003026  0E00               	movlw	0
  7038  003028  141E               	andwf	___flge@ff2^0,w,c
  7039  00302A  6E22               	movwf	??___flge^0,c
  7040  00302C  0E00               	movlw	0
  7041  00302E  141F               	andwf	(___flge@ff2+1)^0,w,c
  7042  003030  6E23               	movwf	(??___flge+1)^0,c
  7043  003032  0E80               	movlw	128
  7044  003034  1420               	andwf	(___flge@ff2+2)^0,w,c
  7045  003036  6E24               	movwf	(??___flge+2)^0,c
  7046  003038  0E7F               	movlw	127
  7047  00303A  1421               	andwf	(___flge@ff2+3)^0,w,c
  7048  00303C  6E25               	movwf	(??___flge+3)^0,c
  7049  00303E  5022               	movf	??___flge^0,w,c
  7050  003040  1023               	iorwf	(??___flge+1)^0,w,c
  7051  003042  1024               	iorwf	(??___flge+2)^0,w,c
  7052  003044  1025               	iorwf	(??___flge+3)^0,w,c
  7053  003046  A4D8               	btfss	status,2,c
  7054  003048  EF28  F018         	goto	u4001
  7055  00304C  EF2A  F018         	goto	u4000
  7056  003050                     u4001:
  7057  003050  EF32  F018         	goto	l3544
  7058  003054                     u4000:
  7059  003054  0E00               	movlw	0
  7060  003056  6E1E               	movwf	___flge@ff2^0,c
  7061  003058  0E00               	movlw	0
  7062  00305A  6E1F               	movwf	(___flge@ff2+1)^0,c
  7063  00305C  0E00               	movlw	0
  7064  00305E  6E20               	movwf	(___flge@ff2+2)^0,c
  7065  003060  0E00               	movlw	0
  7066  003062  6E21               	movwf	(___flge@ff2+3)^0,c
  7067  003064                     l3544:
  7068  003064  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  7069  003066  EF37  F018         	goto	u4011
  7070  00306A  EF39  F018         	goto	u4010
  7071  00306E                     u4011:
  7072  00306E  EF42  F018         	goto	l3548
  7073  003072                     u4010:
  7074  003072  6C1A               	negf	___flge@ff1^0,c
  7075  003074  1E1B               	comf	(___flge@ff1+1)^0,f,c
  7076  003076  B0D8               	btfsc	status,0,c
  7077  003078  2A1B               	incf	(___flge@ff1+1)^0,f,c
  7078  00307A  1E1C               	comf	(___flge@ff1+2)^0,f,c
  7079  00307C  B0D8               	btfsc	status,0,c
  7080  00307E  2A1C               	incf	(___flge@ff1+2)^0,f,c
  7081  003080  0E80               	movlw	128
  7082  003082  561D               	subfwb	(___flge@ff1+3)^0,f,c
  7083  003084                     l3548:
  7084  003084  AE21               	btfss	(___flge@ff2+3)^0,7,c
  7085  003086  EF47  F018         	goto	u4021
  7086  00308A  EF49  F018         	goto	u4020
  7087  00308E                     u4021:
  7088  00308E  EF52  F018         	goto	l632
  7089  003092                     u4020:
  7090  003092  6C1E               	negf	___flge@ff2^0,c
  7091  003094  1E1F               	comf	(___flge@ff2+1)^0,f,c
  7092  003096  B0D8               	btfsc	status,0,c
  7093  003098  2A1F               	incf	(___flge@ff2+1)^0,f,c
  7094  00309A  1E20               	comf	(___flge@ff2+2)^0,f,c
  7095  00309C  B0D8               	btfsc	status,0,c
  7096  00309E  2A20               	incf	(___flge@ff2+2)^0,f,c
  7097  0030A0  0E80               	movlw	128
  7098  0030A2  5621               	subfwb	(___flge@ff2+3)^0,f,c
  7099  0030A4                     l632:
  7100  0030A4  0E00               	movlw	0
  7101  0030A6  1A1A               	xorwf	___flge@ff1^0,f,c
  7102  0030A8  0E00               	movlw	0
  7103  0030AA  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  7104  0030AC  0E00               	movlw	0
  7105  0030AE  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  7106  0030B0  0E80               	movlw	128
  7107  0030B2  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  7108  0030B4  0E00               	movlw	0
  7109  0030B6  1A1E               	xorwf	___flge@ff2^0,f,c
  7110  0030B8  0E00               	movlw	0
  7111  0030BA  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  7112  0030BC  0E00               	movlw	0
  7113  0030BE  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  7114  0030C0  0E80               	movlw	128
  7115  0030C2  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  7116  0030C4  501E               	movf	___flge@ff2^0,w,c
  7117  0030C6  5C1A               	subwf	___flge@ff1^0,w,c
  7118  0030C8  501F               	movf	(___flge@ff2+1)^0,w,c
  7119  0030CA  581B               	subwfb	(___flge@ff1+1)^0,w,c
  7120  0030CC  5020               	movf	(___flge@ff2+2)^0,w,c
  7121  0030CE  581C               	subwfb	(___flge@ff1+2)^0,w,c
  7122  0030D0  5021               	movf	(___flge@ff2+3)^0,w,c
  7123  0030D2  581D               	subwfb	(___flge@ff1+3)^0,w,c
  7124  0030D4  B0D8               	btfsc	status,0,c
  7125  0030D6  EF6F  F018         	goto	u4031
  7126  0030DA  EF71  F018         	goto	u4030
  7127  0030DE                     u4031:
  7128  0030DE  EF74  F018         	goto	l3554
  7129  0030E2                     u4030:
  7130  0030E2  90D8               	bcf	status,0,c
  7131  0030E4  EF75  F018         	goto	l637
  7132  0030E8                     l3554:
  7133  0030E8  80D8               	bsf	status,0,c
  7134  0030EA                     l637:
  7135  0030EA  0012               	return		;funcret
  7136  0030EC                     __end_of___flge:
  7137                           	opt callstack 0
  7138                           
  7139 ;; *************** function ___fleq *****************
  7140 ;; Defined at:
  7141 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  ff1             4    0[COMRAM] unsigned char 
  7144 ;;  ff2             4    4[COMRAM] unsigned char 
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;		None
  7147 ;; Return value:  Size  Location     Type
  7148 ;;		None               void
  7149 ;; Registers used:
  7150 ;;		wreg, status,2, status,0
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7156 ;;      Params:         8       0       0       0       0       0       0       0       0
  7157 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7158 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7159 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7160 ;;Total ram usage:       12 bytes
  7161 ;; Hardware stack levels used:    1
  7162 ;; Hardware stack levels required when called:    1
  7163 ;; This function calls:
  7164 ;;		Nothing
  7165 ;; This function is called by:
  7166 ;;		_efgtoa
  7167 ;; This function uses a non-reentrant model
  7168 ;;
  7169                           
  7170                           	psect	text26
  7171  0035B0                     __ptext26:
  7172                           	opt callstack 0
  7173  0035B0                     ___fleq:
  7174                           	opt callstack 23
  7175  0035B0  0E00               	movlw	0
  7176  0035B2  1401               	andwf	___fleq@ff1^0,w,c
  7177  0035B4  6E09               	movwf	??___fleq^0,c
  7178  0035B6  0E00               	movlw	0
  7179  0035B8  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7180  0035BA  6E0A               	movwf	(??___fleq+1)^0,c
  7181  0035BC  0E80               	movlw	128
  7182  0035BE  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7183  0035C0  6E0B               	movwf	(??___fleq+2)^0,c
  7184  0035C2  0E7F               	movlw	127
  7185  0035C4  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7186  0035C6  6E0C               	movwf	(??___fleq+3)^0,c
  7187  0035C8  5009               	movf	??___fleq^0,w,c
  7188  0035CA  100A               	iorwf	(??___fleq+1)^0,w,c
  7189  0035CC  100B               	iorwf	(??___fleq+2)^0,w,c
  7190  0035CE  100C               	iorwf	(??___fleq+3)^0,w,c
  7191  0035D0  A4D8               	btfss	status,2,c
  7192  0035D2  EFED  F01A         	goto	u3961
  7193  0035D6  EFEF  F01A         	goto	u3960
  7194  0035DA                     u3961:
  7195  0035DA  EFF7  F01A         	goto	l3524
  7196  0035DE                     u3960:
  7197  0035DE  0E00               	movlw	0
  7198  0035E0  6E01               	movwf	___fleq@ff1^0,c
  7199  0035E2  0E00               	movlw	0
  7200  0035E4  6E02               	movwf	(___fleq@ff1+1)^0,c
  7201  0035E6  0E00               	movlw	0
  7202  0035E8  6E03               	movwf	(___fleq@ff1+2)^0,c
  7203  0035EA  0E00               	movlw	0
  7204  0035EC  6E04               	movwf	(___fleq@ff1+3)^0,c
  7205  0035EE                     l3524:
  7206  0035EE  0E00               	movlw	0
  7207  0035F0  1405               	andwf	___fleq@ff2^0,w,c
  7208  0035F2  6E09               	movwf	??___fleq^0,c
  7209  0035F4  0E00               	movlw	0
  7210  0035F6  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7211  0035F8  6E0A               	movwf	(??___fleq+1)^0,c
  7212  0035FA  0E80               	movlw	128
  7213  0035FC  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7214  0035FE  6E0B               	movwf	(??___fleq+2)^0,c
  7215  003600  0E7F               	movlw	127
  7216  003602  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7217  003604  6E0C               	movwf	(??___fleq+3)^0,c
  7218  003606  5009               	movf	??___fleq^0,w,c
  7219  003608  100A               	iorwf	(??___fleq+1)^0,w,c
  7220  00360A  100B               	iorwf	(??___fleq+2)^0,w,c
  7221  00360C  100C               	iorwf	(??___fleq+3)^0,w,c
  7222  00360E  A4D8               	btfss	status,2,c
  7223  003610  EF0C  F01B         	goto	u3971
  7224  003614  EF0E  F01B         	goto	u3970
  7225  003618                     u3971:
  7226  003618  EF16  F01B         	goto	l3528
  7227  00361C                     u3970:
  7228  00361C  0E00               	movlw	0
  7229  00361E  6E05               	movwf	___fleq@ff2^0,c
  7230  003620  0E00               	movlw	0
  7231  003622  6E06               	movwf	(___fleq@ff2+1)^0,c
  7232  003624  0E00               	movlw	0
  7233  003626  6E07               	movwf	(___fleq@ff2+2)^0,c
  7234  003628  0E00               	movlw	0
  7235  00362A  6E08               	movwf	(___fleq@ff2+3)^0,c
  7236  00362C                     l3528:
  7237  00362C  5005               	movf	___fleq@ff2^0,w,c
  7238  00362E  1801               	xorwf	___fleq@ff1^0,w,c
  7239  003630  E10F               	bnz	u3980
  7240  003632  5006               	movf	(___fleq@ff2+1)^0,w,c
  7241  003634  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7242  003636  E10C               	bnz	u3980
  7243  003638  5007               	movf	(___fleq@ff2+2)^0,w,c
  7244  00363A  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7245  00363C  E109               	bnz	u3980
  7246  00363E  5008               	movf	(___fleq@ff2+3)^0,w,c
  7247  003640  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7248  003642  B4D8               	btfsc	status,2,c
  7249  003644  EF26  F01B         	goto	u3981
  7250  003648  EF28  F01B         	goto	u3980
  7251  00364C                     u3981:
  7252  00364C  EF2B  F01B         	goto	l3532
  7253  003650                     u3980:
  7254  003650  90D8               	bcf	status,0,c
  7255  003652  EF2C  F01B         	goto	l626
  7256  003656                     l3532:
  7257  003656  80D8               	bsf	status,0,c
  7258  003658                     l626:
  7259  003658  0012               	return		;funcret
  7260  00365A                     __end_of___fleq:
  7261                           	opt callstack 0
  7262                           
  7263 ;; *************** function ___fldiv *****************
  7264 ;; Defined at:
  7265 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  b               4   14[COMRAM] unsigned char 
  7268 ;;  a               4   18[COMRAM] unsigned char 
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;  grs             4   33[COMRAM] unsigned long 
  7271 ;;  rem             4   26[COMRAM] unsigned long 
  7272 ;;  new_exp         2   31[COMRAM] short 
  7273 ;;  aexp            1   38[COMRAM] unsigned char 
  7274 ;;  bexp            1   37[COMRAM] unsigned char 
  7275 ;;  sign            1   30[COMRAM] unsigned char 
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  4   14[COMRAM] unsigned char 
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, status,0
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7285 ;;      Params:         8       0       0       0       0       0       0       0       0
  7286 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7287 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7288 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7289 ;;Total ram usage:       25 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:    1
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_stateMachine
  7296 ;;		_efgtoa
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           	psect	text27
  7301  0021BE                     __ptext27:
  7302                           	opt callstack 0
  7303  0021BE                     ___fldiv:
  7304                           	opt callstack 23
  7305  0021BE  5012               	movf	(___fldiv@b+3)^0,w,c
  7306  0021C0  0B80               	andlw	128
  7307  0021C2  6E1F               	movwf	___fldiv@sign^0,c
  7308  0021C4  5012               	movf	(___fldiv@b+3)^0,w,c
  7309  0021C6  2412               	addwf	(___fldiv@b+3)^0,w,c
  7310  0021C8  6E26               	movwf	___fldiv@bexp^0,c
  7311  0021CA  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7312  0021CC  EFEA  F010         	goto	u3421
  7313  0021D0  EFEC  F010         	goto	u3420
  7314  0021D4                     u3421:
  7315  0021D4  EFED  F010         	goto	l3172
  7316  0021D8                     u3420:
  7317  0021D8  8026               	bsf	___fldiv@bexp^0,0,c
  7318  0021DA                     l3172:
  7319  0021DA  5026               	movf	___fldiv@bexp^0,w,c
  7320  0021DC  B4D8               	btfsc	status,2,c
  7321  0021DE  EFF3  F010         	goto	u3431
  7322  0021E2  EFF5  F010         	goto	u3430
  7323  0021E6                     u3431:
  7324  0021E6  EF0A  F011         	goto	l3182
  7325  0021EA                     u3430:
  7326  0021EA  2826               	incf	___fldiv@bexp^0,w,c
  7327  0021EC  A4D8               	btfss	status,2,c
  7328  0021EE  EFFB  F010         	goto	u3441
  7329  0021F2  EFFD  F010         	goto	u3440
  7330  0021F6                     u3441:
  7331  0021F6  EF05  F011         	goto	l3178
  7332  0021FA                     u3440:
  7333  0021FA  0E00               	movlw	0
  7334  0021FC  6E0F               	movwf	___fldiv@b^0,c
  7335  0021FE  0E00               	movlw	0
  7336  002200  6E10               	movwf	(___fldiv@b+1)^0,c
  7337  002202  0E00               	movlw	0
  7338  002204  6E11               	movwf	(___fldiv@b+2)^0,c
  7339  002206  0E00               	movlw	0
  7340  002208  6E12               	movwf	(___fldiv@b+3)^0,c
  7341  00220A                     l3178:
  7342  00220A  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7343  00220C  0E00               	movlw	0
  7344  00220E  6E12               	movwf	(___fldiv@b+3)^0,c
  7345  002210  EF12  F011         	goto	l3184
  7346  002214                     l3182:
  7347  002214  0E00               	movlw	0
  7348  002216  6E0F               	movwf	___fldiv@b^0,c
  7349  002218  0E00               	movlw	0
  7350  00221A  6E10               	movwf	(___fldiv@b+1)^0,c
  7351  00221C  0E00               	movlw	0
  7352  00221E  6E11               	movwf	(___fldiv@b+2)^0,c
  7353  002220  0E00               	movlw	0
  7354  002222  6E12               	movwf	(___fldiv@b+3)^0,c
  7355  002224                     l3184:
  7356  002224  5016               	movf	(___fldiv@a+3)^0,w,c
  7357  002226  0B80               	andlw	128
  7358  002228  1A1F               	xorwf	___fldiv@sign^0,f,c
  7359  00222A  5016               	movf	(___fldiv@a+3)^0,w,c
  7360  00222C  2416               	addwf	(___fldiv@a+3)^0,w,c
  7361  00222E  6E27               	movwf	___fldiv@aexp^0,c
  7362  002230  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7363  002232  EF1D  F011         	goto	u3451
  7364  002236  EF1F  F011         	goto	u3450
  7365  00223A                     u3451:
  7366  00223A  EF20  F011         	goto	l3192
  7367  00223E                     u3450:
  7368  00223E  8027               	bsf	___fldiv@aexp^0,0,c
  7369  002240                     l3192:
  7370  002240  5027               	movf	___fldiv@aexp^0,w,c
  7371  002242  B4D8               	btfsc	status,2,c
  7372  002244  EF26  F011         	goto	u3461
  7373  002248  EF28  F011         	goto	u3460
  7374  00224C                     u3461:
  7375  00224C  EF3D  F011         	goto	l3202
  7376  002250                     u3460:
  7377  002250  2827               	incf	___fldiv@aexp^0,w,c
  7378  002252  A4D8               	btfss	status,2,c
  7379  002254  EF2E  F011         	goto	u3471
  7380  002258  EF30  F011         	goto	u3470
  7381  00225C                     u3471:
  7382  00225C  EF38  F011         	goto	l3198
  7383  002260                     u3470:
  7384  002260  0E00               	movlw	0
  7385  002262  6E13               	movwf	___fldiv@a^0,c
  7386  002264  0E00               	movlw	0
  7387  002266  6E14               	movwf	(___fldiv@a+1)^0,c
  7388  002268  0E00               	movlw	0
  7389  00226A  6E15               	movwf	(___fldiv@a+2)^0,c
  7390  00226C  0E00               	movlw	0
  7391  00226E  6E16               	movwf	(___fldiv@a+3)^0,c
  7392  002270                     l3198:
  7393  002270  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7394  002272  0E00               	movlw	0
  7395  002274  6E16               	movwf	(___fldiv@a+3)^0,c
  7396  002276  EF45  F011         	goto	l3204
  7397  00227A                     l3202:
  7398  00227A  0E00               	movlw	0
  7399  00227C  6E13               	movwf	___fldiv@a^0,c
  7400  00227E  0E00               	movlw	0
  7401  002280  6E14               	movwf	(___fldiv@a+1)^0,c
  7402  002282  0E00               	movlw	0
  7403  002284  6E15               	movwf	(___fldiv@a+2)^0,c
  7404  002286  0E00               	movlw	0
  7405  002288  6E16               	movwf	(___fldiv@a+3)^0,c
  7406  00228A                     l3204:
  7407  00228A  5013               	movf	___fldiv@a^0,w,c
  7408  00228C  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7409  00228E  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7410  002290  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7411  002292  A4D8               	btfss	status,2,c
  7412  002294  EF4E  F011         	goto	u3481
  7413  002298  EF50  F011         	goto	u3480
  7414  00229C                     u3481:
  7415  00229C  EF68  F011         	goto	l3216
  7416  0022A0                     u3480:
  7417  0022A0  0E00               	movlw	0
  7418  0022A2  6E0F               	movwf	___fldiv@b^0,c
  7419  0022A4  0E00               	movlw	0
  7420  0022A6  6E10               	movwf	(___fldiv@b+1)^0,c
  7421  0022A8  0E00               	movlw	0
  7422  0022AA  6E11               	movwf	(___fldiv@b+2)^0,c
  7423  0022AC  0E00               	movlw	0
  7424  0022AE  6E12               	movwf	(___fldiv@b+3)^0,c
  7425  0022B0  0E80               	movlw	128
  7426  0022B2  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7427  0022B4  0E7F               	movlw	127
  7428  0022B6  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7429  0022B8                     l3210:
  7430  0022B8  501F               	movf	___fldiv@sign^0,w,c
  7431  0022BA  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7432  0022BC  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7433  0022C0  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7434  0022C4  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7435  0022C8  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7436  0022CC  EFAB  F012         	goto	l949
  7437  0022D0                     l3216:
  7438  0022D0  5026               	movf	___fldiv@bexp^0,w,c
  7439  0022D2  A4D8               	btfss	status,2,c
  7440  0022D4  EF6E  F011         	goto	u3491
  7441  0022D8  EF70  F011         	goto	u3490
  7442  0022DC                     u3491:
  7443  0022DC  EF7A  F011         	goto	l3224
  7444  0022E0                     u3490:
  7445  0022E0  0E00               	movlw	0
  7446  0022E2  6E0F               	movwf	?___fldiv^0,c
  7447  0022E4  0E00               	movlw	0
  7448  0022E6  6E10               	movwf	(?___fldiv+1)^0,c
  7449  0022E8  0E00               	movlw	0
  7450  0022EA  6E11               	movwf	(?___fldiv+2)^0,c
  7451  0022EC  0E00               	movlw	0
  7452  0022EE  6E12               	movwf	(?___fldiv+3)^0,c
  7453  0022F0  EFAB  F012         	goto	l949
  7454  0022F4                     l3224:
  7455  0022F4  5027               	movf	___fldiv@aexp^0,w,c
  7456  0022F6  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7457  0022FA  6A18               	clrf	(??___fldiv+1)^0,c
  7458  0022FC  5E17               	subwf	??___fldiv^0,f,c
  7459  0022FE  0E00               	movlw	0
  7460  002300  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7461  002302  0E7F               	movlw	127
  7462  002304  2417               	addwf	??___fldiv^0,w,c
  7463  002306  6E20               	movwf	___fldiv@new_exp^0,c
  7464  002308  0E00               	movlw	0
  7465  00230A  2018               	addwfc	(??___fldiv+1)^0,w,c
  7466  00230C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7467  00230E  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7468  002312  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7469  002316  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7470  00231A  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7471  00231E  0E00               	movlw	0
  7472  002320  6E0F               	movwf	___fldiv@b^0,c
  7473  002322  0E00               	movlw	0
  7474  002324  6E10               	movwf	(___fldiv@b+1)^0,c
  7475  002326  0E00               	movlw	0
  7476  002328  6E11               	movwf	(___fldiv@b+2)^0,c
  7477  00232A  0E00               	movlw	0
  7478  00232C  6E12               	movwf	(___fldiv@b+3)^0,c
  7479  00232E  0E00               	movlw	0
  7480  002330  6E22               	movwf	___fldiv@grs^0,c
  7481  002332  0E00               	movlw	0
  7482  002334  6E23               	movwf	(___fldiv@grs+1)^0,c
  7483  002336  0E00               	movlw	0
  7484  002338  6E24               	movwf	(___fldiv@grs+2)^0,c
  7485  00233A  0E00               	movlw	0
  7486  00233C  6E25               	movwf	(___fldiv@grs+3)^0,c
  7487  00233E  0E00               	movlw	0
  7488  002340  6E27               	movwf	___fldiv@aexp^0,c
  7489  002342  EFDB  F011         	goto	l951
  7490  002346                     l3234:
  7491  002346  5027               	movf	___fldiv@aexp^0,w,c
  7492  002348  B4D8               	btfsc	status,2,c
  7493  00234A  EFA9  F011         	goto	u3501
  7494  00234E  EFAB  F011         	goto	u3500
  7495  002352                     u3501:
  7496  002352  EFC2  F011         	goto	l3242
  7497  002356                     u3500:
  7498  002356  90D8               	bcf	status,0,c
  7499  002358  361B               	rlcf	___fldiv@rem^0,f,c
  7500  00235A  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7501  00235C  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7502  00235E  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7503  002360  90D8               	bcf	status,0,c
  7504  002362  360F               	rlcf	___fldiv@b^0,f,c
  7505  002364  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7506  002366  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7507  002368  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7508  00236A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7509  00236C  EFBA  F011         	goto	u3511
  7510  002370  EFBC  F011         	goto	u3510
  7511  002374                     u3511:
  7512  002374  EFBD  F011         	goto	l954
  7513  002378                     u3510:
  7514  002378  800F               	bsf	___fldiv@b^0,0,c
  7515  00237A                     l954:
  7516  00237A  90D8               	bcf	status,0,c
  7517  00237C  3622               	rlcf	___fldiv@grs^0,f,c
  7518  00237E  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7519  002380  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7520  002382  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7521  002384                     l3242:
  7522  002384  5013               	movf	___fldiv@a^0,w,c
  7523  002386  5C1B               	subwf	___fldiv@rem^0,w,c
  7524  002388  5014               	movf	(___fldiv@a+1)^0,w,c
  7525  00238A  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7526  00238C  5015               	movf	(___fldiv@a+2)^0,w,c
  7527  00238E  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7528  002390  5016               	movf	(___fldiv@a+3)^0,w,c
  7529  002392  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7530  002394  A0D8               	btfss	status,0,c
  7531  002396  EFCF  F011         	goto	u3521
  7532  00239A  EFD1  F011         	goto	u3520
  7533  00239E                     u3521:
  7534  00239E  EFDA  F011         	goto	l3248
  7535  0023A2                     u3520:
  7536  0023A2  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7537  0023A4  5013               	movf	___fldiv@a^0,w,c
  7538  0023A6  5E1B               	subwf	___fldiv@rem^0,f,c
  7539  0023A8  5014               	movf	(___fldiv@a+1)^0,w,c
  7540  0023AA  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7541  0023AC  5015               	movf	(___fldiv@a+2)^0,w,c
  7542  0023AE  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7543  0023B0  5016               	movf	(___fldiv@a+3)^0,w,c
  7544  0023B2  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7545  0023B4                     l3248:
  7546  0023B4  2A27               	incf	___fldiv@aexp^0,f,c
  7547  0023B6                     l951:
  7548  0023B6  0E19               	movlw	25
  7549  0023B8  6427               	cpfsgt	___fldiv@aexp^0,c
  7550  0023BA  EFE1  F011         	goto	u3531
  7551  0023BE  EFE3  F011         	goto	u3530
  7552  0023C2                     u3531:
  7553  0023C2  EFA3  F011         	goto	l3234
  7554  0023C6                     u3530:
  7555  0023C6  501B               	movf	___fldiv@rem^0,w,c
  7556  0023C8  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7557  0023CA  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7558  0023CC  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7559  0023CE  B4D8               	btfsc	status,2,c
  7560  0023D0  EFEC  F011         	goto	u3541
  7561  0023D4  EFEE  F011         	goto	u3540
  7562  0023D8                     u3541:
  7563  0023D8  EF06  F012         	goto	l3260
  7564  0023DC                     u3540:
  7565  0023DC  8022               	bsf	___fldiv@grs^0,0,c
  7566  0023DE  EF06  F012         	goto	l3260
  7567  0023E2                     l3254:
  7568  0023E2  90D8               	bcf	status,0,c
  7569  0023E4  360F               	rlcf	___fldiv@b^0,f,c
  7570  0023E6  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7571  0023E8  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7572  0023EA  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7573  0023EC  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7574  0023EE  EFFB  F011         	goto	u3551
  7575  0023F2  EFFD  F011         	goto	u3550
  7576  0023F6                     u3551:
  7577  0023F6  EFFE  F011         	goto	l960
  7578  0023FA                     u3550:
  7579  0023FA  800F               	bsf	___fldiv@b^0,0,c
  7580  0023FC                     l960:
  7581  0023FC  90D8               	bcf	status,0,c
  7582  0023FE  3622               	rlcf	___fldiv@grs^0,f,c
  7583  002400  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7584  002402  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7585  002404  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7586  002406  0620               	decf	___fldiv@new_exp^0,f,c
  7587  002408  A0D8               	btfss	status,0,c
  7588  00240A  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7589  00240C                     l3260:
  7590  00240C  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7591  00240E  EF0B  F012         	goto	u3561
  7592  002412  EF0D  F012         	goto	u3560
  7593  002416                     u3561:
  7594  002416  EFF1  F011         	goto	l3254
  7595  00241A                     u3560:
  7596  00241A  0E00               	movlw	0
  7597  00241C  6E27               	movwf	___fldiv@aexp^0,c
  7598  00241E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7599  002420  EF14  F012         	goto	u3571
  7600  002424  EF16  F012         	goto	u3570
  7601  002428                     u3571:
  7602  002428  EF3A  F012         	goto	l962
  7603  00242C                     u3570:
  7604  00242C  0EFF               	movlw	255
  7605  00242E  1422               	andwf	___fldiv@grs^0,w,c
  7606  002430  6E17               	movwf	??___fldiv^0,c
  7607  002432  0EFF               	movlw	255
  7608  002434  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7609  002436  6E18               	movwf	(??___fldiv+1)^0,c
  7610  002438  0EFF               	movlw	255
  7611  00243A  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7612  00243C  6E19               	movwf	(??___fldiv+2)^0,c
  7613  00243E  0E7F               	movlw	127
  7614  002440  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7615  002442  6E1A               	movwf	(??___fldiv+3)^0,c
  7616  002444  5017               	movf	??___fldiv^0,w,c
  7617  002446  1018               	iorwf	(??___fldiv+1)^0,w,c
  7618  002448  1019               	iorwf	(??___fldiv+2)^0,w,c
  7619  00244A  101A               	iorwf	(??___fldiv+3)^0,w,c
  7620  00244C  B4D8               	btfsc	status,2,c
  7621  00244E  EF2B  F012         	goto	u3581
  7622  002452  EF2D  F012         	goto	u3580
  7623  002456                     u3581:
  7624  002456  EF31  F012         	goto	l963
  7625  00245A                     u3580:
  7626  00245A                     l3268:
  7627  00245A  0E01               	movlw	1
  7628  00245C  6E27               	movwf	___fldiv@aexp^0,c
  7629  00245E  EF3A  F012         	goto	l962
  7630  002462                     l963:
  7631  002462  A00F               	btfss	___fldiv@b^0,0,c
  7632  002464  EF36  F012         	goto	u3591
  7633  002468  EF38  F012         	goto	u3590
  7634  00246C                     u3591:
  7635  00246C  EF3A  F012         	goto	l962
  7636  002470                     u3590:
  7637  002470  EF2D  F012         	goto	l3268
  7638  002474                     l962:
  7639  002474  5027               	movf	___fldiv@aexp^0,w,c
  7640  002476  B4D8               	btfsc	status,2,c
  7641  002478  EF40  F012         	goto	u3601
  7642  00247C  EF42  F012         	goto	u3600
  7643  002480                     u3601:
  7644  002480  EF66  F012         	goto	l3280
  7645  002484                     u3600:
  7646  002484  0E01               	movlw	1
  7647  002486  260F               	addwf	___fldiv@b^0,f,c
  7648  002488  0E00               	movlw	0
  7649  00248A  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7650  00248C  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7651  00248E  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7652  002490  A012               	btfss	(___fldiv@b+3)^0,0,c
  7653  002492  EF4D  F012         	goto	u3611
  7654  002496  EF4F  F012         	goto	u3610
  7655  00249A                     u3611:
  7656  00249A  EF66  F012         	goto	l3280
  7657  00249E                     u3610:
  7658  00249E  C00F  F017         	movff	___fldiv@b,??___fldiv
  7659  0024A2  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7660  0024A6  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7661  0024AA  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7662  0024AE  341A               	rlcf	(??___fldiv+3)^0,w,c
  7663  0024B0  321A               	rrcf	(??___fldiv+3)^0,f,c
  7664  0024B2  3219               	rrcf	(??___fldiv+2)^0,f,c
  7665  0024B4  3218               	rrcf	(??___fldiv+1)^0,f,c
  7666  0024B6  3217               	rrcf	??___fldiv^0,f,c
  7667  0024B8  C017  F00F         	movff	??___fldiv,___fldiv@b
  7668  0024BC  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  7669  0024C0  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  7670  0024C4  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  7671  0024C8  4A20               	infsnz	___fldiv@new_exp^0,f,c
  7672  0024CA  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  7673  0024CC                     l3280:
  7674  0024CC  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7675  0024CE  EF71  F012         	goto	u3621
  7676  0024D2  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7677  0024D4  E108               	bnz	u3620
  7678  0024D6  2820               	incf	___fldiv@new_exp^0,w,c
  7679  0024D8  A0D8               	btfss	status,0,c
  7680  0024DA  EF71  F012         	goto	u3621
  7681  0024DE  EF73  F012         	goto	u3620
  7682  0024E2                     u3621:
  7683  0024E2  EF7E  F012         	goto	l3284
  7684  0024E6                     u3620:
  7685  0024E6  0E00               	movlw	0
  7686  0024E8  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7687  0024EA  6820               	setf	___fldiv@new_exp^0,c
  7688  0024EC  0E00               	movlw	0
  7689  0024EE  6E0F               	movwf	___fldiv@b^0,c
  7690  0024F0  0E00               	movlw	0
  7691  0024F2  6E10               	movwf	(___fldiv@b+1)^0,c
  7692  0024F4  0E00               	movlw	0
  7693  0024F6  6E11               	movwf	(___fldiv@b+2)^0,c
  7694  0024F8  0E00               	movlw	0
  7695  0024FA  6E12               	movwf	(___fldiv@b+3)^0,c
  7696  0024FC                     l3284:
  7697  0024FC  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7698  0024FE  EF8B  F012         	goto	u3630
  7699  002502  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7700  002504  E106               	bnz	u3631
  7701  002506  0420               	decf	___fldiv@new_exp^0,w,c
  7702  002508  B0D8               	btfsc	status,0,c
  7703  00250A  EF89  F012         	goto	u3631
  7704  00250E  EF8B  F012         	goto	u3630
  7705  002512                     u3631:
  7706  002512  EF99  F012         	goto	l3288
  7707  002516                     u3630:
  7708  002516  0E00               	movlw	0
  7709  002518  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7710  00251A  0E00               	movlw	0
  7711  00251C  6E20               	movwf	___fldiv@new_exp^0,c
  7712  00251E  0E00               	movlw	0
  7713  002520  6E0F               	movwf	___fldiv@b^0,c
  7714  002522  0E00               	movlw	0
  7715  002524  6E10               	movwf	(___fldiv@b+1)^0,c
  7716  002526  0E00               	movlw	0
  7717  002528  6E11               	movwf	(___fldiv@b+2)^0,c
  7718  00252A  0E00               	movlw	0
  7719  00252C  6E12               	movwf	(___fldiv@b+3)^0,c
  7720  00252E  0E00               	movlw	0
  7721  002530  6E1F               	movwf	___fldiv@sign^0,c
  7722  002532                     l3288:
  7723  002532  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  7724  002536  A026               	btfss	___fldiv@bexp^0,0,c
  7725  002538  EFA0  F012         	goto	u3641
  7726  00253C  EFA2  F012         	goto	u3640
  7727  002540                     u3641:
  7728  002540  EFA5  F012         	goto	l3294
  7729  002544                     u3640:
  7730  002544  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7731  002546  EFA6  F012         	goto	l3296
  7732  00254A                     l3294:
  7733  00254A  9E11               	bcf	(___fldiv@b+2)^0,7,c
  7734  00254C                     l3296:
  7735  00254C  90D8               	bcf	status,0,c
  7736  00254E  3026               	rrcf	___fldiv@bexp^0,w,c
  7737  002550  6E12               	movwf	(___fldiv@b+3)^0,c
  7738  002552  EF5C  F011         	goto	l3210
  7739  002556                     l949:
  7740  002556  0012               	return		;funcret
  7741  002558                     __end_of___fldiv:
  7742                           	opt callstack 0
  7743                           
  7744 ;; *************** function ___awmod *****************
  7745 ;; Defined at:
  7746 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  dividend        2    0[COMRAM] int 
  7749 ;;  divisor         2    2[COMRAM] int 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;  sign            1    5[COMRAM] unsigned char 
  7752 ;;  counter         1    4[COMRAM] unsigned char 
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  2    0[COMRAM] int 
  7755 ;; Registers used:
  7756 ;;		wreg, status,2, status,0
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7762 ;;      Params:         4       0       0       0       0       0       0       0       0
  7763 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7764 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7765 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7766 ;;Total ram usage:        6 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; Hardware stack levels required when called:    1
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_efgtoa
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           	psect	text28
  7777  003500                     __ptext28:
  7778                           	opt callstack 0
  7779  003500                     ___awmod:
  7780                           	opt callstack 23
  7781  003500  0E00               	movlw	0
  7782  003502  6E06               	movwf	___awmod@sign^0,c
  7783  003504  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7784  003506  EF89  F01A         	goto	u3900
  7785  00350A  EF87  F01A         	goto	u3901
  7786  00350E                     u3901:
  7787  00350E  EF8F  F01A         	goto	l3492
  7788  003512                     u3900:
  7789  003512  6C01               	negf	___awmod@dividend^0,c
  7790  003514  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7791  003516  B0D8               	btfsc	status,0,c
  7792  003518  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7793  00351A  0E01               	movlw	1
  7794  00351C  6E06               	movwf	___awmod@sign^0,c
  7795  00351E                     l3492:
  7796  00351E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7797  003520  EF96  F01A         	goto	u3910
  7798  003524  EF94  F01A         	goto	u3911
  7799  003528                     u3911:
  7800  003528  EF9A  F01A         	goto	l3496
  7801  00352C                     u3910:
  7802  00352C  6C03               	negf	___awmod@divisor^0,c
  7803  00352E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7804  003530  B0D8               	btfsc	status,0,c
  7805  003532  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7806  003534                     l3496:
  7807  003534  5003               	movf	___awmod@divisor^0,w,c
  7808  003536  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7809  003538  B4D8               	btfsc	status,2,c
  7810  00353A  EFA1  F01A         	goto	u3921
  7811  00353E  EFA3  F01A         	goto	u3920
  7812  003542                     u3921:
  7813  003542  EFC7  F01A         	goto	l3512
  7814  003546                     u3920:
  7815  003546  0E01               	movlw	1
  7816  003548  6E05               	movwf	___awmod@counter^0,c
  7817  00354A  EFAB  F01A         	goto	l3502
  7818  00354E                     l3500:
  7819  00354E  90D8               	bcf	status,0,c
  7820  003550  3603               	rlcf	___awmod@divisor^0,f,c
  7821  003552  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7822  003554  2A05               	incf	___awmod@counter^0,f,c
  7823  003556                     l3502:
  7824  003556  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7825  003558  EFB0  F01A         	goto	u3931
  7826  00355C  EFB2  F01A         	goto	u3930
  7827  003560                     u3931:
  7828  003560  EFA7  F01A         	goto	l3500
  7829  003564                     u3930:
  7830  003564                     l3504:
  7831  003564  5003               	movf	___awmod@divisor^0,w,c
  7832  003566  5C01               	subwf	___awmod@dividend^0,w,c
  7833  003568  5004               	movf	(___awmod@divisor+1)^0,w,c
  7834  00356A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7835  00356C  A0D8               	btfss	status,0,c
  7836  00356E  EFBB  F01A         	goto	u3941
  7837  003572  EFBD  F01A         	goto	u3940
  7838  003576                     u3941:
  7839  003576  EFC1  F01A         	goto	l3508
  7840  00357A                     u3940:
  7841  00357A  5003               	movf	___awmod@divisor^0,w,c
  7842  00357C  5E01               	subwf	___awmod@dividend^0,f,c
  7843  00357E  5004               	movf	(___awmod@divisor+1)^0,w,c
  7844  003580  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7845  003582                     l3508:
  7846  003582  90D8               	bcf	status,0,c
  7847  003584  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7848  003586  3203               	rrcf	___awmod@divisor^0,f,c
  7849  003588  2E05               	decfsz	___awmod@counter^0,f,c
  7850  00358A  EFB2  F01A         	goto	l3504
  7851  00358E                     l3512:
  7852  00358E  5006               	movf	___awmod@sign^0,w,c
  7853  003590  B4D8               	btfsc	status,2,c
  7854  003592  EFCD  F01A         	goto	u3951
  7855  003596  EFCF  F01A         	goto	u3950
  7856  00359A                     u3951:
  7857  00359A  EFD3  F01A         	goto	l3516
  7858  00359E                     u3950:
  7859  00359E  6C01               	negf	___awmod@dividend^0,c
  7860  0035A0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7861  0035A2  B0D8               	btfsc	status,0,c
  7862  0035A4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7863  0035A6                     l3516:
  7864  0035A6  C001  F001         	movff	___awmod@dividend,?___awmod
  7865  0035AA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7866  0035AE  0012               	return		;funcret
  7867  0035B0                     __end_of___awmod:
  7868                           	opt callstack 0
  7869                           
  7870 ;; *************** function ___awdiv *****************
  7871 ;; Defined at:
  7872 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;  dividend        2    0[COMRAM] int 
  7875 ;;  divisor         2    2[COMRAM] int 
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;  quotient        2    6[COMRAM] int 
  7878 ;;  sign            1    5[COMRAM] unsigned char 
  7879 ;;  counter         1    4[COMRAM] unsigned char 
  7880 ;; Return value:  Size  Location     Type
  7881 ;;                  2    0[COMRAM] int 
  7882 ;; Registers used:
  7883 ;;		wreg, status,2, status,0
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7889 ;;      Params:         4       0       0       0       0       0       0       0       0
  7890 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7891 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7892 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7893 ;;Total ram usage:        8 bytes
  7894 ;; Hardware stack levels used:    1
  7895 ;; Hardware stack levels required when called:    1
  7896 ;; This function calls:
  7897 ;;		Nothing
  7898 ;; This function is called by:
  7899 ;;		_efgtoa
  7900 ;; This function uses a non-reentrant model
  7901 ;;
  7902                           
  7903                           	psect	text29
  7904  003386                     __ptext29:
  7905                           	opt callstack 0
  7906  003386                     ___awdiv:
  7907                           	opt callstack 23
  7908  003386  0E00               	movlw	0
  7909  003388  6E06               	movwf	___awdiv@sign^0,c
  7910  00338A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7911  00338C  EFCC  F019         	goto	u3840
  7912  003390  EFCA  F019         	goto	u3841
  7913  003394                     u3841:
  7914  003394  EFD2  F019         	goto	l3448
  7915  003398                     u3840:
  7916  003398  6C03               	negf	___awdiv@divisor^0,c
  7917  00339A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7918  00339C  B0D8               	btfsc	status,0,c
  7919  00339E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7920  0033A0  0E01               	movlw	1
  7921  0033A2  6E06               	movwf	___awdiv@sign^0,c
  7922  0033A4                     l3448:
  7923  0033A4  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7924  0033A6  EFD9  F019         	goto	u3850
  7925  0033AA  EFD7  F019         	goto	u3851
  7926  0033AE                     u3851:
  7927  0033AE  EFDF  F019         	goto	l3454
  7928  0033B2                     u3850:
  7929  0033B2  6C01               	negf	___awdiv@dividend^0,c
  7930  0033B4  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7931  0033B6  B0D8               	btfsc	status,0,c
  7932  0033B8  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7933  0033BA  0E01               	movlw	1
  7934  0033BC  1A06               	xorwf	___awdiv@sign^0,f,c
  7935  0033BE                     l3454:
  7936  0033BE  0E00               	movlw	0
  7937  0033C0  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7938  0033C2  0E00               	movlw	0
  7939  0033C4  6E07               	movwf	___awdiv@quotient^0,c
  7940  0033C6  5003               	movf	___awdiv@divisor^0,w,c
  7941  0033C8  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7942  0033CA  B4D8               	btfsc	status,2,c
  7943  0033CC  EFEA  F019         	goto	u3861
  7944  0033D0  EFEC  F019         	goto	u3860
  7945  0033D4                     u3861:
  7946  0033D4  EF14  F01A         	goto	l3476
  7947  0033D8                     u3860:
  7948  0033D8  0E01               	movlw	1
  7949  0033DA  6E05               	movwf	___awdiv@counter^0,c
  7950  0033DC  EFF4  F019         	goto	l3462
  7951  0033E0                     l3460:
  7952  0033E0  90D8               	bcf	status,0,c
  7953  0033E2  3603               	rlcf	___awdiv@divisor^0,f,c
  7954  0033E4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7955  0033E6  2A05               	incf	___awdiv@counter^0,f,c
  7956  0033E8                     l3462:
  7957  0033E8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7958  0033EA  EFF9  F019         	goto	u3871
  7959  0033EE  EFFB  F019         	goto	u3870
  7960  0033F2                     u3871:
  7961  0033F2  EFF0  F019         	goto	l3460
  7962  0033F6                     u3870:
  7963  0033F6                     l3464:
  7964  0033F6  90D8               	bcf	status,0,c
  7965  0033F8  3607               	rlcf	___awdiv@quotient^0,f,c
  7966  0033FA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7967  0033FC  5003               	movf	___awdiv@divisor^0,w,c
  7968  0033FE  5C01               	subwf	___awdiv@dividend^0,w,c
  7969  003400  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7970  003402  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7971  003404  A0D8               	btfss	status,0,c
  7972  003406  EF07  F01A         	goto	u3881
  7973  00340A  EF09  F01A         	goto	u3880
  7974  00340E                     u3881:
  7975  00340E  EF0E  F01A         	goto	l3472
  7976  003412                     u3880:
  7977  003412  5003               	movf	___awdiv@divisor^0,w,c
  7978  003414  5E01               	subwf	___awdiv@dividend^0,f,c
  7979  003416  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7980  003418  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7981  00341A  8007               	bsf	___awdiv@quotient^0,0,c
  7982  00341C                     l3472:
  7983  00341C  90D8               	bcf	status,0,c
  7984  00341E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7985  003420  3203               	rrcf	___awdiv@divisor^0,f,c
  7986  003422  2E05               	decfsz	___awdiv@counter^0,f,c
  7987  003424  EFFB  F019         	goto	l3464
  7988  003428                     l3476:
  7989  003428  5006               	movf	___awdiv@sign^0,w,c
  7990  00342A  B4D8               	btfsc	status,2,c
  7991  00342C  EF1A  F01A         	goto	u3891
  7992  003430  EF1C  F01A         	goto	u3890
  7993  003434                     u3891:
  7994  003434  EF20  F01A         	goto	l3480
  7995  003438                     u3890:
  7996  003438  6C07               	negf	___awdiv@quotient^0,c
  7997  00343A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7998  00343C  B0D8               	btfsc	status,0,c
  7999  00343E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8000  003440                     l3480:
  8001  003440  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8002  003444  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8003  003448  0012               	return		;funcret
  8004  00344A                     __end_of___awdiv:
  8005                           	opt callstack 0
  8006                           
  8007 ;; *************** function _atoi *****************
  8008 ;; Defined at:
  8009 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  8010 ;; Parameters:    Size  Location     Type
  8011 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8012 ;;		 -> STR_10(11), STR_9(8), STR_8(8), STR_7(8), 
  8013 ;;		 -> STR_6(11), STR_5(8), STR_4(8), STR_3(11), 
  8014 ;;		 -> STR_2(11), STR_1(11), 
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;  n               2   20[COMRAM] int 
  8017 ;;  neg             2   13[COMRAM] int 
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  2    7[COMRAM] int 
  8020 ;; Registers used:
  8021 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8027 ;;      Params:         2       0       0       0       0       0       0       0       0
  8028 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8029 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8030 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8031 ;;Total ram usage:       15 bytes
  8032 ;; Hardware stack levels used:    1
  8033 ;; Hardware stack levels required when called:    2
  8034 ;; This function calls:
  8035 ;;		___wmul
  8036 ;;		_isdigit
  8037 ;;		_isspace
  8038 ;; This function is called by:
  8039 ;;		_vfpfcnvrt
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           
  8043                           	psect	text30
  8044  002C02                     __ptext30:
  8045                           	opt callstack 0
  8046  002C02                     _atoi:
  8047                           	opt callstack 23
  8048  002C02  0E00               	movlw	0
  8049  002C04  6E16               	movwf	(atoi@n+1)^0,c
  8050  002C06  0E00               	movlw	0
  8051  002C08  6E15               	movwf	atoi@n^0,c
  8052  002C0A  0E00               	movlw	0
  8053  002C0C  6E0F               	movwf	(atoi@neg+1)^0,c
  8054  002C0E  0E00               	movlw	0
  8055  002C10  6E0E               	movwf	atoi@neg^0,c
  8056  002C12  EF0D  F016         	goto	l3924
  8057  002C16                     l3922:
  8058  002C16  4A08               	infsnz	atoi@s^0,f,c
  8059  002C18  2A09               	incf	(atoi@s+1)^0,f,c
  8060  002C1A                     l3924:
  8061  002C1A  0E01               	movlw	1
  8062  002C1C  6E14               	movwf	_atoi$1322^0,c
  8063  002C1E  C008  FFF6         	movff	atoi@s,tblptrl
  8064  002C22  C009  FFF7         	movff	atoi@s+1,tblptrh
  8065  002C26                     	if	0	;tblptru may be non-zero
  8066  002C26                     	endif
  8067  002C26                     	if	0	;tblptru may be non-zero
  8068  002C26                     	endif
  8069  002C26  0008               	tblrd		*
  8070  002C28  50F5               	movf	tablat,w,c
  8071  002C2A  0A20               	xorlw	32
  8072  002C2C  B4D8               	btfsc	status,2,c
  8073  002C2E  EF1B  F016         	goto	u4661
  8074  002C32  EF1D  F016         	goto	u4660
  8075  002C36                     u4661:
  8076  002C36  EF3A  F016         	goto	l3932
  8077  002C3A                     u4660:
  8078  002C3A  0EF7               	movlw	247
  8079  002C3C  6E0A               	movwf	??_atoi^0,c
  8080  002C3E  0EFF               	movlw	255
  8081  002C40  6E0B               	movwf	(??_atoi+1)^0,c
  8082  002C42  C008  FFF6         	movff	atoi@s,tblptrl
  8083  002C46  C009  FFF7         	movff	atoi@s+1,tblptrh
  8084  002C4A                     	if	0	;tblptru may be non-zero
  8085  002C4A                     	endif
  8086  002C4A                     	if	0	;tblptru may be non-zero
  8087  002C4A                     	endif
  8088  002C4A  0008               	tblrd		*
  8089  002C4C  50F5               	movf	tablat,w,c
  8090  002C4E  6E0C               	movwf	(??_atoi+2)^0,c
  8091  002C50  6A0D               	clrf	(??_atoi+3)^0,c
  8092  002C52  500A               	movf	??_atoi^0,w,c
  8093  002C54  260C               	addwf	(??_atoi+2)^0,f,c
  8094  002C56  500B               	movf	(??_atoi+1)^0,w,c
  8095  002C58  220D               	addwfc	(??_atoi+3)^0,f,c
  8096  002C5A  500D               	movf	(??_atoi+3)^0,w,c
  8097  002C5C  E109               	bnz	u4670
  8098  002C5E  0E05               	movlw	5
  8099  002C60  5C0C               	subwf	(??_atoi+2)^0,w,c
  8100  002C62  A0D8               	btfss	status,0,c
  8101  002C64  EF36  F016         	goto	u4671
  8102  002C68  EF38  F016         	goto	u4670
  8103  002C6C                     u4671:
  8104  002C6C  EF3A  F016         	goto	l3932
  8105  002C70                     u4670:
  8106  002C70  0E00               	movlw	0
  8107  002C72  6E14               	movwf	_atoi$1322^0,c
  8108  002C74                     l3932:
  8109  002C74  C014  F010         	movff	_atoi$1322,_atoi$1321
  8110  002C78  6A11               	clrf	(_atoi$1321+1)^0,c
  8111  002C7A  5010               	movf	_atoi$1321^0,w,c
  8112  002C7C  1011               	iorwf	(_atoi$1321+1)^0,w,c
  8113  002C7E  A4D8               	btfss	status,2,c
  8114  002C80  EF44  F016         	goto	u4681
  8115  002C84  EF46  F016         	goto	u4680
  8116  002C88                     u4681:
  8117  002C88  EF0B  F016         	goto	l3922
  8118  002C8C                     u4680:
  8119  002C8C  EF50  F016         	goto	l3942
  8120  002C90                     l3938:
  8121  002C90  0E00               	movlw	0
  8122  002C92  6E0F               	movwf	(atoi@neg+1)^0,c
  8123  002C94  0E01               	movlw	1
  8124  002C96  6E0E               	movwf	atoi@neg^0,c
  8125  002C98                     l3940:
  8126  002C98  4A08               	infsnz	atoi@s^0,f,c
  8127  002C9A  2A09               	incf	(atoi@s+1)^0,f,c
  8128  002C9C  EF85  F016         	goto	l3948
  8129  002CA0                     l3942:
  8130  002CA0  C008  FFF6         	movff	atoi@s,tblptrl
  8131  002CA4  C009  FFF7         	movff	atoi@s+1,tblptrh
  8132  002CA8                     	if	0	;tblptru may be non-zero
  8133  002CA8                     	endif
  8134  002CA8                     	if	0	;tblptru may be non-zero
  8135  002CA8                     	endif
  8136  002CA8  0008               	tblrd		*
  8137  002CAA  50F5               	movf	tablat,w,c
  8138  002CAC  6E0A               	movwf	??_atoi^0,c
  8139  002CAE  6A0B               	clrf	(??_atoi+1)^0,c
  8140                           
  8141                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8142                           ; Switch size 1, requested type "simple"
  8143                           ; Number of cases is 1, Range of values is 0 to 0
  8144                           ; switch strategies available:
  8145                           ; Name         Instructions Cycles
  8146                           ; simple_byte            4     3 (average)
  8147                           ;	Chosen strategy is simple_byte
  8148  002CB0  500B               	movf	(??_atoi+1)^0,w,c
  8149  002CB2  0A00               	xorlw	0	; case 0
  8150  002CB4  B4D8               	btfsc	status,2,c
  8151  002CB6  EF5F  F016         	goto	l4416
  8152  002CBA  EF85  F016         	goto	l3948
  8153  002CBE                     l4416:
  8154                           
  8155                           ; Switch size 1, requested type "simple"
  8156                           ; Number of cases is 2, Range of values is 43 to 45
  8157                           ; switch strategies available:
  8158                           ; Name         Instructions Cycles
  8159                           ; simple_byte            7     4 (average)
  8160                           ;	Chosen strategy is simple_byte
  8161  002CBE  500A               	movf	??_atoi^0,w,c
  8162  002CC0  0A2B               	xorlw	43	; case 43
  8163  002CC2  B4D8               	btfsc	status,2,c
  8164  002CC4  EF4C  F016         	goto	l3940
  8165  002CC8  0A06               	xorlw	6	; case 45
  8166  002CCA  B4D8               	btfsc	status,2,c
  8167  002CCC  EF48  F016         	goto	l3938
  8168  002CD0  EF85  F016         	goto	l3948
  8169  002CD4                     l3944:
  8170  002CD4  C015  F001         	movff	atoi@n,___wmul@multiplier
  8171  002CD8  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8172  002CDC  0E00               	movlw	0
  8173  002CDE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8174  002CE0  0E0A               	movlw	10
  8175  002CE2  6E03               	movwf	___wmul@multiplicand^0,c
  8176  002CE4  ECE6  F01D         	call	___wmul	;wreg free
  8177  002CE8  C008  FFF6         	movff	atoi@s,tblptrl
  8178  002CEC  C009  FFF7         	movff	atoi@s+1,tblptrh
  8179  002CF0                     	if	0	;tblptru may be non-zero
  8180  002CF0                     	endif
  8181  002CF0                     	if	0	;tblptru may be non-zero
  8182  002CF0                     	endif
  8183  002CF0  0008               	tblrd		*
  8184  002CF2  50F5               	movf	tablat,w,c
  8185  002CF4  5E01               	subwf	?___wmul^0,f,c
  8186  002CF6  0E00               	movlw	0
  8187  002CF8  5A02               	subwfb	(?___wmul+1)^0,f,c
  8188  002CFA  0E30               	movlw	48
  8189  002CFC  2401               	addwf	?___wmul^0,w,c
  8190  002CFE  6E15               	movwf	atoi@n^0,c
  8191  002D00  0E00               	movlw	0
  8192  002D02  2002               	addwfc	(?___wmul+1)^0,w,c
  8193  002D04  6E16               	movwf	(atoi@n+1)^0,c
  8194  002D06  EF4C  F016         	goto	l3940
  8195  002D0A                     l3948:
  8196  002D0A  0ED0               	movlw	208
  8197  002D0C  6E0A               	movwf	??_atoi^0,c
  8198  002D0E  0EFF               	movlw	255
  8199  002D10  6E0B               	movwf	(??_atoi+1)^0,c
  8200  002D12  C008  FFF6         	movff	atoi@s,tblptrl
  8201  002D16  C009  FFF7         	movff	atoi@s+1,tblptrh
  8202  002D1A                     	if	0	;tblptru may be non-zero
  8203  002D1A                     	endif
  8204  002D1A                     	if	0	;tblptru may be non-zero
  8205  002D1A                     	endif
  8206  002D1A  0008               	tblrd		*
  8207  002D1C  50F5               	movf	tablat,w,c
  8208  002D1E  6E0C               	movwf	(??_atoi+2)^0,c
  8209  002D20  6A0D               	clrf	(??_atoi+3)^0,c
  8210  002D22  500A               	movf	??_atoi^0,w,c
  8211  002D24  260C               	addwf	(??_atoi+2)^0,f,c
  8212  002D26  500B               	movf	(??_atoi+1)^0,w,c
  8213  002D28  220D               	addwfc	(??_atoi+3)^0,f,c
  8214  002D2A  500D               	movf	(??_atoi+3)^0,w,c
  8215  002D2C  E10A               	bnz	u4690
  8216  002D2E  0E0A               	movlw	10
  8217  002D30  5C0C               	subwf	(??_atoi+2)^0,w,c
  8218  002D32  A0D8               	btfss	status,0,c
  8219  002D34  EF9E  F016         	goto	u4691
  8220  002D38  EFA1  F016         	goto	u4690
  8221  002D3C                     u4691:
  8222  002D3C  0E01               	movlw	1
  8223  002D3E  EFA2  F016         	goto	u4700
  8224  002D42                     u4690:
  8225  002D42  0E00               	movlw	0
  8226  002D44                     u4700:
  8227  002D44  6E12               	movwf	_atoi$1323^0,c
  8228  002D46  6A13               	clrf	(_atoi$1323+1)^0,c
  8229  002D48  5012               	movf	_atoi$1323^0,w,c
  8230  002D4A  1013               	iorwf	(_atoi$1323+1)^0,w,c
  8231  002D4C  A4D8               	btfss	status,2,c
  8232  002D4E  EFAB  F016         	goto	u4711
  8233  002D52  EFAD  F016         	goto	u4710
  8234  002D56                     u4711:
  8235  002D56  EF6A  F016         	goto	l3944
  8236  002D5A                     u4710:
  8237  002D5A  500E               	movf	atoi@neg^0,w,c
  8238  002D5C  100F               	iorwf	(atoi@neg+1)^0,w,c
  8239  002D5E  A4D8               	btfss	status,2,c
  8240  002D60  EFB4  F016         	goto	u4721
  8241  002D64  EFB6  F016         	goto	u4720
  8242  002D68                     u4721:
  8243  002D68  EFC4  F016         	goto	l1077
  8244  002D6C                     u4720:
  8245  002D6C  C015  F00A         	movff	atoi@n,??_atoi
  8246  002D70  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8247  002D74  1E0A               	comf	??_atoi^0,f,c
  8248  002D76  1E0B               	comf	(??_atoi+1)^0,f,c
  8249  002D78  4A0A               	infsnz	??_atoi^0,f,c
  8250  002D7A  2A0B               	incf	(??_atoi+1)^0,f,c
  8251  002D7C  C00A  F008         	movff	??_atoi,?_atoi
  8252  002D80  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8253  002D84  EFC8  F016         	goto	l1080
  8254  002D88                     l1077:
  8255  002D88  C015  F008         	movff	atoi@n,?_atoi
  8256  002D8C  C016  F009         	movff	atoi@n+1,?_atoi+1
  8257  002D90                     l1080:
  8258  002D90  0012               	return		;funcret
  8259  002D92                     __end_of_atoi:
  8260                           	opt callstack 0
  8261                           
  8262 ;; *************** function _isspace *****************
  8263 ;; Defined at:
  8264 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;  c               2    0[COMRAM] int 
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;		None
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  2    0[COMRAM] int 
  8271 ;; Registers used:
  8272 ;;		wreg, status,2, status,0
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8278 ;;      Params:         2       0       0       0       0       0       0       0       0
  8279 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8280 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8281 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8282 ;;Total ram usage:        7 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:    1
  8285 ;; This function calls:
  8286 ;;		Nothing
  8287 ;; This function is called by:
  8288 ;;		_atoi
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           	psect	text31
  8293  003982                     __ptext31:
  8294                           	opt callstack 0
  8295  003982                     _isspace:
  8296                           	opt callstack 23
  8297  003982  0E01               	movlw	1
  8298  003984  6E07               	movwf	_isspace$1352^0,c
  8299  003986  0E20               	movlw	32
  8300  003988  1801               	xorwf	isspace@c^0,w,c
  8301  00398A  1002               	iorwf	(isspace@c+1)^0,w,c
  8302  00398C  B4D8               	btfsc	status,2,c
  8303  00398E  EFCB  F01C         	goto	u4121
  8304  003992  EFCD  F01C         	goto	u4120
  8305  003996                     u4121:
  8306  003996  EFE6  F01C         	goto	l3618
  8307  00399A                     u4120:
  8308  00399A  0EF7               	movlw	247
  8309  00399C  6E03               	movwf	??_isspace^0,c
  8310  00399E  0EFF               	movlw	255
  8311  0039A0  6E04               	movwf	(??_isspace+1)^0,c
  8312  0039A2  C001  F005         	movff	isspace@c,??_isspace+2
  8313  0039A6  C002  F006         	movff	isspace@c+1,??_isspace+3
  8314  0039AA  5003               	movf	??_isspace^0,w,c
  8315  0039AC  2605               	addwf	(??_isspace+2)^0,f,c
  8316  0039AE  5004               	movf	(??_isspace+1)^0,w,c
  8317  0039B0  2206               	addwfc	(??_isspace+3)^0,f,c
  8318  0039B2  5006               	movf	(??_isspace+3)^0,w,c
  8319  0039B4  E109               	bnz	u4130
  8320  0039B6  0E05               	movlw	5
  8321  0039B8  5C05               	subwf	(??_isspace+2)^0,w,c
  8322  0039BA  A0D8               	btfss	status,0,c
  8323  0039BC  EFE2  F01C         	goto	u4131
  8324  0039C0  EFE4  F01C         	goto	u4130
  8325  0039C4                     u4131:
  8326  0039C4  EFE6  F01C         	goto	l3618
  8327  0039C8                     u4130:
  8328  0039C8  0E00               	movlw	0
  8329  0039CA  6E07               	movwf	_isspace$1352^0,c
  8330  0039CC                     l3618:
  8331  0039CC  C007  F001         	movff	_isspace$1352,?_isspace
  8332  0039D0  6A02               	clrf	(?_isspace+1)^0,c
  8333  0039D2  0012               	return		;funcret
  8334  0039D4                     __end_of_isspace:
  8335                           	opt callstack 0
  8336                           
  8337 ;; *************** function _isdigit *****************
  8338 ;; Defined at:
  8339 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;  c               2    0[COMRAM] int 
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;		None
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  2    0[COMRAM] int 
  8346 ;; Registers used:
  8347 ;;		wreg, status,2, status,0
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8353 ;;      Params:         2       0       0       0       0       0       0       0       0
  8354 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8355 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8356 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8357 ;;Total ram usage:        6 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; Hardware stack levels required when called:    1
  8360 ;; This function calls:
  8361 ;;		Nothing
  8362 ;; This function is called by:
  8363 ;;		_vfpfcnvrt
  8364 ;;		_atoi
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           
  8368                           	psect	text32
  8369  003B10                     __ptext32:
  8370                           	opt callstack 0
  8371  003B10                     _isdigit:
  8372                           	opt callstack 24
  8373  003B10  0ED0               	movlw	208
  8374  003B12  6E03               	movwf	??_isdigit^0,c
  8375  003B14  0EFF               	movlw	255
  8376  003B16  6E04               	movwf	(??_isdigit+1)^0,c
  8377  003B18  C001  F005         	movff	isdigit@c,??_isdigit+2
  8378  003B1C  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8379  003B20  5003               	movf	??_isdigit^0,w,c
  8380  003B22  2605               	addwf	(??_isdigit+2)^0,f,c
  8381  003B24  5004               	movf	(??_isdigit+1)^0,w,c
  8382  003B26  2206               	addwfc	(??_isdigit+3)^0,f,c
  8383  003B28  5006               	movf	(??_isdigit+3)^0,w,c
  8384  003B2A  E10A               	bnz	u3400
  8385  003B2C  0E0A               	movlw	10
  8386  003B2E  5C05               	subwf	(??_isdigit+2)^0,w,c
  8387  003B30  A0D8               	btfss	status,0,c
  8388  003B32  EF9D  F01D         	goto	u3401
  8389  003B36  EFA0  F01D         	goto	u3400
  8390  003B3A                     u3401:
  8391  003B3A  0E01               	movlw	1
  8392  003B3C  EFA1  F01D         	goto	u3410
  8393  003B40                     u3400:
  8394  003B40  0E00               	movlw	0
  8395  003B42                     u3410:
  8396  003B42  6E01               	movwf	?_isdigit^0,c
  8397  003B44  6A02               	clrf	(?_isdigit+1)^0,c
  8398  003B46  0012               	return		;funcret
  8399  003B48                     __end_of_isdigit:
  8400                           	opt callstack 0
  8401                           
  8402 ;; *************** function ___wmul *****************
  8403 ;; Defined at:
  8404 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;  multiplier      2    0[COMRAM] unsigned int 
  8407 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;  product         2    4[COMRAM] unsigned int 
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  2    0[COMRAM] unsigned int 
  8412 ;; Registers used:
  8413 ;;		wreg, status,2, status,0, prodl, prodh
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8419 ;;      Params:         4       0       0       0       0       0       0       0       0
  8420 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8421 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8422 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8423 ;;Total ram usage:        6 bytes
  8424 ;; Hardware stack levels used:    1
  8425 ;; Hardware stack levels required when called:    1
  8426 ;; This function calls:
  8427 ;;		Nothing
  8428 ;; This function is called by:
  8429 ;;		_atoi
  8430 ;; This function uses a non-reentrant model
  8431 ;;
  8432                           
  8433                           	psect	text33
  8434  003BCC                     __ptext33:
  8435                           	opt callstack 0
  8436  003BCC                     ___wmul:
  8437                           	opt callstack 23
  8438  003BCC  5001               	movf	___wmul@multiplier^0,w,c
  8439  003BCE  0203               	mulwf	___wmul@multiplicand^0,c
  8440  003BD0  CFF3 F005          	movff	prodl,___wmul@product
  8441  003BD4  CFF4 F006          	movff	prodh,___wmul@product+1
  8442  003BD8  5001               	movf	___wmul@multiplier^0,w,c
  8443  003BDA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8444  003BDC  50F3               	movf	243,w,c
  8445  003BDE  2606               	addwf	(___wmul@product+1)^0,f,c
  8446  003BE0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8447  003BE2  0203               	mulwf	___wmul@multiplicand^0,c
  8448  003BE4  50F3               	movf	243,w,c
  8449  003BE6  2606               	addwf	(___wmul@product+1)^0,f,c
  8450  003BE8  C005  F001         	movff	___wmul@product,?___wmul
  8451  003BEC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8452  003BF0  0012               	return		;funcret
  8453  003BF2                     __end_of___wmul:
  8454                           	opt callstack 0
  8455                           
  8456 ;; *************** function _caracter_inicio *****************
  8457 ;; Defined at:
  8458 ;;		line 59 in file "lcd.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  linha           1    wreg     unsigned char 
  8461 ;;  coluna          1    4[COMRAM] unsigned char 
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;  linha           1    5[COMRAM] unsigned char 
  8464 ;;  posicao         1    6[COMRAM] unsigned char 
  8465 ;; Return value:  Size  Location     Type
  8466 ;;                  1    wreg      void 
  8467 ;; Registers used:
  8468 ;;		wreg, status,2, status,0, cstack
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8474 ;;      Params:         1       0       0       0       0       0       0       0       0
  8475 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8477 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8478 ;;Total ram usage:        3 bytes
  8479 ;; Hardware stack levels used:    1
  8480 ;; Hardware stack levels required when called:    3
  8481 ;; This function calls:
  8482 ;;		_envia_byte_lcd
  8483 ;; This function is called by:
  8484 ;;		_displayPlayers
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           	psect	text34
  8489  003A5E                     __ptext34:
  8490                           	opt callstack 0
  8491  003A5E                     _caracter_inicio:
  8492                           	opt callstack 25
  8493                           
  8494                           ;incstack = 0
  8495                           ;caracter_inicio@linha stored from wreg
  8496  003A5E  6E06               	movwf	caracter_inicio@linha^0,c
  8497  003A60                     
  8498                           ;lcd.c: 59: void caracter_inicio(char linha, char coluna);lcd.c: 60: {;lcd.c: 61:   char
      +                           posicao = 0;
  8499  003A60  0E00               	movlw	0
  8500  003A62  6E07               	movwf	caracter_inicio@posicao^0,c
  8501  003A64                     
  8502                           ;lcd.c: 62:   if (linha == 1)
  8503  003A64  0406               	decf	caracter_inicio@linha^0,w,c
  8504  003A66  A4D8               	btfss	status,2,c
  8505  003A68  EF38  F01D         	goto	u4931
  8506  003A6C  EF3A  F01D         	goto	u4930
  8507  003A70                     u4931:
  8508  003A70  EF3C  F01D         	goto	l4090
  8509  003A74                     u4930:
  8510  003A74                     
  8511                           ;lcd.c: 63:   {;lcd.c: 64:     posicao = 0x80;
  8512  003A74  0E80               	movlw	128
  8513  003A76  6E07               	movwf	caracter_inicio@posicao^0,c
  8514  003A78                     l4090:
  8515                           
  8516                           ;lcd.c: 66:   if (linha == 2)
  8517  003A78  0E02               	movlw	2
  8518  003A7A  1806               	xorwf	caracter_inicio@linha^0,w,c
  8519  003A7C  A4D8               	btfss	status,2,c
  8520  003A7E  EF43  F01D         	goto	u4941
  8521  003A82  EF45  F01D         	goto	u4940
  8522  003A86                     u4941:
  8523  003A86  EF47  F01D         	goto	l4094
  8524  003A8A                     u4940:
  8525  003A8A                     
  8526                           ;lcd.c: 67:   {;lcd.c: 68:     posicao = 0xc0;
  8527  003A8A  0EC0               	movlw	192
  8528  003A8C  6E07               	movwf	caracter_inicio@posicao^0,c
  8529  003A8E                     l4094:
  8530                           
  8531                           ;lcd.c: 71:   posicao = posicao + coluna;
  8532  003A8E  5007               	movf	caracter_inicio@posicao^0,w,c
  8533  003A90  2405               	addwf	caracter_inicio@coluna^0,w,c
  8534  003A92  6E07               	movwf	caracter_inicio@posicao^0,c
  8535  003A94                     
  8536                           ;lcd.c: 73:   envia_byte_lcd(0, posicao);
  8537  003A94  C007  F003         	movff	caracter_inicio@posicao,envia_byte_lcd@dado
  8538  003A98  0E00               	movlw	0
  8539  003A9A  ECF9  F01D         	call	_envia_byte_lcd
  8540  003A9E  0012               	return		;funcret
  8541  003AA0                     __end_of_caracter_inicio:
  8542                           	opt callstack 0
  8543                           
  8544 ;; *************** function ___xxtofl *****************
  8545 ;; Defined at:
  8546 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;  sign            1    wreg     unsigned char 
  8549 ;;  val             4    0[COMRAM] long 
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;  sign            1    8[COMRAM] unsigned char 
  8552 ;;  arg             4   10[COMRAM] unsigned long 
  8553 ;;  exp             1    9[COMRAM] unsigned char 
  8554 ;; Return value:  Size  Location     Type
  8555 ;;                  4    0[COMRAM] unsigned char 
  8556 ;; Registers used:
  8557 ;;		wreg, status,2, status,0
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8563 ;;      Params:         4       0       0       0       0       0       0       0       0
  8564 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8565 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8566 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8567 ;;Total ram usage:       14 bytes
  8568 ;; Hardware stack levels used:    1
  8569 ;; Hardware stack levels required when called:    1
  8570 ;; This function calls:
  8571 ;;		Nothing
  8572 ;; This function is called by:
  8573 ;;		_stateMachine
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           	psect	text35
  8578  002A4E                     __ptext35:
  8579                           	opt callstack 0
  8580  002A4E                     ___xxtofl:
  8581                           	opt callstack 28
  8582                           
  8583                           ;incstack = 0
  8584                           ;___xxtofl@sign stored from wreg
  8585  002A4E  6E09               	movwf	___xxtofl@sign^0,c
  8586  002A50  5009               	movf	___xxtofl@sign^0,w,c
  8587  002A52  B4D8               	btfsc	status,2,c
  8588  002A54  EF2E  F015         	goto	u5011
  8589  002A58  EF30  F015         	goto	u5010
  8590  002A5C                     u5011:
  8591  002A5C  EF52  F015         	goto	l1022
  8592  002A60                     u5010:
  8593  002A60  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8594  002A62  EF37  F015         	goto	u5020
  8595  002A66  EF35  F015         	goto	u5021
  8596  002A6A                     u5021:
  8597  002A6A  EF52  F015         	goto	l1022
  8598  002A6E                     u5020:
  8599  002A6E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8600  002A72  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8601  002A76  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8602  002A7A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8603  002A7E  1E05               	comf	??___xxtofl^0,f,c
  8604  002A80  1E06               	comf	(??___xxtofl+1)^0,f,c
  8605  002A82  1E07               	comf	(??___xxtofl+2)^0,f,c
  8606  002A84  1E08               	comf	(??___xxtofl+3)^0,f,c
  8607  002A86  2A05               	incf	??___xxtofl^0,f,c
  8608  002A88  0E00               	movlw	0
  8609  002A8A  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8610  002A8C  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8611  002A8E  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8612  002A90  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8613  002A94  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8614  002A98  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8615  002A9C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8616  002AA0  EF5A  F015         	goto	l4180
  8617  002AA4                     l1022:
  8618  002AA4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8619  002AA8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8620  002AAC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8621  002AB0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8622  002AB4                     l4180:
  8623  002AB4  5001               	movf	___xxtofl@val^0,w,c
  8624  002AB6  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8625  002AB8  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8626  002ABA  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8627  002ABC  A4D8               	btfss	status,2,c
  8628  002ABE  EF63  F015         	goto	u5031
  8629  002AC2  EF65  F015         	goto	u5030
  8630  002AC6                     u5031:
  8631  002AC6  EF6F  F015         	goto	l4186
  8632  002ACA                     u5030:
  8633  002ACA  0E00               	movlw	0
  8634  002ACC  6E01               	movwf	?___xxtofl^0,c
  8635  002ACE  0E00               	movlw	0
  8636  002AD0  6E02               	movwf	(?___xxtofl+1)^0,c
  8637  002AD2  0E00               	movlw	0
  8638  002AD4  6E03               	movwf	(?___xxtofl+2)^0,c
  8639  002AD6  0E00               	movlw	0
  8640  002AD8  6E04               	movwf	(?___xxtofl+3)^0,c
  8641  002ADA  EF00  F016         	goto	l1025
  8642  002ADE                     l4186:
  8643  002ADE  0E96               	movlw	150
  8644  002AE0  6E0A               	movwf	___xxtofl@exp^0,c
  8645  002AE2  EF79  F015         	goto	l4190
  8646  002AE6                     l4188:
  8647  002AE6  2A0A               	incf	___xxtofl@exp^0,f,c
  8648  002AE8  90D8               	bcf	status,0,c
  8649  002AEA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8650  002AEC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8651  002AEE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8652  002AF0  320B               	rrcf	___xxtofl@arg^0,f,c
  8653  002AF2                     l4190:
  8654  002AF2  0E00               	movlw	0
  8655  002AF4  140B               	andwf	___xxtofl@arg^0,w,c
  8656  002AF6  6E05               	movwf	??___xxtofl^0,c
  8657  002AF8  0E00               	movlw	0
  8658  002AFA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8659  002AFC  6E06               	movwf	(??___xxtofl+1)^0,c
  8660  002AFE  0E00               	movlw	0
  8661  002B00  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8662  002B02  6E07               	movwf	(??___xxtofl+2)^0,c
  8663  002B04  0EFE               	movlw	254
  8664  002B06  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8665  002B08  6E08               	movwf	(??___xxtofl+3)^0,c
  8666  002B0A  5005               	movf	??___xxtofl^0,w,c
  8667  002B0C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8668  002B0E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8669  002B10  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8670  002B12  A4D8               	btfss	status,2,c
  8671  002B14  EF8E  F015         	goto	u5041
  8672  002B18  EF90  F015         	goto	u5040
  8673  002B1C                     u5041:
  8674  002B1C  EF73  F015         	goto	l4188
  8675  002B20                     u5040:
  8676  002B20  EF9E  F015         	goto	l1029
  8677  002B24                     l4192:
  8678  002B24  2A0A               	incf	___xxtofl@exp^0,f,c
  8679  002B26  0E01               	movlw	1
  8680  002B28  260B               	addwf	___xxtofl@arg^0,f,c
  8681  002B2A  0E00               	movlw	0
  8682  002B2C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8683  002B2E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8684  002B30  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8685  002B32  90D8               	bcf	status,0,c
  8686  002B34  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8687  002B36  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8688  002B38  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8689  002B3A  320B               	rrcf	___xxtofl@arg^0,f,c
  8690  002B3C                     l1029:
  8691  002B3C  0E00               	movlw	0
  8692  002B3E  140B               	andwf	___xxtofl@arg^0,w,c
  8693  002B40  6E05               	movwf	??___xxtofl^0,c
  8694  002B42  0E00               	movlw	0
  8695  002B44  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8696  002B46  6E06               	movwf	(??___xxtofl+1)^0,c
  8697  002B48  0E00               	movlw	0
  8698  002B4A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8699  002B4C  6E07               	movwf	(??___xxtofl+2)^0,c
  8700  002B4E  0EFF               	movlw	255
  8701  002B50  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8702  002B52  6E08               	movwf	(??___xxtofl+3)^0,c
  8703  002B54  5005               	movf	??___xxtofl^0,w,c
  8704  002B56  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8705  002B58  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8706  002B5A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8707  002B5C  A4D8               	btfss	status,2,c
  8708  002B5E  EFB3  F015         	goto	u5051
  8709  002B62  EFB5  F015         	goto	u5050
  8710  002B66                     u5051:
  8711  002B66  EF92  F015         	goto	l4192
  8712  002B6A                     u5050:
  8713  002B6A  EFBD  F015         	goto	l4200
  8714  002B6E                     l4198:
  8715  002B6E  060A               	decf	___xxtofl@exp^0,f,c
  8716  002B70  90D8               	bcf	status,0,c
  8717  002B72  360B               	rlcf	___xxtofl@arg^0,f,c
  8718  002B74  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8719  002B76  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8720  002B78  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8721  002B7A                     l4200:
  8722  002B7A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8723  002B7C  EFC2  F015         	goto	u5061
  8724  002B80  EFC4  F015         	goto	u5060
  8725  002B84                     u5061:
  8726  002B84  EFCC  F015         	goto	l1036
  8727  002B88                     u5060:
  8728  002B88  0E02               	movlw	2
  8729  002B8A  600A               	cpfslt	___xxtofl@exp^0,c
  8730  002B8C  EFCA  F015         	goto	u5071
  8731  002B90  EFCC  F015         	goto	u5070
  8732  002B94                     u5071:
  8733  002B94  EFB7  F015         	goto	l4198
  8734  002B98                     u5070:
  8735  002B98                     l1036:
  8736  002B98  B00A               	btfsc	___xxtofl@exp^0,0,c
  8737  002B9A  EFD1  F015         	goto	u5081
  8738  002B9E  EFD3  F015         	goto	u5080
  8739  002BA2                     u5081:
  8740  002BA2  EFD4  F015         	goto	l4206
  8741  002BA6                     u5080:
  8742  002BA6  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8743  002BA8                     l4206:
  8744  002BA8  90D8               	bcf	status,0,c
  8745  002BAA  320A               	rrcf	___xxtofl@exp^0,f,c
  8746  002BAC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8747  002BB0  6A06               	clrf	(??___xxtofl+1)^0,c
  8748  002BB2  6A07               	clrf	(??___xxtofl+2)^0,c
  8749  002BB4  6A08               	clrf	(??___xxtofl+3)^0,c
  8750  002BB6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8751  002BBA  6A07               	clrf	(??___xxtofl+2)^0,c
  8752  002BBC  6A06               	clrf	(??___xxtofl+1)^0,c
  8753  002BBE  6A05               	clrf	??___xxtofl^0,c
  8754  002BC0  5005               	movf	??___xxtofl^0,w,c
  8755  002BC2  120B               	iorwf	___xxtofl@arg^0,f,c
  8756  002BC4  5006               	movf	(??___xxtofl+1)^0,w,c
  8757  002BC6  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8758  002BC8  5007               	movf	(??___xxtofl+2)^0,w,c
  8759  002BCA  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8760  002BCC  5008               	movf	(??___xxtofl+3)^0,w,c
  8761  002BCE  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8762  002BD0  5009               	movf	___xxtofl@sign^0,w,c
  8763  002BD2  B4D8               	btfsc	status,2,c
  8764  002BD4  EFEE  F015         	goto	u5091
  8765  002BD8  EFF0  F015         	goto	u5090
  8766  002BDC                     u5091:
  8767  002BDC  EFF8  F015         	goto	l4216
  8768  002BE0                     u5090:
  8769  002BE0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8770  002BE2  EFF7  F015         	goto	u5100
  8771  002BE6  EFF5  F015         	goto	u5101
  8772  002BEA                     u5101:
  8773  002BEA  EFF8  F015         	goto	l4216
  8774  002BEE                     u5100:
  8775  002BEE  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8776  002BF0                     l4216:
  8777  002BF0  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8778  002BF4  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8779  002BF8  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8780  002BFC  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8781  002C00                     l1025:
  8782  002C00  0012               	return		;funcret
  8783  002C02                     __end_of___xxtofl:
  8784                           	opt callstack 0
  8785                           
  8786 ;; *************** function _setup *****************
  8787 ;; Defined at:
  8788 ;;		line 72 in file "pinconfig.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;		None
  8791 ;; Auto vars:     Size  Location     Type
  8792 ;;		None
  8793 ;; Return value:  Size  Location     Type
  8794 ;;                  1    wreg      void 
  8795 ;; Registers used:
  8796 ;;		wreg, status,2, status,0, cstack
  8797 ;; Tracked objects:
  8798 ;;		On entry : 0/0
  8799 ;;		On exit  : 0/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8802 ;;      Params:         0       0       0       0       0       0       0       0       0
  8803 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8805 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8806 ;;Total ram usage:        0 bytes
  8807 ;; Hardware stack levels used:    1
  8808 ;; Hardware stack levels required when called:    4
  8809 ;; This function calls:
  8810 ;;		_configureIRQ
  8811 ;;		_configurePins
  8812 ;;		_inicializa_lcd
  8813 ;;		_initTimer
  8814 ;;		_limpa_lcd
  8815 ;; This function is called by:
  8816 ;;		_main
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820                           	psect	text36
  8821  003C5A                     __ptext36:
  8822                           	opt callstack 0
  8823  003C5A                     _setup:
  8824                           	opt callstack 26
  8825  003C5A                     
  8826                           ;pinconfig.c: 74:     PORTCbits.RC0 = 0;
  8827  003C5A  9082               	bcf	130,0,c	;volatile
  8828                           
  8829                           ;pinconfig.c: 75:     PORTCbits.RC1 = 0;
  8830  003C5C  9282               	bcf	130,1,c	;volatile
  8831                           
  8832                           ;pinconfig.c: 76:     PORTCbits.RC2 = 0;
  8833  003C5E  9482               	bcf	130,2,c	;volatile
  8834                           
  8835                           ;pinconfig.c: 77:     PORTDbits.RD2 = 0;
  8836  003C60  9483               	bcf	131,2,c	;volatile
  8837  003C62                     
  8838                           ;pinconfig.c: 79:     configurePins();
  8839  003C62  EC0B  F01E         	call	_configurePins	;wreg free
  8840  003C66                     
  8841                           ;pinconfig.c: 80:     configureIRQ();
  8842  003C66  EC1C  F01E         	call	_configureIRQ	;wreg free
  8843  003C6A                     
  8844                           ;pinconfig.c: 82:     inicializa_lcd();
  8845  003C6A  ECBC  F01B         	call	_inicializa_lcd	;wreg free
  8846  003C6E                     
  8847                           ;pinconfig.c: 83:     limpa_lcd();
  8848  003C6E  EC3C  F01E         	call	_limpa_lcd	;wreg free
  8849  003C72                     
  8850                           ;pinconfig.c: 84:     initTimer();
  8851  003C72  EC49  F01E         	call	_initTimer	;wreg free
  8852  003C76  0012               	return		;funcret
  8853  003C78                     __end_of_setup:
  8854                           	opt callstack 0
  8855                           
  8856 ;; *************** function _limpa_lcd *****************
  8857 ;; Defined at:
  8858 ;;		line 26 in file "lcd.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;		None
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  1    wreg      void 
  8865 ;; Registers used:
  8866 ;;		wreg, status,2, status,0, cstack
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8872 ;;      Params:         0       0       0       0       0       0       0       0       0
  8873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8874 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8875 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8876 ;;Total ram usage:        1 bytes
  8877 ;; Hardware stack levels used:    1
  8878 ;; Hardware stack levels required when called:    3
  8879 ;; This function calls:
  8880 ;;		_envia_byte_lcd
  8881 ;; This function is called by:
  8882 ;;		_setup
  8883 ;;		_displayPlayers
  8884 ;;		_reset
  8885 ;;		_stateMachine
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889                           	psect	text37
  8890  003C78                     __ptext37:
  8891                           	opt callstack 0
  8892  003C78                     _limpa_lcd:
  8893                           	opt callstack 25
  8894  003C78                     
  8895                           ;lcd.c: 28:   envia_byte_lcd(0, 0x01);
  8896  003C78  0E01               	movlw	1
  8897  003C7A  6E03               	movwf	envia_byte_lcd@dado^0,c
  8898  003C7C  0E00               	movlw	0
  8899  003C7E  ECF9  F01D         	call	_envia_byte_lcd
  8900  003C82                     
  8901                           ;lcd.c: 29:   _delay((unsigned long)((2)*(4000000/4000.0)));
  8902  003C82  0E03               	movlw	3
  8903  003C84  6E05               	movwf	??_limpa_lcd^0,c
  8904  003C86  0E98               	movlw	152
  8905  003C88                     u5327:
  8906  003C88  2EE8               	decfsz	wreg,f,c
  8907  003C8A  D7FE               	bra	u5327
  8908  003C8C  2E05               	decfsz	??_limpa_lcd^0,f,c
  8909  003C8E  D7FC               	bra	u5327
  8910  003C90  0012               	return		;funcret
  8911  003C92                     __end_of_limpa_lcd:
  8912                           	opt callstack 0
  8913                           
  8914 ;; *************** function _initTimer *****************
  8915 ;; Defined at:
  8916 ;;		line 54 in file "pinconfig.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;		None
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;		None
  8921 ;; Return value:  Size  Location     Type
  8922 ;;                  1    wreg      void 
  8923 ;; Registers used:
  8924 ;;		wreg, status,2
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8930 ;;      Params:         0       0       0       0       0       0       0       0       0
  8931 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8932 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8933 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8934 ;;Total ram usage:        0 bytes
  8935 ;; Hardware stack levels used:    1
  8936 ;; Hardware stack levels required when called:    1
  8937 ;; This function calls:
  8938 ;;		Nothing
  8939 ;; This function is called by:
  8940 ;;		_setup
  8941 ;; This function uses a non-reentrant model
  8942 ;;
  8943                           
  8944                           	psect	text38
  8945  003C92                     __ptext38:
  8946                           	opt callstack 0
  8947  003C92                     _initTimer:
  8948                           	opt callstack 28
  8949  003C92                     
  8950                           ;pinconfig.c: 56:     T2CONbits.T2CKPS1 = 0;
  8951  003C92  92CA               	bcf	202,1,c	;volatile
  8952                           
  8953                           ;pinconfig.c: 57:     T2CONbits.T2CKPS0 = 1;
  8954  003C94  80CA               	bsf	202,0,c	;volatile
  8955  003C96                     
  8956                           ;pinconfig.c: 58:     PR2 = 250;
  8957  003C96  0EFA               	movlw	250
  8958  003C98  6ECB               	movwf	203,c	;volatile
  8959  003C9A                     
  8960                           ;pinconfig.c: 60:     T2CONbits.T2OUTPS3 = 1;
  8961  003C9A  8CCA               	bsf	202,6,c	;volatile
  8962  003C9C                     
  8963                           ;pinconfig.c: 61:     T2CONbits.T2OUTPS2 = 0;
  8964  003C9C  9ACA               	bcf	202,5,c	;volatile
  8965  003C9E                     
  8966                           ;pinconfig.c: 62:     T2CONbits.T2OUTPS1 = 0;
  8967  003C9E  98CA               	bcf	202,4,c	;volatile
  8968  003CA0                     
  8969                           ;pinconfig.c: 63:     T2CONbits.T2OUTPS0 = 1;
  8970  003CA0  86CA               	bsf	202,3,c	;volatile
  8971  003CA2                     
  8972                           ;pinconfig.c: 65:     TMR2IE = 1;
  8973  003CA2  829D               	bsf	3997,1,c	;volatile
  8974  003CA4                     
  8975                           ;pinconfig.c: 66:     TMR2IF = 0;
  8976  003CA4  929E               	bcf	3998,1,c	;volatile
  8977  003CA6                     
  8978                           ;pinconfig.c: 68:     T2CONbits.TMR2ON = 1;
  8979  003CA6  84CA               	bsf	202,2,c	;volatile
  8980  003CA8  0012               	return		;funcret
  8981  003CAA                     __end_of_initTimer:
  8982                           	opt callstack 0
  8983                           
  8984 ;; *************** function _inicializa_lcd *****************
  8985 ;; Defined at:
  8986 ;;		line 32 in file "lcd.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;		None
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;		None
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  1    wreg      void 
  8993 ;; Registers used:
  8994 ;;		wreg, status,2, status,0, cstack
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/0
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9000 ;;      Params:         0       0       0       0       0       0       0       0       0
  9001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9002 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9003 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9004 ;;Total ram usage:        1 bytes
  9005 ;; Hardware stack levels used:    1
  9006 ;; Hardware stack levels required when called:    3
  9007 ;; This function calls:
  9008 ;;		_envia_byte_lcd
  9009 ;;		_envia_nibble_lcd
  9010 ;; This function is called by:
  9011 ;;		_setup
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           	psect	text39
  9016  003778                     __ptext39:
  9017                           	opt callstack 0
  9018  003778                     _inicializa_lcd:
  9019                           	opt callstack 26
  9020  003778                     
  9021                           ;lcd.c: 34:   PORTDbits.RD1 = 0;
  9022  003778  9283               	bcf	131,1,c	;volatile
  9023                           
  9024                           ;lcd.c: 35:   PORTDbits.RD4 = 0;
  9025  00377A  9883               	bcf	131,4,c	;volatile
  9026                           
  9027                           ;lcd.c: 36:   PORTDbits.RD5 = 0;
  9028  00377C  9A83               	bcf	131,5,c	;volatile
  9029                           
  9030                           ;lcd.c: 37:   PORTDbits.RD6 = 0;
  9031  00377E  9C83               	bcf	131,6,c	;volatile
  9032                           
  9033                           ;lcd.c: 38:   PORTDbits.RD7 = 0;
  9034  003780  9E83               	bcf	131,7,c	;volatile
  9035  003782                     
  9036                           ;lcd.c: 40:   _delay((unsigned long)((50)*(4000000/4000.0)));
  9037  003782  0E41               	movlw	65
  9038  003784  6E05               	movwf	??_inicializa_lcd^0,c
  9039  003786  0EEE               	movlw	238
  9040  003788                     u5337:
  9041  003788  2EE8               	decfsz	wreg,f,c
  9042  00378A  D7FE               	bra	u5337
  9043  00378C  2E05               	decfsz	??_inicializa_lcd^0,f,c
  9044  00378E  D7FC               	bra	u5337
  9045  003790  D000               	nop2	
  9046  003792                     
  9047                           ;lcd.c: 41:   envia_nibble_lcd(0x03);
  9048  003792  0E03               	movlw	3
  9049  003794  EC78  F01B         	call	_envia_nibble_lcd
  9050  003798                     
  9051                           ;lcd.c: 42:   _delay((unsigned long)((4)*(4000000/4000.0)));
  9052  003798  0E06               	movlw	6
  9053  00379A  6E05               	movwf	??_inicializa_lcd^0,c
  9054  00379C  0E30               	movlw	48
  9055  00379E                     u5347:
  9056  00379E  2EE8               	decfsz	wreg,f,c
  9057  0037A0  D7FE               	bra	u5347
  9058  0037A2  2E05               	decfsz	??_inicializa_lcd^0,f,c
  9059  0037A4  D7FC               	bra	u5347
  9060  0037A6  D000               	nop2	
  9061                           
  9062                           ;lcd.c: 43:   envia_nibble_lcd(0x03);
  9063  0037A8  0E03               	movlw	3
  9064  0037AA  EC78  F01B         	call	_envia_nibble_lcd
  9065  0037AE                     
  9066                           ;lcd.c: 44:   _delay((unsigned long)((100)*(4000000/4000000.0)));
  9067  0037AE  0E21               	movlw	33
  9068  0037B0                     u5357:
  9069  0037B0  2EE8               	decfsz	wreg,f,c
  9070  0037B2  D7FE               	bra	u5357
  9071  0037B4  F000               	nop	
  9072  0037B6                     
  9073                           ;lcd.c: 45:   envia_nibble_lcd(0x03);
  9074  0037B6  0E03               	movlw	3
  9075  0037B8  EC78  F01B         	call	_envia_nibble_lcd
  9076  0037BC                     
  9077                           ;lcd.c: 47:   envia_nibble_lcd(0x02);
  9078  0037BC  0E02               	movlw	2
  9079  0037BE  EC78  F01B         	call	_envia_nibble_lcd
  9080  0037C2                     
  9081                           ;lcd.c: 49:   envia_byte_lcd(0, 0x01);
  9082  0037C2  0E01               	movlw	1
  9083  0037C4  6E03               	movwf	envia_byte_lcd@dado^0,c
  9084  0037C6  0E00               	movlw	0
  9085  0037C8  ECF9  F01D         	call	_envia_byte_lcd
  9086                           
  9087                           ;lcd.c: 50:   _delay((unsigned long)((2)*(4000000/4000.0)));
  9088  0037CC  0E03               	movlw	3
  9089  0037CE  6E05               	movwf	??_inicializa_lcd^0,c
  9090  0037D0  0E98               	movlw	152
  9091  0037D2                     u5367:
  9092  0037D2  2EE8               	decfsz	wreg,f,c
  9093  0037D4  D7FE               	bra	u5367
  9094  0037D6  2E05               	decfsz	??_inicializa_lcd^0,f,c
  9095  0037D8  D7FC               	bra	u5367
  9096  0037DA                     
  9097                           ;lcd.c: 52:   envia_byte_lcd(0, 0x28);
  9098  0037DA  0E28               	movlw	40
  9099  0037DC  6E03               	movwf	envia_byte_lcd@dado^0,c
  9100  0037DE  0E00               	movlw	0
  9101  0037E0  ECF9  F01D         	call	_envia_byte_lcd
  9102  0037E4                     
  9103                           ;lcd.c: 54:   envia_byte_lcd(0, 0x0c);
  9104  0037E4  0E0C               	movlw	12
  9105  0037E6  6E03               	movwf	envia_byte_lcd@dado^0,c
  9106  0037E8  0E00               	movlw	0
  9107  0037EA  ECF9  F01D         	call	_envia_byte_lcd
  9108  0037EE                     
  9109                           ;lcd.c: 56:   envia_byte_lcd(0, 0x06);
  9110  0037EE  0E06               	movlw	6
  9111  0037F0  6E03               	movwf	envia_byte_lcd@dado^0,c
  9112  0037F2  0E00               	movlw	0
  9113  0037F4  ECF9  F01D         	call	_envia_byte_lcd
  9114  0037F8  0012               	return		;funcret
  9115  0037FA                     __end_of_inicializa_lcd:
  9116                           	opt callstack 0
  9117                           
  9118 ;; *************** function _envia_byte_lcd *****************
  9119 ;; Defined at:
  9120 ;;		line 16 in file "lcd.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;  endereco        1    wreg     unsigned char 
  9123 ;;  dado            1    2[COMRAM] unsigned char 
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;  endereco        1    3[COMRAM] unsigned char 
  9126 ;; Return value:  Size  Location     Type
  9127 ;;                  1    wreg      void 
  9128 ;; Registers used:
  9129 ;;		wreg, status,2, status,0, cstack
  9130 ;; Tracked objects:
  9131 ;;		On entry : 0/0
  9132 ;;		On exit  : 0/0
  9133 ;;		Unchanged: 0/0
  9134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9135 ;;      Params:         1       0       0       0       0       0       0       0       0
  9136 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9138 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9139 ;;Total ram usage:        2 bytes
  9140 ;; Hardware stack levels used:    1
  9141 ;; Hardware stack levels required when called:    2
  9142 ;; This function calls:
  9143 ;;		_envia_nibble_lcd
  9144 ;; This function is called by:
  9145 ;;		_escreve_lcd
  9146 ;;		_limpa_lcd
  9147 ;;		_inicializa_lcd
  9148 ;;		_caracter_inicio
  9149 ;; This function uses a non-reentrant model
  9150 ;;
  9151                           
  9152                           	psect	text40
  9153  003BF2                     __ptext40:
  9154                           	opt callstack 0
  9155  003BF2                     _envia_byte_lcd:
  9156                           	opt callstack 20
  9157                           
  9158                           ;incstack = 0
  9159                           ;envia_byte_lcd@endereco stored from wreg
  9160  003BF2  6E04               	movwf	envia_byte_lcd@endereco^0,c
  9161  003BF4                     
  9162                           ;lcd.c: 16: void envia_byte_lcd(char endereco, char dado);lcd.c: 17: {;lcd.c: 18:   PORT
      +                          Dbits.RD0 = endereco;
  9163  003BF4  B004               	btfsc	envia_byte_lcd@endereco^0,0,c
  9164  003BF6  D002               	bra	u2665
  9165  003BF8  9083               	bcf	131,0,c	;volatile
  9166  003BFA  D001               	bra	u2666
  9167  003BFC                     u2665:
  9168  003BFC  8083               	bsf	131,0,c	;volatile
  9169  003BFE                     u2666:
  9170  003BFE                     
  9171                           ;lcd.c: 19:   _delay((unsigned long)((5)*(4000000/4000000.0)));
  9172  003BFE  D000               	nop2		;2 cycle nop
  9173  003C00  D000               	nop2		;2 cycle nop
  9174  003C02  F000               	nop	
  9175  003C04                     
  9176                           ;lcd.c: 20:   envia_nibble_lcd(dado >> 4);
  9177  003C04  3803               	swapf	envia_byte_lcd@dado^0,w,c
  9178  003C06  0B0F               	andlw	15
  9179  003C08  EC78  F01B         	call	_envia_nibble_lcd
  9180  003C0C                     
  9181                           ;lcd.c: 21:   envia_nibble_lcd(dado & 0x0f);
  9182  003C0C  5003               	movf	envia_byte_lcd@dado^0,w,c
  9183  003C0E  0B0F               	andlw	15
  9184  003C10  EC78  F01B         	call	_envia_nibble_lcd
  9185  003C14  0012               	return		;funcret
  9186  003C16                     __end_of_envia_byte_lcd:
  9187                           	opt callstack 0
  9188                           
  9189 ;; *************** function _envia_nibble_lcd *****************
  9190 ;; Defined at:
  9191 ;;		line 3 in file "lcd.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;  dado            1    wreg     unsigned char 
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;  dado            1    1[COMRAM] unsigned char 
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  1    wreg      void 
  9198 ;; Registers used:
  9199 ;;		wreg, status,2, status,0
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9205 ;;      Params:         0       0       0       0       0       0       0       0       0
  9206 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9207 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9208 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9209 ;;Total ram usage:        2 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; Hardware stack levels required when called:    1
  9212 ;; This function calls:
  9213 ;;		Nothing
  9214 ;; This function is called by:
  9215 ;;		_envia_byte_lcd
  9216 ;;		_inicializa_lcd
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           	psect	text41
  9221  0036F0                     __ptext41:
  9222                           	opt callstack 0
  9223  0036F0                     _envia_nibble_lcd:
  9224                           	opt callstack 20
  9225                           
  9226                           ;incstack = 0
  9227                           ;envia_nibble_lcd@dado stored from wreg
  9228  0036F0  6E02               	movwf	envia_nibble_lcd@dado^0,c
  9229  0036F2                     
  9230                           ;lcd.c: 3: void envia_nibble_lcd(char dado);lcd.c: 4: {;lcd.c: 5:   PORTDbits.RD1 = 1;
  9231  0036F2  8283               	bsf	131,1,c	;volatile
  9232  0036F4                     
  9233                           ;lcd.c: 6:   PORTDbits.RD4 = dado & 0x01;
  9234  0036F4  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  9235  0036F8  0E01               	movlw	1
  9236  0036FA  1601               	andwf	??_envia_nibble_lcd^0,f,c
  9237  0036FC  3A01               	swapf	??_envia_nibble_lcd^0,f,c
  9238  0036FE  5083               	movf	131,w,c	;volatile
  9239  003700  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9240  003702  0BEF               	andlw	-17
  9241  003704  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9242  003706  6E83               	movwf	131,c	;volatile
  9243                           
  9244                           ;lcd.c: 7:   PORTDbits.RD5 = (dado >> 1) & 0x01;
  9245  003708  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  9246  00370C  90D8               	bcf	status,0,c
  9247  00370E  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9248  003710  0E01               	movlw	1
  9249  003712  1601               	andwf	??_envia_nibble_lcd^0,f,c
  9250  003714  3A01               	swapf	??_envia_nibble_lcd^0,f,c
  9251  003716  4601               	rlncf	??_envia_nibble_lcd^0,f,c
  9252  003718  5083               	movf	131,w,c	;volatile
  9253  00371A  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9254  00371C  0BDF               	andlw	-33
  9255  00371E  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9256  003720  6E83               	movwf	131,c	;volatile
  9257                           
  9258                           ;lcd.c: 8:   PORTDbits.RD6 = (dado >> 2) & 0x01;
  9259  003722  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  9260  003726  90D8               	bcf	status,0,c
  9261  003728  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9262  00372A  90D8               	bcf	status,0,c
  9263  00372C  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9264  00372E  0E01               	movlw	1
  9265  003730  1601               	andwf	??_envia_nibble_lcd^0,f,c
  9266  003732  3A01               	swapf	??_envia_nibble_lcd^0,f,c
  9267  003734  4601               	rlncf	??_envia_nibble_lcd^0,f,c
  9268  003736  4601               	rlncf	??_envia_nibble_lcd^0,f,c
  9269  003738  5083               	movf	131,w,c	;volatile
  9270  00373A  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9271  00373C  0BBF               	andlw	-65
  9272  00373E  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9273  003740  6E83               	movwf	131,c	;volatile
  9274                           
  9275                           ;lcd.c: 9:   PORTDbits.RD7 = (dado >> 3) & 0x01;
  9276  003742  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  9277  003746  90D8               	bcf	status,0,c
  9278  003748  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9279  00374A  90D8               	bcf	status,0,c
  9280  00374C  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9281  00374E  90D8               	bcf	status,0,c
  9282  003750  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9283  003752  0E01               	movlw	1
  9284  003754  1601               	andwf	??_envia_nibble_lcd^0,f,c
  9285  003756  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9286  003758  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9287  00375A  5083               	movf	131,w,c	;volatile
  9288  00375C  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9289  00375E  0B7F               	andlw	-129
  9290  003760  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9291  003762  6E83               	movwf	131,c	;volatile
  9292  003764                     
  9293                           ;lcd.c: 11:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  9294  003764  0E10               	movlw	16
  9295  003766                     u5377:
  9296  003766  2EE8               	decfsz	wreg,f,c
  9297  003768  D7FE               	bra	u5377
  9298  00376A  D000               	nop2	
  9299  00376C                     
  9300                           ;lcd.c: 12:   PORTDbits.RD1 = 0;
  9301  00376C  9283               	bcf	131,1,c	;volatile
  9302  00376E                     
  9303                           ;lcd.c: 13:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  9304  00376E  0E10               	movlw	16
  9305  003770                     u5387:
  9306  003770  2EE8               	decfsz	wreg,f,c
  9307  003772  D7FE               	bra	u5387
  9308  003774  D000               	nop2	
  9309  003776  0012               	return		;funcret
  9310  003778                     __end_of_envia_nibble_lcd:
  9311                           	opt callstack 0
  9312                           
  9313 ;; *************** function _configurePins *****************
  9314 ;; Defined at:
  9315 ;;		line 5 in file "pinconfig.c"
  9316 ;; Parameters:    Size  Location     Type
  9317 ;;		None
  9318 ;; Auto vars:     Size  Location     Type
  9319 ;;		None
  9320 ;; Return value:  Size  Location     Type
  9321 ;;                  1    wreg      void 
  9322 ;; Registers used:
  9323 ;;		None
  9324 ;; Tracked objects:
  9325 ;;		On entry : 0/0
  9326 ;;		On exit  : 0/0
  9327 ;;		Unchanged: 0/0
  9328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9329 ;;      Params:         0       0       0       0       0       0       0       0       0
  9330 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9331 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9332 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9333 ;;Total ram usage:        0 bytes
  9334 ;; Hardware stack levels used:    1
  9335 ;; Hardware stack levels required when called:    1
  9336 ;; This function calls:
  9337 ;;		Nothing
  9338 ;; This function is called by:
  9339 ;;		_setup
  9340 ;; This function uses a non-reentrant model
  9341 ;;
  9342                           
  9343                           	psect	text42
  9344  003C16                     __ptext42:
  9345                           	opt callstack 0
  9346  003C16                     _configurePins:
  9347                           	opt callstack 28
  9348  003C16                     
  9349                           ;pinconfig.c: 7:     TRISCbits.RC0 = 0;
  9350  003C16  9094               	bcf	148,0,c	;volatile
  9351                           
  9352                           ;pinconfig.c: 8:     TRISCbits.RC1 = 0;
  9353  003C18  9294               	bcf	148,1,c	;volatile
  9354                           
  9355                           ;pinconfig.c: 9:     TRISCbits.RC2 = 0;
  9356  003C1A  9494               	bcf	148,2,c	;volatile
  9357                           
  9358                           ;pinconfig.c: 11:     TRISBbits.RB0 = 1;
  9359  003C1C  8093               	bsf	147,0,c	;volatile
  9360                           
  9361                           ;pinconfig.c: 12:     TRISBbits.RB1 = 1;
  9362  003C1E  8293               	bsf	147,1,c	;volatile
  9363                           
  9364                           ;pinconfig.c: 13:     TRISBbits.RB2 = 1;
  9365  003C20  8493               	bsf	147,2,c	;volatile
  9366                           
  9367                           ;pinconfig.c: 15:     TRISBbits.TRISB0 = 1;
  9368  003C22  8093               	bsf	147,0,c	;volatile
  9369                           
  9370                           ;pinconfig.c: 16:     TRISBbits.TRISB1 = 1;
  9371  003C24  8293               	bsf	147,1,c	;volatile
  9372                           
  9373                           ;pinconfig.c: 17:     TRISBbits.TRISB2 = 1;
  9374  003C26  8493               	bsf	147,2,c	;volatile
  9375                           
  9376                           ;pinconfig.c: 19:     TRISDbits.RD0 = 0;
  9377  003C28  9095               	bcf	149,0,c	;volatile
  9378                           
  9379                           ;pinconfig.c: 20:     TRISDbits.RD1 = 0;
  9380  003C2A  9295               	bcf	149,1,c	;volatile
  9381                           
  9382                           ;pinconfig.c: 22:     TRISDbits.RD4 = 0;
  9383  003C2C  9895               	bcf	149,4,c	;volatile
  9384                           
  9385                           ;pinconfig.c: 23:     TRISDbits.RD5 = 0;
  9386  003C2E  9A95               	bcf	149,5,c	;volatile
  9387                           
  9388                           ;pinconfig.c: 24:     TRISDbits.RD6 = 0;
  9389  003C30  9C95               	bcf	149,6,c	;volatile
  9390                           
  9391                           ;pinconfig.c: 25:     TRISDbits.RD7 = 0;
  9392  003C32  9E95               	bcf	149,7,c	;volatile
  9393                           
  9394                           ;pinconfig.c: 27:     TRISDbits.RD2 = 0;
  9395  003C34  9495               	bcf	149,2,c	;volatile
  9396  003C36  0012               	return		;funcret
  9397  003C38                     __end_of_configurePins:
  9398                           	opt callstack 0
  9399                           
  9400 ;; *************** function _configureIRQ *****************
  9401 ;; Defined at:
  9402 ;;		line 31 in file "pinconfig.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;		None
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;		None
  9407 ;; Return value:  Size  Location     Type
  9408 ;;                  1    wreg      void 
  9409 ;; Registers used:
  9410 ;;		wreg, status,2
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9416 ;;      Params:         0       0       0       0       0       0       0       0       0
  9417 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9418 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9419 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9420 ;;Total ram usage:        0 bytes
  9421 ;; Hardware stack levels used:    1
  9422 ;; Hardware stack levels required when called:    1
  9423 ;; This function calls:
  9424 ;;		Nothing
  9425 ;; This function is called by:
  9426 ;;		_setup
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430                           	psect	text43
  9431  003C38                     __ptext43:
  9432                           	opt callstack 0
  9433  003C38                     _configureIRQ:
  9434                           	opt callstack 28
  9435  003C38                     
  9436                           ;pinconfig.c: 33:     ADIE = 0;
  9437  003C38  9C9D               	bcf	3997,6,c	;volatile
  9438                           
  9439                           ;pinconfig.c: 34:     PEIE = 1;
  9440  003C3A  8CF2               	bsf	4082,6,c	;volatile
  9441                           
  9442                           ;pinconfig.c: 35:     (INTCONbits.GIE = 1);
  9443  003C3C  8EF2               	bsf	242,7,c	;volatile
  9444  003C3E                     
  9445                           ;pinconfig.c: 37:     INTCON2 = 0x00;
  9446  003C3E  0E00               	movlw	0
  9447  003C40  6EF1               	movwf	241,c	;volatile
  9448                           
  9449                           ;pinconfig.c: 38:     INTCON3 = 0x00;
  9450  003C42  0E00               	movlw	0
  9451  003C44  6EF0               	movwf	240,c	;volatile
  9452  003C46                     
  9453                           ;pinconfig.c: 40:     INTCONbits.INT0IF = 0;
  9454  003C46  92F2               	bcf	242,1,c	;volatile
  9455  003C48                     
  9456                           ;pinconfig.c: 41:     INTCONbits.INT0IE = 1;
  9457  003C48  88F2               	bsf	242,4,c	;volatile
  9458  003C4A                     
  9459                           ;pinconfig.c: 43:     INTCON3bits.INT1F = 0;
  9460  003C4A  90F0               	bcf	240,0,c	;volatile
  9461  003C4C                     
  9462                           ;pinconfig.c: 44:     INTCON3bits.INT1E = 1;
  9463  003C4C  86F0               	bsf	240,3,c	;volatile
  9464  003C4E                     
  9465                           ;pinconfig.c: 46:     INTCON3bits.INT2F = 0;
  9466  003C4E  92F0               	bcf	240,1,c	;volatile
  9467  003C50                     
  9468                           ;pinconfig.c: 47:     INTCON3bits.INT2E = 1;
  9469  003C50  88F0               	bsf	240,4,c	;volatile
  9470  003C52                     
  9471                           ;pinconfig.c: 49:     INTCON3bits.INT1IF = 0;
  9472  003C52  90F0               	bcf	240,0,c	;volatile
  9473  003C54                     
  9474                           ;pinconfig.c: 50:     INTCON3bits.INT2IF = 0;
  9475  003C54  92F0               	bcf	240,1,c	;volatile
  9476  003C56                     
  9477                           ;pinconfig.c: 51:     INTCONbits.GIE = 1;
  9478  003C56  8EF2               	bsf	242,7,c	;volatile
  9479  003C58  0012               	return		;funcret
  9480  003C5A                     __end_of_configureIRQ:
  9481                           	opt callstack 0
  9482                           
  9483 ;; *************** function _isr *****************
  9484 ;; Defined at:
  9485 ;;		line 24 in file "main.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;		None
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;		None
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      void 
  9492 ;; Registers used:
  9493 ;;		wreg, status,2, status,0
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9499 ;;      Params:         0       0       0       0       0       0       0       0       0
  9500 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9502 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9503 ;;Total ram usage:        0 bytes
  9504 ;; Hardware stack levels used:    1
  9505 ;; This function calls:
  9506 ;;		Nothing
  9507 ;; This function is called by:
  9508 ;;		Interrupt level 2
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           
  9512                           	psect	intcode
  9513  000008                     __pintcode:
  9514                           	opt callstack 0
  9515  000008                     _isr:
  9516                           	opt callstack 17
  9517                           
  9518                           ;incstack = 0
  9519  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9520  00000A  ED25  F01A         	call	int_func,f	;refresh shadow registers
  9521                           
  9522                           	psect	intcode_body
  9523  00344A                     __pintcode_body:
  9524                           	opt callstack 17
  9525  00344A                     int_func:
  9526                           	opt callstack 17
  9527  00344A  0006               	pop		; remove dummy address from shadow register refresh
  9528  00344C                     
  9529                           ;main.c: 26:     if(INTCONbits.INT0IF){
  9530  00344C  A2F2               	btfss	242,1,c	;volatile
  9531  00344E  EF2B  F01A         	goto	i2u525_41
  9532  003452  EF2D  F01A         	goto	i2u525_40
  9533  003456                     i2u525_41:
  9534  003456  EF45  F01A         	goto	i2l50
  9535  00345A                     i2u525_40:
  9536  00345A                     
  9537                           ;main.c: 27:         if(currentState == 0xf06) {
  9538  00345A  0E06               	movlw	6
  9539  00345C  0100               	movlb	0	; () banked
  9540  00345E  19D2               	xorwf	_currentState& (0+255),w,b
  9541  003460  E107               	bnz	i2u526_41
  9542  003462  0E0F               	movlw	15
  9543  003464  19D3               	xorwf	(_currentState+1)& (0+255),w,b
  9544  003466  A4D8               	btfss	status,2,c
  9545  003468  EF38  F01A         	goto	i2u526_41
  9546  00346C  EF3A  F01A         	goto	i2u526_40
  9547  003470                     i2u526_41:
  9548  003470  EF3E  F01A         	goto	i2l51
  9549  003474                     i2u526_40:
  9550  003474                     
  9551                           ; BSR set to: 0
  9552                           ;main.c: 28:             p1concorrency = 1;
  9553  003474  0E00               	movlw	0
  9554  003476  6FC9               	movwf	(_p1concorrency+1)& (0+255),b
  9555  003478  0E01               	movlw	1
  9556  00347A  6FC8               	movwf	_p1concorrency& (0+255),b
  9557  00347C                     i2l51:
  9558                           
  9559                           ; BSR set to: 0
  9560                           ;main.c: 30:         currentState = 0xf05;
  9561  00347C  0E0F               	movlw	15
  9562  00347E  6FD3               	movwf	(_currentState+1)& (0+255),b
  9563  003480  0E05               	movlw	5
  9564  003482  6FD2               	movwf	_currentState& (0+255),b
  9565  003484                     
  9566                           ; BSR set to: 0
  9567                           ;main.c: 31:         INTCONbits.INT0IF = 0;
  9568  003484  92F2               	bcf	242,1,c	;volatile
  9569  003486  EF7E  F01A         	goto	i2l52
  9570  00348A                     i2l50:
  9571                           
  9572                           ;main.c: 35:     if(INTCON3bits.INT1IF){
  9573  00348A  A0F0               	btfss	240,0,c	;volatile
  9574  00348C  EF4A  F01A         	goto	i2u527_41
  9575  003490  EF4C  F01A         	goto	i2u527_40
  9576  003494                     i2u527_41:
  9577  003494  EF64  F01A         	goto	i2l53
  9578  003498                     i2u527_40:
  9579  003498                     
  9580                           ;main.c: 36:         if(currentState == 0xf05) {
  9581  003498  0E05               	movlw	5
  9582  00349A  0100               	movlb	0	; () banked
  9583  00349C  19D2               	xorwf	_currentState& (0+255),w,b
  9584  00349E  E107               	bnz	i2u528_41
  9585  0034A0  0E0F               	movlw	15
  9586  0034A2  19D3               	xorwf	(_currentState+1)& (0+255),w,b
  9587  0034A4  A4D8               	btfss	status,2,c
  9588  0034A6  EF57  F01A         	goto	i2u528_41
  9589  0034AA  EF59  F01A         	goto	i2u528_40
  9590  0034AE                     i2u528_41:
  9591  0034AE  EF5D  F01A         	goto	i2l54
  9592  0034B2                     i2u528_40:
  9593  0034B2                     
  9594                           ; BSR set to: 0
  9595                           ;main.c: 37:             p2concorrency = 1;
  9596  0034B2  0E00               	movlw	0
  9597  0034B4  6FC7               	movwf	(_p2concorrency+1)& (0+255),b
  9598  0034B6  0E01               	movlw	1
  9599  0034B8  6FC6               	movwf	_p2concorrency& (0+255),b
  9600  0034BA                     i2l54:
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;main.c: 39:         currentState = 0xf06;
  9604  0034BA  0E0F               	movlw	15
  9605  0034BC  6FD3               	movwf	(_currentState+1)& (0+255),b
  9606  0034BE  0E06               	movlw	6
  9607  0034C0  6FD2               	movwf	_currentState& (0+255),b
  9608  0034C2                     
  9609                           ; BSR set to: 0
  9610                           ;main.c: 40:         INTCON3bits.INT1IF = 0;
  9611  0034C2  90F0               	bcf	240,0,c	;volatile
  9612  0034C4  EF7E  F01A         	goto	i2l52
  9613  0034C8                     i2l53:
  9614                           
  9615                           ;main.c: 44:     if(INTCON3bits.INT2IF){
  9616  0034C8  A2F0               	btfss	240,1,c	;volatile
  9617  0034CA  EF69  F01A         	goto	i2u529_41
  9618  0034CE  EF6B  F01A         	goto	i2u529_40
  9619  0034D2                     i2u529_41:
  9620  0034D2  EF73  F01A         	goto	i2l55
  9621  0034D6                     i2u529_40:
  9622  0034D6                     
  9623                           ;main.c: 45:         currentState = 0xf07;
  9624  0034D6  0E0F               	movlw	15
  9625  0034D8  0100               	movlb	0	; () banked
  9626  0034DA  6FD3               	movwf	(_currentState+1)& (0+255),b
  9627  0034DC  0E07               	movlw	7
  9628  0034DE  6FD2               	movwf	_currentState& (0+255),b
  9629  0034E0                     
  9630                           ; BSR set to: 0
  9631                           ;main.c: 46:         INTCON3bits.INT2IF = 0;
  9632  0034E0  92F0               	bcf	240,1,c	;volatile
  9633  0034E2  EF7E  F01A         	goto	i2l52
  9634  0034E6                     i2l55:
  9635                           
  9636                           ;main.c: 50:     if(TMR2IF){
  9637  0034E6  A29E               	btfss	3998,1,c	;volatile
  9638  0034E8  EF78  F01A         	goto	i2u530_41
  9639  0034EC  EF7A  F01A         	goto	i2u530_40
  9640  0034F0                     i2u530_41:
  9641  0034F0  EF7E  F01A         	goto	i2l52
  9642  0034F4                     i2u530_40:
  9643  0034F4                     
  9644                           ;main.c: 51:         currentTime++;
  9645  0034F4  0100               	movlb	0	; () banked
  9646  0034F6  4BD0               	infsnz	_currentTime& (0+255),f,b
  9647  0034F8  2BD1               	incf	(_currentTime+1)& (0+255),f,b
  9648  0034FA                     
  9649                           ; BSR set to: 0
  9650                           ;main.c: 52:         TMR2IF = 0;
  9651  0034FA  929E               	bcf	3998,1,c	;volatile
  9652  0034FC                     i2l52:
  9653  0034FC  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9654  0034FE  0011               	retfie		f
  9655  003500                     __end_of_isr:
  9656                           	opt callstack 0
  9657                           
  9658                           	psect	rparam
  9659  0000                     
  9660                           	psect	temp
  9661  00005E                     btemp:
  9662                           	opt callstack 0
  9663  00005E                     	ds	1
  9664  0000                     int$flags	set	btemp
  9665  0000                     wtemp8	set	btemp+1
  9666  0000                     ttemp5	set	btemp+1
  9667  0000                     ttemp6	set	btemp+4
  9668  0000                     ttemp7	set	btemp+8
  9669                           tosu	equ	0xFFF
  9670                           tosh	equ	0xFFE
  9671                           tosl	equ	0xFFD
  9672                           stkptr	equ	0xFFC
  9673                           pclatu	equ	0xFFB
  9674                           pclath	equ	0xFFA
  9675                           pcl	equ	0xFF9
  9676                           tblptru	equ	0xFF8
  9677                           tblptrh	equ	0xFF7
  9678                           tblptrl	equ	0xFF6
  9679                           tablat	equ	0xFF5
  9680                           prodh	equ	0xFF4
  9681                           prodl	equ	0xFF3
  9682                           indf0	equ	0xFEF
  9683                           postinc0	equ	0xFEE
  9684                           postdec0	equ	0xFED
  9685                           preinc0	equ	0xFEC
  9686                           plusw0	equ	0xFEB
  9687                           fsr0h	equ	0xFEA
  9688                           fsr0l	equ	0xFE9
  9689                           wreg	equ	0xFE8
  9690                           indf1	equ	0xFE7
  9691                           postinc1	equ	0xFE6
  9692                           postdec1	equ	0xFE5
  9693                           preinc1	equ	0xFE4
  9694                           plusw1	equ	0xFE3
  9695                           fsr1h	equ	0xFE2
  9696                           fsr1l	equ	0xFE1
  9697                           bsr	equ	0xFE0
  9698                           indf2	equ	0xFDF
  9699                           postinc2	equ	0xFDE
  9700                           postdec2	equ	0xFDD
  9701                           preinc2	equ	0xFDC
  9702                           plusw2	equ	0xFDB
  9703                           fsr2h	equ	0xFDA
  9704                           fsr2l	equ	0xFD9
  9705                           status	equ	0xFD8


Data Sizes:
    Strings     76
    Constant    0
    Data        0
    BSS         120
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160     76     116
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[11]), STR_9(CODE[8]), STR_8(CODE[8]), STR_7(CODE[8]), 
		 -> STR_6(CODE[11]), STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[11]), 
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1365_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[11]), STR_9(CODE[8]), STR_8(CODE[8]), STR_7(CODE[8]), 
		 -> STR_6(CODE[11]), STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[11]), 
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[11]), STR_9(CODE[8]), STR_8(CODE[8]), STR_7(CODE[8]), 
		 -> STR_6(CODE[11]), STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[11]), 
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[11]), STR_9(CODE[8]), STR_8(CODE[8]), STR_7(CODE[8]), 
		 -> STR_6(CODE[11]), STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[11]), 
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_escreve_lcd
    _escreve_lcd->_envia_byte_lcd
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _atoi->_isspace
    _caracter_inicio->_envia_byte_lcd
    _setup->_inicializa_lcd
    _setup->_limpa_lcd
    _limpa_lcd->_envia_byte_lcd
    _inicializa_lcd->_envia_byte_lcd
    _envia_byte_lcd->_envia_nibble_lcd

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_stateMachine
    _stateMachine->_printf
    _reset->_printf
    _displayPlayers->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  129405
                              _reset
                              _setup
                       _stateMachine
 ---------------------------------------------------------------------------------
 (1) _stateMachine                                         2     2      0   96931
                                             74 BANK0      2     2      0
                            ___fldiv
                           ___xxtofl
                     _displayPlayers
                          _limpa_lcd
                             _printf
                              _reset
 ---------------------------------------------------------------------------------
 (2) _reset                                                0     0      0   31014
                          _limpa_lcd
                             _printf
 ---------------------------------------------------------------------------------
 (2) _displayPlayers                                       0     0      0   32118
                    _caracter_inicio
                          _limpa_lcd
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   30328
                                             64 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   29508
                                             56 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           48    42      6   29136
                                             71 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   23173
                                             59 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4493
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1899
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1498
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0     730
                                              5 COMRAM     1     1      0
                        _escreve_lcd
 ---------------------------------------------------------------------------------
 (8) _escreve_lcd                                          1     1      0     708
                                              4 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    2352
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     638
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    2311
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _caracter_inicio                                      3     2      1    1104
                                              4 COMRAM     3     2      1
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1460
                       _configureIRQ
                      _configurePins
                     _inicializa_lcd
                          _initTimer
                          _limpa_lcd
 ---------------------------------------------------------------------------------
 (3) _limpa_lcd                                            1     1      0     686
                                              4 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (2) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _inicializa_lcd                                       1     1      0     774
                                              4 COMRAM     1     1      0
                     _envia_byte_lcd
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (9) _envia_byte_lcd                                       2     1      1     686
                                              2 COMRAM     2     1      1
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (10) _envia_nibble_lcd                                    2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _configurePins                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configureIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _isr                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _reset
     _limpa_lcd
       _envia_byte_lcd
         _envia_nibble_lcd
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _escreve_lcd
                     _envia_byte_lcd
                       _envia_nibble_lcd
               _fputs
                 _fputc
                   _putch
                     _escreve_lcd
                       _envia_byte_lcd
                         _envia_nibble_lcd
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _escreve_lcd
                 _envia_byte_lcd
                   _envia_nibble_lcd
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _setup
     _configureIRQ
     _configurePins
     _inicializa_lcd
       _envia_byte_lcd
         _envia_nibble_lcd
       _envia_nibble_lcd
     _initTimer
     _limpa_lcd
       _envia_byte_lcd
         _envia_nibble_lcd
   _stateMachine
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _displayPlayers
       _caracter_inicio
         _envia_byte_lcd
           _envia_nibble_lcd
       _limpa_lcd
         _envia_byte_lcd
           _envia_nibble_lcd
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _escreve_lcd
                       _envia_byte_lcd
                         _envia_nibble_lcd
                 _fputs
                   _fputc
                     _putch
                       _escreve_lcd
                         _envia_byte_lcd
                           _envia_nibble_lcd
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _escreve_lcd
                   _envia_byte_lcd
                     _envia_nibble_lcd
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     _limpa_lcd
       _envia_byte_lcd
         _envia_nibble_lcd
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _escreve_lcd
                     _envia_byte_lcd
                       _envia_nibble_lcd
               _fputs
                 _fputc
                   _putch
                     _escreve_lcd
                       _envia_byte_lcd
                         _envia_nibble_lcd
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _escreve_lcd
                 _envia_byte_lcd
                   _envia_nibble_lcd
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _reset
       _limpa_lcd
         _envia_byte_lcd
           _envia_nibble_lcd
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _escreve_lcd
                       _envia_byte_lcd
                         _envia_nibble_lcd
                 _fputs
                   _fputc
                     _putch
                       _escreve_lcd
                         _envia_byte_lcd
                           _envia_nibble_lcd
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _escreve_lcd
                   _envia_byte_lcd
                     _envia_nibble_lcd
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      74       5       72.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     121      20        0.0%
DATA                 0      0     121       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec 06 23:10:03 2022

            ?_configureIRQ 0001               ___fldiv@aexp 0027               ___fldiv@bexp 0026  
   __end_of_displayPlayers 2EE2               ___fldiv@sign 001F                         l37 3CD4  
                       l63 3776                         l72 3C90                         l80 3A9E  
                       l66 3C14                         l75 37F8                         l69 3CCA  
           ?_configurePins 0001               ___awdiv@sign 0006                __CFG_BOR$ON 000000  
      ___wmul@multiplicand 0003                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
                      l120 3C58                        l123 3CA8                        l117 3C36  
                      l126 3C76                        l240 3348                        l304 1000  
                      l242 3384                        l170 3862                        l260 144A  
                      l237 3306                        l350 1D92                        l167 2EE0  
                      l194 27D8                        l178 258C                        l611 35AE  
                      l363 38BC                        l364 38C4                        l196 283A  
                      l357 1CB4                        l189 270C                        l278 0C68  
                      l367 3BF0                        l632 30A4                        l641 3B0E  
                      l626 3658                        l637 30EA                        l912 1754  
                      l904 190A                        l664 2FE6                        l921 1824  
                      l922 1812                        l598 3448                        l951 23B6  
                      l960 23FC                        l937 3A18                        l962 2474  
                      l954 237A                        l963 2462                        l949 2556  
                      l981 1E58                        l990 20C6                        l991 20B4  
                      l895 163A                        l896 1628                        l985 21BC  
                      l897 15EE                        l988 204E                        l998 217E  
             __CFG_CPB$OFF 000000                        _PR2 000FCB               __CFG_CPD$OFF 000000  
                      _pad 32C0                        _isr 0008               ___awmod@sign 0006  
                      wreg 000FE8               ___flmul@aexp 0012               ___flmul@bexp 0013  
             ___flmul@sign 000D               ___flmul@temp 0018               ___flmul@prod 0014  
             __CFG_LVP$OFF 000000               ___fltol@exp1 000A               __CFG_WDT$OFF 000000  
                     l1022 2AA4                       l1110 3AD6                       l1104 39D2  
                     l1025 2C00                       l1036 2B98                       l1140 3BA4  
                     l1029 2B3C                       l1125 36EE                       l1133 3A5C  
                     l1080 2D90                       l3000 1734                       l1048 31E8  
                     l1152 3B7C                       l3010 178E                       l3002 1744  
                     l1146 3980                       l1171 3924                       l3020 17BE  
                     l3012 1798                       l3004 176A                       l3100 317E  
                     l1156 32BE                       l1077 2D88                       l3030 17E6  
                     l3022 17C2                       l3014 17A6                       l3006 177A  
                     l3110 31E0                       l1086 2A4C                       l1166 391C  
                     l1096 3B46                       l3200 2272                       l3040 1840  
                     l3032 17F4                       l3024 17D2                       l3016 17A8  
                     l3104 318A                       l4000 19EC                       l1089 2990  
                     l3210 22B8                       l3202 227A                       l3050 18AA  
                     l3042 184E                       l3034 180A                       l3018 17B6  
                     l3026 17D4                       l3106 319C                       l3130 285C  
                     l3114 3926                       l3122 38FC                       l4002 1A0C  
                     l4010 1A72                       l3220 22E0                       l3212 22BC  
                     l3204 228A                       l3060 18E4                       l3052 18CA  
                     l3044 1888                       l3028 17E2                       l3140 2944  
                     l3132 28B2                       l3116 3936                       l3124 390E  
                     l4020 1B12                       l4012 1A92                       l4004 1A1A  
                     l4100 3B88                       l2510 3C48                       l2502 3C16  
                     l3230 232E                       l3206 22A0                       l3310 1DB0  
                     l3062 18EA                       l3054 18CE                       l3038 1834  
                     l3046 188A                       l3150 2A2C                       l3142 2980  
                     l3134 28C6                       l3070 32C0                       l3118 38C6  
                     l4022 1B24                       l4014 1AA2                       l4110 3850  
                     l2520 3C52                       l2512 3C4A                       l2504 3C38  
                     l4120 3798                       l4200 2B7A                       l3160 3BCC  
                     l3240 2378                       l3232 233E                       l3224 22F4  
                     l3208 22B0                       l3216 22D0                       l3400 20AC  
                     l3320 1DF6                       l3312 1DC0                       l3304 1D94  
                     l3064 18F8                       l3056 18DC                       l3048 189A  
                     l3152 2A3C                       l3136 28D4                       l3144 29B4  
                     l3128 283C                       l3080 3312                       l3072 32D0  
                     l4040 1C50                       l4024 1B3A                       l4032 1BA4  
                     l4016 1AD2                       l4008 1A60                       l4112 3854  
                     l4104 37FA                       l2522 3C54                       l2514 3C4C  
                     l2506 3C3E                       l4130 37DA                       l4122 37AE  
                     l4114 3778                       l2530 3C9A                       l4210 2BD0  
                     l4202 2B88                       l3162 3BE8                       l3250 23C6  
                     l3242 2384                       l3234 2346                       l3226 230E  
                     l3218 22E0                       l3170 21D8                       l3410 211A  
                     l3330 1E22                       l3322 1DFC                       l3314 1DD0  
                     l3306 1DA0                       l3066 18FA                       l3058 18E2  
                     l3146 29F0                       l3082 3326                       l3074 32E4  
                     l4050 1D14                       l4042 1C84                       l4034 1BD2  
                     l4026 1B48                       l4018 1AE2                       l4106 3844  
                     l2524 3C56                       l2516 3C4E                       l2508 3C46  
                     l4132 37E4                       l4124 37B6                       l4116 3782  
                     l2540 3CA4                       l2532 3C9C                       l4220 3C5A  
                     l4212 2BE0                       l4204 2BA6                       l3156 3B10  
                     l3500 354E                       l3252 23DC                       l3260 240C  
                     l3244 23A2                       l3236 2356                       l3228 231E  
                     l3180 220C                       l3172 21DA                       l3420 2182  
                     l3404 20D6                       l3412 211E                       l3340 1E78  
                     l3332 1E32                       l3324 1E02                       l3316 1DE0  
                     l3308 1DAE                       l3092 30EC                       l3148 2A04  
                     l3084 332A                       l3076 32F2                       l4060 1D50  
                     l4052 1D22                       l4044 1CC4                       l4028 1B78  
                     l4140 2DAA                       l4108 3846                       l4300 278C  
                     l2518 3C50                       l4134 37EE                       l4126 37BC  
                     l4118 3792                       l2542 3CA6                       l2534 3C9E  
                     l2526 3C92                       l4230 3C72                       l4222 3C62  
                     l4214 2BEE                       l4206 2BA8                       l3510 3588  
                     l3502 3556                       l3262 241A                       l3254 23E2  
                     l3246 23A4                       l3238 236A                       l3190 223E  
                     l3174 21EA                       l3182 2214                       l3166 21BE  
                     l3430 21AC                       l3422 2192                       l3414 2138  
                     l3406 20E2                       l3350 1EB8                       l3334 1E42  
                     l3326 1E10                       l3318 1DE6                       l3094 310C  
                     l3086 3358                       l3078 32FE                       l4054 1D36  
                     l4038 1C3E                       l4150 2E16                       l4142 2DBC  
                     l4302 27A0                       l4310 27BC                       l4128 37C2  
                     l2536 3CA0                       l2528 3C96                       l4080 3C78  
                     l4224 3C66                       l4216 2BF0                       l4208 2BAC  
                     l3440 3386                       l3504 3564                       l3512 358E  
                     l3272 2484                       l3280 24CC                       l3264 241E  
                     l3256 23EC                       l3248 23B4                       l3192 2240  
                     l3184 2224                       l3176 21FA                       l3168 21CA  
                     l3520 35B0                       l3424 21A0                       l3416 214C  
                     l3408 20F0                       l3360 1F02                       l3352 1EC4  
                     l3344 1E8C                       l3336 1E48                       l3328 1E12  
                     l3600 2FA6                       l3096 314A                       l3088 336C  
                     l4048 1CF0                       l4064 1D5C                       l4072 3864  
                     l4160 2E72                       l4152 2E28                       l4144 2DD8  
                     l4136 2D92                       l4312 27CE                       l4304 27B0  
                     l4240 258E                       l4320 27E4                       l4232 2558  
                     l2810 36F2                       l2538 3CA2                       l4082 3C82  
                     l4226 3C6A                       l4090 3A78                       l3610 3982  
                     l3450 33B2                       l3442 338A                       l3514 359E  
                     l3506 357A                       l3290 2536                       l3282 24E6  
                     l3274 2490                       l3266 242C                       l3258 23FA  
                     l3194 2250                       l3186 222A                       l3178 220A  
                     l3530 3650                       l3522 35DE                       l3426 21A2  
                     l3418 2166                       l3370 1F54                       l3362 1F0E  
                     l3354 1EDC                       l3346 1E98                       l3338 1E68  
                     l3434 39D4                       l3602 2FB6                       l3098 3172  
                     l4066 1D80                       l4058 1D42                       l4074 386C  
                     l4170 2EC8                       l4162 2E84                       l4154 2E44  
                     l4146 2DE2                       l4138 2D96                       l4314 27D6  
                     l4306 27B8                       l4250 25C6                       l4242 25A8  
                     l4234 255C                       l4330 3CAE                       l2812 36F4  
                     l2820 3BF4                       l4228 3C6E                       l4180 2AB4  
                     l4092 3A8A                       l4084 3A60                       l3612 3986  
                     l3460 33E0                       l3452 33BA                       l3444 3398  
                     l3516 35A6                       l3508 3582                       l3292 2544  
                     l3284 24FC                       l3276 249E                       l3268 245A  
                     l3196 2260                       l3188 2230                       l3532 3656  
                     l3524 35EE                       l3540 3026                       l3428 21A8  
                     l3380 1FD2                       l3372 1F64                       l3364 1F1E  
                     l3356 1EE8                       l3348 1EA2                       l2900 14F2  
                     l3436 39E4                       l3604 2FC6                       l3700 0B94  
                     l4076 387A                       l4172 2ED2                       l4164 2E90  
                     l4156 2E4E                       l4148 2E04                       l4308 27BA  
                     l4260 2608                       l4252 25D0                       l4244 25AA  
                     l4236 256E                       l4332 3CB2                       l2814 3764  
                     l2822 3BFE                       l4190 2AF2                       l4182 2ACA  
                     l4174 2A50                       l4094 3A8E                       l4086 3A64  
                     l3614 399A                       l3470 341A                       l3462 33E8  
                     l3454 33BE                       l3446 33A0                       l3294 254A  
                     l3286 2516                       l3278 24C8                       l3198 2270  
                     l3526 361C                       l3550 3092                       l3542 3054  
                     l3390 204C                       l3382 2008                       l3374 1F80  
                     l3366 1F2A                       l3358 1EF4                       l2910 152C  
                     l2902 1502                       l3606 2FD6                       l2830 3CCE  
                     l3710 0C16                       l3702 0BC8                       l3630 087E  
                     l3622 084E                       l4078 38A0                       l4166 2E9A  
                     l4158 2E60                       l4414 27FC                       l4270 2650  
                     l4262 261A                       l4254 25DC                       l4246 25B4  
                     l4238 2580                       l2816 376C                       l2824 3C04  
                     l4192 2B24                       l4176 2A60                       l4096 3A94  
                     l4088 3A74                       l3616 39C8                       l4416 2CBE  
                     l3480 3440                       l3472 341C                       l3464 33F6  
                     l3456 33C6                       l3448 33A4                       l3296 254C  
                     l3288 2532                       l3528 362C                       l3552 30E2  
                     l3544 3064                       l3536 2FE8                       l3392 205E  
                     l3384 2016                       l3376 1F8C                       l3368 1F3A  
                     l3560 3AEE                       l2920 1558                       l2912 153E  
                     l2904 1512                       l2840 36A6                       l2832 365A  
                     l3800 10A2                       l3712 0C28                       l3720 0C74  
                     l3704 0BD0                       l3640 08D4                       l3632 08A2  
                     l3624 0858                       l4168 2EBC                       l4280 26E4  
                     l4272 2662                       l4264 2626                       l4256 25E4  
                     l4248 25B8                       l4328 3CAA                       l2818 376E  
                     l2826 3C0C                       l4194 2B26                       l4186 2ADE  
                     l4178 2A6E                       l3618 39CC                       l3474 3422  
                     l3466 33FC                       l3458 33D8                       l3490 351A  
                     l3554 30E8                       l3546 3072                       l3538 3016  
                     l3394 206C                       l3386 2034                       l3378 1FA8  
                     l3562 3AFE                       l2930 156C                       l2922 155C  
                     l2914 154C                       l2906 1514                       l2842 36DC  
                     l2834 366C                       l2850 3A38                       l3810 10EA  
                     l3802 10B4                       l3730 0CB4                       l3714 0C3A  
                     l3706 0C02                       l3650 0902                       l3642 08E6  
                     l3634 08AC                       l3626 0868                       l4098 3B7E  
                     l4290 270A                       l4282 26EC                       l4274 2674  
                     l4266 2638                       l4258 25F6                       l4196 2B32  
                     l4188 2AE6                       l3468 3412                       l3476 3428  
                     l3492 351E                       l3484 3500                       l3548 3084  
                     l3396 2070                       l3388 203E                       l2940 1580  
                     l2932 1570                       l2924 1560                       l2916 1550  
                     l2908 151C                       l3580 2F4C                       l3572 2F0C  
                     l2828 3CC0                       l2836 367E                       l2852 3A3C  
                     l2860 3B70                       l3900 139A                       l3820 1120  
                     l3812 10FA                       l3804 10C2                       l3740 0D10  
                     l3732 0CEA                       l3716 0C42                       l3708 0C12  
                     l3660 0976                       l3644 08F2                       l3652 0908  
                     l3636 08B4                       l3628 0876                       l4292 2714  
                     l4284 26EE                       l4276 26C0                       l4268 2644  
                     l4198 2B6E                       l3478 3438                       l3494 352C  
                     l3486 3504                       l3398 207E                       l3558 3AD8  
                     l2950 15BA                       l2942 1584                       l2934 1574  
                     l2926 1564                       l2918 1554                       l2870 1458  
                     l3590 2F7C                       l3582 2F5A                       l3574 2F36  
                     l3566 2EE2                       l2838 3688                       l2846 3A1A  
                     l2854 3B48                       l3910 13F4                       l3830 1154  
                     l3822 1124                       l3814 10FE                       l3806 10CA  
                     l3750 0D54                       l3742 0D22                       l3734 0CF2  
                     l3726 0C86                       l3718 0C5C                       l3662 0992  
                     l3654 092E                       l3670 09DC                       l3646 08FA  
                     l3638 08C6                       l4294 271C                       l4278 26D4  
                     l4286 26F0                       ?_pad 0017                       l3920 2C02  
                     l3496 3534                       l3488 3512                       l2960 160C  
                     l2952 15D6                       l2944 1588                       l2936 1578  
                     l2928 1568                       l2880 1498                       l2872 1466  
                     l3592 2F86                       l3576 2F38                       l3568 2EF8  
                     l2848 3A26                       l2856 3B54                       l2864 3AA0  
                     l3912 1404                       l3904 13CE                       l3840 11F2  
                     l3832 1158                       l3824 112A                       l3816 1104  
                     l3808 10DC                       l3760 0D9E                       l3752 0D6C  
                     l3744 0D30                       l3728 0C98                       l3736 0CF6  
                     l3680 0A66                       l3672 0A02                       l3664 09AA  
                     l3648 08FE                       l4296 272E                       l4288 2702  
                     l3930 2C70                       l3922 2C16                       l3498 3546  
                     l2970 1658                       l2962 161A                       l2954 15E6  
                     l2938 157C                       l2946 158C                       l2890 14CA  
                     l2882 149A                       l2874 1468                       l3578 2F48  
                     l2858 3B58                       l3914 140A                       l3906 13E0  
                     l3850 1250                       l3818 1110                       l3826 1130  
                     l3834 115E                       l3842 11F6                       l3762 0DB2  
                     l3770 0EA8                       l3754 0D7E                       l3746 0D34  
                     l3738 0CFE                       l3690 0ACA                       l3682 0A7E  
                     l3666 09B4                       l3658 0964                       l4298 2740  
                     l3940 2C98                       l3932 2C74                       l3924 2C1A  
                     l2980 1698                       l2964 161C                       l2956 15FC  
                     l2948 1590                       l2892 14CC                       l2876 1478  
                     l2884 14A2                       l2868 144C                       l3588 2F72  
                     l3908 13EC                       l3860 128E                       l3916 1426  
                     l3852 1260                       l3844 1214                       l3836 11B6  
                     l3828 1142                       l3780 0F74                       l3772 0EC6  
                     l3764 0E16                       l3748 0D46                       l3756 0D86  
                     l3684 0A88                       l3676 0A38                       l3942 2CA0  
                     l3926 2C1E                       l2990 16C2                       l2982 16A4  
                     l2974 166C                       l2966 1626                       l2958 1608  
                     l2894 14D2                       l2886 14B2                       l2878 1488  
                     l3598 2F9A                       l3870 12C4                       l3862 129E  
                     l3854 1264                       l3846 1230                       l3838 11EA  
                     l3790 0FEC                       l3782 0F84                       l3774 0EFA  
                     l3766 0E6E                       l3758 0D8E                       l3694 0B00  
                     l3678 0A4A                       l3952 2D48                       l3944 2CD4  
                     l3936 2C7A                       l3928 2C3A                       l2984 16A8  
                     l2976 167C                       l2968 1648                       l2992 16C8  
                     l2896 14E0                       l2888 14B8                       l3880 1320  
                     l3872 12D0                       l3864 12A6                       l3856 1274  
                     l3848 1242                       l3792 0FF8                       l3784 0F94  
                     l3776 0F2C                       l3768 0EA2                       l3696 0B34  
                     l3688 0AB0                       l3954 2D5A                       l3938 2C90  
                     l2994 16EE                       l2986 16B6                       l2978 168A  
                     l2898 14E2                       l3890 136A                       l3874 12D6  
                     l3882 1326                       l3866 12B4                       l3858 1286  
                     l3794 101C                       l3786 0FC8                       l3778 0F42  
                     l3698 0B3A                       l3970 322E                       l3962 31EA  
                     l3956 2D6C                       l3948 2D0A                       l2996 1722  
                     l2988 16B8                       l3892 1376                       l3884 1338  
                     l3876 12FC                       l3868 12BC                       l3796 1080  
                     l3788 0FD8                       l3972 3246                       l3964 3214  
                     l2998 1724                       l3894 137E                       l3886 1352  
                     l3878 1318                       l3798 1090                       l3974 3262  
                     l3990 1954                       l3982 190C                       _ADIE 007CEE  
                     l3896 138E                       l3888 1358                       l3976 3274  
                     l3968 3220                       l3992 1978                       l3984 1930  
                     l3898 1394                       l3978 329C                       l3994 1980  
                     l3986 193E                       l3996 198E                       l3988 1950  
                     ?_isr 0001                       l3998 19B2                       STR_1 080C  
                     STR_2 0817                       STR_3 080C                       STR_4 0832  
                     STR_5 082A                       STR_6 0817                       STR_7 082A  
                     STR_8 0832                       STR_9 0822                       u3000 17B6  
                     u3001 17B2                       u3010 17D2                       u3011 17CE  
                     u3100 18AA                       u3020 17E2                       u3101 18A6  
                     u3021 17DE                       u3110 18CA                       u3030 17F4  
                     u3111 18C6                       u3031 17F0                       u4000 3054  
                     u3120 18DC                       u3040 180A                       u3200 3172  
                     u4001 3050                       u3121 18D8                       u3041 1806  
                     u3201 316E                       u4010 3072                       u3130 18F8  
                     u3050 1820                       u3210 319C                       u4011 306E  
                     u3131 18F4                       u3051 181C                       u3211 3198  
                     u4020 3092                       u3060 1834                       u4100 2FB6  
                     u3300 2884                       u3140 32D0                       u4021 308E  
                     u3061 1830                       u4101 2FB2                       u3141 32CC  
                     u4030 30E2                       u3070 184E                       u4110 2FC6  
                     u3230 31D6                       u3310 28B2                       u3150 32F2  
                     u4031 30DE                       u3071 184A                       u4111 2FC2  
                     u3231 31D0                       u3311 28AE                       u3151 32EE  
                     u3400 3B40                       u4120 399A                       u4040 3AEE  
                     u3080 1888                       u3240 31D8                       u3320 28D4  
                     u3160 3348                       u4200 095E                       u5000 2E84  
                     u3401 3B3A                       u4121 3996                       u4041 3AEA  
                     u3081 1884                       u3225 31AE                       u3321 28D0  
                     u3305 287A                       u3161 3344                       u5001 2E80  
                     u5010 2A60                       u3410 3B42                       u4130 39C8  
                     u3090 189A                       u4050 2EF8                       u3170 3358  
                     u3250 396E                       u4210 0976                       u5011 2A5C  
                     u4131 39C4                       u3091 1896                       u4051 2EF4  
                     u3171 3354                       u4211 0972                       u5100 2BEE  
                     u5020 2A6E                       u3500 2356                       u3420 21D8  
                     u4060 2F2C                       u3180 312C                       u3340 2940  
                     u2700 36DC                       u3260 3980                       u4300 0C3A  
                     u4220 0A02                       u4140 0876                       u5101 2BEA  
                     u5021 2A6A                       u3501 2352                       u3421 21D4  
                     u3341 293C                       u2701 36D8                       u3261 397C  
                     u4301 0C36                       u4221 09FE                       u4141 0872  
                     u5030 2ACA                       u3510 2378                       u3430 21EA  
                     u4070 2F5A                       u3190 314A                       u3350 2964  
                     u2710 3A5C                       u3270 38F6                       u4310 0C5C  
                     u4230 0A30                       u4150 08C6                       u5110 256E  
                     u5031 2AC6                       u3511 2374                       u3431 21E6  
                     u4071 2F56                       u3191 3146                       u3335 28E8  
                     u2711 3A58                       u3271 38F0                       u4311 0C58  
                     u4231 0A2A                       u4151 08C2                       u5111 256A  
                     u5040 2B20                       u3600 2484                       u3520 23A2  
                     u3440 21FA                       u2800 14F2                       u4080 2F6E  
                     u3360 2980                       u3336 28F2                       u2720 3B70  
                     u3280 38F8                       u4400 0D54                       u4320 0C82  
                     u4240 0A32                       u4160 08D4                       u5200 2702  
                     u5120 2580                       u5041 2B1C                       u3601 2480  
                     u3521 239E                       u3441 21F6                       u2801 14EE  
                     u4081 2F6A                       u4065 2F22                       u3185 3122  
                     u3361 297C                       u3337 2902                       u2721 3B6C  
                     u3257 3964                       u4401 0D50                       u4321 0C7E  
                     u4161 08D0                       u5201 26FE                       u5121 257C  
                     u5050 2B6A                       u3610 249E                       u3530 23C6  
                     u3450 223E                       u2810 1502                       u4090 2F96  
                     u3370 29D4                       u2730 3AD0                       u3290 390E  
                     u4410 0D7E                       u4330 0C98                       u4250 0A4A  
                     u4170 08E6                       u5210 272E                       u5130 25F6  
                     u5051 2B66                       u3611 249A                       u3531 23C2  
                     u3451 223A                       u2811 14FE                       u4091 2F92  
                     u3355 295A                       u2731 3ACA                       u3291 390A  
                     u4411 0D7A                       u4331 0C94                       u4251 0A46  
                     u4171 08E2                       u5211 272A                       u5131 25F2  
                     u5060 2B88                       u3620 24E6                       u3540 23DC  
                     u3460 2250                       u3700 1E32                       u2900 1648  
                     u2820 153E                       u3380 29F0                       u2740 3AD2  
                     u4500 10C2                       u4420 0EC6                       u4340 0CB4  
                     u4260 0AFC                       u4180 092E                       u5220 2740  
                     u5140 2608                       u5061 2B84                       u3621 24E2  
                     u3541 23D8                       u3461 224C                       u3701 1E2E  
                     u2901 1644                       u2821 153A                       u3381 29EC  
                     u4501 10BE                       u4421 0EC2                       u4341 0CB0  
                     u4261 0AF8                       u4181 092A                       u5221 273C  
                     u5141 2604                       u5070 2B98                       u3630 2516  
                     u3550 23FA                       u3470 2260                       u3710 1E68  
                     u2910 1658                       u2830 154C                       u2750 1466  
                     u3390 2A2C                       u2670 366C                       u4510 10DC  
                     u4430 0F2C                       u4350 0CEA                       u4270 0B90  
                     u4190 095C                       u5230 27A0                       u5150 261A  
                     u5071 2B94                       u3631 2512                       u3551 23F6  
                     u3471 225C                       u3711 1E64                       u2911 1654  
                     u2831 1548                       u2751 1462                       u3391 2A28  
                     u3375 29CA                       u2671 3668                       u4511 10D8  
                     u4431 0F28                       u4351 0CE6                       u4271 0B8C  
                     u4191 0956                       u5231 279C                       u5151 2616  
                     u5080 2BA6                       u3640 2544                       u3560 241A  
                     u3480 22A0                       u3800 20F0                       u3720 1E78  
                     u2920 168A                       u2840 15BA                       u2760 1478  
                     u2680 367E                       u4600 1338                       u4520 10EA  
                     u4440 0F74                       u4360 0D10                       u4280 0C02  
                     u5240 27CE                       u5160 2638                       u2665 3BFC  
                     u5081 2BA2                       u3641 2540                       u3561 2416  
                     u3481 229C                       u3801 20EC                       u3721 1E74  
                     u2921 1686                       u2841 15B6                       u2761 1474  
                     u2681 367A                       u4601 1334                       u4521 10E6  
                     u4441 0F70                       u4361 0D0C                       u4281 0BFE  
                     u5241 27CA                       u5161 2634                       u2666 3BFE  
                     u5090 2BE0                       u3570 242C                       u3490 22E0  
                     u3810 2138                       u3730 1FF2                       u3650 1DAE  
                     u2930 1698                       u2850 15D2                       u2770 1488  
                     u2690 36A6                       u4610 1352                       u4530 1142  
                     u4450 0F84                       u4370 0D22                       u4290 0C28  
                     u5170 2662                       u5091 2BDC                       u3571 2428  
                     u3491 22DC                       u3811 2134                       u3651 1DAA  
                     u2931 1694                       u2851 15CC                       u2771 1484  
                     u2691 36A2                       u4611 134E                       u4531 113E  
                     u4451 0F80                       u4371 0D1E                       u4291 0C24  
                     u5171 265E                       _PEIE 007F96                       u4700 2D44  
                     u3900 3512                       u3580 245A                       u3820 2166  
                     u3740 204C                       u3660 1DC0                       u2940 16B6  
                     u2860 15D4                       u2780 14CA                       u4620 136A  
                     u4540 1214                       u4460 0FEC                       u4380 0D30  
                     u5180 2674                       u3901 350E                       u3581 2456  
                     u3821 2162                       u3741 2048                       u3661 1DBC  
                     u2941 16B2                       u2781 14C6                       u4621 1366  
                     u4541 1210                       u4461 0FE8                       u4381 0D2C  
                     u5181 2670                       u5317 259A                       u4710 2D5A  
                     u3910 352C                       u3590 2470                       u3830 21A0  
                     u3750 206C                       u3670 1DD0                       u2950 16EE  
                     u2870 15FC                       u2790 14E0                       u4630 13C8  
                     u4550 1230                       u4470 1090                       u4390 0D46  
                     u5190 26D4                       u5327 3C88                       u4711 2D56  
                     u3911 3528                       u3591 246C                       u3831 219C  
                     u3751 2068                       u3735 1FE8                       u3671 1DCC  
                     u2951 16EA                       u2871 15F8                       u2791 14DC  
                     u4631 13C2                       u4551 122C                       u4471 108C  
                     u4391 0D42                       u5191 26D0                       u4720 2D6C  
                     u3840 3398                       u3920 3546                       u3760 207E  
                     u3680 1E10                       u2960 1734                       u2880 161A  
                     u4640 13CA                       u4560 1242                       u4480 10A2  
                     u4800 19B2                       u5337 3788                       u4721 2D68  
                     u3841 3394                       u3921 3542                       u3761 207A  
                     u3681 1E0C                       u2961 1730                       u2881 1616  
                     u4561 123E                       u4481 109E                       u4801 19AE  
                     u3850 33B2                       u3930 3564                       u3770 20AC  
                     u3690 1E22                       u2970 176A                       u2890 163A  
                     u4650 13E0                       u4570 1250                       u4490 10B4  
                     u4730 3214                       u4810 1A5A                       u5347 379E  
                     u3851 33AE                       u3931 3560                       u3771 20A8  
                     u3691 1E1E                       u2971 1766                       u2891 1636  
                     u4651 13DC                       u4571 124C                       u4491 10B0  
                     u4731 3210                       u4811 1A54                       u4660 2C3A  
                     u3860 33D8                       u3940 357A                       u3780 20C2  
                     u2980 177A                       u4580 1286                       u4740 3246  
                     u4900 1C50                       u4820 1A5C                       u5357 37B0  
                     u4661 2C36                       u3861 33D4                       u3941 3576  
                     u3781 20BE                       u2981 1776                       u4581 1282  
                     u4741 3242                       u4901 1C4C                       u4670 2C70  
                     u3870 33F6                       u3950 359E                       u3790 20D6  
                     u2990 17A6                       u4590 12B4                       u4750 3262  
                     u4910 1D14                       u4830 1A72                       u5367 37D2  
                     u4671 2C6C                       u3871 33F2                       u3951 359A  
                     u3791 20D2                       u2991 17A2                       u4591 12B0  
                     u4751 325E                       u4911 1D10                       u4831 1A6E  
                     u4680 2C8C                       u3880 3412                       u3960 35DE  
                     u4760 3274                       u4840 1AA2                       u4920 38BC  
                     u5377 3766                       u4681 2C88                       u3881 340E  
                     u3961 35DA                       u4761 3270                       u4841 1A9E  
                     u4921 38B8                       i2l50 348A                       u4930 3A74  
                     u4690 2D42                       u3890 3438                       u3970 361C  
                     u4770 329C                       u4850 1AE2                       i2l51 347C  
                     u5387 3770                       u4931 3A70                       u4691 2D3C  
                     u3891 3434                       u3971 3618                       u4771 3298  
                     u4851 1ADE                       i2l52 34FC                       u4940 3A8A  
                     u3980 3650                       u4860 1B24                       u4780 1930  
                     i2l53 34C8                       u4941 3A86                       u3981 364C  
                     u4861 1B20                       u4781 192C                       i2l54 34BA  
                     u3990 3016                       u4870 1BD2                       u4790 1978  
                     u4950 2DAA                       i2l55 34E6                       u3991 3012  
                     u4871 1BCE                       u4791 1974                       u4951 2DA6  
                     u4880 1C38                       u4960 2DBC                       u4881 1C32  
                     u4961 2DB8                       u4890 1C3A                       u4970 2E16  
                     u4971 2E12                       u4980 2E28                       u4981 2E24  
                     u4990 2E72                       u4991 2E6E               ?_escreve_lcd 0001  
   envia_byte_lcd@endereco 0004                       _dbuf 0100                       _atoi 2C02  
                     _main 3CAA                       _prec 00C0                       _nout 00BC  
                     pad@i 001E                       pad@p 001B                       fsr1h 000FE2  
                     fsr2h 000FDA                       indf1 000FE7                       indf2 000FDF  
                     fsr1l 000FE1                       pad@w 0020                       fsr2l 000FD9  
                     btemp 005E              ___fpclassifyf 30EC                       prodh 000FF4  
                     prodl 000FF3                       start 000E              __CFG_IESO$OFF 000000  
          ___fldiv@new_exp 0020               _tolower$1426 000D              __CFG_MCLRE$ON 000000  
           ??_configureIRQ 0001    __end_of_caracter_inicio 3AA0               ___param_bank 000000  
          ?_displayPlayers 0001                      ??_pad 001D                      ??_isr 0001  
           __CFG_CCP2MX$ON 000000              ___fltol@sign1 0009                      ?_atoi 0008  
          __end_of___fladd 190C                      ?_main 0001            __end_of___fldiv 2558  
          __end_of___awdiv 344A            __end_of___flneg 3B10                      STR_10 0801  
                    STR_11 083A                      STR_12 0842                      STR_21 084A  
                    STR_15 083E                      STR_16 0846                      STR_19 084A  
          __end_of___awmod 35B0            __end_of___flmul 21BE            __end_of___flsub 3A1A  
          __end_of___fltol 2FE8            ___awdiv@divisor 0003            ___awdiv@counter 0005  
             vfpfcnvrt@fmt 004A              __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000    __size_of_envia_byte_lcd 0024  
           __CFG_EBTRB$OFF 000000                      _flags 00C2                      _fputc 365A  
                    _fputs 3A1A            __end_of_isdigit 3B48                      _reset 37FA  
                    _setup 3C5A                      atoi@n 0015                      pad@fp 0017  
                    atoi@s 0008                      _width 00BE                      _putch 3CCC  
          __end_of_isspace 39D4            __end_of_isupper 3AD8                      tablat 000FF5  
                    ttemp5 005F                      ttemp6 0062                      ttemp7 0066  
                    status 000FD8                      wtemp8 005F             ?___fpclassifyf 0001  
          __end_of_tolower 3926            __end_of_strncmp 32C0             __CFG_ICPRT$OFF 000000  
          __initialization 3BA6               __end_of_atoi 2D92               __end_of_main 3CBE  
          ??_configurePins 0001                     ??_atoi 000A                     ??_main 005E  
            __activetblptr 000002                     ?_fputc 0007                     ?_fputs 0010  
                   ?_reset 0001           ___awdiv@dividend 0001                     ?_setup 0001  
                   ?_putch 0001                     i2l4340 3484                     i2l4334 344C  
                   i2l4360 34FA                     i2l4352 34D6                     i2l4344 3498  
                   i2l4336 345A                     i2l4354 34E0                     i2l4346 34B2  
                   i2l4338 3474                     i2l4348 34C2                     i2l4358 34F4  
           _player1Pressed 00CC                     _TMR2IE 007CE9                     _TMR2IF 007CF1  
  __size_of_inicializa_lcd 0082             _player2Pressed 00CA           __end_of___xxtofl 2C02  
           __CFG_XINST$OFF 000000           _envia_nibble_lcd 36F0               vfprintf@cfmt 009E  
         ?_caracter_inicio 0005                     ___flge 2FE8                     ___fleq 35B0  
                ??___fladd 0009                     ___wmul 3BCC                  ??___fldiv 0017  
                ??___awdiv 0005                  ??___flneg 0005             __CFG_STVREN$ON 000000  
                ??___awmod 0005                  ??___flmul 0009                  ??___flsub 0022  
                ??___fltol 0005                     _efgtoa 084E                     _floorf 283C  
                   clear_0 3BAC                     clear_1 3BB8           ___awdiv@quotient 0007  
          ___awmod@divisor 0003            ___awmod@counter 0005                     _printf 3B7E  
                   pad@buf 0019                     _strcpy 3926                     _strlen 3B48  
                   fputc@c 0007                     fputs@c 0014                     fputs@i 0015  
                   fputs@s 0010                  ??_isdigit 0003            ___fpclassifyf@e 0009  
          ___fpclassifyf@u 000B            ___fpclassifyf@x 0001               __mediumconst 0000  
                ??_isspace 0003                     tblptrh 000FF7                  ??_isupper 0003  
                   tblptrl 000FF6                     tblptru 000FF8       __end_of_configureIRQ 3C5A  
         __end_of_vfprintf 38C6                  ??_tolower 0009                  ??_strncmp 0007  
               ___flge@ff1 001A                 ___flge@ff2 001E            ??___fpclassifyf 0005  
             ___xxtofl@arg 000B               ___xxtofl@exp 000A               ___xxtofl@val 0001  
               ___fleq@ff1 0001                 ___fleq@ff2 0005                 __accesstop 0060  
  __end_of__initialization 3BBE         envia_byte_lcd@dado 0003            __CFG_PBADEN$OFF 000000  
               ___flneg@f1 0001            __CFG_FOSC$XT_XT 000000       __size_of_escreve_lcd 000E  
            ___rparam_used 000001                 ___fltol@f1 0001               escreve_lcd@c 0005  
           __pcstackCOMRAM 0001              __end_of_fputc 36F0              __end_of_fputs 3A5E  
            __end_of_reset 3864              __end_of_setup 3C78              __end_of_putch 3CD6  
           _envia_byte_lcd 3BF2                    ??_fputc 000B                    ??_fputs 0014  
                  ??_reset 005E                    ??_setup 0006                    ??_putch 0006  
               __pbssBANK0 00AC                 __pbssBANK1 0100         __size_of_initTimer 0018  
         ??_displayPlayers 005E         __size_of_limpa_lcd 001A                 _gameStatus 00C4  
               _efgtoa$820 0064                 _efgtoa$821 0066                 _efgtoa$830 006A  
               _efgtoa$831 006C                 _efgtoa$832 006E                 _efgtoa$826 0068  
                  ?___flge 001A                    ?___fleq 0001                    ?___wmul 0001  
                  ?_efgtoa 003C                    ?_floorf 0028                    ?_printf 00A0  
                  ?_strcpy 0001                    ?_strlen 0001     __end_of_envia_byte_lcd 3C16  
                  _INTCON2 000FF1                    _INTCON3 000FF0                  ?___xxtofl 0001  
       __size_of_vfpfcnvrt 0488            __CFG_VREGEN$OFF 000000             _inicializa_lcd 3778  
                  __Hparam 0000       caracter_inicio@linha 0006                    __Lparam 0000  
          __size_of___flge 0104            __size_of___fleq 00AA                    ___fladd 144C  
                  ___fldiv 21BE                    ___awdiv 3386                    ___flneg 3AD8  
                  ___awmod 3500                    ___flmul 1D94                    ___flsub 39D4  
                  ___fltol 2EE2            __size_of___wmul 0026                  ?_vfprintf 0098  
             __psmallconst 0800            __size_of_efgtoa 0BFE            __size_of_floorf 0212  
                  __pcinit 3BA6                    __ramtop 0800                    __ptext0 3CAA  
                  __ptext1 2558                    __ptext2 37FA                    __ptext3 2D92  
                  __ptext4 3B7E                    __ptext5 3864                    __ptext6 190C  
                  __ptext7 31EA                    __ptext8 084E                    __ptext9 38C6  
          __size_of_printf 0028            __size_of_strcpy 005C            __size_of_strlen 0036  
    __size_of_configureIRQ 0022          __end_of_initTimer 3CAA                  _T2CONbits 000FCA  
          ?_envia_byte_lcd 0003               __size_of_pad 00C6                    _isdigit 3B10  
             __size_of_isr 34F8                 ??___xxtofl 0005           ___awmod@dividend 0001  
        __end_of_limpa_lcd 3C92                    _isspace 3982                    _isupper 3AA0  
                  efgtoa@c 0042                    efgtoa@d 0078                    efgtoa@e 0090  
                  efgtoa@f 003E                    efgtoa@g 008C                    efgtoa@h 0082  
                  efgtoa@i 008A                    efgtoa@l 0086                    efgtoa@m 0074  
                  efgtoa@n 0092                    efgtoa@p 007C                    efgtoa@t 0070  
                  efgtoa@u 0094                    efgtoa@w 007F   __end_of_envia_nibble_lcd 3778  
                  atoi@neg 000E                    _tolower 38C6     __end_of_inicializa_lcd 37FA  
                  _strncmp 31EA             __pintcode_body 344A       end_of_initialization 3BBE  
                  floorf@e 0036                    floorf@m 0032                    floorf@u 0038  
                  floorf@x 0028                    fputc@fp 0009              __Lmediumconst 0000  
                  int_func 344A                    fputs@fp 0012          __end_of_vfpfcnvrt 1D94  
               efgtoa@mode 0081                 efgtoa@sign 007A                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6               _configureIRQ 3C38  
                  postinc2 000FDE                 ??_vfprintf 005E      __end_of_configurePins 3C38  
                  strcpy@d 0009                    strlen@a 0003                    strcpy@s 0007  
                  strlen@s 0001                  _PORTCbits 000F82                  _PORTDbits 000F83  
              ___fladd@grs 0010              ___xxtofl@sign 0009                  _TRISBbits 000F93  
                _TRISCbits 000F94                  _TRISDbits 000F95                ___fldiv@grs 0022  
              ___fldiv@rem 001B            ?_inicializa_lcd 0001                ___flmul@grs 000E  
            ?_stateMachine 0001             __end_of___flge 30EC             __end_of___fleq 365A  
              vfpfcnvrt@ap 004C                vfpfcnvrt@ct 005A                vfpfcnvrt@fp 0048  
           __end_of___wmul 3BF2             __end_of_efgtoa 144C             __end_of_floorf 2A4E  
               floorf@F524 00AC   __size_of_caracter_inicio 0042             __end_of_printf 3BA6  
           __end_of_strcpy 3982             __end_of_strlen 3B7E        start_initialization 3BA6  
              __end_of_pad 3386                __end_of_isr 3500              ??_escreve_lcd 0005  
    __end_of___fpclassifyf 31EA             ??_stateMachine 00AA     caracter_inicio@posicao 0007  
              vfprintf@fmt 009A                   ??___flge 0022                   ??___fleq 0009  
                 ??___wmul 0005                   ??_efgtoa 0043                   ??_floorf 002C  
         __CFG_LPT1OSC$OFF 000000                   ??_printf 005E                   ??_strcpy 0005  
                 ??_strlen 0003                  ___fladd@a 0005                  ___fladd@b 0001  
                ___fldiv@a 0013                  ___fldiv@b 000F                  ___flmul@a 0005  
                ___flmul@b 0001                  ___flsub@a 001E                  ___flsub@b 001A  
            __pcstackBANK0 0060              _p1concorrency 00C8          __size_of___xxtofl 01B4  
             _currentState 00D2                  _atoi$1321 0010                  _atoi$1322 0014  
                _atoi$1323 0012        __end_of_escreve_lcd 3CCC              _p2concorrency 00C6  
                __pintcode 0008                   ?___fladd 0001                   ?___fldiv 000F  
                 ?___awdiv 0001                   ?___flneg 0001                   ?___awmod 0001  
                 ?___flmul 0001                   ?___flsub 001A                   ?___fltol 0001  
         ??_envia_byte_lcd 0004          __size_of_vfprintf 0062                __smallconst 0800  
                 ?_isdigit 0001                   ?_isspace 0001                   ?_isupper 0001  
                _initTimer 3C92          ?_envia_nibble_lcd 0001          ??_caracter_inicio 0006  
                 ?_tolower 0007             __size_of_fputc 0096             __size_of_fputs 0044  
                 ?_strncmp 0001             __size_of_reset 006A                  _limpa_lcd 3C78  
           __size_of_setup 001E             __size_of_putch 000A         ??_envia_nibble_lcd 0001  
           ___wmul@product 0005                   i2u530_40 34F4                   i2u530_41 34F0  
                 i2u525_40 345A                   i2u525_41 3456                   i2u526_40 3474  
                 i2u526_41 3470                   i2u527_40 3498                   i2u527_41 3494  
                 i2u528_40 34B2                   i2u528_41 34AE                   i2u529_40 34D6  
                 i2u529_41 34D2           __CFG_WDTPS$32768 000000                  _vfpfcnvrt 190C  
  __size_of_displayPlayers 0150          ___wmul@multiplier 0001           ??_inicializa_lcd 0005  
     __end_of_stateMachine 283C               _isspace$1352 0007                 ?_initTimer 0001  
               vfpfcnvrt@c 005D                 vfpfcnvrt@f 0056                _INTCON3bits 000FF0  
               ?_limpa_lcd 0001                _firstPlayer 00CE                _escreve_lcd 3CBE  
    caracter_inicio@coluna 0005                   __Hrparam 0000                 vfprintf@ap 009C  
                 __Lrparam 0000                 vfprintf@fp 0098           __size_of___fladd 04C0  
         __size_of___fldiv 039A           __size_of___awdiv 00C4           __size_of___flneg 0038  
         __size_of___awmod 00B0           __size_of___flmul 042A           __size_of___flsub 0046  
         __size_of___fltol 0106                 ?_vfpfcnvrt 0048         ___fpclassifyf@F463 00B0  
              _currentTime 00D0                   ___xxtofl 2A4E           __size_of_isdigit 0038  
         __size_of_isspace 0052                   __ptext10 3AA0                   __ptext11 3926  
                 __ptext20 2EE2                   __ptext12 32C0                   __ptext21 39D4  
                 __ptext13 3B48                   __ptext30 2C02                   __ptext22 144C  
                 __ptext14 3A1A                   __ptext31 3982                   __ptext23 3AD8  
                 __ptext15 365A                   __ptext40 3BF2                   __ptext32 3B10  
                 __ptext24 1D94                   __ptext16 3CCC                   __ptext41 36F0  
                 __ptext33 3BCC                   __ptext25 2FE8                   __ptext17 3CBE  
                 __ptext42 3C16                   __ptext34 3A5E                   __ptext26 35B0  
                 __ptext18 283C                   __ptext43 3C38                   __ptext35 2A4E  
                 __ptext27 21BE                   __ptext19 30EC                   __ptext36 3C5A  
                 __ptext28 3500                   __ptext37 3C78                   __ptext29 3386  
                 __ptext38 3C92                   __ptext39 3778           __size_of_isupper 0038  
         __size_of_tolower 0060                 strcpy@dest 0001           __size_of_strncmp 00D6  
   __size_of_configurePins 0022              __size_of_atoi 0190              __size_of_main 0014  
                 efgtoa@fp 003C                   efgtoa@ne 0076                   efgtoa@pp 0072  
                 efgtoa@ou 0060                   int$flags 005E                   _vfprintf 3864  
                printf@fmt 00A0                  putch@data 0006                 _INTCONbits 000FF2  
              _player1Time 00B8                _player2Time 00B4                ??_initTimer 0001  
                 isdigit@c 0001                ??_limpa_lcd 0005                   intlevel2 0000  
                 isspace@c 0001                  strcpy@src 0003                   isupper@c 0001  
                strncmp@_l 0001                  strncmp@_r 0003                efgtoa@nmode 007E  
                 printf@ap 00A8                ??_vfpfcnvrt 004E              _vfpfcnvrt$850 0054  
            _vfpfcnvrt$846 0052             _displayPlayers 2D92              _configurePins 3C16  
          _caracter_inicio 3A5E      __size_of_stateMachine 02E4                   tolower@c 0007  
   __size_of___fpclassifyf 00FE       envia_nibble_lcd@dado 0002                   strncmp@l 0008  
                 strncmp@n 0005                   strncmp@r 000A              ___fladd@signs 000D  
             ___fladd@aexp 000E               ___fladd@bexp 000F  __size_of_envia_nibble_lcd 0088  
             _stateMachine 2558  
