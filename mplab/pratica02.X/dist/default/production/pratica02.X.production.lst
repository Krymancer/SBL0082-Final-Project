

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Nov 24 01:34:55 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _PORTDbits	set	3971
    52  0000                     _INTCON3bits	set	4080
    53  0000                     _INTCON3	set	4080
    54  0000                     _INTCON2	set	4081
    55  0000                     _INTCONbits	set	4082
    56  0000                     _TRISBbits	set	3987
    57  0000                     _TRISDbits	set	3989
    58  0000                     _PEIE	set	32662
    59  0000                     _ADIE	set	31982
    60                           
    61                           ; #config settings
    62  0000                     
    63                           	psect	cinit
    64  000100                     __pcinit:
    65                           	opt callstack 0
    66  000100                     start_initialization:
    67                           	opt callstack 0
    68  000100                     __initialization:
    69                           	opt callstack 0
    70  000100                     end_of_initialization:
    71                           	opt callstack 0
    72  000100                     __end_of__initialization:
    73                           	opt callstack 0
    74  000100  9002               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    75  000102  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    76  000104  0100               	movlb	0
    77  000106  EF7A  F000         	goto	_main	;jump to C main() function
    78                           
    79                           	psect	cstackCOMRAM
    80  000001                     __pcstackCOMRAM:
    81                           	opt callstack 0
    82  000001                     ??_isr:
    83                           
    84                           ; 1 bytes @ 0x0
    85  000001                     	ds	1
    86  000002                     
    87                           ; 1 bytes @ 0x1
    88 ;;
    89 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    90 ;;
    91 ;; *************** function _main *****************
    92 ;; Defined at:
    93 ;;		line 61 in file "main.c"
    94 ;; Parameters:    Size  Location     Type
    95 ;;		None
    96 ;; Auto vars:     Size  Location     Type
    97 ;;		None
    98 ;; Return value:  Size  Location     Type
    99 ;;                  1    wreg      void 
   100 ;; Registers used:
   101 ;;		wreg, status,2, cstack
   102 ;; Tracked objects:
   103 ;;		On entry : 0/0
   104 ;;		On exit  : 0/0
   105 ;;		Unchanged: 0/0
   106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   107 ;;      Params:         0       0       0       0       0       0       0       0       0
   108 ;;      Locals:         0       0       0       0       0       0       0       0       0
   109 ;;      Temps:          0       0       0       0       0       0       0       0       0
   110 ;;      Totals:         0       0       0       0       0       0       0       0       0
   111 ;;Total ram usage:        0 bytes
   112 ;; Hardware stack levels required when called:    3
   113 ;; This function calls:
   114 ;;		_setup
   115 ;; This function is called by:
   116 ;;		Startup code after reset
   117 ;; This function uses a non-reentrant model
   118 ;;
   119                           
   120                           	psect	text0
   121  0000F4                     __ptext0:
   122                           	opt callstack 0
   123  0000F4                     _main:
   124                           	opt callstack 28
   125  0000F4                     
   126                           ;main.c: 62:     setup();
   127  0000F4  EC72  F000         	call	_setup	;wreg free
   128  0000F8                     l32:
   129  0000F8  EF7C  F000         	goto	l32
   130  0000FC  EF07  F000         	goto	start
   131  000100                     __end_of_main:
   132                           	opt callstack 0
   133                           
   134 ;; *************** function _setup *****************
   135 ;; Defined at:
   136 ;;		line 52 in file "main.c"
   137 ;; Parameters:    Size  Location     Type
   138 ;;		None
   139 ;; Auto vars:     Size  Location     Type
   140 ;;		None
   141 ;; Return value:  Size  Location     Type
   142 ;;                  1    wreg      void 
   143 ;; Registers used:
   144 ;;		wreg, status,2, cstack
   145 ;; Tracked objects:
   146 ;;		On entry : 0/0
   147 ;;		On exit  : 0/0
   148 ;;		Unchanged: 0/0
   149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   150 ;;      Params:         0       0       0       0       0       0       0       0       0
   151 ;;      Locals:         0       0       0       0       0       0       0       0       0
   152 ;;      Temps:          0       0       0       0       0       0       0       0       0
   153 ;;      Totals:         0       0       0       0       0       0       0       0       0
   154 ;;Total ram usage:        0 bytes
   155 ;; Hardware stack levels used:    1
   156 ;; Hardware stack levels required when called:    2
   157 ;; This function calls:
   158 ;;		_configureIRQ
   159 ;;		_configurePins
   160 ;; This function is called by:
   161 ;;		_main
   162 ;; This function uses a non-reentrant model
   163 ;;
   164                           
   165                           	psect	text1
   166  0000E4                     __ptext1:
   167                           	opt callstack 0
   168  0000E4                     _setup:
   169                           	opt callstack 28
   170  0000E4                     
   171                           ;main.c: 53:     PORTDbits.RD0 = 0;
   172  0000E4  9083               	bcf	131,0,c	;volatile
   173                           
   174                           ;main.c: 54:     PORTDbits.RD1 = 0;
   175  0000E6  9283               	bcf	131,1,c	;volatile
   176                           
   177                           ;main.c: 55:     PORTDbits.RD2 = 0;
   178  0000E8  9483               	bcf	131,2,c	;volatile
   179  0000EA                     
   180                           ;main.c: 57:     configurePins();
   181  0000EA  EC68  F000         	call	_configurePins	;wreg free
   182  0000EE                     
   183                           ;main.c: 58:     configureIRQ();
   184  0000EE  EC57  F000         	call	_configureIRQ	;wreg free
   185  0000F2  0012               	return		;funcret
   186  0000F4                     __end_of_setup:
   187                           	opt callstack 0
   188                           
   189 ;; *************** function _configurePins *****************
   190 ;; Defined at:
   191 ;;		line 15 in file "main.c"
   192 ;; Parameters:    Size  Location     Type
   193 ;;		None
   194 ;; Auto vars:     Size  Location     Type
   195 ;;		None
   196 ;; Return value:  Size  Location     Type
   197 ;;                  1    wreg      void 
   198 ;; Registers used:
   199 ;;		None
   200 ;; Tracked objects:
   201 ;;		On entry : 0/0
   202 ;;		On exit  : 0/0
   203 ;;		Unchanged: 0/0
   204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   205 ;;      Params:         0       0       0       0       0       0       0       0       0
   206 ;;      Locals:         0       0       0       0       0       0       0       0       0
   207 ;;      Temps:          0       0       0       0       0       0       0       0       0
   208 ;;      Totals:         0       0       0       0       0       0       0       0       0
   209 ;;Total ram usage:        0 bytes
   210 ;; Hardware stack levels used:    1
   211 ;; Hardware stack levels required when called:    1
   212 ;; This function calls:
   213 ;;		Nothing
   214 ;; This function is called by:
   215 ;;		_setup
   216 ;; This function uses a non-reentrant model
   217 ;;
   218                           
   219                           	psect	text2
   220  0000D0                     __ptext2:
   221                           	opt callstack 0
   222  0000D0                     _configurePins:
   223                           	opt callstack 28
   224  0000D0                     
   225                           ;main.c: 16:     TRISDbits.RD0 = 0;
   226  0000D0  9095               	bcf	149,0,c	;volatile
   227                           
   228                           ;main.c: 17:     TRISDbits.RD1 = 0;
   229  0000D2  9295               	bcf	149,1,c	;volatile
   230                           
   231                           ;main.c: 18:     TRISDbits.RD2 = 0;
   232  0000D4  9495               	bcf	149,2,c	;volatile
   233                           
   234                           ;main.c: 20:     TRISBbits.RB0 = 1;
   235  0000D6  8093               	bsf	147,0,c	;volatile
   236                           
   237                           ;main.c: 21:     TRISBbits.RB1 = 1;
   238  0000D8  8293               	bsf	147,1,c	;volatile
   239                           
   240                           ;main.c: 22:     TRISBbits.RB2 = 1;
   241  0000DA  8493               	bsf	147,2,c	;volatile
   242                           
   243                           ;main.c: 24:     TRISBbits.TRISB0 = 1;
   244  0000DC  8093               	bsf	147,0,c	;volatile
   245                           
   246                           ;main.c: 25:     TRISBbits.TRISB1 = 1;
   247  0000DE  8293               	bsf	147,1,c	;volatile
   248                           
   249                           ;main.c: 26:     TRISBbits.TRISB2 = 1;
   250  0000E0  8493               	bsf	147,2,c	;volatile
   251  0000E2  0012               	return		;funcret
   252  0000E4                     __end_of_configurePins:
   253                           	opt callstack 0
   254                           
   255 ;; *************** function _configureIRQ *****************
   256 ;; Defined at:
   257 ;;		line 29 in file "main.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;		None
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg, status,2
   266 ;; Tracked objects:
   267 ;;		On entry : 0/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   271 ;;      Params:         0       0       0       0       0       0       0       0       0
   272 ;;      Locals:         0       0       0       0       0       0       0       0       0
   273 ;;      Temps:          0       0       0       0       0       0       0       0       0
   274 ;;      Totals:         0       0       0       0       0       0       0       0       0
   275 ;;Total ram usage:        0 bytes
   276 ;; Hardware stack levels used:    1
   277 ;; Hardware stack levels required when called:    1
   278 ;; This function calls:
   279 ;;		Nothing
   280 ;; This function is called by:
   281 ;;		_setup
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	text3
   286  0000AE                     __ptext3:
   287                           	opt callstack 0
   288  0000AE                     _configureIRQ:
   289                           	opt callstack 28
   290  0000AE                     
   291                           ;main.c: 30:     ADIE = 0;
   292  0000AE  9C9D               	bcf	3997,6,c	;volatile
   293                           
   294                           ;main.c: 31:     PEIE = 1;
   295  0000B0  8CF2               	bsf	4082,6,c	;volatile
   296                           
   297                           ;main.c: 32:     (INTCONbits.GIE = 1);
   298  0000B2  8EF2               	bsf	242,7,c	;volatile
   299  0000B4                     
   300                           ;main.c: 34:     INTCON2 = 0x00;
   301  0000B4  0E00               	movlw	0
   302  0000B6  6EF1               	movwf	241,c	;volatile
   303                           
   304                           ;main.c: 35:     INTCON3 = 0x00;
   305  0000B8  0E00               	movlw	0
   306  0000BA  6EF0               	movwf	240,c	;volatile
   307  0000BC                     
   308                           ;main.c: 37:     INTCONbits.INT0IF = 0;
   309  0000BC  92F2               	bcf	242,1,c	;volatile
   310  0000BE                     
   311                           ;main.c: 38:     INTCONbits.INT0IE = 1;
   312  0000BE  88F2               	bsf	242,4,c	;volatile
   313  0000C0                     
   314                           ;main.c: 40:     INTCON3bits.INT1F = 0;
   315  0000C0  90F0               	bcf	240,0,c	;volatile
   316  0000C2                     
   317                           ;main.c: 41:     INTCON3bits.INT1E = 1;
   318  0000C2  86F0               	bsf	240,3,c	;volatile
   319  0000C4                     
   320                           ;main.c: 43:     INTCON3bits.INT2F = 0;
   321  0000C4  92F0               	bcf	240,1,c	;volatile
   322  0000C6                     
   323                           ;main.c: 44:     INTCON3bits.INT2E = 1;
   324  0000C6  88F0               	bsf	240,4,c	;volatile
   325  0000C8                     
   326                           ;main.c: 46:     INTCON3bits.INT1IF = 0;
   327  0000C8  90F0               	bcf	240,0,c	;volatile
   328  0000CA                     
   329                           ;main.c: 47:     INTCON3bits.INT2IF = 0;
   330  0000CA  92F0               	bcf	240,1,c	;volatile
   331  0000CC                     
   332                           ;main.c: 48:     INTCONbits.GIE = 1;
   333  0000CC  8EF2               	bsf	242,7,c	;volatile
   334  0000CE  0012               	return		;funcret
   335  0000D0                     __end_of_configureIRQ:
   336                           	opt callstack 0
   337                           
   338 ;; *************** function _isr *****************
   339 ;; Defined at:
   340 ;;		line 67 in file "main.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, status,2, status,0
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   354 ;;      Params:         0       0       0       0       0       0       0       0       0
   355 ;;      Locals:         0       0       0       0       0       0       0       0       0
   356 ;;      Temps:          1       0       0       0       0       0       0       0       0
   357 ;;      Totals:         1       0       0       0       0       0       0       0       0
   358 ;;Total ram usage:        1 bytes
   359 ;; Hardware stack levels used:    1
   360 ;; This function calls:
   361 ;;		Nothing
   362 ;; This function is called by:
   363 ;;		Interrupt level 2
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367                           	psect	intcode
   368  000008                     __pintcode:
   369                           	opt callstack 0
   370  000008                     _isr:
   371                           	opt callstack 28
   372                           
   373                           ;incstack = 0
   374  000008  8202               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   375  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   376                           
   377                           	psect	intcode_body
   378  000012                     __pintcode_body:
   379                           	opt callstack 28
   380  000012                     int_func:
   381                           	opt callstack 28
   382  000012  0006               	pop		; remove dummy address from shadow register refresh
   383  000014                     
   384                           ;main.c: 68:     if(INTCONbits.INT0IF) PORTDbits.RD0 = ~(PORTDbits.RD0);
   385  000014  A2F2               	btfss	242,1,c	;volatile
   386  000016  EF0F  F000         	goto	i2u1_41
   387  00001A  EF11  F000         	goto	i2u1_40
   388  00001E                     i2u1_41:
   389  00001E  EF21  F000         	goto	i2l755
   390  000022                     i2u1_40:
   391  000022  B083               	btfsc	131,0,c	;volatile
   392  000024  EF16  F000         	goto	i2u2_41
   393  000028  EF19  F000         	goto	i2u2_40
   394  00002C                     i2u2_41:
   395  00002C  0E01               	movlw	1
   396  00002E  EF1A  F000         	goto	i2u2_46
   397  000032                     i2u2_40:
   398  000032  0E00               	movlw	0
   399  000034                     i2u2_46:
   400  000034  0AFF               	xorlw	255
   401  000036  6E01               	movwf	??_isr^0,c
   402  000038  5083               	movf	131,w,c	;volatile
   403  00003A  1801               	xorwf	??_isr^0,w,c
   404  00003C  0BFE               	andlw	-2
   405  00003E  1801               	xorwf	??_isr^0,w,c
   406  000040  6E83               	movwf	131,c	;volatile
   407  000042                     i2l755:
   408                           
   409                           ;main.c: 70:     if(INTCON3bits.INT1IF) PORTDbits.RD1 = ~(PORTDbits.RD1);
   410  000042  A0F0               	btfss	240,0,c	;volatile
   411  000044  EF26  F000         	goto	i2u3_41
   412  000048  EF28  F000         	goto	i2u3_40
   413  00004C                     i2u3_41:
   414  00004C  EF39  F000         	goto	i2l759
   415  000050                     i2u3_40:
   416  000050  B283               	btfsc	131,1,c	;volatile
   417  000052  EF2D  F000         	goto	i2u4_41
   418  000056  EF30  F000         	goto	i2u4_40
   419  00005A                     i2u4_41:
   420  00005A  0E01               	movlw	1
   421  00005C  EF31  F000         	goto	i2u4_46
   422  000060                     i2u4_40:
   423  000060  0E00               	movlw	0
   424  000062                     i2u4_46:
   425  000062  0AFF               	xorlw	255
   426  000064  6E01               	movwf	??_isr^0,c
   427  000066  4601               	rlncf	??_isr^0,f,c
   428  000068  5083               	movf	131,w,c	;volatile
   429  00006A  1801               	xorwf	??_isr^0,w,c
   430  00006C  0BFD               	andlw	-3
   431  00006E  1801               	xorwf	??_isr^0,w,c
   432  000070  6E83               	movwf	131,c	;volatile
   433  000072                     i2l759:
   434                           
   435                           ;main.c: 72:     if(INTCON3bits.INT2IF) PORTDbits.RD2 = ~(PORTDbits.RD2);
   436  000072  A2F0               	btfss	240,1,c	;volatile
   437  000074  EF3E  F000         	goto	i2u5_41
   438  000078  EF40  F000         	goto	i2u5_40
   439  00007C                     i2u5_41:
   440  00007C  EF52  F000         	goto	i2l763
   441  000080                     i2u5_40:
   442  000080  B483               	btfsc	131,2,c	;volatile
   443  000082  EF45  F000         	goto	i2u6_41
   444  000086  EF48  F000         	goto	i2u6_40
   445  00008A                     i2u6_41:
   446  00008A  0E01               	movlw	1
   447  00008C  EF49  F000         	goto	i2u6_46
   448  000090                     i2u6_40:
   449  000090  0E00               	movlw	0
   450  000092                     i2u6_46:
   451  000092  0AFF               	xorlw	255
   452  000094  6E01               	movwf	??_isr^0,c
   453  000096  4601               	rlncf	??_isr^0,f,c
   454  000098  4601               	rlncf	??_isr^0,f,c
   455  00009A  5083               	movf	131,w,c	;volatile
   456  00009C  1801               	xorwf	??_isr^0,w,c
   457  00009E  0BFB               	andlw	-5
   458  0000A0  1801               	xorwf	??_isr^0,w,c
   459  0000A2  6E83               	movwf	131,c	;volatile
   460  0000A4                     i2l763:
   461                           
   462                           ;main.c: 74:     INTCONbits.INT0IF=0;
   463  0000A4  92F2               	bcf	242,1,c	;volatile
   464  0000A6                     
   465                           ;main.c: 75:     INTCON3bits.INT1IF = 0;
   466  0000A6  90F0               	bcf	240,0,c	;volatile
   467  0000A8                     
   468                           ;main.c: 76:     INTCON3bits.INT2IF = 0;
   469  0000A8  92F0               	bcf	240,1,c	;volatile
   470  0000AA  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   471  0000AC  0011               	retfie		f
   472  0000AE                     __end_of_isr:
   473                           	opt callstack 0
   474  0000                     
   475                           	psect	rparam
   476  0000                     
   477                           	psect	temp
   478  000002                     btemp:
   479                           	opt callstack 0
   480  000002                     	ds	1
   481  0000                     int$flags	set	btemp
   482  0000                     wtemp8	set	btemp+1
   483  0000                     ttemp5	set	btemp+1
   484  0000                     ttemp6	set	btemp+4
   485  0000                     ttemp7	set	btemp+8
   486                           tosu	equ	0xFFF
   487                           tosh	equ	0xFFE
   488                           tosl	equ	0xFFD
   489                           stkptr	equ	0xFFC
   490                           pclatu	equ	0xFFB
   491                           pclath	equ	0xFFA
   492                           pcl	equ	0xFF9
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           prodh	equ	0xFF4
   498                           prodl	equ	0xFF3
   499                           indf0	equ	0xFEF
   500                           postinc0	equ	0xFEE
   501                           postdec0	equ	0xFED
   502                           preinc0	equ	0xFEC
   503                           plusw0	equ	0xFEB
   504                           fsr0h	equ	0xFEA
   505                           fsr0l	equ	0xFE9
   506                           wreg	equ	0xFE8
   507                           indf1	equ	0xFE7
   508                           postinc1	equ	0xFE6
   509                           postdec1	equ	0xFE5
   510                           preinc1	equ	0xFE4
   511                           plusw1	equ	0xFE3
   512                           fsr1h	equ	0xFE2
   513                           fsr1l	equ	0xFE1
   514                           bsr	equ	0xFE0
   515                           indf2	equ	0xFDF
   516                           postinc2	equ	0xFDE
   517                           postdec2	equ	0xFDD
   518                           preinc2	equ	0xFDC
   519                           plusw2	equ	0xFDB
   520                           fsr2h	equ	0xFDA
   521                           fsr2l	equ	0xFD9
   522                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      1       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                       _configureIRQ
                      _configurePins
 ---------------------------------------------------------------------------------
 (2) _configurePins                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configureIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _configureIRQ
     _configurePins

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      1       1       1        1.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Nov 24 01:34:55 2022

          ?_configureIRQ 0001                       l21 00E2                       l24 00CE  
                     l32 00F8                       l33 00F8                       l27 00F2  
         ?_configurePins 0001                      l721 00AE                      l731 00C2  
                    l723 00B4                      l741 00CC                      l733 00C4  
                    l725 00BC                      l735 00C6                      l727 00BE  
                    l719 00D0                      l743 00E4                      l737 00C8  
                    l729 00C0                      l745 00EA                      l739 00CA  
                    l747 00EE                      l749 00F4                      _isr 0008  
                   _ADIE 007CEE                     ?_isr 0001                     _PEIE 007F96  
                   i2l43 00AA                     _main 00F4                     btemp 0002  
                   start 000E           ??_configureIRQ 0002             ___param_bank 000000  
                  ??_isr 0001                    ?_main 0001                    i2l751 0014  
                  i2l761 0080                    i2l753 0022                    i2l763 00A4  
                  i2l755 0042                    i2l765 00A6                    i2l757 0050  
                  i2l767 00A8                    i2l759 0072                    _setup 00E4  
                  ttemp5 0003                    ttemp6 0006                    ttemp7 000A  
                  wtemp8 0003          __initialization 0100             __end_of_main 0100  
        ??_configurePins 0002                   ??_main 0002            __activetblptr 000000  
                 ?_setup 0001                   i2u1_40 0022                   i2u1_41 001E  
                 i2u2_40 0032                   i2u2_41 002C                   i2u2_46 0034  
                 i2u3_40 0050                   i2u3_41 004C                   i2u4_40 0060  
                 i2u4_41 005A                   i2u4_46 0062                   i2u5_40 0080  
                 i2u5_41 007C                   i2u6_40 0090                   i2u6_41 008A  
                 i2u6_46 0092     __end_of_configureIRQ 00D0               __accesstop 0060  
__end_of__initialization 0100          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_setup 00F4                  ??_setup 0002  
                _INTCON2 000FF1                  _INTCON3 000FF0                  __Hparam 0000  
                __Lparam 0000                  __pcinit 0100                  __ramtop 0800  
                __ptext0 00F4                  __ptext1 00E4                  __ptext2 00D0  
                __ptext3 00AE    __size_of_configureIRQ 0022             __size_of_isr 00A6  
         __pintcode_body 0012     end_of_initialization 0100                  int_func 0012  
           _configureIRQ 00AE    __end_of_configurePins 00E4                _PORTDbits 000F83  
              _TRISBbits 000F93                _TRISDbits 000F95      start_initialization 0100  
            __end_of_isr 00AE                __pintcode 0008           __size_of_setup 0010  
            _INTCON3bits 000FF0                 __Hrparam 0000                 __Lrparam 0000  
 __size_of_configurePins 0014            __size_of_main 000C                 int$flags 0002  
             _INTCONbits 000FF2                 intlevel2 0000            _configurePins 00D0  
