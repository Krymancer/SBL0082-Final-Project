

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec 04 23:28:47 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           ; Version 2.10
    62                           ; Generated 31/07/2019 GMT
    63                           ; 
    64                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     _PR2	set	4043
    96  0000                     _T2CONbits	set	4042
    97  0000                     _INTCON3	set	4080
    98  0000                     _INTCON2	set	4081
    99  0000                     _TRISDbits	set	3989
   100  0000                     _TRISBbits	set	3987
   101  0000                     _TRISCbits	set	3988
   102  0000                     _INTCON3bits	set	4080
   103  0000                     _INTCONbits	set	4082
   104  0000                     _PORTDbits	set	3971
   105  0000                     _PORTCbits	set	3970
   106  0000                     _TMR2IE	set	31977
   107  0000                     _PEIE	set	32662
   108  0000                     _ADIE	set	31982
   109  0000                     _TMR2IF	set	31985
   110                           
   111                           	psect	smallconst
   112  000800                     __psmallconst:
   113                           	opt callstack 0
   114  000800  00                 	db	0
   115  000801                     STR_10:
   116  000801  57                 	db	87	;'W'
   117  000802  41                 	db	65	;'A'
   118  000803  49                 	db	73	;'I'
   119  000804  54                 	db	84	;'T'
   120  000805  49                 	db	73	;'I'
   121  000806  4E                 	db	78	;'N'
   122  000807  47                 	db	71	;'G'
   123  000808  2E                 	db	46
   124  000809  2E                 	db	46
   125  00080A  2E                 	db	46
   126  00080B  00                 	db	0
   127  00080C                     STR_1:
   128  00080C  50                 	db	80	;'P'
   129  00080D  31                 	db	49	;'1'
   130  00080E  3A                 	db	58	;':'
   131  00080F  20                 	db	32
   132  000810  25                 	db	37
   133  000811  2E                 	db	46
   134  000812  32                 	db	50	;'2'
   135  000813  66                 	db	102	;'f'
   136  000814  20                 	db	32
   137  000815  73                 	db	115	;'s'
   138  000816  00                 	db	0
   139  000817                     STR_2:
   140  000817  50                 	db	80	;'P'
   141  000818  32                 	db	50	;'2'
   142  000819  3A                 	db	58	;':'
   143  00081A  20                 	db	32
   144  00081B  25                 	db	37
   145  00081C  2E                 	db	46
   146  00081D  32                 	db	50	;'2'
   147  00081E  66                 	db	102	;'f'
   148  00081F  20                 	db	32
   149  000820  73                 	db	115	;'s'
   150  000821  00                 	db	0
   151  000822                     STR_9:
   152  000822  49                 	db	73	;'I'
   153  000823  44                 	db	68	;'D'
   154  000824  4C                 	db	76	;'L'
   155  000825  45                 	db	69	;'E'
   156  000826  2E                 	db	46
   157  000827  2E                 	db	46
   158  000828  2E                 	db	46
   159  000829  00                 	db	0
   160  00082A                     STR_5:
   161  00082A  50                 	db	80	;'P'
   162  00082B  31                 	db	49	;'1'
   163  00082C  3A                 	db	58	;':'
   164  00082D  20                 	db	32
   165  00082E  2D                 	db	45
   166  00082F  20                 	db	32
   167  000830  73                 	db	115	;'s'
   168  000831  00                 	db	0
   169  000832                     STR_4:
   170  000832  50                 	db	80	;'P'
   171  000833  32                 	db	50	;'2'
   172  000834  3A                 	db	58	;':'
   173  000835  20                 	db	32
   174  000836  2D                 	db	45
   175  000837  20                 	db	32
   176  000838  73                 	db	115	;'s'
   177  000839  00                 	db	0
   178  00083A                     STR_11:
   179  00083A  49                 	db	73	;'I'
   180  00083B  4E                 	db	78	;'N'
   181  00083C  46                 	db	70	;'F'
   182  00083D  00                 	db	0
   183  00083E                     STR_15:
   184  00083E  4E                 	db	78	;'N'
   185  00083F  41                 	db	65	;'A'
   186  000840  4E                 	db	78	;'N'
   187  000841  00                 	db	0
   188  000842                     STR_12:
   189  000842  69                 	db	105	;'i'
   190  000843  6E                 	db	110	;'n'
   191  000844  66                 	db	102	;'f'
   192  000845  00                 	db	0
   193  000846                     STR_16:
   194  000846  6E                 	db	110	;'n'
   195  000847  61                 	db	97	;'a'
   196  000848  6E                 	db	110	;'n'
   197  000849  00                 	db	0
   198  00084A                     STR_19:
   199  00084A  6C                 	db	108	;'l'
   200  00084B  66                 	db	102	;'f'
   201  00084C  00                 	db	0
   202  0000                     
   203                           ; #config settings
   204  00084D  00                 	db	0	; dummy byte at the end
   205  0000                     
   206                           	psect	cinit
   207  003AFE                     __pcinit:
   208                           	opt callstack 0
   209  003AFE                     start_initialization:
   210                           	opt callstack 0
   211  003AFE                     __initialization:
   212                           	opt callstack 0
   213                           
   214                           ; Clear objects allocated to BANK1 (80 bytes)
   215  003AFE  EE01  F000         	lfsr	0,__pbssBANK1
   216  003B02  0E50               	movlw	80
   217  003B04                     clear_0:
   218  003B04  6AEE               	clrf	postinc0,c
   219  003B06  06E8               	decf	wreg,f,c
   220  003B08  E1FD               	bnz	clear_0
   221                           
   222                           ; Clear objects allocated to BANK0 (36 bytes)
   223  003B0A  EE00  F0AC         	lfsr	0,__pbssBANK0
   224  003B0E  0E24               	movlw	36
   225  003B10                     clear_1:
   226  003B10  6AEE               	clrf	postinc0,c
   227  003B12  06E8               	decf	wreg,f,c
   228  003B14  E1FD               	bnz	clear_1
   229  003B16                     end_of_initialization:
   230                           	opt callstack 0
   231  003B16                     __end_of__initialization:
   232                           	opt callstack 0
   233  003B16  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   234  003B18  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   235  003B1A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   236  003B1C  6EF8               	movwf	tblptru,c
   237  003B1E  0100               	movlb	0
   238  003B20  EF01  F01E         	goto	_main	;jump to C main() function
   239                           
   240                           	psect	bssBANK0
   241  0000AC                     __pbssBANK0:
   242                           	opt callstack 0
   243  0000AC                     floorf@F524:
   244                           	opt callstack 0
   245  0000AC                     	ds	4
   246  0000B0                     ___fpclassifyf@F463:
   247                           	opt callstack 0
   248  0000B0                     	ds	4
   249  0000B4                     _player2Time:
   250                           	opt callstack 0
   251  0000B4                     	ds	4
   252  0000B8                     _player1Time:
   253                           	opt callstack 0
   254  0000B8                     	ds	4
   255  0000BC                     _nout:
   256                           	opt callstack 0
   257  0000BC                     	ds	2
   258  0000BE                     _width:
   259                           	opt callstack 0
   260  0000BE                     	ds	2
   261  0000C0                     _prec:
   262                           	opt callstack 0
   263  0000C0                     	ds	2
   264  0000C2                     _flags:
   265                           	opt callstack 0
   266  0000C2                     	ds	2
   267  0000C4                     _gameStatus:
   268                           	opt callstack 0
   269  0000C4                     	ds	2
   270  0000C6                     _player2Pressed:
   271                           	opt callstack 0
   272  0000C6                     	ds	2
   273  0000C8                     _player1Pressed:
   274                           	opt callstack 0
   275  0000C8                     	ds	2
   276  0000CA                     _firstPlayer:
   277                           	opt callstack 0
   278  0000CA                     	ds	2
   279  0000CC                     _currentTime:
   280                           	opt callstack 0
   281  0000CC                     	ds	2
   282  0000CE                     _currentState:
   283                           	opt callstack 0
   284  0000CE                     	ds	2
   285                           
   286                           	psect	bssBANK1
   287  000100                     __pbssBANK1:
   288                           	opt callstack 0
   289  000100                     _dbuf:
   290                           	opt callstack 0
   291  000100                     	ds	80
   292                           
   293                           	psect	cstackBANK0
   294  000060                     __pcstackBANK0:
   295                           	opt callstack 0
   296  000060                     efgtoa@ou:
   297                           	opt callstack 0
   298                           
   299                           ; 4 bytes @ 0x0
   300  000060                     	ds	4
   301  000064                     _efgtoa$808:
   302                           	opt callstack 0
   303                           
   304                           ; 2 bytes @ 0x4
   305  000064                     	ds	2
   306  000066                     _efgtoa$809:
   307                           	opt callstack 0
   308                           
   309                           ; 2 bytes @ 0x6
   310  000066                     	ds	2
   311  000068                     _efgtoa$814:
   312                           	opt callstack 0
   313                           
   314                           ; 2 bytes @ 0x8
   315  000068                     	ds	2
   316  00006A                     _efgtoa$818:
   317                           	opt callstack 0
   318                           
   319                           ; 2 bytes @ 0xA
   320  00006A                     	ds	2
   321  00006C                     _efgtoa$819:
   322                           	opt callstack 0
   323                           
   324                           ; 2 bytes @ 0xC
   325  00006C                     	ds	2
   326  00006E                     _efgtoa$820:
   327                           	opt callstack 0
   328                           
   329                           ; 2 bytes @ 0xE
   330  00006E                     	ds	2
   331  000070                     efgtoa@t:
   332                           	opt callstack 0
   333                           
   334                           ; 2 bytes @ 0x10
   335  000070                     	ds	2
   336  000072                     efgtoa@pp:
   337                           	opt callstack 0
   338                           
   339                           ; 2 bytes @ 0x12
   340  000072                     	ds	2
   341  000074                     efgtoa@m:
   342                           	opt callstack 0
   343                           
   344                           ; 2 bytes @ 0x14
   345  000074                     	ds	2
   346  000076                     efgtoa@ne:
   347                           	opt callstack 0
   348                           
   349                           ; 2 bytes @ 0x16
   350  000076                     	ds	2
   351  000078                     efgtoa@d:
   352                           	opt callstack 0
   353                           
   354                           ; 2 bytes @ 0x18
   355  000078                     	ds	2
   356  00007A                     efgtoa@sign:
   357                           	opt callstack 0
   358                           
   359                           ; 2 bytes @ 0x1A
   360  00007A                     	ds	2
   361  00007C                     efgtoa@p:
   362                           	opt callstack 0
   363                           
   364                           ; 2 bytes @ 0x1C
   365  00007C                     	ds	2
   366  00007E                     efgtoa@nmode:
   367                           	opt callstack 0
   368                           
   369                           ; 1 bytes @ 0x1E
   370  00007E                     	ds	1
   371  00007F                     efgtoa@w:
   372                           	opt callstack 0
   373                           
   374                           ; 2 bytes @ 0x1F
   375  00007F                     	ds	2
   376  000081                     efgtoa@mode:
   377                           	opt callstack 0
   378                           
   379                           ; 1 bytes @ 0x21
   380  000081                     	ds	1
   381  000082                     efgtoa@h:
   382                           	opt callstack 0
   383                           
   384                           ; 4 bytes @ 0x22
   385  000082                     	ds	4
   386  000086                     efgtoa@l:
   387                           	opt callstack 0
   388                           
   389                           ; 4 bytes @ 0x26
   390  000086                     	ds	4
   391  00008A                     efgtoa@i:
   392                           	opt callstack 0
   393                           
   394                           ; 2 bytes @ 0x2A
   395  00008A                     	ds	2
   396  00008C                     efgtoa@g:
   397                           	opt callstack 0
   398                           
   399                           ; 4 bytes @ 0x2C
   400  00008C                     	ds	4
   401  000090                     efgtoa@e:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0x30
   405  000090                     	ds	2
   406  000092                     efgtoa@n:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0x32
   410  000092                     	ds	2
   411  000094                     efgtoa@u:
   412                           	opt callstack 0
   413                           
   414                           ; 4 bytes @ 0x34
   415  000094                     	ds	4
   416  000098                     ?_vfprintf:
   417                           	opt callstack 0
   418  000098                     vfprintf@fp:
   419                           	opt callstack 0
   420                           
   421                           ; 2 bytes @ 0x38
   422  000098                     	ds	2
   423  00009A                     vfprintf@fmt:
   424                           	opt callstack 0
   425                           
   426                           ; 2 bytes @ 0x3A
   427  00009A                     	ds	2
   428  00009C                     vfprintf@ap:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0x3C
   432  00009C                     	ds	2
   433  00009E                     vfprintf@cfmt:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0x3E
   437  00009E                     	ds	2
   438  0000A0                     ?_printf:
   439                           	opt callstack 0
   440  0000A0                     printf@fmt:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0x40
   444  0000A0                     	ds	8
   445  0000A8                     printf@ap:
   446                           	opt callstack 0
   447                           
   448                           ; 2 bytes @ 0x48
   449  0000A8                     	ds	2
   450  0000AA                     ??_stateMachine:
   451                           
   452                           ; 1 bytes @ 0x4A
   453  0000AA                     	ds	2
   454                           
   455                           	psect	cstackCOMRAM
   456  000001                     __pcstackCOMRAM:
   457                           	opt callstack 0
   458  000001                     ??_envia_nibble_lcd:
   459  000001                     ?_strlen:
   460                           	opt callstack 0
   461  000001                     ?___fpclassifyf:
   462                           	opt callstack 0
   463  000001                     ?_isupper:
   464                           	opt callstack 0
   465  000001                     ?_isdigit:
   466                           	opt callstack 0
   467  000001                     ?_strncmp:
   468                           	opt callstack 0
   469  000001                     ?_isspace:
   470                           	opt callstack 0
   471  000001                     ?___wmul:
   472                           	opt callstack 0
   473  000001                     ?___awdiv:
   474                           	opt callstack 0
   475  000001                     ?___awmod:
   476                           	opt callstack 0
   477  000001                     ?___fladd:
   478                           	opt callstack 0
   479  000001                     ?___flmul:
   480                           	opt callstack 0
   481  000001                     ?___flneg:
   482                           	opt callstack 0
   483  000001                     ?___fltol:
   484                           	opt callstack 0
   485  000001                     ?___xxtofl:
   486                           	opt callstack 0
   487  000001                     ___wmul@multiplier:
   488                           	opt callstack 0
   489  000001                     ___awdiv@dividend:
   490                           	opt callstack 0
   491  000001                     ___awmod@dividend:
   492                           	opt callstack 0
   493  000001                     isdigit@c:
   494                           	opt callstack 0
   495  000001                     isspace@c:
   496                           	opt callstack 0
   497  000001                     isupper@c:
   498                           	opt callstack 0
   499  000001                     strcpy@dest:
   500                           	opt callstack 0
   501  000001                     strlen@s:
   502                           	opt callstack 0
   503  000001                     strncmp@_l:
   504                           	opt callstack 0
   505  000001                     ___fleq@ff1:
   506                           	opt callstack 0
   507  000001                     ___flneg@f1:
   508                           	opt callstack 0
   509  000001                     ___fltol@f1:
   510                           	opt callstack 0
   511  000001                     ___fladd@b:
   512                           	opt callstack 0
   513  000001                     ___flmul@b:
   514                           	opt callstack 0
   515  000001                     ___xxtofl@val:
   516                           	opt callstack 0
   517  000001                     ___fpclassifyf@x:
   518                           	opt callstack 0
   519                           
   520                           ; 4 bytes @ 0x0
   521  000001                     	ds	1
   522  000002                     envia_nibble_lcd@dado:
   523                           	opt callstack 0
   524                           
   525                           ; 1 bytes @ 0x1
   526  000002                     	ds	1
   527  000003                     ??_isupper:
   528  000003                     ??_isdigit:
   529  000003                     ??_isspace:
   530  000003                     envia_byte_lcd@dado:
   531                           	opt callstack 0
   532  000003                     ___wmul@multiplicand:
   533                           	opt callstack 0
   534  000003                     ___awdiv@divisor:
   535                           	opt callstack 0
   536  000003                     ___awmod@divisor:
   537                           	opt callstack 0
   538  000003                     strcpy@src:
   539                           	opt callstack 0
   540  000003                     strlen@a:
   541                           	opt callstack 0
   542  000003                     strncmp@_r:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x2
   546  000003                     	ds	1
   547  000004                     envia_byte_lcd@endereco:
   548                           	opt callstack 0
   549                           
   550                           ; 1 bytes @ 0x3
   551  000004                     	ds	1
   552  000005                     ??_limpa_lcd:
   553  000005                     ??___fpclassifyf:
   554  000005                     ??_strcpy:
   555  000005                     ??_inicializa_lcd:
   556  000005                     ??___fltol:
   557  000005                     ??___xxtofl:
   558  000005                     escreve_lcd@c:
   559                           	opt callstack 0
   560  000005                     caracter_inicio@coluna:
   561                           	opt callstack 0
   562  000005                     ___awdiv@counter:
   563                           	opt callstack 0
   564  000005                     ___awmod@counter:
   565                           	opt callstack 0
   566  000005                     ___wmul@product:
   567                           	opt callstack 0
   568  000005                     strncmp@n:
   569                           	opt callstack 0
   570  000005                     ___fleq@ff2:
   571                           	opt callstack 0
   572  000005                     ___fladd@a:
   573                           	opt callstack 0
   574  000005                     ___flmul@a:
   575                           	opt callstack 0
   576                           
   577                           ; 4 bytes @ 0x4
   578  000005                     	ds	1
   579  000006                     putch@data:
   580                           	opt callstack 0
   581  000006                     caracter_inicio@linha:
   582                           	opt callstack 0
   583  000006                     ___awdiv@sign:
   584                           	opt callstack 0
   585  000006                     ___awmod@sign:
   586                           	opt callstack 0
   587                           
   588                           ; 1 bytes @ 0x5
   589  000006                     	ds	1
   590  000007                     ??_strncmp:
   591  000007                     ?_tolower:
   592                           	opt callstack 0
   593  000007                     caracter_inicio@posicao:
   594                           	opt callstack 0
   595  000007                     _isspace$1340:
   596                           	opt callstack 0
   597  000007                     ___awdiv@quotient:
   598                           	opt callstack 0
   599  000007                     fputc@c:
   600                           	opt callstack 0
   601  000007                     strcpy@s:
   602                           	opt callstack 0
   603  000007                     tolower@c:
   604                           	opt callstack 0
   605                           
   606                           ; 2 bytes @ 0x6
   607  000007                     	ds	1
   608  000008                     ?_atoi:
   609                           	opt callstack 0
   610  000008                     atoi@s:
   611                           	opt callstack 0
   612  000008                     strncmp@l:
   613                           	opt callstack 0
   614                           
   615                           ; 2 bytes @ 0x7
   616  000008                     	ds	1
   617  000009                     ??_tolower:
   618  000009                     ??___fladd:
   619  000009                     ??___flmul:
   620  000009                     ??___fleq:
   621  000009                     ___fltol@sign1:
   622                           	opt callstack 0
   623  000009                     ___xxtofl@sign:
   624                           	opt callstack 0
   625  000009                     ___fpclassifyf@e:
   626                           	opt callstack 0
   627  000009                     fputc@fp:
   628                           	opt callstack 0
   629  000009                     strcpy@d:
   630                           	opt callstack 0
   631                           
   632                           ; 2 bytes @ 0x8
   633  000009                     	ds	1
   634  00000A                     ??_atoi:
   635  00000A                     ___fltol@exp1:
   636                           	opt callstack 0
   637  00000A                     ___xxtofl@exp:
   638                           	opt callstack 0
   639  00000A                     strncmp@r:
   640                           	opt callstack 0
   641                           
   642                           ; 2 bytes @ 0x9
   643  00000A                     	ds	1
   644  00000B                     ??_fputc:
   645  00000B                     ___xxtofl@arg:
   646                           	opt callstack 0
   647  00000B                     ___fpclassifyf@u:
   648                           	opt callstack 0
   649                           
   650                           ; 4 bytes @ 0xA
   651  00000B                     	ds	2
   652  00000D                     ___fladd@signs:
   653                           	opt callstack 0
   654  00000D                     ___flmul@sign:
   655                           	opt callstack 0
   656  00000D                     _tolower$1414:
   657                           	opt callstack 0
   658                           
   659                           ; 2 bytes @ 0xC
   660  00000D                     	ds	1
   661  00000E                     ___fladd@aexp:
   662                           	opt callstack 0
   663  00000E                     atoi@neg:
   664                           	opt callstack 0
   665  00000E                     ___flmul@grs:
   666                           	opt callstack 0
   667                           
   668                           ; 4 bytes @ 0xD
   669  00000E                     	ds	1
   670  00000F                     ?___fldiv:
   671                           	opt callstack 0
   672  00000F                     ___fladd@bexp:
   673                           	opt callstack 0
   674  00000F                     ___fldiv@b:
   675                           	opt callstack 0
   676                           
   677                           ; 4 bytes @ 0xE
   678  00000F                     	ds	1
   679  000010                     ___fladd@grs:
   680                           	opt callstack 0
   681  000010                     _atoi$1309:
   682                           	opt callstack 0
   683  000010                     fputs@s:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0xF
   687  000010                     	ds	2
   688  000012                     ___flmul@aexp:
   689                           	opt callstack 0
   690  000012                     _atoi$1311:
   691                           	opt callstack 0
   692  000012                     fputs@fp:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0x11
   696  000012                     	ds	1
   697  000013                     ___flmul@bexp:
   698                           	opt callstack 0
   699  000013                     ___fldiv@a:
   700                           	opt callstack 0
   701                           
   702                           ; 4 bytes @ 0x12
   703  000013                     	ds	1
   704  000014                     _atoi$1310:
   705                           	opt callstack 0
   706  000014                     fputs@c:
   707                           	opt callstack 0
   708  000014                     ___flmul@prod:
   709                           	opt callstack 0
   710                           
   711                           ; 4 bytes @ 0x13
   712  000014                     	ds	1
   713  000015                     atoi@n:
   714                           	opt callstack 0
   715  000015                     fputs@i:
   716                           	opt callstack 0
   717                           
   718                           ; 2 bytes @ 0x14
   719  000015                     	ds	2
   720  000017                     ??___fldiv:
   721  000017                     ?_pad:
   722                           	opt callstack 0
   723  000017                     pad@fp:
   724                           	opt callstack 0
   725                           
   726                           ; 2 bytes @ 0x16
   727  000017                     	ds	1
   728  000018                     ___flmul@temp:
   729                           	opt callstack 0
   730                           
   731                           ; 2 bytes @ 0x17
   732  000018                     	ds	1
   733  000019                     pad@buf:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0x18
   737  000019                     	ds	1
   738  00001A                     ?___flsub:
   739                           	opt callstack 0
   740  00001A                     ___flge@ff1:
   741                           	opt callstack 0
   742  00001A                     ___flsub@b:
   743                           	opt callstack 0
   744                           
   745                           ; 4 bytes @ 0x19
   746  00001A                     	ds	1
   747  00001B                     pad@p:
   748                           	opt callstack 0
   749  00001B                     ___fldiv@rem:
   750                           	opt callstack 0
   751                           
   752                           ; 4 bytes @ 0x1A
   753  00001B                     	ds	2
   754  00001D                     ??_pad:
   755                           
   756                           ; 1 bytes @ 0x1C
   757  00001D                     	ds	1
   758  00001E                     pad@i:
   759                           	opt callstack 0
   760  00001E                     ___flge@ff2:
   761                           	opt callstack 0
   762  00001E                     ___flsub@a:
   763                           	opt callstack 0
   764                           
   765                           ; 4 bytes @ 0x1D
   766  00001E                     	ds	1
   767  00001F                     ___fldiv@sign:
   768                           	opt callstack 0
   769                           
   770                           ; 1 bytes @ 0x1E
   771  00001F                     	ds	1
   772  000020                     pad@w:
   773                           	opt callstack 0
   774  000020                     ___fldiv@new_exp:
   775                           	opt callstack 0
   776                           
   777                           ; 2 bytes @ 0x1F
   778  000020                     	ds	2
   779  000022                     ??___flge:
   780  000022                     ___fldiv@grs:
   781                           	opt callstack 0
   782                           
   783                           ; 4 bytes @ 0x21
   784  000022                     	ds	4
   785  000026                     ___fldiv@bexp:
   786                           	opt callstack 0
   787                           
   788                           ; 1 bytes @ 0x25
   789  000026                     	ds	1
   790  000027                     ___fldiv@aexp:
   791                           	opt callstack 0
   792                           
   793                           ; 1 bytes @ 0x26
   794  000027                     	ds	1
   795  000028                     ?_floorf:
   796                           	opt callstack 0
   797  000028                     floorf@x:
   798                           	opt callstack 0
   799                           
   800                           ; 4 bytes @ 0x27
   801  000028                     	ds	4
   802  00002C                     ??_floorf:
   803                           
   804                           ; 1 bytes @ 0x2B
   805  00002C                     	ds	6
   806  000032                     floorf@m:
   807                           	opt callstack 0
   808                           
   809                           ; 4 bytes @ 0x31
   810  000032                     	ds	4
   811  000036                     floorf@e:
   812                           	opt callstack 0
   813                           
   814                           ; 2 bytes @ 0x35
   815  000036                     	ds	2
   816  000038                     floorf@u:
   817                           	opt callstack 0
   818                           
   819                           ; 4 bytes @ 0x37
   820  000038                     	ds	4
   821  00003C                     ?_efgtoa:
   822                           	opt callstack 0
   823  00003C                     efgtoa@fp:
   824                           	opt callstack 0
   825                           
   826                           ; 2 bytes @ 0x3B
   827  00003C                     	ds	2
   828  00003E                     efgtoa@f:
   829                           	opt callstack 0
   830                           
   831                           ; 4 bytes @ 0x3D
   832  00003E                     	ds	4
   833  000042                     efgtoa@c:
   834                           	opt callstack 0
   835                           
   836                           ; 1 bytes @ 0x41
   837  000042                     	ds	1
   838  000043                     ??_efgtoa:
   839                           
   840                           ; 1 bytes @ 0x42
   841  000043                     	ds	5
   842  000048                     ?_vfpfcnvrt:
   843                           	opt callstack 0
   844  000048                     vfpfcnvrt@fp:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0x47
   848  000048                     	ds	2
   849  00004A                     vfpfcnvrt@fmt:
   850                           	opt callstack 0
   851                           
   852                           ; 2 bytes @ 0x49
   853  00004A                     	ds	2
   854  00004C                     vfpfcnvrt@ap:
   855                           	opt callstack 0
   856                           
   857                           ; 2 bytes @ 0x4B
   858  00004C                     	ds	2
   859  00004E                     ??_vfpfcnvrt:
   860                           
   861                           ; 1 bytes @ 0x4D
   862  00004E                     	ds	4
   863  000052                     _vfpfcnvrt$834:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0x51
   867  000052                     	ds	2
   868  000054                     _vfpfcnvrt$838:
   869                           	opt callstack 0
   870                           
   871                           ; 2 bytes @ 0x53
   872  000054                     	ds	2
   873  000056                     vfpfcnvrt@f:
   874                           	opt callstack 0
   875                           
   876                           ; 4 bytes @ 0x55
   877  000056                     	ds	4
   878  00005A                     vfpfcnvrt@ct:
   879                           	opt callstack 0
   880                           
   881                           ; 3 bytes @ 0x59
   882  00005A                     	ds	3
   883  00005D                     vfpfcnvrt@c:
   884                           	opt callstack 0
   885                           
   886                           ; 1 bytes @ 0x5C
   887  00005D                     	ds	1
   888  00005E                     
   889                           ; 1 bytes @ 0x5D
   890 ;;
   891 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   892 ;;
   893 ;; *************** function _main *****************
   894 ;; Defined at:
   895 ;;		line 134 in file "main.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   909 ;;      Params:         0       0       0       0       0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0       0       0       0       0
   912 ;;      Totals:         0       0       0       0       0       0       0       0       0
   913 ;;Total ram usage:        0 bytes
   914 ;; Hardware stack levels required when called:   14
   915 ;; This function calls:
   916 ;;		_reset
   917 ;;		_setup
   918 ;;		_stateMachine
   919 ;; This function is called by:
   920 ;;		Startup code after reset
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text0
   925  003C02                     __ptext0:
   926                           	opt callstack 0
   927  003C02                     _main:
   928                           	opt callstack 17
   929  003C02                     
   930                           ;main.c: 136:     setup();
   931  003C02  ECD9  F01D         	call	_setup	;wreg free
   932  003C06                     
   933                           ;main.c: 137:     reset();
   934  003C06  EC74  F01B         	call	_reset	;wreg free
   935  003C0A                     l4254:
   936  003C0A  ECAC  F012         	call	_stateMachine	;wreg free
   937  003C0E  EF05  F01E         	goto	l4254
   938  003C12  EF07  F000         	goto	start
   939  003C16                     __end_of_main:
   940                           	opt callstack 0
   941                           
   942 ;; *************** function _stateMachine *****************
   943 ;; Defined at:
   944 ;;		line 58 in file "main.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   958 ;;      Params:         0       0       0       0       0       0       0       0       0
   959 ;;      Locals:         0       0       0       0       0       0       0       0       0
   960 ;;      Temps:          0       2       0       0       0       0       0       0       0
   961 ;;      Totals:         0       2       0       0       0       0       0       0       0
   962 ;;Total ram usage:        2 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:   13
   965 ;; This function calls:
   966 ;;		___fldiv
   967 ;;		___xxtofl
   968 ;;		_displayPlayers
   969 ;;		_limpa_lcd
   970 ;;		_printf
   971 ;;		_reset
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text1
   978  002558                     __ptext1:
   979                           	opt callstack 0
   980  002558                     _stateMachine:
   981                           	opt callstack 17
   982  002558                     
   983                           ;main.c: 59:     switch(currentState){
   984  002558  EFC4  F013         	goto	l4230
   985  00255C                     l4164:
   986                           
   987                           ; BSR set to: 0
   988                           ;main.c: 64:             if(player1Pressed && player2Pressed) gameStatus = 0;
   989  00255C  51C8               	movf	_player1Pressed& (0+255),w,b
   990  00255E  11C9               	iorwf	(_player1Pressed+1)& (0+255),w,b
   991  002560  B4D8               	btfsc	status,2,c
   992  002562  EFB5  F012         	goto	u5071
   993  002566  EFB7  F012         	goto	u5070
   994  00256A                     u5071:
   995  00256A  EFEF  F013         	goto	l77
   996  00256E                     u5070:
   997  00256E                     
   998                           ; BSR set to: 0
   999  00256E  51C6               	movf	_player2Pressed& (0+255),w,b
  1000  002570  11C7               	iorwf	(_player2Pressed+1)& (0+255),w,b
  1001  002572  B4D8               	btfsc	status,2,c
  1002  002574  EFBE  F012         	goto	u5081
  1003  002578  EFC0  F012         	goto	u5080
  1004  00257C                     u5081:
  1005  00257C  EFEF  F013         	goto	l77
  1006  002580                     u5080:
  1007  002580                     
  1008                           ; BSR set to: 0
  1009  002580  0E00               	movlw	0
  1010  002582  6FC5               	movwf	(_gameStatus+1)& (0+255),b
  1011  002584  0E00               	movlw	0
  1012  002586  6FC4               	movwf	_gameStatus& (0+255),b
  1013  002588  EFEF  F013         	goto	l77
  1014  00258C                     l61:
  1015                           
  1016                           ; BSR set to: 0
  1017                           ;main.c: 68:             PORTDbits.RD2 = 1;
  1018  00258C  8483               	bsf	131,2,c	;volatile
  1019  00258E                     
  1020                           ; BSR set to: 0
  1021                           ;main.c: 69:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1022  00258E  0E03               	movlw	3
  1023  002590  0100               	movlb	0	; () banked
  1024  002592  6FAB               	movwf	(??_stateMachine+1)& (0+255),b
  1025  002594  0E8A               	movlw	138
  1026  002596  6FAA               	movwf	??_stateMachine& (0+255),b
  1027  002598  0E55               	movlw	85
  1028  00259A                     u5237:
  1029  00259A  2EE8               	decfsz	wreg,f,c
  1030  00259C  D7FE               	bra	u5237
  1031  00259E  2FAA               	decfsz	??_stateMachine& (0+255),f,b
  1032  0025A0  D7FC               	bra	u5237
  1033  0025A2  2FAB               	decfsz	(??_stateMachine+1)& (0+255),f,b
  1034  0025A4  D7FA               	bra	u5237
  1035  0025A6  D000               	nop2	
  1036  0025A8                     
  1037                           ;main.c: 70:             PORTDbits.RD2 = 0;
  1038  0025A8  9483               	bcf	131,2,c	;volatile
  1039  0025AA                     
  1040                           ;main.c: 72:             currentState = 0xf03;
  1041  0025AA  0E0F               	movlw	15
  1042  0025AC  0100               	movlb	0	; () banked
  1043  0025AE  6FCF               	movwf	(_currentState+1)& (0+255),b
  1044  0025B0  0E03               	movlw	3
  1045  0025B2  6FCE               	movwf	_currentState& (0+255),b
  1046  0025B4                     
  1047                           ; BSR set to: 0
  1048                           ;main.c: 74:             limpa_lcd();
  1049  0025B4  ECE8  F01D         	call	_limpa_lcd	;wreg free
  1050  0025B8                     
  1051                           ;main.c: 75:             printf("WAITING...");
  1052  0025B8  0E01               	movlw	low STR_10
  1053  0025BA  0100               	movlb	0	; () banked
  1054  0025BC  6FA0               	movwf	printf@fmt& (0+255),b
  1055  0025BE  0E08               	movlw	high STR_10
  1056  0025C0  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1057  0025C2  EC6B  F01D         	call	_printf	;wreg free
  1058  0025C6                     
  1059                           ;main.c: 76:             gameStatus = 1;
  1060  0025C6  0E00               	movlw	0
  1061  0025C8  0100               	movlb	0	; () banked
  1062  0025CA  6FC5               	movwf	(_gameStatus+1)& (0+255),b
  1063  0025CC  0E01               	movlw	1
  1064  0025CE  6FC4               	movwf	_gameStatus& (0+255),b
  1065  0025D0                     
  1066                           ; BSR set to: 0
  1067                           ;main.c: 77:             currentTime = 0;
  1068  0025D0  0E00               	movlw	0
  1069  0025D2  6FCD               	movwf	(_currentTime+1)& (0+255),b
  1070  0025D4  0E00               	movlw	0
  1071  0025D6  6FCC               	movwf	_currentTime& (0+255),b
  1072                           
  1073                           ;main.c: 78:             break;
  1074  0025D8  EFEF  F013         	goto	l77
  1075  0025DC                     l4184:
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;main.c: 81:             reset();
  1079  0025DC  EC74  F01B         	call	_reset	;wreg free
  1080                           
  1081                           ;main.c: 82:             break;
  1082  0025E0  EFEF  F013         	goto	l77
  1083  0025E4                     l4186:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 85:             if((gameStatus) && (player1Pressed) && (player2Pressed)){
  1087  0025E4  51C4               	movf	_gameStatus& (0+255),w,b
  1088  0025E6  11C5               	iorwf	(_gameStatus+1)& (0+255),w,b
  1089  0025E8  B4D8               	btfsc	status,2,c
  1090  0025EA  EFF9  F012         	goto	u5091
  1091  0025EE  EFFB  F012         	goto	u5090
  1092  0025F2                     u5091:
  1093  0025F2  EF13  F013         	goto	l4194
  1094  0025F6                     u5090:
  1095  0025F6                     
  1096                           ; BSR set to: 0
  1097  0025F6  51C8               	movf	_player1Pressed& (0+255),w,b
  1098  0025F8  11C9               	iorwf	(_player1Pressed+1)& (0+255),w,b
  1099  0025FA  B4D8               	btfsc	status,2,c
  1100  0025FC  EF02  F013         	goto	u5101
  1101  002600  EF04  F013         	goto	u5100
  1102  002604                     u5101:
  1103  002604  EF13  F013         	goto	l4194
  1104  002608                     u5100:
  1105  002608                     
  1106                           ; BSR set to: 0
  1107  002608  51C6               	movf	_player2Pressed& (0+255),w,b
  1108  00260A  11C7               	iorwf	(_player2Pressed+1)& (0+255),w,b
  1109  00260C  B4D8               	btfsc	status,2,c
  1110  00260E  EF0B  F013         	goto	u5111
  1111  002612  EF0D  F013         	goto	u5110
  1112  002616                     u5111:
  1113  002616  EF13  F013         	goto	l4194
  1114  00261A                     u5110:
  1115  00261A                     
  1116                           ; BSR set to: 0
  1117                           ;main.c: 86:                 currentState = 0xf04;
  1118  00261A  0E0F               	movlw	15
  1119  00261C  6FCF               	movwf	(_currentState+1)& (0+255),b
  1120  00261E  0E04               	movlw	4
  1121  002620  6FCE               	movwf	_currentState& (0+255),b
  1122                           
  1123                           ;main.c: 87:             }else if(!gameStatus) {
  1124  002622  EFEF  F013         	goto	l77
  1125  002626                     l4194:
  1126                           
  1127                           ; BSR set to: 0
  1128  002626  51C4               	movf	_gameStatus& (0+255),w,b
  1129  002628  11C5               	iorwf	(_gameStatus+1)& (0+255),w,b
  1130  00262A  A4D8               	btfss	status,2,c
  1131  00262C  EF1A  F013         	goto	u5121
  1132  002630  EF1C  F013         	goto	u5120
  1133  002634                     u5121:
  1134  002634  EF22  F013         	goto	l4198
  1135  002638                     u5120:
  1136  002638                     
  1137                           ; BSR set to: 0
  1138                           ;main.c: 88:                 currentState = 0xf02;
  1139  002638  0E0F               	movlw	15
  1140  00263A  6FCF               	movwf	(_currentState+1)& (0+255),b
  1141  00263C  0E02               	movlw	2
  1142  00263E  6FCE               	movwf	_currentState& (0+255),b
  1143                           
  1144                           ;main.c: 89:             }
  1145  002640  EFEF  F013         	goto	l77
  1146  002644                     l4198:
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;main.c: 91:                 currentState = 0xf03;
  1150  002644  0E0F               	movlw	15
  1151  002646  6FCF               	movwf	(_currentState+1)& (0+255),b
  1152  002648  0E03               	movlw	3
  1153  00264A  6FCE               	movwf	_currentState& (0+255),b
  1154  00264C  EFEF  F013         	goto	l77
  1155  002650                     l4200:
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;main.c: 96:             if(gameStatus){
  1159  002650  51C4               	movf	_gameStatus& (0+255),w,b
  1160  002652  11C5               	iorwf	(_gameStatus+1)& (0+255),w,b
  1161  002654  B4D8               	btfsc	status,2,c
  1162  002656  EF2F  F013         	goto	u5131
  1163  00265A  EF31  F013         	goto	u5130
  1164  00265E                     u5131:
  1165  00265E  EFEF  F013         	goto	l77
  1166  002662                     u5130:
  1167  002662                     
  1168                           ; BSR set to: 0
  1169                           ;main.c: 97:                 if(!player1Pressed){
  1170  002662  51C8               	movf	_player1Pressed& (0+255),w,b
  1171  002664  11C9               	iorwf	(_player1Pressed+1)& (0+255),w,b
  1172  002666  A4D8               	btfss	status,2,c
  1173  002668  EF38  F013         	goto	u5141
  1174  00266C  EF3A  F013         	goto	u5140
  1175  002670                     u5141:
  1176  002670  EFEF  F013         	goto	l77
  1177  002674                     u5140:
  1178  002674                     
  1179                           ; BSR set to: 0
  1180                           ;main.c: 98:                     player1Time = (float)currentTime/100.0;
  1181  002674  C0CC  F001         	movff	_currentTime,___xxtofl@val
  1182  002678  C0CD  F002         	movff	_currentTime+1,___xxtofl@val+1
  1183  00267C  0E00               	movlw	0
  1184  00267E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1185  002680  0EFF               	movlw	-1
  1186  002682  6E03               	movwf	(___xxtofl@val+2)^0,c
  1187  002684  6E04               	movwf	(___xxtofl@val+3)^0,c
  1188  002686  0E01               	movlw	1
  1189  002688  ECF9  F014         	call	___xxtofl
  1190  00268C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1191  002690  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1192  002694  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1193  002698  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1194  00269C  0E00               	movlw	0
  1195  00269E  6E13               	movwf	___fldiv@a^0,c
  1196  0026A0  0E00               	movlw	0
  1197  0026A2  6E14               	movwf	(___fldiv@a+1)^0,c
  1198  0026A4  0EC8               	movlw	200
  1199  0026A6  6E15               	movwf	(___fldiv@a+2)^0,c
  1200  0026A8  0E42               	movlw	66
  1201  0026AA  6E16               	movwf	(___fldiv@a+3)^0,c
  1202  0026AC  ECDF  F010         	call	___fldiv	;wreg free
  1203  0026B0  C00F  F0B8         	movff	?___fldiv,_player1Time
  1204  0026B4  C010  F0B9         	movff	?___fldiv+1,_player1Time+1
  1205  0026B8  C011  F0BA         	movff	?___fldiv+2,_player1Time+2
  1206  0026BC  C012  F0BB         	movff	?___fldiv+3,_player1Time+3
  1207  0026C0                     
  1208                           ;main.c: 100:                     if(!player2Pressed) {
  1209  0026C0  0100               	movlb	0	; () banked
  1210  0026C2  51C6               	movf	_player2Pressed& (0+255),w,b
  1211  0026C4  11C7               	iorwf	(_player2Pressed+1)& (0+255),w,b
  1212  0026C6  A4D8               	btfss	status,2,c
  1213  0026C8  EF68  F013         	goto	u5151
  1214  0026CC  EF6A  F013         	goto	u5150
  1215  0026D0                     u5151:
  1216  0026D0  EF6F  F013         	goto	l71
  1217  0026D4                     u5150:
  1218  0026D4                     
  1219                           ; BSR set to: 0
  1220                           ;main.c: 101:                         firstPlayer = 0xd01;
  1221  0026D4  0E0D               	movlw	13
  1222  0026D6  6FCB               	movwf	(_firstPlayer+1)& (0+255),b
  1223  0026D8  0E01               	movlw	1
  1224  0026DA  6FCA               	movwf	_firstPlayer& (0+255),b
  1225  0026DC                     
  1226                           ; BSR set to: 0
  1227                           ;main.c: 102:                         PORTCbits.RC0 = 1;
  1228  0026DC  8082               	bsf	130,0,c	;volatile
  1229  0026DE                     l71:
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;main.c: 105:                     player1Pressed = 1;
  1233  0026DE  0E00               	movlw	0
  1234  0026E0  6FC9               	movwf	(_player1Pressed+1)& (0+255),b
  1235  0026E2  0E01               	movlw	1
  1236  0026E4  6FC8               	movwf	_player1Pressed& (0+255),b
  1237  0026E6                     l4212:
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;main.c: 106:                     displayPlayers();
  1241  0026E6  EC9B  F016         	call	_displayPlayers	;wreg free
  1242  0026EA  EFEF  F013         	goto	l77
  1243  0026EE                     l4214:
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;main.c: 112:             if(gameStatus){
  1247  0026EE  51C4               	movf	_gameStatus& (0+255),w,b
  1248  0026F0  11C5               	iorwf	(_gameStatus+1)& (0+255),w,b
  1249  0026F2  B4D8               	btfsc	status,2,c
  1250  0026F4  EF7E  F013         	goto	u5161
  1251  0026F8  EF80  F013         	goto	u5160
  1252  0026FC                     u5161:
  1253  0026FC  EFEF  F013         	goto	l77
  1254  002700                     u5160:
  1255  002700                     
  1256                           ; BSR set to: 0
  1257                           ;main.c: 113:                 if(!player2Pressed){
  1258  002700  51C6               	movf	_player2Pressed& (0+255),w,b
  1259  002702  11C7               	iorwf	(_player2Pressed+1)& (0+255),w,b
  1260  002704  A4D8               	btfss	status,2,c
  1261  002706  EF87  F013         	goto	u5171
  1262  00270A  EF89  F013         	goto	u5170
  1263  00270E                     u5171:
  1264  00270E  EFEF  F013         	goto	l77
  1265  002712                     u5170:
  1266  002712                     
  1267                           ; BSR set to: 0
  1268                           ;main.c: 114:                     player2Time = (float)currentTime/100.0;
  1269  002712  C0CC  F001         	movff	_currentTime,___xxtofl@val
  1270  002716  C0CD  F002         	movff	_currentTime+1,___xxtofl@val+1
  1271  00271A  0E00               	movlw	0
  1272  00271C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1273  00271E  0EFF               	movlw	-1
  1274  002720  6E03               	movwf	(___xxtofl@val+2)^0,c
  1275  002722  6E04               	movwf	(___xxtofl@val+3)^0,c
  1276  002724  0E01               	movlw	1
  1277  002726  ECF9  F014         	call	___xxtofl
  1278  00272A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1279  00272E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1280  002732  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1281  002736  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1282  00273A  0E00               	movlw	0
  1283  00273C  6E13               	movwf	___fldiv@a^0,c
  1284  00273E  0E00               	movlw	0
  1285  002740  6E14               	movwf	(___fldiv@a+1)^0,c
  1286  002742  0EC8               	movlw	200
  1287  002744  6E15               	movwf	(___fldiv@a+2)^0,c
  1288  002746  0E42               	movlw	66
  1289  002748  6E16               	movwf	(___fldiv@a+3)^0,c
  1290  00274A  ECDF  F010         	call	___fldiv	;wreg free
  1291  00274E  C00F  F0B4         	movff	?___fldiv,_player2Time
  1292  002752  C010  F0B5         	movff	?___fldiv+1,_player2Time+1
  1293  002756  C011  F0B6         	movff	?___fldiv+2,_player2Time+2
  1294  00275A  C012  F0B7         	movff	?___fldiv+3,_player2Time+3
  1295  00275E                     
  1296                           ;main.c: 116:                     if(!player1Pressed) {
  1297  00275E  0100               	movlb	0	; () banked
  1298  002760  51C8               	movf	_player1Pressed& (0+255),w,b
  1299  002762  11C9               	iorwf	(_player1Pressed+1)& (0+255),w,b
  1300  002764  A4D8               	btfss	status,2,c
  1301  002766  EFB7  F013         	goto	u5181
  1302  00276A  EFB9  F013         	goto	u5180
  1303  00276E                     u5181:
  1304  00276E  EFBE  F013         	goto	l75
  1305  002772                     u5180:
  1306  002772                     
  1307                           ; BSR set to: 0
  1308                           ;main.c: 117:                         firstPlayer = 0xd02;
  1309  002772  0E0D               	movlw	13
  1310  002774  6FCB               	movwf	(_firstPlayer+1)& (0+255),b
  1311  002776  0E02               	movlw	2
  1312  002778  6FCA               	movwf	_firstPlayer& (0+255),b
  1313  00277A                     
  1314                           ; BSR set to: 0
  1315                           ;main.c: 118:                         PORTCbits.RC1 = 1;
  1316  00277A  8282               	bsf	130,1,c	;volatile
  1317  00277C                     l75:
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;main.c: 121:                     player2Pressed = 1;
  1321  00277C  0E00               	movlw	0
  1322  00277E  6FC7               	movwf	(_player2Pressed+1)& (0+255),b
  1323  002780  0E01               	movlw	1
  1324  002782  6FC6               	movwf	_player2Pressed& (0+255),b
  1325  002784  EF73  F013         	goto	l4212
  1326  002788                     l4230:
  1327  002788  C0CE  F0AA         	movff	_currentState,??_stateMachine
  1328  00278C  C0CF  F0AB         	movff	_currentState+1,??_stateMachine+1
  1329                           
  1330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1331                           ; Switch size 1, requested type "simple"
  1332                           ; Number of cases is 1, Range of values is 15 to 15
  1333                           ; switch strategies available:
  1334                           ; Name         Instructions Cycles
  1335                           ; simple_byte            4     3 (average)
  1336                           ;	Chosen strategy is simple_byte
  1337  002790  0100               	movlb	0	; () banked
  1338  002792  51AB               	movf	(??_stateMachine+1)& (0+255),w,b
  1339  002794  0A0F               	xorlw	15	; case 15
  1340  002796  B4D8               	btfsc	status,2,c
  1341  002798  EFD0  F013         	goto	l4330
  1342  00279C  EFEF  F013         	goto	l77
  1343  0027A0                     l4330:
  1344                           
  1345                           ; BSR set to: 0
  1346                           ; Switch size 1, requested type "simple"
  1347                           ; Number of cases is 7, Range of values is 1 to 7
  1348                           ; switch strategies available:
  1349                           ; Name         Instructions Cycles
  1350                           ; simple_byte           22    12 (average)
  1351                           ;	Chosen strategy is simple_byte
  1352  0027A0  51AA               	movf	??_stateMachine& (0+255),w,b
  1353  0027A2  0A01               	xorlw	1	; case 1
  1354  0027A4  B4D8               	btfsc	status,2,c
  1355  0027A6  EFEF  F013         	goto	l77
  1356  0027AA  0A03               	xorlw	3	; case 2
  1357  0027AC  B4D8               	btfsc	status,2,c
  1358  0027AE  EFC6  F012         	goto	l61
  1359  0027B2  0A01               	xorlw	1	; case 3
  1360  0027B4  B4D8               	btfsc	status,2,c
  1361  0027B6  EFAE  F012         	goto	l4164
  1362  0027BA  0A07               	xorlw	7	; case 4
  1363  0027BC  B4D8               	btfsc	status,2,c
  1364  0027BE  EFEE  F012         	goto	l4184
  1365  0027C2  0A01               	xorlw	1	; case 5
  1366  0027C4  B4D8               	btfsc	status,2,c
  1367  0027C6  EF28  F013         	goto	l4200
  1368  0027CA  0A03               	xorlw	3	; case 6
  1369  0027CC  B4D8               	btfsc	status,2,c
  1370  0027CE  EF77  F013         	goto	l4214
  1371  0027D2  0A01               	xorlw	1	; case 7
  1372  0027D4  B4D8               	btfsc	status,2,c
  1373  0027D6  EFF2  F012         	goto	l4186
  1374  0027DA  EFEF  F013         	goto	l77
  1375  0027DE                     l77:
  1376  0027DE  0012               	return		;funcret
  1377  0027E0                     __end_of_stateMachine:
  1378                           	opt callstack 0
  1379                           
  1380 ;; *************** function _reset *****************
  1381 ;; Defined at:
  1382 ;;		line 38 in file "main.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1396 ;;      Params:         0       0       0       0       0       0       0       0       0
  1397 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1399 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1400 ;;Total ram usage:        0 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:   12
  1403 ;; This function calls:
  1404 ;;		_limpa_lcd
  1405 ;;		_printf
  1406 ;; This function is called by:
  1407 ;;		_stateMachine
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text2
  1413  0036E8                     __ptext2:
  1414                           	opt callstack 0
  1415  0036E8                     _reset:
  1416                           	opt callstack 17
  1417  0036E8                     
  1418                           ;main.c: 39:     gameStatus = 0;
  1419  0036E8  0E00               	movlw	0
  1420  0036EA  0100               	movlb	0	; () banked
  1421  0036EC  6FC5               	movwf	(_gameStatus+1)& (0+255),b
  1422  0036EE  0E00               	movlw	0
  1423  0036F0  6FC4               	movwf	_gameStatus& (0+255),b
  1424                           
  1425                           ;main.c: 40:     currentTime = 0;
  1426  0036F2  0E00               	movlw	0
  1427  0036F4  6FCD               	movwf	(_currentTime+1)& (0+255),b
  1428  0036F6  0E00               	movlw	0
  1429  0036F8  6FCC               	movwf	_currentTime& (0+255),b
  1430                           
  1431                           ;main.c: 41:     firstPlayer = 0;
  1432  0036FA  0E00               	movlw	0
  1433  0036FC  6FCB               	movwf	(_firstPlayer+1)& (0+255),b
  1434  0036FE  0E00               	movlw	0
  1435  003700  6FCA               	movwf	_firstPlayer& (0+255),b
  1436                           
  1437                           ;main.c: 43:     player1Time = 0;
  1438  003702  0E00               	movlw	0
  1439  003704  6FB8               	movwf	_player1Time& (0+255),b
  1440  003706  0E00               	movlw	0
  1441  003708  6FB9               	movwf	(_player1Time+1)& (0+255),b
  1442  00370A  0E00               	movlw	0
  1443  00370C  6FBA               	movwf	(_player1Time+2)& (0+255),b
  1444  00370E  0E00               	movlw	0
  1445  003710  6FBB               	movwf	(_player1Time+3)& (0+255),b
  1446                           
  1447                           ;main.c: 44:     player2Time = 0;
  1448  003712  0E00               	movlw	0
  1449  003714  6FB4               	movwf	_player2Time& (0+255),b
  1450  003716  0E00               	movlw	0
  1451  003718  6FB5               	movwf	(_player2Time+1)& (0+255),b
  1452  00371A  0E00               	movlw	0
  1453  00371C  6FB6               	movwf	(_player2Time+2)& (0+255),b
  1454  00371E  0E00               	movlw	0
  1455  003720  6FB7               	movwf	(_player2Time+3)& (0+255),b
  1456                           
  1457                           ;main.c: 46:     player1Pressed = 0;
  1458  003722  0E00               	movlw	0
  1459  003724  6FC9               	movwf	(_player1Pressed+1)& (0+255),b
  1460  003726  0E00               	movlw	0
  1461  003728  6FC8               	movwf	_player1Pressed& (0+255),b
  1462                           
  1463                           ;main.c: 47:     player2Pressed = 0;
  1464  00372A  0E00               	movlw	0
  1465  00372C  6FC7               	movwf	(_player2Pressed+1)& (0+255),b
  1466  00372E  0E00               	movlw	0
  1467  003730  6FC6               	movwf	_player2Pressed& (0+255),b
  1468  003732                     
  1469                           ; BSR set to: 0
  1470                           ;main.c: 49:     PORTCbits.RC0 = 0;
  1471  003732  9082               	bcf	130,0,c	;volatile
  1472  003734                     
  1473                           ; BSR set to: 0
  1474                           ;main.c: 50:     PORTCbits.RC1 = 0;
  1475  003734  9282               	bcf	130,1,c	;volatile
  1476                           
  1477                           ;main.c: 52:     currentState = 0xf01;
  1478  003736  0E0F               	movlw	15
  1479  003738  6FCF               	movwf	(_currentState+1)& (0+255),b
  1480  00373A  0E01               	movlw	1
  1481  00373C  6FCE               	movwf	_currentState& (0+255),b
  1482  00373E                     
  1483                           ; BSR set to: 0
  1484                           ;main.c: 54:     limpa_lcd();
  1485  00373E  ECE8  F01D         	call	_limpa_lcd	;wreg free
  1486  003742                     
  1487                           ;main.c: 55:     printf("IDLE...");
  1488  003742  0E22               	movlw	low STR_9
  1489  003744  0100               	movlb	0	; () banked
  1490  003746  6FA0               	movwf	printf@fmt& (0+255),b
  1491  003748  0E08               	movlw	high STR_9
  1492  00374A  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1493  00374C  EC6B  F01D         	call	_printf	;wreg free
  1494  003750  0012               	return		;funcret
  1495  003752                     __end_of_reset:
  1496                           	opt callstack 0
  1497                           
  1498 ;; *************** function _displayPlayers *****************
  1499 ;; Defined at:
  1500 ;;		line 17 in file "main.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;		None
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;		None
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1514 ;;      Params:         0       0       0       0       0       0       0       0       0
  1515 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1516 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1517 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1518 ;;Total ram usage:        0 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:   12
  1521 ;; This function calls:
  1522 ;;		_caracter_inicio
  1523 ;;		_limpa_lcd
  1524 ;;		_printf
  1525 ;; This function is called by:
  1526 ;;		_stateMachine
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text3
  1531  002D36                     __ptext3:
  1532                           	opt callstack 0
  1533  002D36                     _displayPlayers:
  1534                           	opt callstack 17
  1535  002D36                     
  1536                           ;main.c: 18:     limpa_lcd();
  1537  002D36  ECE8  F01D         	call	_limpa_lcd	;wreg free
  1538  002D3A                     
  1539                           ;main.c: 19:     if(player1Pressed && player2Pressed) {
  1540  002D3A  0100               	movlb	0	; () banked
  1541  002D3C  51C8               	movf	_player1Pressed& (0+255),w,b
  1542  002D3E  11C9               	iorwf	(_player1Pressed+1)& (0+255),w,b
  1543  002D40  B4D8               	btfsc	status,2,c
  1544  002D42  EFA5  F016         	goto	u4911
  1545  002D46  EFA7  F016         	goto	u4910
  1546  002D4A                     u4911:
  1547  002D4A  EFD4  F016         	goto	l4058
  1548  002D4E                     u4910:
  1549  002D4E                     
  1550                           ; BSR set to: 0
  1551  002D4E  51C6               	movf	_player2Pressed& (0+255),w,b
  1552  002D50  11C7               	iorwf	(_player2Pressed+1)& (0+255),w,b
  1553  002D52  B4D8               	btfsc	status,2,c
  1554  002D54  EFAE  F016         	goto	u4921
  1555  002D58  EFB0  F016         	goto	u4920
  1556  002D5C                     u4921:
  1557  002D5C  EFD4  F016         	goto	l4058
  1558  002D60                     u4920:
  1559  002D60                     
  1560                           ; BSR set to: 0
  1561                           ;main.c: 20:         printf("P1: %.2f s",player1Time);
  1562  002D60  0E0C               	movlw	low STR_1
  1563  002D62  6FA0               	movwf	printf@fmt& (0+255),b
  1564  002D64  0E08               	movlw	high STR_1
  1565  002D66  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1566  002D68  C0B8  F0A2         	movff	_player1Time,?_printf+2
  1567  002D6C  C0B9  F0A3         	movff	_player1Time+1,?_printf+3
  1568  002D70  C0BA  F0A4         	movff	_player1Time+2,?_printf+4
  1569  002D74  C0BB  F0A5         	movff	_player1Time+3,?_printf+5
  1570  002D78  EC6B  F01D         	call	_printf	;wreg free
  1571  002D7C                     
  1572                           ;main.c: 21:         caracter_inicio(2,0);
  1573  002D7C  0E00               	movlw	0
  1574  002D7E  6E05               	movwf	caracter_inicio@coluna^0,c
  1575  002D80  0E02               	movlw	2
  1576  002D82  ECDB  F01C         	call	_caracter_inicio
  1577  002D86                     
  1578                           ;main.c: 22:         printf("P2: %.2f s", player2Time);
  1579  002D86  0E17               	movlw	low STR_2
  1580  002D88  0100               	movlb	0	; () banked
  1581  002D8A  6FA0               	movwf	printf@fmt& (0+255),b
  1582  002D8C  0E08               	movlw	high STR_2
  1583  002D8E  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1584  002D90  C0B4  F0A2         	movff	_player2Time,?_printf+2
  1585  002D94  C0B5  F0A3         	movff	_player2Time+1,?_printf+3
  1586  002D98  C0B6  F0A4         	movff	_player2Time+2,?_printf+4
  1587  002D9C  C0B7  F0A5         	movff	_player2Time+3,?_printf+5
  1588  002DA0  EC6B  F01D         	call	_printf	;wreg free
  1589                           
  1590                           ;main.c: 23:     }else if(player1Pressed && !player2Pressed) {
  1591  002DA4  EF42  F017         	goto	l50
  1592  002DA8                     l4058:
  1593                           
  1594                           ; BSR set to: 0
  1595  002DA8  51C8               	movf	_player1Pressed& (0+255),w,b
  1596  002DAA  11C9               	iorwf	(_player1Pressed+1)& (0+255),w,b
  1597  002DAC  B4D8               	btfsc	status,2,c
  1598  002DAE  EFDB  F016         	goto	u4931
  1599  002DB2  EFDD  F016         	goto	u4930
  1600  002DB6                     u4931:
  1601  002DB6  EF02  F017         	goto	l4068
  1602  002DBA                     u4930:
  1603  002DBA                     
  1604                           ; BSR set to: 0
  1605  002DBA  51C6               	movf	_player2Pressed& (0+255),w,b
  1606  002DBC  11C7               	iorwf	(_player2Pressed+1)& (0+255),w,b
  1607  002DBE  A4D8               	btfss	status,2,c
  1608  002DC0  EFE4  F016         	goto	u4941
  1609  002DC4  EFE6  F016         	goto	u4940
  1610  002DC8                     u4941:
  1611  002DC8  EF02  F017         	goto	l4068
  1612  002DCC                     u4940:
  1613  002DCC                     
  1614                           ; BSR set to: 0
  1615                           ;main.c: 24:         printf("P1: %.2f s",player1Time);
  1616  002DCC  0E0C               	movlw	low STR_1
  1617  002DCE  6FA0               	movwf	printf@fmt& (0+255),b
  1618  002DD0  0E08               	movlw	high STR_1
  1619  002DD2  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1620  002DD4  C0B8  F0A2         	movff	_player1Time,?_printf+2
  1621  002DD8  C0B9  F0A3         	movff	_player1Time+1,?_printf+3
  1622  002DDC  C0BA  F0A4         	movff	_player1Time+2,?_printf+4
  1623  002DE0  C0BB  F0A5         	movff	_player1Time+3,?_printf+5
  1624  002DE4  EC6B  F01D         	call	_printf	;wreg free
  1625  002DE8                     
  1626                           ;main.c: 25:         caracter_inicio(2,0);
  1627  002DE8  0E00               	movlw	0
  1628  002DEA  6E05               	movwf	caracter_inicio@coluna^0,c
  1629  002DEC  0E02               	movlw	2
  1630  002DEE  ECDB  F01C         	call	_caracter_inicio
  1631  002DF2                     
  1632                           ;main.c: 26:         printf("P2: - s");
  1633  002DF2  0E32               	movlw	low STR_4
  1634  002DF4  0100               	movlb	0	; () banked
  1635  002DF6  6FA0               	movwf	printf@fmt& (0+255),b
  1636  002DF8  0E08               	movlw	high STR_4
  1637  002DFA  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1638  002DFC  EC6B  F01D         	call	_printf	;wreg free
  1639                           
  1640                           ;main.c: 27:     }else if(!player1Pressed && player2Pressed) {
  1641  002E00  EF42  F017         	goto	l50
  1642  002E04                     l4068:
  1643                           
  1644                           ; BSR set to: 0
  1645  002E04  51C8               	movf	_player1Pressed& (0+255),w,b
  1646  002E06  11C9               	iorwf	(_player1Pressed+1)& (0+255),w,b
  1647  002E08  A4D8               	btfss	status,2,c
  1648  002E0A  EF09  F017         	goto	u4951
  1649  002E0E  EF0B  F017         	goto	u4950
  1650  002E12                     u4951:
  1651  002E12  EF30  F017         	goto	l4078
  1652  002E16                     u4950:
  1653  002E16                     
  1654                           ; BSR set to: 0
  1655  002E16  51C6               	movf	_player2Pressed& (0+255),w,b
  1656  002E18  11C7               	iorwf	(_player2Pressed+1)& (0+255),w,b
  1657  002E1A  B4D8               	btfsc	status,2,c
  1658  002E1C  EF12  F017         	goto	u4961
  1659  002E20  EF14  F017         	goto	u4960
  1660  002E24                     u4961:
  1661  002E24  EF30  F017         	goto	l4078
  1662  002E28                     u4960:
  1663  002E28                     
  1664                           ; BSR set to: 0
  1665                           ;main.c: 28:         printf("P1: - s");
  1666  002E28  0E2A               	movlw	low STR_5
  1667  002E2A  6FA0               	movwf	printf@fmt& (0+255),b
  1668  002E2C  0E08               	movlw	high STR_5
  1669  002E2E  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1670  002E30  EC6B  F01D         	call	_printf	;wreg free
  1671  002E34                     
  1672                           ;main.c: 29:         caracter_inicio(2,0);
  1673  002E34  0E00               	movlw	0
  1674  002E36  6E05               	movwf	caracter_inicio@coluna^0,c
  1675  002E38  0E02               	movlw	2
  1676  002E3A  ECDB  F01C         	call	_caracter_inicio
  1677  002E3E                     
  1678                           ;main.c: 30:         printf("P2: %.2f s", player2Time);
  1679  002E3E  0E17               	movlw	low STR_2
  1680  002E40  0100               	movlb	0	; () banked
  1681  002E42  6FA0               	movwf	printf@fmt& (0+255),b
  1682  002E44  0E08               	movlw	high STR_2
  1683  002E46  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1684  002E48  C0B4  F0A2         	movff	_player2Time,?_printf+2
  1685  002E4C  C0B5  F0A3         	movff	_player2Time+1,?_printf+3
  1686  002E50  C0B6  F0A4         	movff	_player2Time+2,?_printf+4
  1687  002E54  C0B7  F0A5         	movff	_player2Time+3,?_printf+5
  1688  002E58  EC6B  F01D         	call	_printf	;wreg free
  1689                           
  1690                           ;main.c: 31:     }else {
  1691  002E5C  EF42  F017         	goto	l50
  1692  002E60                     l4078:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;main.c: 32:         printf("P1: - s");
  1696  002E60  0E2A               	movlw	low STR_5
  1697  002E62  6FA0               	movwf	printf@fmt& (0+255),b
  1698  002E64  0E08               	movlw	high STR_5
  1699  002E66  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1700  002E68  EC6B  F01D         	call	_printf	;wreg free
  1701  002E6C                     
  1702                           ;main.c: 33:         caracter_inicio(2,0);
  1703  002E6C  0E00               	movlw	0
  1704  002E6E  6E05               	movwf	caracter_inicio@coluna^0,c
  1705  002E70  0E02               	movlw	2
  1706  002E72  ECDB  F01C         	call	_caracter_inicio
  1707  002E76                     
  1708                           ;main.c: 34:         printf("P2: - s");
  1709  002E76  0E32               	movlw	low STR_4
  1710  002E78  0100               	movlb	0	; () banked
  1711  002E7A  6FA0               	movwf	printf@fmt& (0+255),b
  1712  002E7C  0E08               	movlw	high STR_4
  1713  002E7E  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1714  002E80  EC6B  F01D         	call	_printf	;wreg free
  1715  002E84                     l50:
  1716  002E84  0012               	return		;funcret
  1717  002E86                     __end_of_displayPlayers:
  1718                           	opt callstack 0
  1719                           
  1720 ;; *************** function _printf *****************
  1721 ;; Defined at:
  1722 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  1725 ;;		 -> STR_10(11), STR_9(8), STR_8(8), STR_7(8), 
  1726 ;;		 -> STR_6(11), STR_5(8), STR_4(8), STR_3(11), 
  1727 ;;		 -> STR_2(11), STR_1(11), 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  ap              2   72[BANK0 ] PTR void [1]
  1730 ;;		 -> ?_printf(2), 
  1731 ;;  ret             2    0        int 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  2   64[BANK0 ] int 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1741 ;;      Params:         0       6       0       0       0       0       0       0       0
  1742 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1744 ;;      Totals:         0      10       0       0       0       0       0       0       0
  1745 ;;Total ram usage:       10 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:   11
  1748 ;; This function calls:
  1749 ;;		_vfprintf
  1750 ;; This function is called by:
  1751 ;;		_displayPlayers
  1752 ;;		_reset
  1753 ;;		_stateMachine
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text4
  1758  003AD6                     __ptext4:
  1759                           	opt callstack 0
  1760  003AD6                     _printf:
  1761                           	opt callstack 17
  1762  003AD6  0EA2               	movlw	low (?_printf+2)
  1763  003AD8  0100               	movlb	0	; () banked
  1764  003ADA  6FA8               	movwf	printf@ap& (0+255),b
  1765  003ADC  0E00               	movlw	high (?_printf+2)
  1766  003ADE  6FA9               	movwf	(printf@ap+1)& (0+255),b
  1767  003AE0                     
  1768                           ; BSR set to: 0
  1769  003AE0  0E00               	movlw	0
  1770  003AE2  6F98               	movwf	vfprintf@fp& (0+255),b
  1771  003AE4  0E00               	movlw	0
  1772  003AE6  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  1773  003AE8  C0A0  F09A         	movff	printf@fmt,vfprintf@fmt
  1774  003AEC  C0A1  F09B         	movff	printf@fmt+1,vfprintf@fmt+1
  1775  003AF0  0EA8               	movlw	low printf@ap
  1776  003AF2  6F9C               	movwf	vfprintf@ap& (0+255),b
  1777  003AF4  0E00               	movlw	high printf@ap
  1778  003AF6  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  1779  003AF8  ECDE  F01B         	call	_vfprintf	;wreg free
  1780  003AFC  0012               	return		;funcret
  1781  003AFE                     __end_of_printf:
  1782                           	opt callstack 0
  1783                           
  1784 ;; *************** function _vfprintf *****************
  1785 ;; Defined at:
  1786 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1789 ;;		 -> NULL(0), 
  1790 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1791 ;;		 -> STR_10(11), STR_9(8), STR_8(8), STR_7(8), 
  1792 ;;		 -> STR_6(11), STR_5(8), STR_4(8), STR_3(11), 
  1793 ;;		 -> STR_2(11), STR_1(11), 
  1794 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1795 ;;		 -> printf@ap(2), 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  cfmt            2   62[BANK0 ] PTR unsigned char 
  1798 ;;		 -> STR_10(11), STR_9(8), STR_8(8), STR_7(8), 
  1799 ;;		 -> STR_6(11), STR_5(8), STR_4(8), STR_3(11), 
  1800 ;;		 -> STR_2(11), STR_1(11), 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  2   56[BANK0 ] int 
  1803 ;; Registers used:
  1804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1810 ;;      Params:         0       6       0       0       0       0       0       0       0
  1811 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1813 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1814 ;;Total ram usage:        8 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:   10
  1817 ;; This function calls:
  1818 ;;		_vfpfcnvrt
  1819 ;; This function is called by:
  1820 ;;		_printf
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text5
  1825  0037BC                     __ptext5:
  1826                           	opt callstack 0
  1827  0037BC                     _vfprintf:
  1828                           	opt callstack 17
  1829  0037BC                     
  1830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1831  0037BC  C09A  F09E         	movff	vfprintf@fmt,vfprintf@cfmt
  1832  0037C0  C09B  F09F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1833  0037C4                     
  1834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1835  0037C4  0E00               	movlw	0
  1836  0037C6  0100               	movlb	0	; () banked
  1837  0037C8  6FBD               	movwf	(_nout+1)& (0+255),b
  1838  0037CA  0E00               	movlw	0
  1839  0037CC  6FBC               	movwf	_nout& (0+255),b
  1840                           
  1841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1842  0037CE  EFFC  F01B         	goto	l4020
  1843  0037D2                     l4018:
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1847  0037D2  C098  F048         	movff	vfprintf@fp,vfpfcnvrt@fp
  1848  0037D6  C099  F049         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1849  0037DA  0E9E               	movlw	low vfprintf@cfmt
  1850  0037DC  6E4A               	movwf	vfpfcnvrt@fmt^0,c
  1851  0037DE  0E00               	movlw	high vfprintf@cfmt
  1852  0037E0  6E4B               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1853  0037E2  C09C  F04C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1854  0037E6  C09D  F04D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1855  0037EA  EC86  F00C         	call	_vfpfcnvrt	;wreg free
  1856  0037EE  5048               	movf	?_vfpfcnvrt^0,w,c
  1857  0037F0  0100               	movlb	0	; () banked
  1858  0037F2  27BC               	addwf	_nout& (0+255),f,b
  1859  0037F4  5049               	movf	(?_vfpfcnvrt+1)^0,w,c
  1860  0037F6  23BD               	addwfc	(_nout+1)& (0+255),f,b
  1861  0037F8                     l4020:
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1865  0037F8  C09E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1866  0037FC  C09F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1867  003800                     	if	0	;tblptru may be non-zero
  1868  003800                     	endif
  1869  003800                     	if	0	;tblptru may be non-zero
  1870  003800                     	endif
  1871  003800  0008               	tblrd		*
  1872  003802  50F5               	movf	tablat,w,c
  1873  003804  0900               	iorlw	0
  1874  003806  A4D8               	btfss	status,2,c
  1875  003808  EF08  F01C         	goto	u4881
  1876  00380C  EF0A  F01C         	goto	u4880
  1877  003810                     u4881:
  1878  003810  EFE9  F01B         	goto	l4018
  1879  003814                     u4880:
  1880  003814                     
  1881                           ; BSR set to: 0
  1882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1883  003814  C0BC  F098         	movff	_nout,?_vfprintf
  1884  003818  C0BD  F099         	movff	_nout+1,?_vfprintf+1
  1885  00381C                     
  1886                           ; BSR set to: 0
  1887  00381C  0012               	return		;funcret
  1888  00381E                     __end_of_vfprintf:
  1889                           	opt callstack 0
  1890                           
  1891 ;; *************** function _vfpfcnvrt *****************
  1892 ;; Defined at:
  1893 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  fp              2   71[COMRAM] PTR struct _IO_FILE
  1896 ;;		 -> NULL(0), 
  1897 ;;  fmt             2   73[COMRAM] PTR PTR unsigned char 
  1898 ;;		 -> vfprintf@cfmt(2), 
  1899 ;;  ap              2   75[COMRAM] PTR PTR void 
  1900 ;;		 -> printf@ap(2), 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  llu             8    0        unsigned long long 
  1903 ;;  ll              8    0        long long 
  1904 ;;  f               4   85[COMRAM] long long 
  1905 ;;  ct              3   89[COMRAM] unsigned char [3]
  1906 ;;  vp              3    0        PTR void 
  1907 ;;  cp              3    0        PTR unsigned char 
  1908 ;;  i               2    0        int 
  1909 ;;  done            2    0        int 
  1910 ;;  c               1   92[COMRAM] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  2   71[COMRAM] int 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1920 ;;      Params:         6       0       0       0       0       0       0       0       0
  1921 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1922 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1923 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1924 ;;Total ram usage:       22 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    9
  1927 ;; This function calls:
  1928 ;;		_atoi
  1929 ;;		_efgtoa
  1930 ;;		_fputc
  1931 ;;		_isdigit
  1932 ;;		_isupper
  1933 ;;		_strncmp
  1934 ;;		_tolower
  1935 ;; This function is called by:
  1936 ;;		_vfprintf
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text6
  1941  00190C                     __ptext6:
  1942                           	opt callstack 0
  1943  00190C                     _vfpfcnvrt:
  1944                           	opt callstack 17
  1945  00190C                     
  1946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1947  00190C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1948  001910  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1949  001914  CFDE FFF6          	movff	postinc2,tblptrl
  1950  001918  CFDD FFF7          	movff	postdec2,tblptrh
  1951  00191C                     	if	0	;tblptru may be non-zero
  1952  00191C                     	endif
  1953  00191C                     	if	0	;tblptru may be non-zero
  1954  00191C                     	endif
  1955  00191C  0008               	tblrd		*
  1956  00191E  50F5               	movf	tablat,w,c
  1957  001920  0A25               	xorlw	37
  1958  001922  A4D8               	btfss	status,2,c
  1959  001924  EF96  F00C         	goto	u4741
  1960  001928  EF98  F00C         	goto	u4740
  1961  00192C                     u4741:
  1962  00192C  EFAE  F00E         	goto	l4006
  1963  001930                     u4740:
  1964  001930                     
  1965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1966  001930  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1967  001934  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1968  001938  2ADE               	incf	postinc2,f,c
  1969  00193A  0E00               	movlw	0
  1970  00193C  22DD               	addwfc	postdec2,f,c
  1971  00193E                     
  1972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1973  00193E  0E00               	movlw	0
  1974  001940  0100               	movlb	0	; () banked
  1975  001942  6FBF               	movwf	(_width+1)& (0+255),b
  1976  001944  0E00               	movlw	0
  1977  001946  6FBE               	movwf	_width& (0+255),b
  1978  001948  C0BE  F0C2         	movff	_width,_flags
  1979  00194C  C0BF  F0C3         	movff	_width+1,_flags+1
  1980  001950                     
  1981                           ; BSR set to: 0
  1982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1983  001950  69C0               	setf	_prec& (0+255),b
  1984  001952  69C1               	setf	(_prec+1)& (0+255),b
  1985  001954                     
  1986                           ; BSR set to: 0
  1987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1988  001954  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1989  001958  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1990  00195C  CFDE FFF6          	movff	postinc2,tblptrl
  1991  001960  CFDD FFF7          	movff	postdec2,tblptrh
  1992  001964                     	if	0	;tblptru may be non-zero
  1993  001964                     	endif
  1994  001964                     	if	0	;tblptru may be non-zero
  1995  001964                     	endif
  1996  001964  0008               	tblrd		*
  1997  001966  50F5               	movf	tablat,w,c
  1998  001968  0A2E               	xorlw	46
  1999  00196A  A4D8               	btfss	status,2,c
  2000  00196C  EFBA  F00C         	goto	u4751
  2001  001970  EFBC  F00C         	goto	u4750
  2002  001974                     u4751:
  2003  001974  EF39  F00D         	goto	l3952
  2004  001978                     u4750:
  2005  001978                     
  2006                           ; BSR set to: 0
  2007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2008  001978  0E00               	movlw	0
  2009  00197A  6FC1               	movwf	(_prec+1)& (0+255),b
  2010  00197C  0E00               	movlw	0
  2011  00197E  6FC0               	movwf	_prec& (0+255),b
  2012  001980                     
  2013                           ; BSR set to: 0
  2014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2015  001980  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2016  001984  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2017  001988  2ADE               	incf	postinc2,f,c
  2018  00198A  0E00               	movlw	0
  2019  00198C  22DD               	addwfc	postdec2,f,c
  2020  00198E                     
  2021                           ; BSR set to: 0
  2022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2023  00198E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2024  001992  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2025  001996  CFDE FFF6          	movff	postinc2,tblptrl
  2026  00199A  CFDD FFF7          	movff	postdec2,tblptrh
  2027  00199E                     	if	0	;tblptru may be non-zero
  2028  00199E                     	endif
  2029  00199E                     	if	0	;tblptru may be non-zero
  2030  00199E                     	endif
  2031  00199E  0008               	tblrd		*
  2032  0019A0  50F5               	movf	tablat,w,c
  2033  0019A2  0A2A               	xorlw	42
  2034  0019A4  A4D8               	btfss	status,2,c
  2035  0019A6  EFD7  F00C         	goto	u4761
  2036  0019AA  EFD9  F00C         	goto	u4760
  2037  0019AE                     u4761:
  2038  0019AE  EFF6  F00C         	goto	l3942
  2039  0019B2                     u4760:
  2040  0019B2                     
  2041                           ; BSR set to: 0
  2042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2043  0019B2  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2044  0019B6  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2045  0019BA  2ADE               	incf	postinc2,f,c
  2046  0019BC  0E00               	movlw	0
  2047  0019BE  22DD               	addwfc	postdec2,f,c
  2048                           
  2049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2050  0019C0  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2051  0019C4  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2052  0019C8  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  2053  0019CC  0E02               	movlw	2
  2054  0019CE  26DE               	addwf	postinc2,f,c
  2055  0019D0  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  2056  0019D4  0E00               	movlw	0
  2057  0019D6  22DD               	addwfc	postdec2,f,c
  2058  0019D8  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2059  0019DC  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2060  0019E0  CFDE F0C0          	movff	postinc2,_prec
  2061  0019E4  CFDD F0C1          	movff	postdec2,_prec+1
  2062                           
  2063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2064  0019E8  EF39  F00D         	goto	l3952
  2065  0019EC                     l3942:
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2069  0019EC  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2070  0019F0  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2071  0019F4  CFDE F008          	movff	postinc2,atoi@s
  2072  0019F8  CFDD F009          	movff	postdec2,atoi@s+1
  2073  0019FC  ECD3  F015         	call	_atoi	;wreg free
  2074  001A00  C008  F0C0         	movff	?_atoi,_prec
  2075  001A04  C009  F0C1         	movff	?_atoi+1,_prec+1
  2076                           
  2077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2078  001A08  EF0D  F00D         	goto	l3946
  2079  001A0C                     l3944:
  2080                           
  2081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2082  001A0C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2083  001A10  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2084  001A14  2ADE               	incf	postinc2,f,c
  2085  001A16  0E00               	movlw	0
  2086  001A18  22DD               	addwfc	postdec2,f,c
  2087  001A1A                     l3946:
  2088  001A1A  0ED0               	movlw	208
  2089  001A1C  6E4E               	movwf	??_vfpfcnvrt^0,c
  2090  001A1E  0EFF               	movlw	255
  2091  001A20  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  2092  001A22  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2093  001A26  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2094  001A2A  CFDE FFF6          	movff	postinc2,tblptrl
  2095  001A2E  CFDD FFF7          	movff	postdec2,tblptrh
  2096  001A32                     	if	0	;tblptru may be non-zero
  2097  001A32                     	endif
  2098  001A32                     	if	0	;tblptru may be non-zero
  2099  001A32                     	endif
  2100  001A32  0008               	tblrd		*
  2101  001A34  50F5               	movf	tablat,w,c
  2102  001A36  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  2103  001A38  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  2104  001A3A  504E               	movf	??_vfpfcnvrt^0,w,c
  2105  001A3C  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2106  001A3E  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2107  001A40  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2108  001A42  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  2109  001A44  E10A               	bnz	u4770
  2110  001A46  0E0A               	movlw	10
  2111  001A48  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2112  001A4A  A0D8               	btfss	status,0,c
  2113  001A4C  EF2A  F00D         	goto	u4771
  2114  001A50  EF2D  F00D         	goto	u4770
  2115  001A54                     u4771:
  2116  001A54  0E01               	movlw	1
  2117  001A56  EF2E  F00D         	goto	u4780
  2118  001A5A                     u4770:
  2119  001A5A  0E00               	movlw	0
  2120  001A5C                     u4780:
  2121  001A5C  6E52               	movwf	_vfpfcnvrt$834^0,c
  2122  001A5E  6A53               	clrf	(_vfpfcnvrt$834+1)^0,c
  2123  001A60  5052               	movf	_vfpfcnvrt$834^0,w,c
  2124  001A62  1053               	iorwf	(_vfpfcnvrt$834+1)^0,w,c
  2125  001A64  A4D8               	btfss	status,2,c
  2126  001A66  EF37  F00D         	goto	u4791
  2127  001A6A  EF39  F00D         	goto	u4790
  2128  001A6E                     u4791:
  2129  001A6E  EF06  F00D         	goto	l3944
  2130  001A72                     u4790:
  2131  001A72                     l3952:
  2132                           
  2133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2134  001A72  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2135  001A76  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2136  001A7A  CFDE FFF6          	movff	postinc2,tblptrl
  2137  001A7E  CFDD FFF7          	movff	postdec2,tblptrh
  2138  001A82                     	if	0	;tblptru may be non-zero
  2139  001A82                     	endif
  2140  001A82                     	if	0	;tblptru may be non-zero
  2141  001A82                     	endif
  2142  001A82  0008               	tblrd		*
  2143  001A84  50F5               	movf	tablat,w,c
  2144  001A86  6E07               	movwf	tolower@c^0,c
  2145  001A88  6A08               	clrf	(tolower@c+1)^0,c
  2146  001A8A  EC0F  F01C         	call	_tolower	;wreg free
  2147  001A8E  5007               	movf	?_tolower^0,w,c
  2148  001A90  6E5A               	movwf	vfpfcnvrt@ct^0,c
  2149  001A92                     
  2150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2151  001A92  505A               	movf	vfpfcnvrt@ct^0,w,c
  2152  001A94  B4D8               	btfsc	status,2,c
  2153  001A96  EF4F  F00D         	goto	u4801
  2154  001A9A  EF51  F00D         	goto	u4800
  2155  001A9E                     u4801:
  2156  001A9E  EF89  F00D         	goto	l3962
  2157  001AA2                     u4800:
  2158  001AA2                     
  2159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2160  001AA2  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2161  001AA6  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2162  001AAA  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  2163  001AAE  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  2164  001AB2  0E01               	movlw	1
  2165  001AB4  264E               	addwf	??_vfpfcnvrt^0,f,c
  2166  001AB6  0E00               	movlw	0
  2167  001AB8  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2168  001ABA  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2169  001ABE  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2170  001AC2                     	if	0	;tblptru may be non-zero
  2171  001AC2                     	endif
  2172  001AC2                     	if	0	;tblptru may be non-zero
  2173  001AC2                     	endif
  2174  001AC2  0008               	tblrd		*
  2175  001AC4  50F5               	movf	tablat,w,c
  2176  001AC6  6E07               	movwf	tolower@c^0,c
  2177  001AC8  6A08               	clrf	(tolower@c+1)^0,c
  2178  001ACA  EC0F  F01C         	call	_tolower	;wreg free
  2179  001ACE  5007               	movf	?_tolower^0,w,c
  2180  001AD0  6E5B               	movwf	(vfpfcnvrt@ct+1)^0,c
  2181  001AD2                     
  2182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2183  001AD2  505B               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2184  001AD4  B4D8               	btfsc	status,2,c
  2185  001AD6  EF6F  F00D         	goto	u4811
  2186  001ADA  EF71  F00D         	goto	u4810
  2187  001ADE                     u4811:
  2188  001ADE  EF89  F00D         	goto	l3962
  2189  001AE2                     u4810:
  2190  001AE2                     
  2191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2192  001AE2  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2193  001AE6  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2194  001AEA  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  2195  001AEE  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  2196  001AF2  0E02               	movlw	2
  2197  001AF4  264E               	addwf	??_vfpfcnvrt^0,f,c
  2198  001AF6  0E00               	movlw	0
  2199  001AF8  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2200  001AFA  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2201  001AFE  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2202  001B02                     	if	0	;tblptru may be non-zero
  2203  001B02                     	endif
  2204  001B02                     	if	0	;tblptru may be non-zero
  2205  001B02                     	endif
  2206  001B02  0008               	tblrd		*
  2207  001B04  50F5               	movf	tablat,w,c
  2208  001B06  6E07               	movwf	tolower@c^0,c
  2209  001B08  6A08               	clrf	(tolower@c+1)^0,c
  2210  001B0A  EC0F  F01C         	call	_tolower	;wreg free
  2211  001B0E  5007               	movf	?_tolower^0,w,c
  2212  001B10  6E5C               	movwf	(vfpfcnvrt@ct+2)^0,c
  2213  001B12                     l3962:
  2214                           
  2215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2216  001B12  0E66               	movlw	102
  2217  001B14  185A               	xorwf	vfpfcnvrt@ct^0,w,c
  2218  001B16  A4D8               	btfss	status,2,c
  2219  001B18  EF90  F00D         	goto	u4821
  2220  001B1C  EF92  F00D         	goto	u4820
  2221  001B20                     u4821:
  2222  001B20  EFD2  F00D         	goto	l3974
  2223  001B24                     u4820:
  2224  001B24                     
  2225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2226  001B24  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2227  001B28  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2228  001B2C  CFDE FFF6          	movff	postinc2,tblptrl
  2229  001B30  CFDD FFF7          	movff	postdec2,tblptrh
  2230  001B34                     	if	0	;tblptru may be non-zero
  2231  001B34                     	endif
  2232  001B34                     	if	0	;tblptru may be non-zero
  2233  001B34                     	endif
  2234  001B34  0008               	tblrd		*
  2235  001B36  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  2236  001B3A                     
  2237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2238  001B3A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2239  001B3E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2240  001B42  2ADE               	incf	postinc2,f,c
  2241  001B44  0E00               	movlw	0
  2242  001B46  22DD               	addwfc	postdec2,f,c
  2243  001B48                     
  2244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2245  001B48  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2246  001B4C  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2247  001B50  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  2248  001B54  0E04               	movlw	4
  2249  001B56  26DE               	addwf	postinc2,f,c
  2250  001B58  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  2251  001B5C  0E00               	movlw	0
  2252  001B5E  22DD               	addwfc	postdec2,f,c
  2253  001B60  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2254  001B64  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2255  001B68  CFDE F056          	movff	postinc2,vfpfcnvrt@f
  2256  001B6C  CFDE F057          	movff	postinc2,vfpfcnvrt@f+1
  2257  001B70  CFDE F058          	movff	postinc2,vfpfcnvrt@f+2
  2258  001B74  CFDE F059          	movff	postinc2,vfpfcnvrt@f+3
  2259  001B78                     
  2260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2261  001B78  C048  F03C         	movff	vfpfcnvrt@fp,efgtoa@fp
  2262  001B7C  C049  F03D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2263  001B80  C056  F03E         	movff	vfpfcnvrt@f,efgtoa@f
  2264  001B84  C057  F03F         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2265  001B88  C058  F040         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2266  001B8C  C059  F041         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2267  001B90  C05D  F042         	movff	vfpfcnvrt@c,efgtoa@c
  2268  001B94  EC27  F004         	call	_efgtoa	;wreg free
  2269  001B98  C03C  F048         	movff	?_efgtoa,?_vfpfcnvrt
  2270  001B9C  C03D  F049         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2271  001BA0  EFC9  F00E         	goto	l318
  2272  001BA4                     l3974:
  2273                           
  2274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2275  001BA4  0E5A               	movlw	low vfpfcnvrt@ct
  2276  001BA6  6E01               	movwf	strncmp@_l^0,c
  2277  001BA8  0E00               	movlw	high vfpfcnvrt@ct
  2278  001BAA  6E02               	movwf	(strncmp@_l+1)^0,c
  2279  001BAC  0E4A               	movlw	low STR_19
  2280  001BAE  6E03               	movwf	strncmp@_r^0,c
  2281  001BB0  0E08               	movlw	high STR_19
  2282  001BB2  6E04               	movwf	(strncmp@_r+1)^0,c
  2283  001BB4  0E00               	movlw	0
  2284  001BB6  6E06               	movwf	(strncmp@n+1)^0,c
  2285  001BB8  0E02               	movlw	2
  2286  001BBA  6E05               	movwf	strncmp@n^0,c
  2287  001BBC  ECC7  F018         	call	_strncmp	;wreg free
  2288  001BC0  5001               	movf	?_strncmp^0,w,c
  2289  001BC2  1002               	iorwf	(?_strncmp+1)^0,w,c
  2290  001BC4  A4D8               	btfss	status,2,c
  2291  001BC6  EFE7  F00D         	goto	u4831
  2292  001BCA  EFE9  F00D         	goto	u4830
  2293  001BCE                     u4831:
  2294  001BCE  EF78  F00E         	goto	l3990
  2295  001BD2                     u4830:
  2296  001BD2                     
  2297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2298  001BD2  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2299  001BD6  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2300  001BDA  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  2301  001BDE  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  2302  001BE2  0E01               	movlw	1
  2303  001BE4  264E               	addwf	??_vfpfcnvrt^0,f,c
  2304  001BE6  0E00               	movlw	0
  2305  001BE8  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2306  001BEA  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2307  001BEE  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2308  001BF2                     	if	0	;tblptru may be non-zero
  2309  001BF2                     	endif
  2310  001BF2                     	if	0	;tblptru may be non-zero
  2311  001BF2                     	endif
  2312  001BF2  0008               	tblrd		*
  2313  001BF4  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  2314  001BF8  0EBF               	movlw	191
  2315  001BFA  6E4E               	movwf	??_vfpfcnvrt^0,c
  2316  001BFC  0EFF               	movlw	255
  2317  001BFE  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  2318  001C00  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2319  001C04  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2320  001C08  CFDE FFF6          	movff	postinc2,tblptrl
  2321  001C0C  CFDD FFF7          	movff	postdec2,tblptrh
  2322  001C10                     	if	0	;tblptru may be non-zero
  2323  001C10                     	endif
  2324  001C10                     	if	0	;tblptru may be non-zero
  2325  001C10                     	endif
  2326  001C10  0008               	tblrd		*
  2327  001C12  50F5               	movf	tablat,w,c
  2328  001C14  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  2329  001C16  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  2330  001C18  504E               	movf	??_vfpfcnvrt^0,w,c
  2331  001C1A  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2332  001C1C  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2333  001C1E  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2334  001C20  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  2335  001C22  E10A               	bnz	u4840
  2336  001C24  0E1A               	movlw	26
  2337  001C26  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2338  001C28  A0D8               	btfss	status,0,c
  2339  001C2A  EF19  F00E         	goto	u4841
  2340  001C2E  EF1C  F00E         	goto	u4840
  2341  001C32                     u4841:
  2342  001C32  0E01               	movlw	1
  2343  001C34  EF1D  F00E         	goto	u4850
  2344  001C38                     u4840:
  2345  001C38  0E00               	movlw	0
  2346  001C3A                     u4850:
  2347  001C3A  6E54               	movwf	_vfpfcnvrt$838^0,c
  2348  001C3C  6A55               	clrf	(_vfpfcnvrt$838+1)^0,c
  2349  001C3E  5054               	movf	_vfpfcnvrt$838^0,w,c
  2350  001C40  1055               	iorwf	(_vfpfcnvrt$838+1)^0,w,c
  2351  001C42  B4D8               	btfsc	status,2,c
  2352  001C44  EF26  F00E         	goto	u4861
  2353  001C48  EF28  F00E         	goto	u4860
  2354  001C4C                     u4861:
  2355  001C4C  EF42  F00E         	goto	l3984
  2356  001C50                     u4860:
  2357  001C50                     
  2358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2359  001C50  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2360  001C54  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2361  001C58  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  2362  001C5C  0E04               	movlw	4
  2363  001C5E  26DE               	addwf	postinc2,f,c
  2364  001C60  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  2365  001C64  0E00               	movlw	0
  2366  001C66  22DD               	addwfc	postdec2,f,c
  2367  001C68  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2368  001C6C  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2369  001C70  CFDE F056          	movff	postinc2,vfpfcnvrt@f
  2370  001C74  CFDE F057          	movff	postinc2,vfpfcnvrt@f+1
  2371  001C78  CFDE F058          	movff	postinc2,vfpfcnvrt@f+2
  2372  001C7C  CFDE F059          	movff	postinc2,vfpfcnvrt@f+3
  2373                           
  2374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2375  001C80  EF5A  F00E         	goto	l325
  2376  001C84                     l3984:
  2377                           
  2378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2379  001C84  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2380  001C88  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2381  001C8C  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  2382  001C90  0E04               	movlw	4
  2383  001C92  26DE               	addwf	postinc2,f,c
  2384  001C94  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  2385  001C98  0E00               	movlw	0
  2386  001C9A  22DD               	addwfc	postdec2,f,c
  2387  001C9C  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2388  001CA0  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2389  001CA4  CFDE F056          	movff	postinc2,vfpfcnvrt@f
  2390  001CA8  CFDE F057          	movff	postinc2,vfpfcnvrt@f+1
  2391  001CAC  CFDE F058          	movff	postinc2,vfpfcnvrt@f+2
  2392  001CB0  CFDE F059          	movff	postinc2,vfpfcnvrt@f+3
  2393  001CB4                     l325:
  2394                           
  2395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2396  001CB4  0E02               	movlw	2
  2397  001CB6  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2398  001CBA  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2399  001CBE  26DE               	addwf	postinc2,f,c
  2400  001CC0  0E00               	movlw	0
  2401  001CC2  22DD               	addwfc	postdec2,f,c
  2402  001CC4                     
  2403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
  2404  001CC4  C048  F03C         	movff	vfpfcnvrt@fp,efgtoa@fp
  2405  001CC8  C049  F03D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2406  001CCC  C056  F03E         	movff	vfpfcnvrt@f,efgtoa@f
  2407  001CD0  C057  F03F         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2408  001CD4  C058  F040         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2409  001CD8  C059  F041         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2410  001CDC  C05D  F042         	movff	vfpfcnvrt@c,efgtoa@c
  2411  001CE0  EC27  F004         	call	_efgtoa	;wreg free
  2412  001CE4  C03C  F048         	movff	?_efgtoa,?_vfpfcnvrt
  2413  001CE8  C03D  F049         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2414  001CEC  EFC9  F00E         	goto	l318
  2415  001CF0                     l3990:
  2416                           
  2417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2418  001CF0  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2419  001CF4  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2420  001CF8  CFDE FFF6          	movff	postinc2,tblptrl
  2421  001CFC  CFDD FFF7          	movff	postdec2,tblptrh
  2422  001D00                     	if	0	;tblptru may be non-zero
  2423  001D00                     	endif
  2424  001D00                     	if	0	;tblptru may be non-zero
  2425  001D00                     	endif
  2426  001D00  0008               	tblrd		*
  2427  001D02  50F5               	movf	tablat,w,c
  2428  001D04  0A25               	xorlw	37
  2429  001D06  A4D8               	btfss	status,2,c
  2430  001D08  EF88  F00E         	goto	u4871
  2431  001D0C  EF8A  F00E         	goto	u4870
  2432  001D10                     u4871:
  2433  001D10  EFA1  F00E         	goto	l4000
  2434  001D14                     u4870:
  2435  001D14                     
  2436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2437  001D14  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2438  001D18  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2439  001D1C  2ADE               	incf	postinc2,f,c
  2440  001D1E  0E00               	movlw	0
  2441  001D20  22DD               	addwfc	postdec2,f,c
  2442  001D22                     
  2443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2444  001D22  0E00               	movlw	0
  2445  001D24  6E08               	movwf	(fputc@c+1)^0,c
  2446  001D26  0E25               	movlw	37
  2447  001D28  6E07               	movwf	fputc@c^0,c
  2448  001D2A  C048  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2449  001D2E  C049  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2450  001D32  ECA4  F01A         	call	_fputc	;wreg free
  2451  001D36                     l3996:
  2452                           
  2453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2454  001D36  0E00               	movlw	0
  2455  001D38  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  2456  001D3A  0E01               	movlw	1
  2457  001D3C  6E48               	movwf	?_vfpfcnvrt^0,c
  2458  001D3E  EFC9  F00E         	goto	l318
  2459  001D42                     l4000:
  2460                           
  2461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2462  001D42  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2463  001D46  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2464  001D4A  2ADE               	incf	postinc2,f,c
  2465  001D4C  0E00               	movlw	0
  2466  001D4E  22DD               	addwfc	postdec2,f,c
  2467  001D50                     
  2468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2469  001D50  0E00               	movlw	0
  2470  001D52  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  2471  001D54  0E00               	movlw	0
  2472  001D56  6E48               	movwf	?_vfpfcnvrt^0,c
  2473  001D58  EFC9  F00E         	goto	l318
  2474  001D5C                     l4006:
  2475                           
  2476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2477  001D5C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2478  001D60  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2479  001D64  CFDE FFF6          	movff	postinc2,tblptrl
  2480  001D68  CFDD FFF7          	movff	postdec2,tblptrh
  2481  001D6C                     	if	0	;tblptru may be non-zero
  2482  001D6C                     	endif
  2483  001D6C                     	if	0	;tblptru may be non-zero
  2484  001D6C                     	endif
  2485  001D6C  0008               	tblrd		*
  2486  001D6E  50F5               	movf	tablat,w,c
  2487  001D70  6E07               	movwf	fputc@c^0,c
  2488  001D72  6A08               	clrf	(fputc@c+1)^0,c
  2489  001D74  C048  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2490  001D78  C049  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2491  001D7C  ECA4  F01A         	call	_fputc	;wreg free
  2492  001D80                     
  2493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2494  001D80  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2495  001D84  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2496  001D88  2ADE               	incf	postinc2,f,c
  2497  001D8A  0E00               	movlw	0
  2498  001D8C  22DD               	addwfc	postdec2,f,c
  2499  001D8E  EF9B  F00E         	goto	l3996
  2500  001D92                     l318:
  2501  001D92  0012               	return		;funcret
  2502  001D94                     __end_of_vfpfcnvrt:
  2503                           	opt callstack 0
  2504                           
  2505 ;; *************** function _strncmp *****************
  2506 ;; Defined at:
  2507 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2510 ;;		 -> vfpfcnvrt@ct(3), 
  2511 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2512 ;;		 -> STR_21(3), 
  2513 ;;  n               2    4[COMRAM] unsigned int 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2516 ;;		 -> STR_21(3), 
  2517 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2518 ;;		 -> vfpfcnvrt@ct(3), 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  2    0[COMRAM] int 
  2521 ;; Registers used:
  2522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2528 ;;      Params:         6       0       0       0       0       0       0       0       0
  2529 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2530 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2531 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2532 ;;Total ram usage:       11 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    1
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_vfpfcnvrt
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text7
  2543  00318E                     __ptext7:
  2544                           	opt callstack 0
  2545  00318E                     _strncmp:
  2546                           	opt callstack 24
  2547  00318E  C001  F008         	movff	strncmp@_l,strncmp@l
  2548  003192  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2549  003196  C003  F00A         	movff	strncmp@_r,strncmp@r
  2550  00319A  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2551  00319E  0605               	decf	strncmp@n^0,f,c
  2552  0031A0  A0D8               	btfss	status,0,c
  2553  0031A2  0606               	decf	(strncmp@n+1)^0,f,c
  2554  0031A4  2805               	incf	strncmp@n^0,w,c
  2555  0031A6  E106               	bnz	u4691
  2556  0031A8  2806               	incf	(strncmp@n+1)^0,w,c
  2557  0031AA  A4D8               	btfss	status,2,c
  2558  0031AC  EFDA  F018         	goto	u4691
  2559  0031B0  EFDC  F018         	goto	u4690
  2560  0031B4                     u4691:
  2561  0031B4  EFE9  F018         	goto	l3912
  2562  0031B8                     u4690:
  2563  0031B8  0E00               	movlw	0
  2564  0031BA  6E02               	movwf	(?_strncmp+1)^0,c
  2565  0031BC  0E00               	movlw	0
  2566  0031BE  6E01               	movwf	?_strncmp^0,c
  2567  0031C0  EF31  F019         	goto	l1124
  2568  0031C4                     l3910:
  2569  0031C4  4A08               	infsnz	strncmp@l^0,f,c
  2570  0031C6  2A09               	incf	(strncmp@l+1)^0,f,c
  2571  0031C8  4A0A               	infsnz	strncmp@r^0,f,c
  2572  0031CA  2A0B               	incf	(strncmp@r+1)^0,f,c
  2573  0031CC  0605               	decf	strncmp@n^0,f,c
  2574  0031CE  A0D8               	btfss	status,0,c
  2575  0031D0  0606               	decf	(strncmp@n+1)^0,f,c
  2576  0031D2                     l3912:
  2577  0031D2  C008  FFD9         	movff	strncmp@l,fsr2l
  2578  0031D6  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2579  0031DA  50DF               	movf	indf2,w,c
  2580  0031DC  B4D8               	btfsc	status,2,c
  2581  0031DE  EFF3  F018         	goto	u4701
  2582  0031E2  EFF5  F018         	goto	u4700
  2583  0031E6                     u4701:
  2584  0031E6  EF20  F019         	goto	l3920
  2585  0031EA                     u4700:
  2586  0031EA  C00A  FFF6         	movff	strncmp@r,tblptrl
  2587  0031EE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2588  0031F2                     	if	0	;tblptru may be non-zero
  2589  0031F2                     	endif
  2590  0031F2                     	if	0	;tblptru may be non-zero
  2591  0031F2                     	endif
  2592  0031F2  0008               	tblrd		*
  2593  0031F4  50F5               	movf	tablat,w,c
  2594  0031F6  0900               	iorlw	0
  2595  0031F8  B4D8               	btfsc	status,2,c
  2596  0031FA  EF01  F019         	goto	u4711
  2597  0031FE  EF03  F019         	goto	u4710
  2598  003202                     u4711:
  2599  003202  EF20  F019         	goto	l3920
  2600  003206                     u4710:
  2601  003206  5005               	movf	strncmp@n^0,w,c
  2602  003208  1006               	iorwf	(strncmp@n+1)^0,w,c
  2603  00320A  B4D8               	btfsc	status,2,c
  2604  00320C  EF0A  F019         	goto	u4721
  2605  003210  EF0C  F019         	goto	u4720
  2606  003214                     u4721:
  2607  003214  EF20  F019         	goto	l3920
  2608  003218                     u4720:
  2609  003218  C008  FFD9         	movff	strncmp@l,fsr2l
  2610  00321C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2611  003220  50DF               	movf	indf2,w,c
  2612  003222  6E07               	movwf	??_strncmp^0,c
  2613  003224  C00A  FFF6         	movff	strncmp@r,tblptrl
  2614  003228  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2615  00322C                     	if	0	;tblptru may be non-zero
  2616  00322C                     	endif
  2617  00322C                     	if	0	;tblptru may be non-zero
  2618  00322C                     	endif
  2619  00322C  0008               	tblrd		*
  2620  00322E  50F5               	movf	tablat,w,c
  2621  003230  1807               	xorwf	??_strncmp^0,w,c
  2622  003232  B4D8               	btfsc	status,2,c
  2623  003234  EF1E  F019         	goto	u4731
  2624  003238  EF20  F019         	goto	u4730
  2625  00323C                     u4731:
  2626  00323C  EFE2  F018         	goto	l3910
  2627  003240                     u4730:
  2628  003240                     l3920:
  2629  003240  C008  FFD9         	movff	strncmp@l,fsr2l
  2630  003244  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2631  003248  50DF               	movf	indf2,w,c
  2632  00324A  6E07               	movwf	??_strncmp^0,c
  2633  00324C  C00A  FFF6         	movff	strncmp@r,tblptrl
  2634  003250  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2635  003254                     	if	0	;tblptru may be non-zero
  2636  003254                     	endif
  2637  003254                     	if	0	;tblptru may be non-zero
  2638  003254                     	endif
  2639  003254  0008               	tblrd		*
  2640  003256  50F5               	movf	tablat,w,c
  2641  003258  5C07               	subwf	??_strncmp^0,w,c
  2642  00325A  6E01               	movwf	?_strncmp^0,c
  2643  00325C  6A02               	clrf	(?_strncmp+1)^0,c
  2644  00325E  A0D8               	btfss	status,0,c
  2645  003260  0602               	decf	(?_strncmp+1)^0,f,c
  2646  003262                     l1124:
  2647  003262  0012               	return		;funcret
  2648  003264                     __end_of_strncmp:
  2649                           	opt callstack 0
  2650                           
  2651 ;; *************** function _efgtoa *****************
  2652 ;; Defined at:
  2653 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  2656 ;;		 -> NULL(0), 
  2657 ;;  f               4   61[COMRAM] PTR struct _IO_FILE
  2658 ;;  c               1   65[COMRAM] unsigned char 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;  u               4   52[BANK0 ] unsigned char 
  2661 ;;  g               4   44[BANK0 ] unsigned char 
  2662 ;;  l               4   38[BANK0 ] unsigned char 
  2663 ;;  h               4   34[BANK0 ] unsigned char 
  2664 ;;  ou              4    0[BANK0 ] unsigned char 
  2665 ;;  n               2   50[BANK0 ] int 
  2666 ;;  e               2   48[BANK0 ] int 
  2667 ;;  i               2   42[BANK0 ] int 
  2668 ;;  w               2   31[BANK0 ] int 
  2669 ;;  p               2   28[BANK0 ] int 
  2670 ;;  sign            2   26[BANK0 ] int 
  2671 ;;  d               2   24[BANK0 ] int 
  2672 ;;  ne              2   22[BANK0 ] int 
  2673 ;;  m               2   20[BANK0 ] int 
  2674 ;;  pp              2   18[BANK0 ] int 
  2675 ;;  t               2   16[BANK0 ] int 
  2676 ;;  mode            1   33[BANK0 ] unsigned char 
  2677 ;;  nmode           1   30[BANK0 ] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  2   59[COMRAM] int 
  2680 ;; Registers used:
  2681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2687 ;;      Params:         7       0       0       0       0       0       0       0       0
  2688 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2689 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2690 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2691 ;;Total ram usage:       68 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    8
  2694 ;; This function calls:
  2695 ;;		___awdiv
  2696 ;;		___awmod
  2697 ;;		___fladd
  2698 ;;		___fldiv
  2699 ;;		___fleq
  2700 ;;		___flge
  2701 ;;		___flmul
  2702 ;;		___flneg
  2703 ;;		___flsub
  2704 ;;		___fltol
  2705 ;;		___fpclassifyf
  2706 ;;		_floorf
  2707 ;;		_isupper
  2708 ;;		_pad
  2709 ;;		_strcpy
  2710 ;;		_tolower
  2711 ;; This function is called by:
  2712 ;;		_vfpfcnvrt
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text8
  2717  00084E                     __ptext8:
  2718                           	opt callstack 0
  2719  00084E                     _efgtoa:
  2720                           	opt callstack 17
  2721  00084E                     
  2722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2723  00084E  0E00               	movlw	0
  2724  000850  0100               	movlb	0	; () banked
  2725  000852  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2726  000854  0E00               	movlw	0
  2727  000856  6F7A               	movwf	efgtoa@sign& (0+255),b
  2728  000858                     
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2731  000858  C03E  F08C         	movff	efgtoa@f,efgtoa@g
  2732  00085C  C03F  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2733  000860  C040  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2734  000864  C041  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2735  000868                     
  2736                           ; BSR set to: 0
  2737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2738  000868  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2739  00086A  EF3B  F004         	goto	u4100
  2740  00086E  EF39  F004         	goto	u4101
  2741  000872                     u4101:
  2742  000872  EF51  F004         	goto	l3574
  2743  000876                     u4100:
  2744  000876                     
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2747  000876  0E00               	movlw	0
  2748  000878  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2749  00087A  0E01               	movlw	1
  2750  00087C  6F7A               	movwf	efgtoa@sign& (0+255),b
  2751  00087E                     
  2752                           ; BSR set to: 0
  2753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2754  00087E  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2755  000882  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2756  000886  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2757  00088A  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2758  00088E  EC18  F01D         	call	___flneg	;wreg free
  2759  000892  C001  F08C         	movff	?___flneg,efgtoa@g
  2760  000896  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2761  00089A  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2762  00089E  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2763  0008A2                     l3574:
  2764                           
  2765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2766  0008A2  0E00               	movlw	0
  2767  0008A4  0100               	movlb	0	; () banked
  2768  0008A6  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2769  0008A8  0E00               	movlw	0
  2770  0008AA  6F92               	movwf	efgtoa@n& (0+255),b
  2771  0008AC                     
  2772                           ; BSR set to: 0
  2773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2774  0008AC  C0BE  F07F         	movff	_width,efgtoa@w
  2775  0008B0  C0BF  F080         	movff	_width+1,efgtoa@w+1
  2776  0008B4                     
  2777                           ; BSR set to: 0
  2778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2779  0008B4  517A               	movf	efgtoa@sign& (0+255),w,b
  2780  0008B6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2781  0008B8  A4D8               	btfss	status,2,c
  2782  0008BA  EF61  F004         	goto	u4111
  2783  0008BE  EF63  F004         	goto	u4110
  2784  0008C2                     u4111:
  2785  0008C2  EF6A  F004         	goto	l3582
  2786  0008C6                     u4110:
  2787  0008C6                     
  2788                           ; BSR set to: 0
  2789  0008C6  A5C2               	btfss	_flags& (0+255),2,b
  2790  0008C8  EF68  F004         	goto	u4121
  2791  0008CC  EF6A  F004         	goto	u4120
  2792  0008D0                     u4121:
  2793  0008D0  EF84  F004         	goto	l3594
  2794  0008D4                     u4120:
  2795  0008D4                     l3582:
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2799  0008D4  517A               	movf	efgtoa@sign& (0+255),w,b
  2800  0008D6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2801  0008D8  A4D8               	btfss	status,2,c
  2802  0008DA  EF71  F004         	goto	u4131
  2803  0008DE  EF73  F004         	goto	u4130
  2804  0008E2                     u4131:
  2805  0008E2  EF79  F004         	goto	l3586
  2806  0008E6                     u4130:
  2807  0008E6                     
  2808                           ; BSR set to: 0
  2809  0008E6  0E00               	movlw	0
  2810  0008E8  6F65               	movwf	(_efgtoa$808+1)& (0+255),b
  2811  0008EA  0E2B               	movlw	43
  2812  0008EC  6F64               	movwf	_efgtoa$808& (0+255),b
  2813  0008EE  EF7D  F004         	goto	l3588
  2814  0008F2                     l3586:
  2815                           
  2816                           ; BSR set to: 0
  2817  0008F2  0E00               	movlw	0
  2818  0008F4  6F65               	movwf	(_efgtoa$808+1)& (0+255),b
  2819  0008F6  0E2D               	movlw	45
  2820  0008F8  6F64               	movwf	_efgtoa$808& (0+255),b
  2821  0008FA                     l3588:
  2822                           
  2823                           ; BSR set to: 0
  2824  0008FA  C064  F100         	movff	_efgtoa$808,_dbuf
  2825  0008FE                     
  2826                           ; BSR set to: 0
  2827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2828  0008FE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2829  000900  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2830  000902                     
  2831                           ; BSR set to: 0
  2832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2833  000902  077F               	decf	efgtoa@w& (0+255),f,b
  2834  000904  A0D8               	btfss	status,0,c
  2835  000906  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2836  000908                     l3594:
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2840  000908  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2841  00090C  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2842  000910  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2843  000914  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2844  000918  EC48  F018         	call	___fpclassifyf	;wreg free
  2845  00091C  0401               	decf	?___fpclassifyf^0,w,c
  2846  00091E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2847  000920  A4D8               	btfss	status,2,c
  2848  000922  EF95  F004         	goto	u4141
  2849  000926  EF97  F004         	goto	u4140
  2850  00092A                     u4141:
  2851  00092A  EFEE  F004         	goto	l3612
  2852  00092E                     u4140:
  2853  00092E  0EBF               	movlw	191
  2854  000930  6E43               	movwf	??_efgtoa^0,c
  2855  000932  0EFF               	movlw	255
  2856  000934  6E44               	movwf	(??_efgtoa+1)^0,c
  2857  000936  5042               	movf	efgtoa@c^0,w,c
  2858  000938  6E45               	movwf	(??_efgtoa+2)^0,c
  2859  00093A  6A46               	clrf	(??_efgtoa+3)^0,c
  2860  00093C  5043               	movf	??_efgtoa^0,w,c
  2861  00093E  2645               	addwf	(??_efgtoa+2)^0,f,c
  2862  000940  5044               	movf	(??_efgtoa+1)^0,w,c
  2863  000942  2246               	addwfc	(??_efgtoa+3)^0,f,c
  2864  000944  5046               	movf	(??_efgtoa+3)^0,w,c
  2865  000946  E10A               	bnz	u4150
  2866  000948  0E1A               	movlw	26
  2867  00094A  5C45               	subwf	(??_efgtoa+2)^0,w,c
  2868  00094C  A0D8               	btfss	status,0,c
  2869  00094E  EFAB  F004         	goto	u4151
  2870  000952  EFAE  F004         	goto	u4150
  2871  000956                     u4151:
  2872  000956  0E01               	movlw	1
  2873  000958  EFAF  F004         	goto	u4160
  2874  00095C                     u4150:
  2875  00095C  0E00               	movlw	0
  2876  00095E                     u4160:
  2877  00095E  0100               	movlb	0	; () banked
  2878  000960  6F66               	movwf	_efgtoa$809& (0+255),b
  2879  000962  6B67               	clrf	(_efgtoa$809+1)& (0+255),b
  2880  000964                     
  2881                           ; BSR set to: 0
  2882  000964  5166               	movf	_efgtoa$809& (0+255),w,b
  2883  000966  1167               	iorwf	(_efgtoa$809+1)& (0+255),w,b
  2884  000968  B4D8               	btfsc	status,2,c
  2885  00096A  EFB9  F004         	goto	u4171
  2886  00096E  EFBB  F004         	goto	u4170
  2887  000972                     u4171:
  2888  000972  EFC9  F004         	goto	l3604
  2889  000976                     u4170:
  2890  000976                     
  2891                           ; BSR set to: 0
  2892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2893  000976  0E00               	movlw	low _dbuf
  2894  000978  2592               	addwf	efgtoa@n& (0+255),w,b
  2895  00097A  6E01               	movwf	strcpy@dest^0,c
  2896  00097C  0E01               	movlw	high _dbuf
  2897  00097E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2898  000980  6E02               	movwf	(strcpy@dest+1)^0,c
  2899  000982  0E3A               	movlw	low STR_11
  2900  000984  6E03               	movwf	strcpy@src^0,c
  2901  000986  0E08               	movlw	high STR_11
  2902  000988  6E04               	movwf	(strcpy@src+1)^0,c
  2903  00098A  EC3F  F01C         	call	_strcpy	;wreg free
  2904                           
  2905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2906  00098E  EFD5  F004         	goto	l3606
  2907  000992                     l3604:
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2911  000992  0E00               	movlw	low _dbuf
  2912  000994  2592               	addwf	efgtoa@n& (0+255),w,b
  2913  000996  6E01               	movwf	strcpy@dest^0,c
  2914  000998  0E01               	movlw	high _dbuf
  2915  00099A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2916  00099C  6E02               	movwf	(strcpy@dest+1)^0,c
  2917  00099E  0E42               	movlw	low STR_12
  2918  0009A0  6E03               	movwf	strcpy@src^0,c
  2919  0009A2  0E08               	movlw	high STR_12
  2920  0009A4  6E04               	movwf	(strcpy@src+1)^0,c
  2921  0009A6  EC3F  F01C         	call	_strcpy	;wreg free
  2922  0009AA                     l3606:
  2923                           
  2924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2925  0009AA  0100               	movlb	0	; () banked
  2926  0009AC  0EFD               	movlw	253
  2927  0009AE  277F               	addwf	efgtoa@w& (0+255),f,b
  2928  0009B0  0EFF               	movlw	255
  2929  0009B2  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2930  0009B4                     
  2931                           ; BSR set to: 0
  2932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  2933  0009B4  C03C  F017         	movff	efgtoa@fp,pad@fp
  2934  0009B8  C03D  F018         	movff	efgtoa@fp+1,pad@fp+1
  2935  0009BC  0E00               	movlw	low _dbuf
  2936  0009BE  6E19               	movwf	pad@buf^0,c
  2937  0009C0  0E01               	movlw	high _dbuf
  2938  0009C2  6E1A               	movwf	(pad@buf+1)^0,c
  2939  0009C4  C07F  F01B         	movff	efgtoa@w,pad@p
  2940  0009C8  C080  F01C         	movff	efgtoa@w+1,pad@p+1
  2941  0009CC  EC32  F019         	call	_pad	;wreg free
  2942  0009D0  C017  F03C         	movff	?_pad,?_efgtoa
  2943  0009D4  C018  F03D         	movff	?_pad+1,?_efgtoa+1
  2944  0009D8  EF25  F00A         	goto	l228
  2945  0009DC                     l3612:
  2946                           
  2947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2948  0009DC  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2949  0009E0  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2950  0009E4  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2951  0009E8  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2952  0009EC  EC48  F018         	call	___fpclassifyf	;wreg free
  2953  0009F0  5001               	movf	?___fpclassifyf^0,w,c
  2954  0009F2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2955  0009F4  A4D8               	btfss	status,2,c
  2956  0009F6  EFFF  F004         	goto	u4181
  2957  0009FA  EF01  F005         	goto	u4180
  2958  0009FE                     u4181:
  2959  0009FE  EF58  F005         	goto	l3630
  2960  000A02                     u4180:
  2961  000A02  0EBF               	movlw	191
  2962  000A04  6E43               	movwf	??_efgtoa^0,c
  2963  000A06  0EFF               	movlw	255
  2964  000A08  6E44               	movwf	(??_efgtoa+1)^0,c
  2965  000A0A  5042               	movf	efgtoa@c^0,w,c
  2966  000A0C  6E45               	movwf	(??_efgtoa+2)^0,c
  2967  000A0E  6A46               	clrf	(??_efgtoa+3)^0,c
  2968  000A10  5043               	movf	??_efgtoa^0,w,c
  2969  000A12  2645               	addwf	(??_efgtoa+2)^0,f,c
  2970  000A14  5044               	movf	(??_efgtoa+1)^0,w,c
  2971  000A16  2246               	addwfc	(??_efgtoa+3)^0,f,c
  2972  000A18  5046               	movf	(??_efgtoa+3)^0,w,c
  2973  000A1A  E10A               	bnz	u4190
  2974  000A1C  0E1A               	movlw	26
  2975  000A1E  5C45               	subwf	(??_efgtoa+2)^0,w,c
  2976  000A20  A0D8               	btfss	status,0,c
  2977  000A22  EF15  F005         	goto	u4191
  2978  000A26  EF18  F005         	goto	u4190
  2979  000A2A                     u4191:
  2980  000A2A  0E01               	movlw	1
  2981  000A2C  EF19  F005         	goto	u4200
  2982  000A30                     u4190:
  2983  000A30  0E00               	movlw	0
  2984  000A32                     u4200:
  2985  000A32  0100               	movlb	0	; () banked
  2986  000A34  6F68               	movwf	_efgtoa$814& (0+255),b
  2987  000A36  6B69               	clrf	(_efgtoa$814+1)& (0+255),b
  2988  000A38                     
  2989                           ; BSR set to: 0
  2990  000A38  5168               	movf	_efgtoa$814& (0+255),w,b
  2991  000A3A  1169               	iorwf	(_efgtoa$814+1)& (0+255),w,b
  2992  000A3C  B4D8               	btfsc	status,2,c
  2993  000A3E  EF23  F005         	goto	u4211
  2994  000A42  EF25  F005         	goto	u4210
  2995  000A46                     u4211:
  2996  000A46  EF33  F005         	goto	l3622
  2997  000A4A                     u4210:
  2998  000A4A                     
  2999                           ; BSR set to: 0
  3000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3001  000A4A  0E00               	movlw	low _dbuf
  3002  000A4C  2592               	addwf	efgtoa@n& (0+255),w,b
  3003  000A4E  6E01               	movwf	strcpy@dest^0,c
  3004  000A50  0E01               	movlw	high _dbuf
  3005  000A52  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3006  000A54  6E02               	movwf	(strcpy@dest+1)^0,c
  3007  000A56  0E3E               	movlw	low STR_15
  3008  000A58  6E03               	movwf	strcpy@src^0,c
  3009  000A5A  0E08               	movlw	high STR_15
  3010  000A5C  6E04               	movwf	(strcpy@src+1)^0,c
  3011  000A5E  EC3F  F01C         	call	_strcpy	;wreg free
  3012                           
  3013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3014  000A62  EF3F  F005         	goto	l3624
  3015  000A66                     l3622:
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3019  000A66  0E00               	movlw	low _dbuf
  3020  000A68  2592               	addwf	efgtoa@n& (0+255),w,b
  3021  000A6A  6E01               	movwf	strcpy@dest^0,c
  3022  000A6C  0E01               	movlw	high _dbuf
  3023  000A6E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3024  000A70  6E02               	movwf	(strcpy@dest+1)^0,c
  3025  000A72  0E46               	movlw	low STR_16
  3026  000A74  6E03               	movwf	strcpy@src^0,c
  3027  000A76  0E08               	movlw	high STR_16
  3028  000A78  6E04               	movwf	(strcpy@src+1)^0,c
  3029  000A7A  EC3F  F01C         	call	_strcpy	;wreg free
  3030  000A7E                     l3624:
  3031                           
  3032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3033  000A7E  0100               	movlb	0	; () banked
  3034  000A80  0EFD               	movlw	253
  3035  000A82  277F               	addwf	efgtoa@w& (0+255),f,b
  3036  000A84  0EFF               	movlw	255
  3037  000A86  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3038  000A88                     
  3039                           ; BSR set to: 0
  3040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  3041  000A88  C03C  F017         	movff	efgtoa@fp,pad@fp
  3042  000A8C  C03D  F018         	movff	efgtoa@fp+1,pad@fp+1
  3043  000A90  0E00               	movlw	low _dbuf
  3044  000A92  6E19               	movwf	pad@buf^0,c
  3045  000A94  0E01               	movlw	high _dbuf
  3046  000A96  6E1A               	movwf	(pad@buf+1)^0,c
  3047  000A98  C07F  F01B         	movff	efgtoa@w,pad@p
  3048  000A9C  C080  F01C         	movff	efgtoa@w+1,pad@p+1
  3049  000AA0  EC32  F019         	call	_pad	;wreg free
  3050  000AA4  C017  F03C         	movff	?_pad,?_efgtoa
  3051  000AA8  C018  F03D         	movff	?_pad+1,?_efgtoa+1
  3052  000AAC  EF25  F00A         	goto	l228
  3053  000AB0                     l3630:
  3054                           
  3055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3056  000AB0  0E00               	movlw	0
  3057  000AB2  0100               	movlb	0	; () banked
  3058  000AB4  6F94               	movwf	efgtoa@u& (0+255),b
  3059  000AB6  0E00               	movlw	0
  3060  000AB8  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3061  000ABA  0E80               	movlw	128
  3062  000ABC  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3063  000ABE  0E3F               	movlw	63
  3064  000AC0  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3065                           
  3066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3067  000AC2  0E00               	movlw	0
  3068  000AC4  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3069  000AC6  0E00               	movlw	0
  3070  000AC8  6F90               	movwf	efgtoa@e& (0+255),b
  3071  000ACA                     
  3072                           ; BSR set to: 0
  3073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3074  000ACA  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  3075  000ACE  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3076  000AD2  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3077  000AD6  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3078  000ADA  0E00               	movlw	0
  3079  000ADC  6E05               	movwf	___fleq@ff2^0,c
  3080  000ADE  0E00               	movlw	0
  3081  000AE0  6E06               	movwf	(___fleq@ff2+1)^0,c
  3082  000AE2  0E00               	movlw	0
  3083  000AE4  6E07               	movwf	(___fleq@ff2+2)^0,c
  3084  000AE6  0E00               	movlw	0
  3085  000AE8  6E08               	movwf	(___fleq@ff2+3)^0,c
  3086  000AEA  EC4F  F01A         	call	___fleq	;wreg free
  3087  000AEE  B0D8               	btfsc	status,0,c
  3088  000AF0  EF7C  F005         	goto	u4221
  3089  000AF4  EF7E  F005         	goto	u4220
  3090  000AF8                     u4221:
  3091  000AF8  EF01  F006         	goto	l3648
  3092  000AFC                     u4220:
  3093  000AFC  EF9D  F005         	goto	l3640
  3094  000B00                     l3636:
  3095                           
  3096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3097  000B00  C094  F001         	movff	efgtoa@u,___flmul@b
  3098  000B04  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3099  000B08  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3100  000B0C  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3101  000B10  0E00               	movlw	0
  3102  000B12  6E05               	movwf	___flmul@a^0,c
  3103  000B14  0E00               	movlw	0
  3104  000B16  6E06               	movwf	(___flmul@a+1)^0,c
  3105  000B18  0E20               	movlw	32
  3106  000B1A  6E07               	movwf	(___flmul@a+2)^0,c
  3107  000B1C  0E41               	movlw	65
  3108  000B1E  6E08               	movwf	(___flmul@a+3)^0,c
  3109  000B20  ECCA  F00E         	call	___flmul	;wreg free
  3110  000B24  C001  F094         	movff	?___flmul,efgtoa@u
  3111  000B28  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  3112  000B2C  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  3113  000B30  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  3114  000B34                     
  3115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3116  000B34  0100               	movlb	0	; () banked
  3117  000B36  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3118  000B38  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3119  000B3A                     l3640:
  3120                           
  3121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3122  000B3A  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3123  000B3E  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3124  000B42  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3125  000B46  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3126  000B4A  0E00               	movlw	0
  3127  000B4C  6E05               	movwf	___flmul@a^0,c
  3128  000B4E  0E00               	movlw	0
  3129  000B50  6E06               	movwf	(___flmul@a+1)^0,c
  3130  000B52  0E20               	movlw	32
  3131  000B54  6E07               	movwf	(___flmul@a+2)^0,c
  3132  000B56  0E41               	movlw	65
  3133  000B58  6E08               	movwf	(___flmul@a+3)^0,c
  3134  000B5A  C094  F001         	movff	efgtoa@u,___flmul@b
  3135  000B5E  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3136  000B62  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3137  000B66  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3138  000B6A  ECCA  F00E         	call	___flmul	;wreg free
  3139  000B6E  C001  F01E         	movff	?___flmul,___flge@ff2
  3140  000B72  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3141  000B76  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3142  000B7A  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3143  000B7E  ECC6  F017         	call	___flge	;wreg free
  3144  000B82  B0D8               	btfsc	status,0,c
  3145  000B84  EFC6  F005         	goto	u4231
  3146  000B88  EFC8  F005         	goto	u4230
  3147  000B8C                     u4231:
  3148  000B8C  EF80  F005         	goto	l3636
  3149  000B90                     u4230:
  3150  000B90  EFE8  F005         	goto	l3646
  3151  000B94                     l3642:
  3152                           
  3153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3154  000B94  C094  F00F         	movff	efgtoa@u,___fldiv@b
  3155  000B98  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  3156  000B9C  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  3157  000BA0  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  3158  000BA4  0E00               	movlw	0
  3159  000BA6  6E13               	movwf	___fldiv@a^0,c
  3160  000BA8  0E00               	movlw	0
  3161  000BAA  6E14               	movwf	(___fldiv@a+1)^0,c
  3162  000BAC  0E20               	movlw	32
  3163  000BAE  6E15               	movwf	(___fldiv@a+2)^0,c
  3164  000BB0  0E41               	movlw	65
  3165  000BB2  6E16               	movwf	(___fldiv@a+3)^0,c
  3166  000BB4  ECDF  F010         	call	___fldiv	;wreg free
  3167  000BB8  C00F  F094         	movff	?___fldiv,efgtoa@u
  3168  000BBC  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  3169  000BC0  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  3170  000BC4  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  3171  000BC8                     
  3172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3173  000BC8  0100               	movlb	0	; () banked
  3174  000BCA  0790               	decf	efgtoa@e& (0+255),f,b
  3175  000BCC  A0D8               	btfss	status,0,c
  3176  000BCE  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3177  000BD0                     l3646:
  3178                           
  3179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3180  000BD0  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3181  000BD4  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3182  000BD8  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3183  000BDC  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3184  000BE0  C094  F01E         	movff	efgtoa@u,___flge@ff2
  3185  000BE4  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3186  000BE8  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3187  000BEC  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3188  000BF0  ECC6  F017         	call	___flge	;wreg free
  3189  000BF4  A0D8               	btfss	status,0,c
  3190  000BF6  EFFF  F005         	goto	u4241
  3191  000BFA  EF01  F006         	goto	u4240
  3192  000BFE                     u4241:
  3193  000BFE  EFCA  F005         	goto	l3642
  3194  000C02                     u4240:
  3195  000C02                     l3648:
  3196                           
  3197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3198  000C02  C042  F007         	movff	efgtoa@c,tolower@c
  3199  000C06  6A08               	clrf	(tolower@c+1)^0,c
  3200  000C08  EC0F  F01C         	call	_tolower	;wreg free
  3201  000C0C  5007               	movf	?_tolower^0,w,c
  3202  000C0E  0100               	movlb	0	; () banked
  3203  000C10  6F81               	movwf	efgtoa@mode& (0+255),b
  3204  000C12                     
  3205                           ; BSR set to: 0
  3206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3207  000C12  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  3208  000C16                     
  3209                           ; BSR set to: 0
  3210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3211  000C16  0E67               	movlw	103
  3212  000C18  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3213  000C1A  A4D8               	btfss	status,2,c
  3214  000C1C  EF12  F006         	goto	u4251
  3215  000C20  EF14  F006         	goto	u4250
  3216  000C24                     u4251:
  3217  000C24  EF3A  F006         	goto	l3662
  3218  000C28                     u4250:
  3219  000C28                     
  3220                           ; BSR set to: 0
  3221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3222  000C28  51C0               	movf	_prec& (0+255),w,b
  3223  000C2A  11C1               	iorwf	(_prec+1)& (0+255),w,b
  3224  000C2C  A4D8               	btfss	status,2,c
  3225  000C2E  EF1B  F006         	goto	u4261
  3226  000C32  EF1D  F006         	goto	u4260
  3227  000C36                     u4261:
  3228  000C36  EF21  F006         	goto	l3658
  3229  000C3A                     u4260:
  3230  000C3A                     
  3231                           ; BSR set to: 0
  3232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3233  000C3A  0E00               	movlw	0
  3234  000C3C  6FC1               	movwf	(_prec+1)& (0+255),b
  3235  000C3E  0E01               	movlw	1
  3236  000C40  6FC0               	movwf	_prec& (0+255),b
  3237  000C42                     l3658:
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3241  000C42  BFC1               	btfsc	(_prec+1)& (0+255),7,b
  3242  000C44  EF2E  F006         	goto	u4270
  3243  000C48  51C1               	movf	(_prec+1)& (0+255),w,b
  3244  000C4A  E106               	bnz	u4271
  3245  000C4C  05C0               	decf	_prec& (0+255),w,b
  3246  000C4E  B0D8               	btfsc	status,0,c
  3247  000C50  EF2C  F006         	goto	u4271
  3248  000C54  EF2E  F006         	goto	u4270
  3249  000C58                     u4271:
  3250  000C58  EF34  F006         	goto	l246
  3251  000C5C                     u4270:
  3252  000C5C                     l3660:
  3253                           
  3254                           ; BSR set to: 0
  3255  000C5C  0E00               	movlw	0
  3256  000C5E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3257  000C60  0E06               	movlw	6
  3258  000C62  6F7C               	movwf	efgtoa@p& (0+255),b
  3259  000C64  EF43  F006         	goto	l3668
  3260  000C68                     l246:
  3261                           
  3262                           ; BSR set to: 0
  3263  000C68  C0C0  F07C         	movff	_prec,efgtoa@p
  3264  000C6C  C0C1  F07D         	movff	_prec+1,efgtoa@p+1
  3265  000C70  EF43  F006         	goto	l3668
  3266  000C74                     l3662:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3270  000C74  BFC1               	btfsc	(_prec+1)& (0+255),7,b
  3271  000C76  EF3F  F006         	goto	u4281
  3272  000C7A  EF41  F006         	goto	u4280
  3273  000C7E                     u4281:
  3274  000C7E  EF2E  F006         	goto	l3660
  3275  000C82                     u4280:
  3276  000C82  EF34  F006         	goto	l246
  3277  000C86                     l3668:
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3281  000C86  0E67               	movlw	103
  3282  000C88  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3283  000C8A  A4D8               	btfss	status,2,c
  3284  000C8C  EF4A  F006         	goto	u4291
  3285  000C90  EF4C  F006         	goto	u4290
  3286  000C94                     u4291:
  3287  000C94  EF7B  F006         	goto	l3678
  3288  000C98                     u4290:
  3289  000C98                     
  3290                           ; BSR set to: 0
  3291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3292  000C98  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3293  000C9A  EF5A  F006         	goto	u4300
  3294  000C9E  0EFC               	movlw	252
  3295  000CA0  5D90               	subwf	efgtoa@e& (0+255),w,b
  3296  000CA2  0EFF               	movlw	255
  3297  000CA4  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3298  000CA6  A0D8               	btfss	status,0,c
  3299  000CA8  EF58  F006         	goto	u4301
  3300  000CAC  EF5A  F006         	goto	u4300
  3301  000CB0                     u4301:
  3302  000CB0  EF79  F006         	goto	l3676
  3303  000CB4                     u4300:
  3304  000CB4                     
  3305                           ; BSR set to: 0
  3306  000CB4  0EFF               	movlw	255
  3307  000CB6  6E43               	movwf	??_efgtoa^0,c
  3308  000CB8  0EFF               	movlw	255
  3309  000CBA  6E44               	movwf	(??_efgtoa+1)^0,c
  3310  000CBC  C07C  F045         	movff	efgtoa@p,??_efgtoa+2
  3311  000CC0  C07D  F046         	movff	efgtoa@p+1,??_efgtoa+3
  3312  000CC4  5043               	movf	??_efgtoa^0,w,c
  3313  000CC6  2645               	addwf	(??_efgtoa+2)^0,f,c
  3314  000CC8  5044               	movf	(??_efgtoa+1)^0,w,c
  3315  000CCA  2246               	addwfc	(??_efgtoa+3)^0,f,c
  3316  000CCC  5190               	movf	efgtoa@e& (0+255),w,b
  3317  000CCE  5C45               	subwf	(??_efgtoa+2)^0,w,c
  3318  000CD0  5046               	movf	(??_efgtoa+3)^0,w,c
  3319  000CD2  0A80               	xorlw	128
  3320  000CD4  6E47               	movwf	(??_efgtoa+4)^0,c
  3321  000CD6  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3322  000CD8  0A80               	xorlw	128
  3323  000CDA  5847               	subwfb	(??_efgtoa+4)^0,w,c
  3324  000CDC  A0D8               	btfss	status,0,c
  3325  000CDE  EF73  F006         	goto	u4311
  3326  000CE2  EF75  F006         	goto	u4310
  3327  000CE6                     u4311:
  3328  000CE6  EF79  F006         	goto	l3676
  3329  000CEA                     u4310:
  3330  000CEA                     
  3331                           ; BSR set to: 0
  3332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3333  000CEA  0E66               	movlw	102
  3334  000CEC  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3335                           
  3336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3337  000CEE  EF7B  F006         	goto	l3678
  3338  000CF2                     l3676:
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3342  000CF2  0E65               	movlw	101
  3343  000CF4  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3344  000CF6                     l3678:
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3348  000CF6  C07C  F074         	movff	efgtoa@p,efgtoa@m
  3349  000CFA  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  3350  000CFE                     
  3351                           ; BSR set to: 0
  3352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3353  000CFE  0E67               	movlw	103
  3354  000D00  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3355  000D02  A4D8               	btfss	status,2,c
  3356  000D04  EF86  F006         	goto	u4321
  3357  000D08  EF88  F006         	goto	u4320
  3358  000D0C                     u4321:
  3359  000D0C  EF98  F006         	goto	l3686
  3360  000D10                     u4320:
  3361  000D10                     
  3362                           ; BSR set to: 0
  3363  000D10  0E66               	movlw	102
  3364  000D12  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3365  000D14  A4D8               	btfss	status,2,c
  3366  000D16  EF8F  F006         	goto	u4331
  3367  000D1A  EF91  F006         	goto	u4330
  3368  000D1E                     u4331:
  3369  000D1E  EF9A  F006         	goto	l3688
  3370  000D22                     u4330:
  3371  000D22                     
  3372                           ; BSR set to: 0
  3373  000D22  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3374  000D24  EF98  F006         	goto	u4340
  3375  000D28  EF96  F006         	goto	u4341
  3376  000D2C                     u4341:
  3377  000D2C  EF9A  F006         	goto	l3688
  3378  000D30                     u4340:
  3379  000D30                     l3686:
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3383  000D30  4B74               	infsnz	efgtoa@m& (0+255),f,b
  3384  000D32  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  3385  000D34                     l3688:
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3389  000D34  0E66               	movlw	102
  3390  000D36  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3391  000D38  A4D8               	btfss	status,2,c
  3392  000D3A  EFA1  F006         	goto	u4351
  3393  000D3E  EFA3  F006         	goto	u4350
  3394  000D42                     u4351:
  3395  000D42  EFC3  F006         	goto	l3698
  3396  000D46                     u4350:
  3397  000D46                     
  3398                           ; BSR set to: 0
  3399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3400  000D46  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3401  000D48  EFAA  F006         	goto	u4360
  3402  000D4C  EFA8  F006         	goto	u4361
  3403  000D50                     u4361:
  3404  000D50  EFB6  F006         	goto	l3694
  3405  000D54                     u4360:
  3406  000D54                     
  3407                           ; BSR set to: 0
  3408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3409  000D54  0E00               	movlw	0
  3410  000D56  6F94               	movwf	efgtoa@u& (0+255),b
  3411  000D58  0E00               	movlw	0
  3412  000D5A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3413  000D5C  0E80               	movlw	128
  3414  000D5E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3415  000D60  0E3F               	movlw	63
  3416  000D62  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3417                           
  3418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3419  000D64  0E00               	movlw	0
  3420  000D66  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3421  000D68  0E00               	movlw	0
  3422  000D6A  6F90               	movwf	efgtoa@e& (0+255),b
  3423  000D6C                     l3694:
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3427  000D6C  0E67               	movlw	103
  3428  000D6E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3429  000D70  B4D8               	btfsc	status,2,c
  3430  000D72  EFBD  F006         	goto	u4371
  3431  000D76  EFBF  F006         	goto	u4370
  3432  000D7A                     u4371:
  3433  000D7A  EFC3  F006         	goto	l3698
  3434  000D7E                     u4370:
  3435  000D7E                     
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3438  000D7E  5190               	movf	efgtoa@e& (0+255),w,b
  3439  000D80  2774               	addwf	efgtoa@m& (0+255),f,b
  3440  000D82  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3441  000D84  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3442  000D86                     l3698:
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3446  000D86  0E00               	movlw	0
  3447  000D88  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3448  000D8A  0E00               	movlw	0
  3449  000D8C  6F8A               	movwf	efgtoa@i& (0+255),b
  3450  000D8E                     
  3451                           ; BSR set to: 0
  3452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3453  000D8E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3454  000D92  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3455  000D96  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3456  000D9A  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3457  000D9E                     
  3458                           ; BSR set to: 0
  3459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3460  000D9E  C094  F060         	movff	efgtoa@u,efgtoa@ou
  3461  000DA2  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  3462  000DA6  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  3463  000DAA  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  3464                           
  3465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3466  000DAE  EF54  F007         	goto	l3712
  3467  000DB2                     l3704:
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3471  000DB2  C082  F00F         	movff	efgtoa@h,___fldiv@b
  3472  000DB6  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  3473  000DBA  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  3474  000DBE  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  3475  000DC2  C094  F013         	movff	efgtoa@u,___fldiv@a
  3476  000DC6  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  3477  000DCA  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  3478  000DCE  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  3479  000DD2  ECDF  F010         	call	___fldiv	;wreg free
  3480  000DD6  C00F  F028         	movff	?___fldiv,floorf@x
  3481  000DDA  C010  F029         	movff	?___fldiv+1,floorf@x+1
  3482  000DDE  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  3483  000DE2  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  3484  000DE6  ECF0  F013         	call	_floorf	;wreg free
  3485  000DEA  C028  F086         	movff	?_floorf,efgtoa@l
  3486  000DEE  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  3487  000DF2  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  3488  000DF6  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  3489                           
  3490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3491  000DFA  C086  F001         	movff	efgtoa@l,___fltol@f1
  3492  000DFE  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3493  000E02  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3494  000E06  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3495  000E0A  EC43  F017         	call	___fltol	;wreg free
  3496  000E0E  C001  F078         	movff	?___fltol,efgtoa@d
  3497  000E12  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3498  000E16                     
  3499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3500  000E16  C082  F01A         	movff	efgtoa@h,___flsub@b
  3501  000E1A  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3502  000E1E  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3503  000E22  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3504  000E26  C094  F005         	movff	efgtoa@u,___flmul@a
  3505  000E2A  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3506  000E2E  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3507  000E32  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3508  000E36  C086  F001         	movff	efgtoa@l,___flmul@b
  3509  000E3A  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3510  000E3E  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3511  000E42  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3512  000E46  ECCA  F00E         	call	___flmul	;wreg free
  3513  000E4A  C001  F01E         	movff	?___flmul,___flsub@a
  3514  000E4E  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3515  000E52  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3516  000E56  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3517  000E5A  EC96  F01C         	call	___flsub	;wreg free
  3518  000E5E  C01A  F082         	movff	?___flsub,efgtoa@h
  3519  000E62  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3520  000E66  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3521  000E6A  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3522  000E6E                     
  3523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3524  000E6E  C094  F00F         	movff	efgtoa@u,___fldiv@b
  3525  000E72  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  3526  000E76  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  3527  000E7A  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  3528  000E7E  0E00               	movlw	0
  3529  000E80  6E13               	movwf	___fldiv@a^0,c
  3530  000E82  0E00               	movlw	0
  3531  000E84  6E14               	movwf	(___fldiv@a+1)^0,c
  3532  000E86  0E20               	movlw	32
  3533  000E88  6E15               	movwf	(___fldiv@a+2)^0,c
  3534  000E8A  0E41               	movlw	65
  3535  000E8C  6E16               	movwf	(___fldiv@a+3)^0,c
  3536  000E8E  ECDF  F010         	call	___fldiv	;wreg free
  3537  000E92  C00F  F094         	movff	?___fldiv,efgtoa@u
  3538  000E96  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  3539  000E9A  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  3540  000E9E  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  3541  000EA2                     
  3542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3543  000EA2  0100               	movlb	0	; () banked
  3544  000EA4  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3545  000EA6  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3546  000EA8                     l3712:
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3550  000EA8  5174               	movf	efgtoa@m& (0+255),w,b
  3551  000EAA  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3552  000EAC  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3553  000EAE  0A80               	xorlw	128
  3554  000EB0  6E43               	movwf	??_efgtoa^0,c
  3555  000EB2  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3556  000EB4  0A80               	xorlw	128
  3557  000EB6  5843               	subwfb	??_efgtoa^0,w,c
  3558  000EB8  A0D8               	btfss	status,0,c
  3559  000EBA  EF61  F007         	goto	u4381
  3560  000EBE  EF63  F007         	goto	u4380
  3561  000EC2                     u4381:
  3562  000EC2  EFD9  F006         	goto	l3704
  3563  000EC6                     u4380:
  3564  000EC6                     
  3565                           ; BSR set to: 0
  3566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3567  000EC6  C094  F001         	movff	efgtoa@u,___flmul@b
  3568  000ECA  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3569  000ECE  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3570  000ED2  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3571  000ED6  0E00               	movlw	0
  3572  000ED8  6E05               	movwf	___flmul@a^0,c
  3573  000EDA  0E00               	movlw	0
  3574  000EDC  6E06               	movwf	(___flmul@a+1)^0,c
  3575  000EDE  0EA0               	movlw	160
  3576  000EE0  6E07               	movwf	(___flmul@a+2)^0,c
  3577  000EE2  0E40               	movlw	64
  3578  000EE4  6E08               	movwf	(___flmul@a+3)^0,c
  3579  000EE6  ECCA  F00E         	call	___flmul	;wreg free
  3580  000EEA  C001  F086         	movff	?___flmul,efgtoa@l
  3581  000EEE  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  3582  000EF2  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  3583  000EF6  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  3584  000EFA                     
  3585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3586  000EFA  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3587  000EFE  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3588  000F02  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3589  000F06  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3590  000F0A  C086  F01E         	movff	efgtoa@l,___flge@ff2
  3591  000F0E  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3592  000F12  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3593  000F16  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3594  000F1A  ECC6  F017         	call	___flge	;wreg free
  3595  000F1E  B0D8               	btfsc	status,0,c
  3596  000F20  EF94  F007         	goto	u4391
  3597  000F24  EF96  F007         	goto	u4390
  3598  000F28                     u4391:
  3599  000F28  EFA1  F007         	goto	l3720
  3600  000F2C                     u4390:
  3601  000F2C                     
  3602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3603  000F2C  0E00               	movlw	0
  3604  000F2E  0100               	movlb	0	; () banked
  3605  000F30  6F86               	movwf	efgtoa@l& (0+255),b
  3606  000F32  0E00               	movlw	0
  3607  000F34  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3608  000F36  0E00               	movlw	0
  3609  000F38  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3610  000F3A  0E00               	movlw	0
  3611  000F3C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3612                           
  3613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  3614  000F3E  EFCA  F007         	goto	l3726
  3615  000F42                     l3720:
  3616                           
  3617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3618  000F42  C082  F001         	movff	efgtoa@h,___fleq@ff1
  3619  000F46  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3620  000F4A  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3621  000F4E  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3622  000F52  C086  F005         	movff	efgtoa@l,___fleq@ff2
  3623  000F56  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3624  000F5A  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3625  000F5E  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3626  000F62  EC4F  F01A         	call	___fleq	;wreg free
  3627  000F66  A0D8               	btfss	status,0,c
  3628  000F68  EFB8  F007         	goto	u4401
  3629  000F6C  EFBA  F007         	goto	u4400
  3630  000F70                     u4401:
  3631  000F70  EFCA  F007         	goto	l3726
  3632  000F74                     u4400:
  3633  000F74  0100               	movlb	0	; () banked
  3634  000F76  B178               	btfsc	efgtoa@d& (0+255),0,b
  3635  000F78  EFC0  F007         	goto	u4411
  3636  000F7C  EFC2  F007         	goto	u4410
  3637  000F80                     u4411:
  3638  000F80  EFCA  F007         	goto	l3726
  3639  000F84                     u4410:
  3640  000F84                     
  3641                           ; BSR set to: 0
  3642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3643  000F84  0E00               	movlw	0
  3644  000F86  6F86               	movwf	efgtoa@l& (0+255),b
  3645  000F88  0E00               	movlw	0
  3646  000F8A  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3647  000F8C  0E00               	movlw	0
  3648  000F8E  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3649  000F90  0E00               	movlw	0
  3650  000F92  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3651  000F94                     l3726:
  3652                           
  3653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3654  000F94  C08C  F001         	movff	efgtoa@g,___fladd@b
  3655  000F98  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  3656  000F9C  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  3657  000FA0  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  3658  000FA4  C086  F005         	movff	efgtoa@l,___fladd@a
  3659  000FA8  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3660  000FAC  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3661  000FB0  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3662  000FB4  EC26  F00A         	call	___fladd	;wreg free
  3663  000FB8  C001  F082         	movff	?___fladd,efgtoa@h
  3664  000FBC  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3665  000FC0  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3666  000FC4  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3667  000FC8                     
  3668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3669  000FC8  C060  F094         	movff	efgtoa@ou,efgtoa@u
  3670  000FCC  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3671  000FD0  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3672  000FD4  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3673  000FD8                     
  3674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3675  000FD8  0E65               	movlw	101
  3676  000FDA  0100               	movlb	0	; () banked
  3677  000FDC  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3678  000FDE  B4D8               	btfsc	status,2,c
  3679  000FE0  EFF4  F007         	goto	u4421
  3680  000FE4  EFF6  F007         	goto	u4420
  3681  000FE8                     u4421:
  3682  000FE8  EFFC  F007         	goto	l3734
  3683  000FEC                     u4420:
  3684  000FEC                     
  3685                           ; BSR set to: 0
  3686  000FEC  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3687  000FF0  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3688  000FF4  EF00  F008         	goto	l272
  3689  000FF8                     l3734:
  3690                           
  3691                           ; BSR set to: 0
  3692  000FF8  0E00               	movlw	0
  3693  000FFA  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3694  000FFC  0E00               	movlw	0
  3695  000FFE  6F76               	movwf	efgtoa@ne& (0+255),b
  3696  001000                     l272:
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3700  001000  0E00               	movlw	0
  3701  001002  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3702  001004  0E00               	movlw	0
  3703  001006  6F72               	movwf	efgtoa@pp& (0+255),b
  3704                           
  3705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3706  001008  0E00               	movlw	0
  3707  00100A  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3708  00100C  0E00               	movlw	0
  3709  00100E  6F70               	movwf	efgtoa@t& (0+255),b
  3710                           
  3711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3712  001010  0E00               	movlw	0
  3713  001012  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3714  001014  0E00               	movlw	0
  3715  001016  6F8A               	movwf	efgtoa@i& (0+255),b
  3716                           
  3717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3718  001018  EFFB  F008         	goto	l3784
  3719  00101C                     l3736:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3723  00101C  C082  F00F         	movff	efgtoa@h,___fldiv@b
  3724  001020  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  3725  001024  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  3726  001028  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  3727  00102C  C094  F013         	movff	efgtoa@u,___fldiv@a
  3728  001030  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  3729  001034  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  3730  001038  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  3731  00103C  ECDF  F010         	call	___fldiv	;wreg free
  3732  001040  C00F  F028         	movff	?___fldiv,floorf@x
  3733  001044  C010  F029         	movff	?___fldiv+1,floorf@x+1
  3734  001048  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  3735  00104C  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  3736  001050  ECF0  F013         	call	_floorf	;wreg free
  3737  001054  C028  F086         	movff	?_floorf,efgtoa@l
  3738  001058  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  3739  00105C  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  3740  001060  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  3741                           
  3742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3743  001064  C086  F001         	movff	efgtoa@l,___fltol@f1
  3744  001068  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3745  00106C  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3746  001070  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3747  001074  EC43  F017         	call	___fltol	;wreg free
  3748  001078  C001  F078         	movff	?___fltol,efgtoa@d
  3749  00107C  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3750  001080                     
  3751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3752  001080  0100               	movlb	0	; () banked
  3753  001082  B9C2               	btfsc	_flags& (0+255),4,b
  3754  001084  EF46  F008         	goto	u4431
  3755  001088  EF48  F008         	goto	u4430
  3756  00108C                     u4431:
  3757  00108C  EF65  F008         	goto	l3748
  3758  001090                     u4430:
  3759  001090                     
  3760                           ; BSR set to: 0
  3761  001090  5178               	movf	efgtoa@d& (0+255),w,b
  3762  001092  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3763  001094  A4D8               	btfss	status,2,c
  3764  001096  EF4F  F008         	goto	u4441
  3765  00109A  EF51  F008         	goto	u4440
  3766  00109E                     u4441:
  3767  00109E  EF65  F008         	goto	l3748
  3768  0010A2                     u4440:
  3769  0010A2                     
  3770                           ; BSR set to: 0
  3771  0010A2  0E67               	movlw	103
  3772  0010A4  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3773  0010A6  A4D8               	btfss	status,2,c
  3774  0010A8  EF58  F008         	goto	u4451
  3775  0010AC  EF5A  F008         	goto	u4450
  3776  0010B0                     u4451:
  3777  0010B0  EF65  F008         	goto	l3748
  3778  0010B4                     u4450:
  3779  0010B4                     
  3780                           ; BSR set to: 0
  3781  0010B4  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3782  0010B6  EF61  F008         	goto	u4460
  3783  0010BA  EF5F  F008         	goto	u4461
  3784  0010BE                     u4461:
  3785  0010BE  EF65  F008         	goto	l3748
  3786  0010C2                     u4460:
  3787  0010C2                     
  3788                           ; BSR set to: 0
  3789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3790  0010C2  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3791  0010C4  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3792                           
  3793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3794  0010C6  EFAF  F008         	goto	l3776
  3795  0010CA                     l3748:
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3799  0010CA  5172               	movf	efgtoa@pp& (0+255),w,b
  3800  0010CC  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3801  0010CE  A4D8               	btfss	status,2,c
  3802  0010D0  EF6C  F008         	goto	u4471
  3803  0010D4  EF6E  F008         	goto	u4470
  3804  0010D8                     u4471:
  3805  0010D8  EF98  F008         	goto	l3768
  3806  0010DC                     u4470:
  3807  0010DC                     
  3808                           ; BSR set to: 0
  3809  0010DC  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3810  0010DE  EF75  F008         	goto	u4480
  3811  0010E2  EF73  F008         	goto	u4481
  3812  0010E6                     u4481:
  3813  0010E6  EF98  F008         	goto	l3768
  3814  0010EA                     u4480:
  3815  0010EA                     
  3816                           ; BSR set to: 0
  3817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3818  0010EA  0E00               	movlw	low _dbuf
  3819  0010EC  2592               	addwf	efgtoa@n& (0+255),w,b
  3820  0010EE  6ED9               	movwf	fsr2l,c
  3821  0010F0  0E01               	movlw	high _dbuf
  3822  0010F2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3823  0010F4  6EDA               	movwf	fsr2h,c
  3824  0010F6  0E2E               	movlw	46
  3825  0010F8  6EDF               	movwf	indf2,c
  3826  0010FA                     
  3827                           ; BSR set to: 0
  3828  0010FA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3829  0010FC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3830  0010FE                     
  3831                           ; BSR set to: 0
  3832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3833  0010FE  077F               	decf	efgtoa@w& (0+255),f,b
  3834  001100  A0D8               	btfss	status,0,c
  3835  001102  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3836  001104                     
  3837                           ; BSR set to: 0
  3838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3839  001104  0E00               	movlw	0
  3840  001106  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3841  001108  0E01               	movlw	1
  3842  00110A  6F72               	movwf	efgtoa@pp& (0+255),b
  3843  00110C  EF98  F008         	goto	l3768
  3844  001110                     l3760:
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3848  001110  0E00               	movlw	low _dbuf
  3849  001112  2592               	addwf	efgtoa@n& (0+255),w,b
  3850  001114  6ED9               	movwf	fsr2l,c
  3851  001116  0E01               	movlw	high _dbuf
  3852  001118  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3853  00111A  6EDA               	movwf	fsr2h,c
  3854  00111C  0E30               	movlw	48
  3855  00111E  6EDF               	movwf	indf2,c
  3856  001120                     
  3857                           ; BSR set to: 0
  3858  001120  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3859  001122  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3860  001124                     
  3861                           ; BSR set to: 0
  3862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3863  001124  077F               	decf	efgtoa@w& (0+255),f,b
  3864  001126  A0D8               	btfss	status,0,c
  3865  001128  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3866  00112A                     
  3867                           ; BSR set to: 0
  3868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3869  00112A  0770               	decf	efgtoa@t& (0+255),f,b
  3870  00112C  A0D8               	btfss	status,0,c
  3871  00112E  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3872  001130                     l3768:
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3876  001130  5170               	movf	efgtoa@t& (0+255),w,b
  3877  001132  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3878  001134  A4D8               	btfss	status,2,c
  3879  001136  EF9F  F008         	goto	u4491
  3880  00113A  EFA1  F008         	goto	u4490
  3881  00113E                     u4491:
  3882  00113E  EF88  F008         	goto	l3760
  3883  001142                     u4490:
  3884  001142                     
  3885                           ; BSR set to: 0
  3886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3887  001142  0E00               	movlw	low _dbuf
  3888  001144  2592               	addwf	efgtoa@n& (0+255),w,b
  3889  001146  6ED9               	movwf	fsr2l,c
  3890  001148  0E01               	movlw	high _dbuf
  3891  00114A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3892  00114C  6EDA               	movwf	fsr2h,c
  3893  00114E  5178               	movf	efgtoa@d& (0+255),w,b
  3894  001150  0F30               	addlw	48
  3895  001152  6EDF               	movwf	indf2,c
  3896  001154                     
  3897                           ; BSR set to: 0
  3898  001154  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3899  001156  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3900  001158                     
  3901                           ; BSR set to: 0
  3902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3903  001158  077F               	decf	efgtoa@w& (0+255),f,b
  3904  00115A  A0D8               	btfss	status,0,c
  3905  00115C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3906  00115E                     l3776:
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3910  00115E  C082  F01A         	movff	efgtoa@h,___flsub@b
  3911  001162  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3912  001166  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3913  00116A  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3914  00116E  C094  F005         	movff	efgtoa@u,___flmul@a
  3915  001172  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3916  001176  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3917  00117A  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3918  00117E  C086  F001         	movff	efgtoa@l,___flmul@b
  3919  001182  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3920  001186  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3921  00118A  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3922  00118E  ECCA  F00E         	call	___flmul	;wreg free
  3923  001192  C001  F01E         	movff	?___flmul,___flsub@a
  3924  001196  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3925  00119A  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3926  00119E  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3927  0011A2  EC96  F01C         	call	___flsub	;wreg free
  3928  0011A6  C01A  F082         	movff	?___flsub,efgtoa@h
  3929  0011AA  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3930  0011AE  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3931  0011B2  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3932  0011B6                     
  3933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3934  0011B6  C094  F00F         	movff	efgtoa@u,___fldiv@b
  3935  0011BA  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  3936  0011BE  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  3937  0011C2  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  3938  0011C6  0E00               	movlw	0
  3939  0011C8  6E13               	movwf	___fldiv@a^0,c
  3940  0011CA  0E00               	movlw	0
  3941  0011CC  6E14               	movwf	(___fldiv@a+1)^0,c
  3942  0011CE  0E20               	movlw	32
  3943  0011D0  6E15               	movwf	(___fldiv@a+2)^0,c
  3944  0011D2  0E41               	movlw	65
  3945  0011D4  6E16               	movwf	(___fldiv@a+3)^0,c
  3946  0011D6  ECDF  F010         	call	___fldiv	;wreg free
  3947  0011DA  C00F  F094         	movff	?___fldiv,efgtoa@u
  3948  0011DE  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  3949  0011E2  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  3950  0011E6  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  3951  0011EA                     
  3952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3953  0011EA  0100               	movlb	0	; () banked
  3954  0011EC  0776               	decf	efgtoa@ne& (0+255),f,b
  3955  0011EE  A0D8               	btfss	status,0,c
  3956  0011F0  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3957  0011F2                     
  3958                           ; BSR set to: 0
  3959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3960  0011F2  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3961  0011F4  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3962  0011F6                     l3784:
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3966  0011F6  5174               	movf	efgtoa@m& (0+255),w,b
  3967  0011F8  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3968  0011FA  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3969  0011FC  0A80               	xorlw	128
  3970  0011FE  6E43               	movwf	??_efgtoa^0,c
  3971  001200  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3972  001202  0A80               	xorlw	128
  3973  001204  5843               	subwfb	??_efgtoa^0,w,c
  3974  001206  B0D8               	btfsc	status,0,c
  3975  001208  EF08  F009         	goto	u4501
  3976  00120C  EF0A  F009         	goto	u4500
  3977  001210                     u4501:
  3978  001210  EF18  F009         	goto	l3788
  3979  001214                     u4500:
  3980  001214                     
  3981                           ; BSR set to: 0
  3982  001214  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3983  001216  EF16  F009         	goto	u4511
  3984  00121A  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3985  00121C  E109               	bnz	u4510
  3986  00121E  0E4B               	movlw	75
  3987  001220  5D92               	subwf	efgtoa@n& (0+255),w,b
  3988  001222  A0D8               	btfss	status,0,c
  3989  001224  EF16  F009         	goto	u4511
  3990  001228  EF18  F009         	goto	u4510
  3991  00122C                     u4511:
  3992  00122C  EF0E  F008         	goto	l3736
  3993  001230                     u4510:
  3994  001230                     l3788:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3998  001230  5172               	movf	efgtoa@pp& (0+255),w,b
  3999  001232  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4000  001234  A4D8               	btfss	status,2,c
  4001  001236  EF1F  F009         	goto	u4521
  4002  00123A  EF21  F009         	goto	u4520
  4003  00123E                     u4521:
  4004  00123E  EF32  F009         	goto	l3796
  4005  001242                     u4520:
  4006  001242                     
  4007                           ; BSR set to: 0
  4008  001242  A9C2               	btfss	_flags& (0+255),4,b
  4009  001244  EF26  F009         	goto	u4531
  4010  001248  EF28  F009         	goto	u4530
  4011  00124C                     u4531:
  4012  00124C  EF32  F009         	goto	l3796
  4013  001250                     u4530:
  4014  001250                     
  4015                           ; BSR set to: 0
  4016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4017  001250  0E00               	movlw	low _dbuf
  4018  001252  2592               	addwf	efgtoa@n& (0+255),w,b
  4019  001254  6ED9               	movwf	fsr2l,c
  4020  001256  0E01               	movlw	high _dbuf
  4021  001258  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4022  00125A  6EDA               	movwf	fsr2h,c
  4023  00125C  0E2E               	movlw	46
  4024  00125E  6EDF               	movwf	indf2,c
  4025  001260                     
  4026                           ; BSR set to: 0
  4027  001260  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4028  001262  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4029  001264                     l3796:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4033  001264  0E00               	movlw	low _dbuf
  4034  001266  2592               	addwf	efgtoa@n& (0+255),w,b
  4035  001268  6ED9               	movwf	fsr2l,c
  4036  00126A  0E01               	movlw	high _dbuf
  4037  00126C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4038  00126E  6EDA               	movwf	fsr2h,c
  4039  001270  0E00               	movlw	0
  4040  001272  6EDF               	movwf	indf2,c
  4041  001274                     
  4042                           ; BSR set to: 0
  4043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4044  001274  0E65               	movlw	101
  4045  001276  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4046  001278  A4D8               	btfss	status,2,c
  4047  00127A  EF41  F009         	goto	u4541
  4048  00127E  EF43  F009         	goto	u4540
  4049  001282                     u4541:
  4050  001282  EF13  F00A         	goto	l3858
  4051  001286                     u4540:
  4052  001286                     
  4053                           ; BSR set to: 0
  4054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4055  001286  0E00               	movlw	0
  4056  001288  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4057  00128A  0E4F               	movlw	79
  4058  00128C  6F8A               	movwf	efgtoa@i& (0+255),b
  4059  00128E                     
  4060                           ; BSR set to: 0
  4061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4062  00128E  0E00               	movlw	low _dbuf
  4063  001290  258A               	addwf	efgtoa@i& (0+255),w,b
  4064  001292  6ED9               	movwf	fsr2l,c
  4065  001294  0E01               	movlw	high _dbuf
  4066  001296  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4067  001298  6EDA               	movwf	fsr2h,c
  4068  00129A  0E00               	movlw	0
  4069  00129C  6EDF               	movwf	indf2,c
  4070  00129E                     
  4071                           ; BSR set to: 0
  4072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4073  00129E  0E00               	movlw	0
  4074  0012A0  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4075  0012A2  0E00               	movlw	0
  4076  0012A4  6F7A               	movwf	efgtoa@sign& (0+255),b
  4077  0012A6                     
  4078                           ; BSR set to: 0
  4079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4080  0012A6  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4081  0012A8  EF5A  F009         	goto	u4550
  4082  0012AC  EF58  F009         	goto	u4551
  4083  0012B0                     u4551:
  4084  0012B0  EF62  F009         	goto	l3812
  4085  0012B4                     u4550:
  4086  0012B4                     
  4087                           ; BSR set to: 0
  4088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4089  0012B4  0E00               	movlw	0
  4090  0012B6  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4091  0012B8  0E01               	movlw	1
  4092  0012BA  6F7A               	movwf	efgtoa@sign& (0+255),b
  4093  0012BC                     
  4094                           ; BSR set to: 0
  4095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4096  0012BC  6D90               	negf	efgtoa@e& (0+255),b
  4097  0012BE  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4098  0012C0  B0D8               	btfsc	status,0,c
  4099  0012C2  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4100  0012C4                     l3812:
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4104  0012C4  0E00               	movlw	0
  4105  0012C6  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4106  0012C8  0E02               	movlw	2
  4107  0012CA  6F7C               	movwf	efgtoa@p& (0+255),b
  4108                           
  4109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4110  0012CC  EF93  F009         	goto	l3824
  4111  0012D0                     l3814:
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4115  0012D0  078A               	decf	efgtoa@i& (0+255),f,b
  4116  0012D2  A0D8               	btfss	status,0,c
  4117  0012D4  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4118  0012D6                     
  4119                           ; BSR set to: 0
  4120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4121  0012D6  0E00               	movlw	low _dbuf
  4122  0012D8  258A               	addwf	efgtoa@i& (0+255),w,b
  4123  0012DA  6ED9               	movwf	fsr2l,c
  4124  0012DC  0E01               	movlw	high _dbuf
  4125  0012DE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4126  0012E0  6EDA               	movwf	fsr2h,c
  4127  0012E2  C090  F001         	movff	efgtoa@e,___awmod@dividend
  4128  0012E6  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4129  0012EA  0E00               	movlw	0
  4130  0012EC  6E04               	movwf	(___awmod@divisor+1)^0,c
  4131  0012EE  0E0A               	movlw	10
  4132  0012F0  6E03               	movwf	___awmod@divisor^0,c
  4133  0012F2  ECF7  F019         	call	___awmod	;wreg free
  4134  0012F6  5001               	movf	?___awmod^0,w,c
  4135  0012F8  0F30               	addlw	48
  4136  0012FA  6EDF               	movwf	indf2,c
  4137  0012FC                     
  4138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4139  0012FC  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  4140  001300  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4141  001304  0E00               	movlw	0
  4142  001306  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4143  001308  0E0A               	movlw	10
  4144  00130A  6E03               	movwf	___awdiv@divisor^0,c
  4145  00130C  EC95  F019         	call	___awdiv	;wreg free
  4146  001310  C001  F090         	movff	?___awdiv,efgtoa@e
  4147  001314  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  4148  001318                     
  4149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4150  001318  0100               	movlb	0	; () banked
  4151  00131A  077C               	decf	efgtoa@p& (0+255),f,b
  4152  00131C  A0D8               	btfss	status,0,c
  4153  00131E  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4154  001320                     
  4155                           ; BSR set to: 0
  4156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4157  001320  077F               	decf	efgtoa@w& (0+255),f,b
  4158  001322  A0D8               	btfss	status,0,c
  4159  001324  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4160  001326                     l3824:
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4164  001326  5190               	movf	efgtoa@e& (0+255),w,b
  4165  001328  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4166  00132A  A4D8               	btfss	status,2,c
  4167  00132C  EF9A  F009         	goto	u4561
  4168  001330  EF9C  F009         	goto	u4560
  4169  001334                     u4561:
  4170  001334  EF68  F009         	goto	l3814
  4171  001338                     u4560:
  4172  001338                     
  4173                           ; BSR set to: 0
  4174  001338  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4175  00133A  EFA9  F009         	goto	u4570
  4176  00133E  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4177  001340  E106               	bnz	u4571
  4178  001342  057C               	decf	efgtoa@p& (0+255),w,b
  4179  001344  B0D8               	btfsc	status,0,c
  4180  001346  EFA7  F009         	goto	u4571
  4181  00134A  EFA9  F009         	goto	u4570
  4182  00134E                     u4571:
  4183  00134E  EF68  F009         	goto	l3814
  4184  001352                     u4570:
  4185  001352                     
  4186                           ; BSR set to: 0
  4187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4188  001352  078A               	decf	efgtoa@i& (0+255),f,b
  4189  001354  A0D8               	btfss	status,0,c
  4190  001356  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4191  001358                     
  4192                           ; BSR set to: 0
  4193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4194  001358  517A               	movf	efgtoa@sign& (0+255),w,b
  4195  00135A  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4196  00135C  A4D8               	btfss	status,2,c
  4197  00135E  EFB3  F009         	goto	u4581
  4198  001362  EFB5  F009         	goto	u4580
  4199  001366                     u4581:
  4200  001366  EFBB  F009         	goto	l3834
  4201  00136A                     u4580:
  4202  00136A                     
  4203                           ; BSR set to: 0
  4204  00136A  0E00               	movlw	0
  4205  00136C  6F6B               	movwf	(_efgtoa$818+1)& (0+255),b
  4206  00136E  0E2B               	movlw	43
  4207  001370  6F6A               	movwf	_efgtoa$818& (0+255),b
  4208  001372  EFBF  F009         	goto	l3836
  4209  001376                     l3834:
  4210                           
  4211                           ; BSR set to: 0
  4212  001376  0E00               	movlw	0
  4213  001378  6F6B               	movwf	(_efgtoa$818+1)& (0+255),b
  4214  00137A  0E2D               	movlw	45
  4215  00137C  6F6A               	movwf	_efgtoa$818& (0+255),b
  4216  00137E                     l3836:
  4217                           
  4218                           ; BSR set to: 0
  4219  00137E  0E00               	movlw	low _dbuf
  4220  001380  258A               	addwf	efgtoa@i& (0+255),w,b
  4221  001382  6ED9               	movwf	fsr2l,c
  4222  001384  0E01               	movlw	high _dbuf
  4223  001386  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4224  001388  6EDA               	movwf	fsr2h,c
  4225  00138A  C06A  FFDF         	movff	_efgtoa$818,indf2
  4226  00138E                     
  4227                           ; BSR set to: 0
  4228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4229  00138E  077F               	decf	efgtoa@w& (0+255),f,b
  4230  001390  A0D8               	btfss	status,0,c
  4231  001392  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4232  001394                     
  4233                           ; BSR set to: 0
  4234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4235  001394  078A               	decf	efgtoa@i& (0+255),f,b
  4236  001396  A0D8               	btfss	status,0,c
  4237  001398  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4238  00139A                     
  4239                           ; BSR set to: 0
  4240  00139A  0EBF               	movlw	191
  4241  00139C  6E43               	movwf	??_efgtoa^0,c
  4242  00139E  0EFF               	movlw	255
  4243  0013A0  6E44               	movwf	(??_efgtoa+1)^0,c
  4244  0013A2  5042               	movf	efgtoa@c^0,w,c
  4245  0013A4  6E45               	movwf	(??_efgtoa+2)^0,c
  4246  0013A6  6A46               	clrf	(??_efgtoa+3)^0,c
  4247  0013A8  5043               	movf	??_efgtoa^0,w,c
  4248  0013AA  2645               	addwf	(??_efgtoa+2)^0,f,c
  4249  0013AC  5044               	movf	(??_efgtoa+1)^0,w,c
  4250  0013AE  2246               	addwfc	(??_efgtoa+3)^0,f,c
  4251  0013B0  5046               	movf	(??_efgtoa+3)^0,w,c
  4252  0013B2  E10A               	bnz	u4590
  4253  0013B4  0E1A               	movlw	26
  4254  0013B6  5C45               	subwf	(??_efgtoa+2)^0,w,c
  4255  0013B8  A0D8               	btfss	status,0,c
  4256  0013BA  EFE1  F009         	goto	u4591
  4257  0013BE  EFE4  F009         	goto	u4590
  4258  0013C2                     u4591:
  4259  0013C2  0E01               	movlw	1
  4260  0013C4  EFE5  F009         	goto	u4600
  4261  0013C8                     u4590:
  4262  0013C8  0E00               	movlw	0
  4263  0013CA                     u4600:
  4264  0013CA  6F6E               	movwf	_efgtoa$820& (0+255),b
  4265  0013CC  6B6F               	clrf	(_efgtoa$820+1)& (0+255),b
  4266  0013CE                     
  4267                           ; BSR set to: 0
  4268  0013CE  516E               	movf	_efgtoa$820& (0+255),w,b
  4269  0013D0  116F               	iorwf	(_efgtoa$820+1)& (0+255),w,b
  4270  0013D2  A4D8               	btfss	status,2,c
  4271  0013D4  EFEE  F009         	goto	u4611
  4272  0013D8  EFF0  F009         	goto	u4610
  4273  0013DC                     u4611:
  4274  0013DC  EFF6  F009         	goto	l3850
  4275  0013E0                     u4610:
  4276  0013E0                     
  4277                           ; BSR set to: 0
  4278  0013E0  0E00               	movlw	0
  4279  0013E2  6F6D               	movwf	(_efgtoa$819+1)& (0+255),b
  4280  0013E4  0E65               	movlw	101
  4281  0013E6  6F6C               	movwf	_efgtoa$819& (0+255),b
  4282  0013E8  EFFA  F009         	goto	l3852
  4283  0013EC                     l3850:
  4284                           
  4285                           ; BSR set to: 0
  4286  0013EC  0E00               	movlw	0
  4287  0013EE  6F6D               	movwf	(_efgtoa$819+1)& (0+255),b
  4288  0013F0  0E45               	movlw	69
  4289  0013F2  6F6C               	movwf	_efgtoa$819& (0+255),b
  4290  0013F4                     l3852:
  4291                           
  4292                           ; BSR set to: 0
  4293  0013F4  0E00               	movlw	low _dbuf
  4294  0013F6  258A               	addwf	efgtoa@i& (0+255),w,b
  4295  0013F8  6ED9               	movwf	fsr2l,c
  4296  0013FA  0E01               	movlw	high _dbuf
  4297  0013FC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4298  0013FE  6EDA               	movwf	fsr2h,c
  4299  001400  C06C  FFDF         	movff	_efgtoa$819,indf2
  4300  001404                     
  4301                           ; BSR set to: 0
  4302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4303  001404  077F               	decf	efgtoa@w& (0+255),f,b
  4304  001406  A0D8               	btfss	status,0,c
  4305  001408  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4306  00140A                     
  4307                           ; BSR set to: 0
  4308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4309  00140A  0E00               	movlw	low _dbuf
  4310  00140C  2592               	addwf	efgtoa@n& (0+255),w,b
  4311  00140E  6E01               	movwf	strcpy@dest^0,c
  4312  001410  0E01               	movlw	high _dbuf
  4313  001412  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4314  001414  6E02               	movwf	(strcpy@dest+1)^0,c
  4315  001416  0E00               	movlw	low _dbuf
  4316  001418  258A               	addwf	efgtoa@i& (0+255),w,b
  4317  00141A  6E03               	movwf	strcpy@src^0,c
  4318  00141C  0E01               	movlw	high _dbuf
  4319  00141E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4320  001420  6E04               	movwf	(strcpy@src+1)^0,c
  4321  001422  EC3F  F01C         	call	_strcpy	;wreg free
  4322  001426                     l3858:
  4323                           
  4324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
  4325  001426  C03C  F017         	movff	efgtoa@fp,pad@fp
  4326  00142A  C03D  F018         	movff	efgtoa@fp+1,pad@fp+1
  4327  00142E  0E00               	movlw	low _dbuf
  4328  001430  6E19               	movwf	pad@buf^0,c
  4329  001432  0E01               	movlw	high _dbuf
  4330  001434  6E1A               	movwf	(pad@buf+1)^0,c
  4331  001436  C07F  F01B         	movff	efgtoa@w,pad@p
  4332  00143A  C080  F01C         	movff	efgtoa@w+1,pad@p+1
  4333  00143E  EC32  F019         	call	_pad	;wreg free
  4334  001442  C017  F03C         	movff	?_pad,?_efgtoa
  4335  001446  C018  F03D         	movff	?_pad+1,?_efgtoa+1
  4336  00144A                     l228:
  4337  00144A  0012               	return		;funcret
  4338  00144C                     __end_of_efgtoa:
  4339                           	opt callstack 0
  4340                           
  4341 ;; *************** function _tolower *****************
  4342 ;; Defined at:
  4343 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  c               2    6[COMRAM] int 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  2    6[COMRAM] int 
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4357 ;;      Params:         2       0       0       0       0       0       0       0       0
  4358 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4359 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4360 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4361 ;;Total ram usage:        8 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    2
  4364 ;; This function calls:
  4365 ;;		_isupper
  4366 ;; This function is called by:
  4367 ;;		_efgtoa
  4368 ;;		_vfpfcnvrt
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text9
  4373  00381E                     __ptext9:
  4374                           	opt callstack 0
  4375  00381E                     _tolower:
  4376                           	opt callstack 23
  4377  00381E  0EBF               	movlw	191
  4378  003820  6E09               	movwf	??_tolower^0,c
  4379  003822  0EFF               	movlw	255
  4380  003824  6E0A               	movwf	(??_tolower+1)^0,c
  4381  003826  C007  F00B         	movff	tolower@c,??_tolower+2
  4382  00382A  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4383  00382E  5009               	movf	??_tolower^0,w,c
  4384  003830  260B               	addwf	(??_tolower+2)^0,f,c
  4385  003832  500A               	movf	(??_tolower+1)^0,w,c
  4386  003834  220C               	addwfc	(??_tolower+3)^0,f,c
  4387  003836  500C               	movf	(??_tolower+3)^0,w,c
  4388  003838  E10A               	bnz	u3230
  4389  00383A  0E1A               	movlw	26
  4390  00383C  5C0B               	subwf	(??_tolower+2)^0,w,c
  4391  00383E  A0D8               	btfss	status,0,c
  4392  003840  EF24  F01C         	goto	u3231
  4393  003844  EF27  F01C         	goto	u3230
  4394  003848                     u3231:
  4395  003848  0E01               	movlw	1
  4396  00384A  EF28  F01C         	goto	u3240
  4397  00384E                     u3230:
  4398  00384E  0E00               	movlw	0
  4399  003850                     u3240:
  4400  003850  6E0D               	movwf	_tolower$1414^0,c
  4401  003852  6A0E               	clrf	(_tolower$1414+1)^0,c
  4402  003854  500D               	movf	_tolower$1414^0,w,c
  4403  003856  100E               	iorwf	(_tolower$1414+1)^0,w,c
  4404  003858  B4D8               	btfsc	status,2,c
  4405  00385A  EF31  F01C         	goto	u3251
  4406  00385E  EF33  F01C         	goto	u3250
  4407  003862                     u3251:
  4408  003862  EF3A  F01C         	goto	l1134
  4409  003866                     u3250:
  4410  003866  0E20               	movlw	32
  4411  003868  1007               	iorwf	tolower@c^0,w,c
  4412  00386A  6E07               	movwf	?_tolower^0,c
  4413  00386C  5008               	movf	(tolower@c+1)^0,w,c
  4414  00386E  6E08               	movwf	(?_tolower+1)^0,c
  4415  003870  EF3E  F01C         	goto	l1139
  4416  003874                     l1134:
  4417  003874  C007  F007         	movff	tolower@c,?_tolower
  4418  003878  C008  F008         	movff	tolower@c+1,?_tolower+1
  4419  00387C                     l1139:
  4420  00387C  0012               	return		;funcret
  4421  00387E                     __end_of_tolower:
  4422                           	opt callstack 0
  4423                           
  4424 ;; *************** function _isupper *****************
  4425 ;; Defined at:
  4426 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  c               2    0[COMRAM] int 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  2    0[COMRAM] int 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4440 ;;      Params:         2       0       0       0       0       0       0       0       0
  4441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4442 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4443 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4444 ;;Total ram usage:        6 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    1
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		_efgtoa
  4451 ;;		_vfpfcnvrt
  4452 ;;		_tolower
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text10
  4457  0039F8                     __ptext10:
  4458                           	opt callstack 0
  4459  0039F8                     _isupper:
  4460                           	opt callstack 23
  4461  0039F8  0EBF               	movlw	191
  4462  0039FA  6E03               	movwf	??_isupper^0,c
  4463  0039FC  0EFF               	movlw	255
  4464  0039FE  6E04               	movwf	(??_isupper+1)^0,c
  4465  003A00  C001  F005         	movff	isupper@c,??_isupper+2
  4466  003A04  C002  F006         	movff	isupper@c+1,??_isupper+3
  4467  003A08  5003               	movf	??_isupper^0,w,c
  4468  003A0A  2605               	addwf	(??_isupper+2)^0,f,c
  4469  003A0C  5004               	movf	(??_isupper+1)^0,w,c
  4470  003A0E  2206               	addwfc	(??_isupper+3)^0,f,c
  4471  003A10  5006               	movf	(??_isupper+3)^0,w,c
  4472  003A12  E10A               	bnz	u2690
  4473  003A14  0E1A               	movlw	26
  4474  003A16  5C05               	subwf	(??_isupper+2)^0,w,c
  4475  003A18  A0D8               	btfss	status,0,c
  4476  003A1A  EF11  F01D         	goto	u2691
  4477  003A1E  EF14  F01D         	goto	u2690
  4478  003A22                     u2691:
  4479  003A22  0E01               	movlw	1
  4480  003A24  EF15  F01D         	goto	u2700
  4481  003A28                     u2690:
  4482  003A28  0E00               	movlw	0
  4483  003A2A                     u2700:
  4484  003A2A  6E01               	movwf	?_isupper^0,c
  4485  003A2C  6A02               	clrf	(?_isupper+1)^0,c
  4486  003A2E  0012               	return		;funcret
  4487  003A30                     __end_of_isupper:
  4488                           	opt callstack 0
  4489                           
  4490 ;; *************** function _strcpy *****************
  4491 ;; Defined at:
  4492 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4495 ;;		 -> dbuf(80), 
  4496 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4497 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  4498 ;;		 -> dbuf(80), 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  d               2    8[COMRAM] PTR unsigned char 
  4501 ;;		 -> dbuf(80), 
  4502 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4503 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  4504 ;;		 -> dbuf(80), 
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  2    0[COMRAM] PTR unsigned char 
  4507 ;; Registers used:
  4508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4514 ;;      Params:         4       0       0       0       0       0       0       0       0
  4515 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4516 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4517 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4518 ;;Total ram usage:       10 bytes
  4519 ;; Hardware stack levels used:    1
  4520 ;; Hardware stack levels required when called:    1
  4521 ;; This function calls:
  4522 ;;		Nothing
  4523 ;; This function is called by:
  4524 ;;		_efgtoa
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text11
  4529  00387E                     __ptext11:
  4530                           	opt callstack 0
  4531  00387E                     _strcpy:
  4532                           	opt callstack 23
  4533  00387E  C003  F007         	movff	strcpy@src,strcpy@s
  4534  003882  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4535  003886  C001  F009         	movff	strcpy@dest,strcpy@d
  4536  00388A  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4537  00388E                     l3058:
  4538  00388E  5007               	movf	strcpy@s^0,w,c
  4539  003890  6E05               	movwf	??_strcpy^0,c
  4540  003892  5008               	movf	(strcpy@s+1)^0,w,c
  4541  003894  6E06               	movwf	(??_strcpy+1)^0,c
  4542  003896  4A07               	infsnz	strcpy@s^0,f,c
  4543  003898  2A08               	incf	(strcpy@s+1)^0,f,c
  4544  00389A  C005  FFF6         	movff	??_strcpy,tblptrl
  4545  00389E  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4546  0038A2  6AF8               	clrf	tblptru,c
  4547  0038A4  C009  FFD9         	movff	strcpy@d,fsr2l
  4548  0038A8  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4549  0038AC  4A09               	infsnz	strcpy@d^0,f,c
  4550  0038AE  2A0A               	incf	(strcpy@d+1)^0,f,c
  4551  0038B0  0E07               	movlw	(high __ramtop+-1)
  4552  0038B2  64F7               	cpfsgt	tblptrh,c
  4553  0038B4  D003               	bra	u3217
  4554  0038B6  0008               	tblrd		*
  4555  0038B8  50F5               	movf	tablat,w,c
  4556  0038BA  D005               	bra	u3210
  4557  0038BC                     u3217:
  4558  0038BC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4559  0038C0  CFF7 FFE2          	movff	tblptrh,fsr1h
  4560  0038C4  50E7               	movf	indf1,w,c
  4561  0038C6                     u3210:
  4562  0038C6  6EDF               	movwf	indf2,c
  4563  0038C8  50DF               	movf	indf2,w,c
  4564  0038CA  A4D8               	btfss	status,2,c
  4565  0038CC  EF6A  F01C         	goto	u3221
  4566  0038D0  EF6C  F01C         	goto	u3220
  4567  0038D4                     u3221:
  4568  0038D4  EF47  F01C         	goto	l3058
  4569  0038D8                     u3220:
  4570  0038D8  0012               	return		;funcret
  4571  0038DA                     __end_of_strcpy:
  4572                           	opt callstack 0
  4573                           
  4574 ;; *************** function _pad *****************
  4575 ;; Defined at:
  4576 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4579 ;;		 -> NULL(0), 
  4580 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4581 ;;		 -> dbuf(80), 
  4582 ;;  p               2   26[COMRAM] int 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  w               2   31[COMRAM] int 
  4585 ;;  i               2   29[COMRAM] int 
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  2   22[COMRAM] int 
  4588 ;; Registers used:
  4589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4595 ;;      Params:         6       0       0       0       0       0       0       0       0
  4596 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4597 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4598 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4599 ;;Total ram usage:       11 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:    7
  4602 ;; This function calls:
  4603 ;;		_fputc
  4604 ;;		_fputs
  4605 ;;		_strlen
  4606 ;; This function is called by:
  4607 ;;		_efgtoa
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text12
  4612  003264                     __ptext12:
  4613                           	opt callstack 0
  4614  003264                     _pad:
  4615                           	opt callstack 17
  4616  003264                     
  4617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4618  003264  0100               	movlb	0	; () banked
  4619  003266  A1C2               	btfss	_flags& (0+255),0,b
  4620  003268  EF38  F019         	goto	u3101
  4621  00326C  EF3A  F019         	goto	u3100
  4622  003270                     u3101:
  4623  003270  EF44  F019         	goto	l3016
  4624  003274                     u3100:
  4625  003274                     
  4626                           ; BSR set to: 0
  4627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4628  003274  C019  F010         	movff	pad@buf,fputs@s
  4629  003278  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4630  00327C  C017  F012         	movff	pad@fp,fputs@fp
  4631  003280  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4632  003284  ECB9  F01C         	call	_fputs	;wreg free
  4633  003288                     l3016:
  4634                           
  4635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4636  003288  BE1C               	btfsc	(pad@p+1)^0,7,c
  4637  00328A  EF49  F019         	goto	u3111
  4638  00328E  EF4B  F019         	goto	u3110
  4639  003292                     u3111:
  4640  003292  EF51  F019         	goto	l3020
  4641  003296                     u3110:
  4642  003296  C01B  F020         	movff	pad@p,pad@w
  4643  00329A  C01C  F021         	movff	pad@p+1,pad@w+1
  4644  00329E  EF55  F019         	goto	l205
  4645  0032A2                     l3020:
  4646  0032A2  0E00               	movlw	0
  4647  0032A4  6E21               	movwf	(pad@w+1)^0,c
  4648  0032A6  0E00               	movlw	0
  4649  0032A8  6E20               	movwf	pad@w^0,c
  4650  0032AA                     l205:
  4651                           
  4652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4653  0032AA  0E00               	movlw	0
  4654  0032AC  6E1F               	movwf	(pad@i+1)^0,c
  4655  0032AE  0E00               	movlw	0
  4656  0032B0  6E1E               	movwf	pad@i^0,c
  4657                           
  4658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4659  0032B2  EF67  F019         	goto	l3026
  4660  0032B6                     l3022:
  4661                           
  4662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4663  0032B6  0E00               	movlw	0
  4664  0032B8  6E08               	movwf	(fputc@c+1)^0,c
  4665  0032BA  0E20               	movlw	32
  4666  0032BC  6E07               	movwf	fputc@c^0,c
  4667  0032BE  C017  F009         	movff	pad@fp,fputc@fp
  4668  0032C2  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4669  0032C6  ECA4  F01A         	call	_fputc	;wreg free
  4670  0032CA                     
  4671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4672  0032CA  4A1E               	infsnz	pad@i^0,f,c
  4673  0032CC  2A1F               	incf	(pad@i+1)^0,f,c
  4674  0032CE                     l3026:
  4675                           
  4676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4677  0032CE  5020               	movf	pad@w^0,w,c
  4678  0032D0  5C1E               	subwf	pad@i^0,w,c
  4679  0032D2  501F               	movf	(pad@i+1)^0,w,c
  4680  0032D4  0A80               	xorlw	128
  4681  0032D6  6E1D               	movwf	??_pad^0,c
  4682  0032D8  5021               	movf	(pad@w+1)^0,w,c
  4683  0032DA  0A80               	xorlw	128
  4684  0032DC  581D               	subwfb	??_pad^0,w,c
  4685  0032DE  A0D8               	btfss	status,0,c
  4686  0032E0  EF74  F019         	goto	u3121
  4687  0032E4  EF76  F019         	goto	u3120
  4688  0032E8                     u3121:
  4689  0032E8  EF5B  F019         	goto	l3022
  4690  0032EC                     u3120:
  4691  0032EC                     
  4692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4693  0032EC  0100               	movlb	0	; () banked
  4694  0032EE  B1C2               	btfsc	_flags& (0+255),0,b
  4695  0032F0  EF7C  F019         	goto	u3131
  4696  0032F4  EF7E  F019         	goto	u3130
  4697  0032F8                     u3131:
  4698  0032F8  EF88  F019         	goto	l3030
  4699  0032FC                     u3130:
  4700  0032FC                     
  4701                           ; BSR set to: 0
  4702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4703  0032FC  C019  F010         	movff	pad@buf,fputs@s
  4704  003300  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4705  003304  C017  F012         	movff	pad@fp,fputs@fp
  4706  003308  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4707  00330C  ECB9  F01C         	call	_fputs	;wreg free
  4708  003310                     l3030:
  4709                           
  4710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4711  003310  C019  F001         	movff	pad@buf,strlen@s
  4712  003314  C01A  F002         	movff	pad@buf+1,strlen@s+1
  4713  003318  EC50  F01D         	call	_strlen	;wreg free
  4714  00331C  5020               	movf	pad@w^0,w,c
  4715  00331E  2401               	addwf	?_strlen^0,w,c
  4716  003320  6E17               	movwf	?_pad^0,c
  4717  003322  5021               	movf	(pad@w+1)^0,w,c
  4718  003324  2002               	addwfc	(?_strlen+1)^0,w,c
  4719  003326  6E18               	movwf	(?_pad+1)^0,c
  4720  003328  0012               	return		;funcret
  4721  00332A                     __end_of_pad:
  4722                           	opt callstack 0
  4723                           
  4724 ;; *************** function _strlen *****************
  4725 ;; Defined at:
  4726 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4729 ;;		 -> dbuf(80), 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4732 ;;		 -> dbuf(80), 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  2    0[COMRAM] unsigned int 
  4735 ;; Registers used:
  4736 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4742 ;;      Params:         2       0       0       0       0       0       0       0       0
  4743 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4745 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4746 ;;Total ram usage:        4 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    1
  4749 ;; This function calls:
  4750 ;;		Nothing
  4751 ;; This function is called by:
  4752 ;;		_pad
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text13
  4757  003AA0                     __ptext13:
  4758                           	opt callstack 0
  4759  003AA0                     _strlen:
  4760                           	opt callstack 22
  4761  003AA0  C001  F003         	movff	strlen@s,strlen@a
  4762  003AA4  C002  F004         	movff	strlen@s+1,strlen@a+1
  4763  003AA8  EF58  F01D         	goto	l2800
  4764  003AAC                     l2798:
  4765  003AAC  4A01               	infsnz	strlen@s^0,f,c
  4766  003AAE  2A02               	incf	(strlen@s+1)^0,f,c
  4767  003AB0                     l2800:
  4768  003AB0  C001  FFD9         	movff	strlen@s,fsr2l
  4769  003AB4  C002  FFDA         	movff	strlen@s+1,fsr2h
  4770  003AB8  50DF               	movf	indf2,w,c
  4771  003ABA  A4D8               	btfss	status,2,c
  4772  003ABC  EF62  F01D         	goto	u2681
  4773  003AC0  EF64  F01D         	goto	u2680
  4774  003AC4                     u2681:
  4775  003AC4  EF56  F01D         	goto	l2798
  4776  003AC8                     u2680:
  4777  003AC8  5003               	movf	strlen@a^0,w,c
  4778  003ACA  5C01               	subwf	strlen@s^0,w,c
  4779  003ACC  6E01               	movwf	?_strlen^0,c
  4780  003ACE  5004               	movf	(strlen@a+1)^0,w,c
  4781  003AD0  5802               	subwfb	(strlen@s+1)^0,w,c
  4782  003AD2  6E02               	movwf	(?_strlen+1)^0,c
  4783  003AD4  0012               	return		;funcret
  4784  003AD6                     __end_of_strlen:
  4785                           	opt callstack 0
  4786                           
  4787 ;; *************** function _fputs *****************
  4788 ;; Defined at:
  4789 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4792 ;;		 -> dbuf(80), 
  4793 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4794 ;;		 -> NULL(0), 
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;  i               2   20[COMRAM] int 
  4797 ;;  c               1   19[COMRAM] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  2   15[COMRAM] int 
  4800 ;; Registers used:
  4801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4807 ;;      Params:         4       0       0       0       0       0       0       0       0
  4808 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4810 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4811 ;;Total ram usage:        7 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:    6
  4814 ;; This function calls:
  4815 ;;		_fputc
  4816 ;; This function is called by:
  4817 ;;		_pad
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text14
  4822  003972                     __ptext14:
  4823                           	opt callstack 0
  4824  003972                     _fputs:
  4825                           	opt callstack 17
  4826  003972  0E00               	movlw	0
  4827  003974  6E16               	movwf	(fputs@i+1)^0,c
  4828  003976  0E00               	movlw	0
  4829  003978  6E15               	movwf	fputs@i^0,c
  4830  00397A  EFCA  F01C         	goto	l2794
  4831  00397E                     l2790:
  4832  00397E  C014  F007         	movff	fputs@c,fputc@c
  4833  003982  6A08               	clrf	(fputc@c+1)^0,c
  4834  003984  C012  F009         	movff	fputs@fp,fputc@fp
  4835  003988  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4836  00398C  ECA4  F01A         	call	_fputc	;wreg free
  4837  003990  4A15               	infsnz	fputs@i^0,f,c
  4838  003992  2A16               	incf	(fputs@i+1)^0,f,c
  4839  003994                     l2794:
  4840  003994  5015               	movf	fputs@i^0,w,c
  4841  003996  2410               	addwf	fputs@s^0,w,c
  4842  003998  6ED9               	movwf	fsr2l,c
  4843  00399A  5016               	movf	(fputs@i+1)^0,w,c
  4844  00399C  2011               	addwfc	(fputs@s+1)^0,w,c
  4845  00399E  6EDA               	movwf	fsr2h,c
  4846  0039A0  50DF               	movf	indf2,w,c
  4847  0039A2  6E14               	movwf	fputs@c^0,c
  4848  0039A4  5014               	movf	fputs@c^0,w,c
  4849  0039A6  A4D8               	btfss	status,2,c
  4850  0039A8  EFD8  F01C         	goto	u2671
  4851  0039AC  EFDA  F01C         	goto	u2670
  4852  0039B0                     u2671:
  4853  0039B0  EFBF  F01C         	goto	l2790
  4854  0039B4                     u2670:
  4855  0039B4  0012               	return		;funcret
  4856  0039B6                     __end_of_fputs:
  4857                           	opt callstack 0
  4858                           
  4859 ;; *************** function _fputc *****************
  4860 ;; Defined at:
  4861 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;  c               2    6[COMRAM] int 
  4864 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4865 ;;		 -> NULL(0), 
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  2    6[COMRAM] int 
  4870 ;; Registers used:
  4871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4877 ;;      Params:         4       0       0       0       0       0       0       0       0
  4878 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4879 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4880 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4881 ;;Total ram usage:        9 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; Hardware stack levels required when called:    5
  4884 ;; This function calls:
  4885 ;;		_putch
  4886 ;; This function is called by:
  4887 ;;		_pad
  4888 ;;		_vfpfcnvrt
  4889 ;;		_fputs
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text15
  4894  003548                     __ptext15:
  4895                           	opt callstack 0
  4896  003548                     _fputc:
  4897                           	opt callstack 20
  4898  003548  5009               	movf	fputc@fp^0,w,c
  4899  00354A  100A               	iorwf	(fputc@fp+1)^0,w,c
  4900  00354C  B4D8               	btfsc	status,2,c
  4901  00354E  EFAB  F01A         	goto	u2631
  4902  003552  EFAD  F01A         	goto	u2630
  4903  003556                     u2631:
  4904  003556  EFB6  F01A         	goto	l2778
  4905  00355A                     u2630:
  4906  00355A  5009               	movf	fputc@fp^0,w,c
  4907  00355C  100A               	iorwf	(fputc@fp+1)^0,w,c
  4908  00355E  A4D8               	btfss	status,2,c
  4909  003560  EFB4  F01A         	goto	u2641
  4910  003564  EFB6  F01A         	goto	u2640
  4911  003568                     u2641:
  4912  003568  EFBB  F01A         	goto	l2780
  4913  00356C                     u2640:
  4914  00356C                     l2778:
  4915  00356C  5007               	movf	fputc@c^0,w,c
  4916  00356E  EC12  F01E         	call	_putch
  4917  003572  EFEE  F01A         	goto	l1093
  4918  003576                     l2780:
  4919  003576  EE20 F004          	lfsr	2,4
  4920  00357A  5009               	movf	fputc@fp^0,w,c
  4921  00357C  26D9               	addwf	fsr2l,f,c
  4922  00357E  500A               	movf	(fputc@fp+1)^0,w,c
  4923  003580  22DA               	addwfc	fsr2h,f,c
  4924  003582  50DE               	movf	postinc2,w,c
  4925  003584  10DE               	iorwf	postinc2,w,c
  4926  003586  B4D8               	btfsc	status,2,c
  4927  003588  EFC8  F01A         	goto	u2651
  4928  00358C  EFCA  F01A         	goto	u2650
  4929  003590                     u2651:
  4930  003590  EFE5  F01A         	goto	l2784
  4931  003594                     u2650:
  4932  003594  EE20 F004          	lfsr	2,4
  4933  003598  5009               	movf	fputc@fp^0,w,c
  4934  00359A  26D9               	addwf	fsr2l,f,c
  4935  00359C  500A               	movf	(fputc@fp+1)^0,w,c
  4936  00359E  22DA               	addwfc	fsr2h,f,c
  4937  0035A0  EE10 F002          	lfsr	1,2
  4938  0035A4  5009               	movf	fputc@fp^0,w,c
  4939  0035A6  26E1               	addwf	fsr1l,f,c
  4940  0035A8  500A               	movf	(fputc@fp+1)^0,w,c
  4941  0035AA  22E2               	addwfc	fsr1h,f,c
  4942  0035AC  50DE               	movf	postinc2,w,c
  4943  0035AE  5CE6               	subwf	postinc1,w,c
  4944  0035B0  50E6               	movf	postinc1,w,c
  4945  0035B2  0A80               	xorlw	128
  4946  0035B4  6E0F               	movwf	(??_fputc+4)^0,c
  4947  0035B6  50DE               	movf	postinc2,w,c
  4948  0035B8  0A80               	xorlw	128
  4949  0035BA  580F               	subwfb	(??_fputc+4)^0,w,c
  4950  0035BC  B0D8               	btfsc	status,0,c
  4951  0035BE  EFE3  F01A         	goto	u2661
  4952  0035C2  EFE5  F01A         	goto	u2660
  4953  0035C6                     u2661:
  4954  0035C6  EFEE  F01A         	goto	l1093
  4955  0035CA                     u2660:
  4956  0035CA                     l2784:
  4957  0035CA  EE20 F002          	lfsr	2,2
  4958  0035CE  5009               	movf	fputc@fp^0,w,c
  4959  0035D0  26D9               	addwf	fsr2l,f,c
  4960  0035D2  500A               	movf	(fputc@fp+1)^0,w,c
  4961  0035D4  22DA               	addwfc	fsr2h,f,c
  4962  0035D6  2ADE               	incf	postinc2,f,c
  4963  0035D8  0E00               	movlw	0
  4964  0035DA  22DD               	addwfc	postdec2,f,c
  4965  0035DC                     l1093:
  4966  0035DC  0012               	return		;funcret
  4967  0035DE                     __end_of_fputc:
  4968                           	opt callstack 0
  4969                           
  4970 ;; *************** function _putch *****************
  4971 ;; Defined at:
  4972 ;;		line 12 in file "main.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  data            1    wreg     unsigned char 
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;  data            1    5[COMRAM] unsigned char 
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  1    wreg      void 
  4979 ;; Registers used:
  4980 ;;		wreg, status,2, status,0, cstack
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4986 ;;      Params:         0       0       0       0       0       0       0       0       0
  4987 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4988 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4989 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4990 ;;Total ram usage:        1 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; Hardware stack levels required when called:    4
  4993 ;; This function calls:
  4994 ;;		_escreve_lcd
  4995 ;; This function is called by:
  4996 ;;		_fputc
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text16
  5001  003C24                     __ptext16:
  5002                           	opt callstack 0
  5003  003C24                     _putch:
  5004                           	opt callstack 20
  5005                           
  5006                           ;incstack = 0
  5007                           ;putch@data stored from wreg
  5008  003C24  6E06               	movwf	putch@data^0,c
  5009  003C26                     
  5010                           ;main.c: 12: void putch(char data);main.c: 13: {;main.c: 14:     escreve_lcd(data);
  5011  003C26  5006               	movf	putch@data^0,w,c
  5012  003C28  EC0B  F01E         	call	_escreve_lcd
  5013  003C2C  0012               	return		;funcret
  5014  003C2E                     __end_of_putch:
  5015                           	opt callstack 0
  5016                           
  5017 ;; *************** function _escreve_lcd *****************
  5018 ;; Defined at:
  5019 ;;		line 24 in file "lcd.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  c               1    wreg     unsigned char 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  c               1    4[COMRAM] unsigned char 
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  1    wreg      void 
  5026 ;; Registers used:
  5027 ;;		wreg, status,2, status,0, cstack
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5033 ;;      Params:         0       0       0       0       0       0       0       0       0
  5034 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5036 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5037 ;;Total ram usage:        1 bytes
  5038 ;; Hardware stack levels used:    1
  5039 ;; Hardware stack levels required when called:    3
  5040 ;; This function calls:
  5041 ;;		_envia_byte_lcd
  5042 ;; This function is called by:
  5043 ;;		_putch
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text17
  5048  003C16                     __ptext17:
  5049                           	opt callstack 0
  5050  003C16                     _escreve_lcd:
  5051                           	opt callstack 20
  5052                           
  5053                           ;incstack = 0
  5054                           ;escreve_lcd@c stored from wreg
  5055  003C16  6E05               	movwf	escreve_lcd@c^0,c
  5056  003C18  C005  F003         	movff	escreve_lcd@c,envia_byte_lcd@dado
  5057  003C1C  0E01               	movlw	1
  5058  003C1E  ECA5  F01D         	call	_envia_byte_lcd
  5059  003C22  0012               	return		;funcret
  5060  003C24                     __end_of_escreve_lcd:
  5061                           	opt callstack 0
  5062                           
  5063 ;; *************** function _floorf *****************
  5064 ;; Defined at:
  5065 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  x               4   39[COMRAM] float 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  u               4   55[COMRAM] struct .
  5070 ;;  m               4   49[COMRAM] unsigned long 
  5071 ;;  e               2   53[COMRAM] int 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  4   39[COMRAM] float 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5081 ;;      Params:         4       0       0       0       0       0       0       0       0
  5082 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5083 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5084 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5085 ;;Total ram usage:       20 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    1
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_efgtoa
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text18
  5096  0027E0                     __ptext18:
  5097                           	opt callstack 0
  5098  0027E0                     _floorf:
  5099                           	opt callstack 23
  5100  0027E0  C0AC  F038         	movff	floorf@F524,floorf@u
  5101  0027E4  C0AD  F039         	movff	floorf@F524+1,floorf@u+1
  5102  0027E8  C0AE  F03A         	movff	floorf@F524+2,floorf@u+2
  5103  0027EC  C0AF  F03B         	movff	floorf@F524+3,floorf@u+3
  5104  0027F0  C028  F038         	movff	floorf@x,floorf@u
  5105  0027F4  C029  F039         	movff	floorf@x+1,floorf@u+1
  5106  0027F8  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  5107  0027FC  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  5108  002800  0E81               	movlw	129
  5109  002802  6E2C               	movwf	??_floorf^0,c
  5110  002804  0EFF               	movlw	255
  5111  002806  6E2D               	movwf	(??_floorf+1)^0,c
  5112  002808  C038  F02E         	movff	floorf@u,??_floorf+2
  5113  00280C  C039  F02F         	movff	floorf@u+1,??_floorf+3
  5114  002810  C03A  F030         	movff	floorf@u+2,??_floorf+4
  5115  002814  C03B  F031         	movff	floorf@u+3,??_floorf+5
  5116  002818  0E18               	movlw	24
  5117  00281A  EF14  F014         	goto	u3260
  5118  00281E                     u3265:
  5119  00281E  90D8               	bcf	status,0,c
  5120  002820  3231               	rrcf	(??_floorf+5)^0,f,c
  5121  002822  3230               	rrcf	(??_floorf+4)^0,f,c
  5122  002824  322F               	rrcf	(??_floorf+3)^0,f,c
  5123  002826  322E               	rrcf	(??_floorf+2)^0,f,c
  5124  002828                     u3260:
  5125  002828  2EE8               	decfsz	wreg,f,c
  5126  00282A  EF0F  F014         	goto	u3265
  5127  00282E  502E               	movf	(??_floorf+2)^0,w,c
  5128  002830  242C               	addwf	??_floorf^0,w,c
  5129  002832  6E36               	movwf	floorf@e^0,c
  5130  002834  0E00               	movlw	0
  5131  002836  202D               	addwfc	(??_floorf+1)^0,w,c
  5132  002838  6E37               	movwf	(floorf@e+1)^0,c
  5133  00283A  BE37               	btfsc	(floorf@e+1)^0,7,c
  5134  00283C  EF29  F014         	goto	u3271
  5135  002840  5037               	movf	(floorf@e+1)^0,w,c
  5136  002842  E109               	bnz	u3270
  5137  002844  0E17               	movlw	23
  5138  002846  5C36               	subwf	floorf@e^0,w,c
  5139  002848  A0D8               	btfss	status,0,c
  5140  00284A  EF29  F014         	goto	u3271
  5141  00284E  EF2B  F014         	goto	u3270
  5142  002852                     u3271:
  5143  002852  EF35  F014         	goto	l3076
  5144  002856                     u3270:
  5145  002856                     l3074:
  5146  002856  C028  F028         	movff	floorf@x,?_floorf
  5147  00285A  C029  F029         	movff	floorf@x+1,?_floorf+1
  5148  00285E  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  5149  002862  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  5150  002866  EFF8  F014         	goto	l1054
  5151  00286A                     l3076:
  5152  00286A  BE37               	btfsc	(floorf@e+1)^0,7,c
  5153  00286C  EF3A  F014         	goto	u3281
  5154  002870  EF3C  F014         	goto	u3280
  5155  002874                     u3281:
  5156  002874  EFAC  F014         	goto	l3086
  5157  002878                     u3280:
  5158  002878  C036  F02C         	movff	floorf@e,??_floorf
  5159  00287C  0EFF               	movlw	255
  5160  00287E  6E2D               	movwf	(??_floorf+1)^0,c
  5161  002880  0EFF               	movlw	255
  5162  002882  6E2E               	movwf	(??_floorf+2)^0,c
  5163  002884  0E7F               	movlw	127
  5164  002886  6E2F               	movwf	(??_floorf+3)^0,c
  5165  002888  0E00               	movlw	0
  5166  00288A  6E30               	movwf	(??_floorf+4)^0,c
  5167  00288C                     u3295:
  5168  00288C  662C               	tstfsz	??_floorf^0,c
  5169  00288E  EF4B  F014         	goto	u3296
  5170  002892  EF53  F014         	goto	u3297
  5171  002896                     u3296:
  5172  002896  3430               	rlcf	(??_floorf+4)^0,w,c
  5173  002898  3230               	rrcf	(??_floorf+4)^0,f,c
  5174  00289A  322F               	rrcf	(??_floorf+3)^0,f,c
  5175  00289C  322E               	rrcf	(??_floorf+2)^0,f,c
  5176  00289E  322D               	rrcf	(??_floorf+1)^0,f,c
  5177  0028A0  2E2C               	decfsz	??_floorf^0,f,c
  5178  0028A2  EF46  F014         	goto	u3295
  5179  0028A6                     u3297:
  5180  0028A6  C02D  F032         	movff	??_floorf+1,floorf@m
  5181  0028AA  C02E  F033         	movff	??_floorf+2,floorf@m+1
  5182  0028AE  C02F  F034         	movff	??_floorf+3,floorf@m+2
  5183  0028B2  C030  F035         	movff	??_floorf+4,floorf@m+3
  5184  0028B6  5032               	movf	floorf@m^0,w,c
  5185  0028B8  1438               	andwf	floorf@u^0,w,c
  5186  0028BA  6E2C               	movwf	??_floorf^0,c
  5187  0028BC  5033               	movf	(floorf@m+1)^0,w,c
  5188  0028BE  1439               	andwf	(floorf@u+1)^0,w,c
  5189  0028C0  6E2D               	movwf	(??_floorf+1)^0,c
  5190  0028C2  5034               	movf	(floorf@m+2)^0,w,c
  5191  0028C4  143A               	andwf	(floorf@u+2)^0,w,c
  5192  0028C6  6E2E               	movwf	(??_floorf+2)^0,c
  5193  0028C8  5035               	movf	(floorf@m+3)^0,w,c
  5194  0028CA  143B               	andwf	(floorf@u+3)^0,w,c
  5195  0028CC  6E2F               	movwf	(??_floorf+3)^0,c
  5196  0028CE  502C               	movf	??_floorf^0,w,c
  5197  0028D0  102D               	iorwf	(??_floorf+1)^0,w,c
  5198  0028D2  102E               	iorwf	(??_floorf+2)^0,w,c
  5199  0028D4  102F               	iorwf	(??_floorf+3)^0,w,c
  5200  0028D6  A4D8               	btfss	status,2,c
  5201  0028D8  EF70  F014         	goto	u3301
  5202  0028DC  EF72  F014         	goto	u3300
  5203  0028E0                     u3301:
  5204  0028E0  EF74  F014         	goto	l3082
  5205  0028E4                     u3300:
  5206  0028E4  EF2B  F014         	goto	l3074
  5207  0028E8                     l3082:
  5208  0028E8  C038  F02C         	movff	floorf@u,??_floorf
  5209  0028EC  C039  F02D         	movff	floorf@u+1,??_floorf+1
  5210  0028F0  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  5211  0028F4  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  5212  0028F8  0E20               	movlw	32
  5213  0028FA  EF84  F014         	goto	u3310
  5214  0028FE                     u3315:
  5215  0028FE  90D8               	bcf	status,0,c
  5216  002900  322F               	rrcf	(??_floorf+3)^0,f,c
  5217  002902  322E               	rrcf	(??_floorf+2)^0,f,c
  5218  002904  322D               	rrcf	(??_floorf+1)^0,f,c
  5219  002906  322C               	rrcf	??_floorf^0,f,c
  5220  002908                     u3310:
  5221  002908  2EE8               	decfsz	wreg,f,c
  5222  00290A  EF7F  F014         	goto	u3315
  5223  00290E  502C               	movf	??_floorf^0,w,c
  5224  002910  102D               	iorwf	(??_floorf+1)^0,w,c
  5225  002912  102E               	iorwf	(??_floorf+2)^0,w,c
  5226  002914  102F               	iorwf	(??_floorf+3)^0,w,c
  5227  002916  B4D8               	btfsc	status,2,c
  5228  002918  EF90  F014         	goto	u3321
  5229  00291C  EF92  F014         	goto	u3320
  5230  002920                     u3321:
  5231  002920  EF9A  F014         	goto	l1057
  5232  002924                     u3320:
  5233  002924  5032               	movf	floorf@m^0,w,c
  5234  002926  2638               	addwf	floorf@u^0,f,c
  5235  002928  5033               	movf	(floorf@m+1)^0,w,c
  5236  00292A  2239               	addwfc	(floorf@u+1)^0,f,c
  5237  00292C  5034               	movf	(floorf@m+2)^0,w,c
  5238  00292E  223A               	addwfc	(floorf@u+2)^0,f,c
  5239  002930  5035               	movf	(floorf@m+3)^0,w,c
  5240  002932  223B               	addwfc	(floorf@u+3)^0,f,c
  5241  002934                     l1057:
  5242  002934  1C32               	comf	floorf@m^0,w,c
  5243  002936  6E2C               	movwf	??_floorf^0,c
  5244  002938  1C33               	comf	(floorf@m+1)^0,w,c
  5245  00293A  6E2D               	movwf	(??_floorf+1)^0,c
  5246  00293C  1C34               	comf	(floorf@m+2)^0,w,c
  5247  00293E  6E2E               	movwf	(??_floorf+2)^0,c
  5248  002940  1C35               	comf	(floorf@m+3)^0,w,c
  5249  002942  6E2F               	movwf	(??_floorf+3)^0,c
  5250  002944  502C               	movf	??_floorf^0,w,c
  5251  002946  1638               	andwf	floorf@u^0,f,c
  5252  002948  502D               	movf	(??_floorf+1)^0,w,c
  5253  00294A  1639               	andwf	(floorf@u+1)^0,f,c
  5254  00294C  502E               	movf	(??_floorf+2)^0,w,c
  5255  00294E  163A               	andwf	(floorf@u+2)^0,f,c
  5256  002950  502F               	movf	(??_floorf+3)^0,w,c
  5257  002952  163B               	andwf	(floorf@u+3)^0,f,c
  5258  002954  EFF0  F014         	goto	l3094
  5259  002958                     l3086:
  5260  002958  C038  F02C         	movff	floorf@u,??_floorf
  5261  00295C  C039  F02D         	movff	floorf@u+1,??_floorf+1
  5262  002960  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  5263  002964  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  5264  002968  0E20               	movlw	32
  5265  00296A  EFBC  F014         	goto	u3330
  5266  00296E                     u3335:
  5267  00296E  90D8               	bcf	status,0,c
  5268  002970  322F               	rrcf	(??_floorf+3)^0,f,c
  5269  002972  322E               	rrcf	(??_floorf+2)^0,f,c
  5270  002974  322D               	rrcf	(??_floorf+1)^0,f,c
  5271  002976  322C               	rrcf	??_floorf^0,f,c
  5272  002978                     u3330:
  5273  002978  2EE8               	decfsz	wreg,f,c
  5274  00297A  EFB7  F014         	goto	u3335
  5275  00297E  502C               	movf	??_floorf^0,w,c
  5276  002980  102D               	iorwf	(??_floorf+1)^0,w,c
  5277  002982  102E               	iorwf	(??_floorf+2)^0,w,c
  5278  002984  102F               	iorwf	(??_floorf+3)^0,w,c
  5279  002986  A4D8               	btfss	status,2,c
  5280  002988  EFC8  F014         	goto	u3341
  5281  00298C  EFCA  F014         	goto	u3340
  5282  002990                     u3341:
  5283  002990  EFD4  F014         	goto	l3090
  5284  002994                     u3340:
  5285  002994  0E00               	movlw	0
  5286  002996  6E38               	movwf	floorf@u^0,c
  5287  002998  0E00               	movlw	0
  5288  00299A  6E39               	movwf	(floorf@u+1)^0,c
  5289  00299C  0E00               	movlw	0
  5290  00299E  6E3A               	movwf	(floorf@u+2)^0,c
  5291  0029A0  0E00               	movlw	0
  5292  0029A2  6E3B               	movwf	(floorf@u+3)^0,c
  5293  0029A4  EFF0  F014         	goto	l3094
  5294  0029A8                     l3090:
  5295  0029A8  90D8               	bcf	status,0,c
  5296  0029AA  3438               	rlcf	floorf@u^0,w,c
  5297  0029AC  6E2C               	movwf	??_floorf^0,c
  5298  0029AE  3439               	rlcf	(floorf@u+1)^0,w,c
  5299  0029B0  6E2D               	movwf	(??_floorf+1)^0,c
  5300  0029B2  343A               	rlcf	(floorf@u+2)^0,w,c
  5301  0029B4  6E2E               	movwf	(??_floorf+2)^0,c
  5302  0029B6  343B               	rlcf	(floorf@u+3)^0,w,c
  5303  0029B8  6E2F               	movwf	(??_floorf+3)^0,c
  5304  0029BA  502C               	movf	??_floorf^0,w,c
  5305  0029BC  102D               	iorwf	(??_floorf+1)^0,w,c
  5306  0029BE  102E               	iorwf	(??_floorf+2)^0,w,c
  5307  0029C0  102F               	iorwf	(??_floorf+3)^0,w,c
  5308  0029C2  B4D8               	btfsc	status,2,c
  5309  0029C4  EFE6  F014         	goto	u3351
  5310  0029C8  EFE8  F014         	goto	u3350
  5311  0029CC                     u3351:
  5312  0029CC  EFF0  F014         	goto	l3094
  5313  0029D0                     u3350:
  5314  0029D0  0E00               	movlw	0
  5315  0029D2  6E38               	movwf	floorf@u^0,c
  5316  0029D4  0E00               	movlw	0
  5317  0029D6  6E39               	movwf	(floorf@u+1)^0,c
  5318  0029D8  0E80               	movlw	128
  5319  0029DA  6E3A               	movwf	(floorf@u+2)^0,c
  5320  0029DC  0EBF               	movlw	191
  5321  0029DE  6E3B               	movwf	(floorf@u+3)^0,c
  5322  0029E0                     l3094:
  5323  0029E0  C038  F028         	movff	floorf@u,?_floorf
  5324  0029E4  C039  F029         	movff	floorf@u+1,?_floorf+1
  5325  0029E8  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  5326  0029EC  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  5327  0029F0                     l1054:
  5328  0029F0  0012               	return		;funcret
  5329  0029F2                     __end_of_floorf:
  5330                           	opt callstack 0
  5331                           
  5332 ;; *************** function ___fpclassifyf *****************
  5333 ;; Defined at:
  5334 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  x               4    0[COMRAM] float 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  u               4   10[COMRAM] struct .
  5339 ;;  e               2    8[COMRAM] int 
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  2    0[COMRAM] int 
  5342 ;; Registers used:
  5343 ;;		wreg, status,2, status,0
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5349 ;;      Params:         4       0       0       0       0       0       0       0       0
  5350 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5351 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5352 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5353 ;;Total ram usage:       14 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; Hardware stack levels required when called:    1
  5356 ;; This function calls:
  5357 ;;		Nothing
  5358 ;; This function is called by:
  5359 ;;		_efgtoa
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           	psect	text19
  5364  003090                     __ptext19:
  5365                           	opt callstack 0
  5366  003090                     ___fpclassifyf:
  5367                           	opt callstack 23
  5368  003090  C0B0  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5369  003094  C0B1  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5370  003098  C0B2  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5371  00309C  C0B3  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5372  0030A0  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5373  0030A4  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5374  0030A8  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5375  0030AC  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5376  0030B0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5377  0030B4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5378  0030B8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5379  0030BC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5380  0030C0  0E18               	movlw	24
  5381  0030C2  EF68  F018         	goto	u3140
  5382  0030C6                     u3145:
  5383  0030C6  90D8               	bcf	status,0,c
  5384  0030C8  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5385  0030CA  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5386  0030CC  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5387  0030CE  3205               	rrcf	??___fpclassifyf^0,f,c
  5388  0030D0                     u3140:
  5389  0030D0  2EE8               	decfsz	wreg,f,c
  5390  0030D2  EF63  F018         	goto	u3145
  5391  0030D6  5005               	movf	??___fpclassifyf^0,w,c
  5392  0030D8  6E09               	movwf	___fpclassifyf@e^0,c
  5393  0030DA  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5394  0030DC  5009               	movf	___fpclassifyf@e^0,w,c
  5395  0030DE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5396  0030E0  A4D8               	btfss	status,2,c
  5397  0030E2  EF75  F018         	goto	u3151
  5398  0030E6  EF77  F018         	goto	u3150
  5399  0030EA                     u3151:
  5400  0030EA  EF97  F018         	goto	l3046
  5401  0030EE                     u3150:
  5402  0030EE  90D8               	bcf	status,0,c
  5403  0030F0  340B               	rlcf	___fpclassifyf@u^0,w,c
  5404  0030F2  6E05               	movwf	??___fpclassifyf^0,c
  5405  0030F4  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5406  0030F6  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5407  0030F8  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5408  0030FA  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5409  0030FC  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5410  0030FE  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5411  003100  5005               	movf	??___fpclassifyf^0,w,c
  5412  003102  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5413  003104  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5414  003106  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5415  003108  A4D8               	btfss	status,2,c
  5416  00310A  EF89  F018         	goto	u3161
  5417  00310E  EF8B  F018         	goto	u3160
  5418  003112                     u3161:
  5419  003112  EF91  F018         	goto	l3042
  5420  003116                     u3160:
  5421  003116  0E00               	movlw	0
  5422  003118  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5423  00311A  0E02               	movlw	2
  5424  00311C  6E01               	movwf	?___fpclassifyf^0,c
  5425  00311E  EFC6  F018         	goto	l1016
  5426  003122                     l3042:
  5427  003122  0E00               	movlw	0
  5428  003124  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5429  003126  0E03               	movlw	3
  5430  003128  6E01               	movwf	?___fpclassifyf^0,c
  5431  00312A  EFC6  F018         	goto	l1016
  5432  00312E                     l3046:
  5433  00312E  2809               	incf	___fpclassifyf@e^0,w,c
  5434  003130  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5435  003132  A4D8               	btfss	status,2,c
  5436  003134  EF9E  F018         	goto	u3171
  5437  003138  EFA0  F018         	goto	u3170
  5438  00313C                     u3171:
  5439  00313C  EFC2  F018         	goto	l3052
  5440  003140                     u3170:
  5441  003140  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5442  003144  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5443  003148  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5444  00314C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5445  003150  0E09               	movlw	9
  5446  003152                     u3185:
  5447  003152  90D8               	bcf	status,0,c
  5448  003154  3605               	rlcf	??___fpclassifyf^0,f,c
  5449  003156  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5450  003158  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5451  00315A  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5452  00315C  2EE8               	decfsz	wreg,f,c
  5453  00315E  EFA9  F018         	goto	u3185
  5454  003162  5005               	movf	??___fpclassifyf^0,w,c
  5455  003164  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5456  003166  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5457  003168  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5458  00316A  B4D8               	btfsc	status,2,c
  5459  00316C  EFBA  F018         	goto	u3191
  5460  003170  EFBD  F018         	goto	u3190
  5461  003174                     u3191:
  5462  003174  0E01               	movlw	1
  5463  003176  EFBE  F018         	goto	u3200
  5464  00317A                     u3190:
  5465  00317A  0E00               	movlw	0
  5466  00317C                     u3200:
  5467  00317C  6E01               	movwf	?___fpclassifyf^0,c
  5468  00317E  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5469  003180  EFC6  F018         	goto	l1016
  5470  003184                     l3052:
  5471  003184  0E00               	movlw	0
  5472  003186  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5473  003188  0E04               	movlw	4
  5474  00318A  6E01               	movwf	?___fpclassifyf^0,c
  5475  00318C                     l1016:
  5476  00318C  0012               	return		;funcret
  5477  00318E                     __end_of___fpclassifyf:
  5478                           	opt callstack 0
  5479                           
  5480 ;; *************** function ___fltol *****************
  5481 ;; Defined at:
  5482 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  f1              4    0[COMRAM] int 
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;  exp1            1    9[COMRAM] unsigned char 
  5487 ;;  sign1           1    8[COMRAM] unsigned char 
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  4    0[COMRAM] long 
  5490 ;; Registers used:
  5491 ;;		wreg, status,2, status,0
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5497 ;;      Params:         4       0       0       0       0       0       0       0       0
  5498 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5499 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5500 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5501 ;;Total ram usage:       10 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; Hardware stack levels required when called:    1
  5504 ;; This function calls:
  5505 ;;		Nothing
  5506 ;; This function is called by:
  5507 ;;		_efgtoa
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text20
  5512  002E86                     __ptext20:
  5513                           	opt callstack 0
  5514  002E86                     ___fltol:
  5515                           	opt callstack 23
  5516  002E86  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5517  002E88  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5518  002E8A  6E0A               	movwf	___fltol@exp1^0,c
  5519  002E8C  500A               	movf	___fltol@exp1^0,w,c
  5520  002E8E  A4D8               	btfss	status,2,c
  5521  002E90  EF4C  F017         	goto	u4011
  5522  002E94  EF4E  F017         	goto	u4010
  5523  002E98                     u4011:
  5524  002E98  EF58  F017         	goto	l3514
  5525  002E9C                     u4010:
  5526  002E9C                     l3510:
  5527  002E9C  0E00               	movlw	0
  5528  002E9E  6E01               	movwf	?___fltol^0,c
  5529  002EA0  0E00               	movlw	0
  5530  002EA2  6E02               	movwf	(?___fltol+1)^0,c
  5531  002EA4  0E00               	movlw	0
  5532  002EA6  6E03               	movwf	(?___fltol+2)^0,c
  5533  002EA8  0E00               	movlw	0
  5534  002EAA  6E04               	movwf	(?___fltol+3)^0,c
  5535  002EAC  EFC5  F017         	goto	l632
  5536  002EB0                     l3514:
  5537  002EB0  C001  F005         	movff	___fltol@f1,??___fltol
  5538  002EB4  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5539  002EB8  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5540  002EBC  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5541  002EC0  0E20               	movlw	32
  5542  002EC2  EF68  F017         	goto	u4020
  5543  002EC6                     u4025:
  5544  002EC6  90D8               	bcf	status,0,c
  5545  002EC8  3208               	rrcf	(??___fltol+3)^0,f,c
  5546  002ECA  3207               	rrcf	(??___fltol+2)^0,f,c
  5547  002ECC  3206               	rrcf	(??___fltol+1)^0,f,c
  5548  002ECE  3205               	rrcf	??___fltol^0,f,c
  5549  002ED0                     u4020:
  5550  002ED0  2EE8               	decfsz	wreg,f,c
  5551  002ED2  EF63  F017         	goto	u4025
  5552  002ED6  5005               	movf	??___fltol^0,w,c
  5553  002ED8  6E09               	movwf	___fltol@sign1^0,c
  5554  002EDA  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5555  002EDC  0EFF               	movlw	255
  5556  002EDE  1601               	andwf	___fltol@f1^0,f,c
  5557  002EE0  0EFF               	movlw	255
  5558  002EE2  1602               	andwf	(___fltol@f1+1)^0,f,c
  5559  002EE4  0EFF               	movlw	255
  5560  002EE6  1603               	andwf	(___fltol@f1+2)^0,f,c
  5561  002EE8  0E00               	movlw	0
  5562  002EEA  1604               	andwf	(___fltol@f1+3)^0,f,c
  5563  002EEC  0E96               	movlw	150
  5564  002EEE  5E0A               	subwf	___fltol@exp1^0,f,c
  5565  002EF0  BE0A               	btfsc	___fltol@exp1^0,7,c
  5566  002EF2  EF7F  F017         	goto	u4030
  5567  002EF6  EF7D  F017         	goto	u4031
  5568  002EFA                     u4031:
  5569  002EFA  EF95  F017         	goto	l3534
  5570  002EFE                     u4030:
  5571  002EFE  500A               	movf	___fltol@exp1^0,w,c
  5572  002F00  0A80               	xorlw	128
  5573  002F02  0F97               	addlw	151
  5574  002F04  B0D8               	btfsc	status,0,c
  5575  002F06  EF87  F017         	goto	u4041
  5576  002F0A  EF89  F017         	goto	u4040
  5577  002F0E                     u4041:
  5578  002F0E  EF8B  F017         	goto	l3530
  5579  002F12                     u4040:
  5580  002F12  EF4E  F017         	goto	l3510
  5581  002F16                     l3530:
  5582  002F16  90D8               	bcf	status,0,c
  5583  002F18  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5584  002F1A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5585  002F1C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5586  002F1E  3201               	rrcf	___fltol@f1^0,f,c
  5587  002F20  3E0A               	incfsz	___fltol@exp1^0,f,c
  5588  002F22  EF8B  F017         	goto	l3530
  5589  002F26  EFAD  F017         	goto	l3544
  5590  002F2A                     l3534:
  5591  002F2A  0E1F               	movlw	31
  5592  002F2C  640A               	cpfsgt	___fltol@exp1^0,c
  5593  002F2E  EF9B  F017         	goto	u4051
  5594  002F32  EF9D  F017         	goto	u4050
  5595  002F36                     u4051:
  5596  002F36  EFA5  F017         	goto	l3542
  5597  002F3A                     u4050:
  5598  002F3A  EF4E  F017         	goto	l3510
  5599  002F3E                     l3540:
  5600  002F3E  90D8               	bcf	status,0,c
  5601  002F40  3601               	rlcf	___fltol@f1^0,f,c
  5602  002F42  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5603  002F44  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5604  002F46  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5605  002F48  060A               	decf	___fltol@exp1^0,f,c
  5606  002F4A                     l3542:
  5607  002F4A  500A               	movf	___fltol@exp1^0,w,c
  5608  002F4C  A4D8               	btfss	status,2,c
  5609  002F4E  EFAB  F017         	goto	u4061
  5610  002F52  EFAD  F017         	goto	u4060
  5611  002F56                     u4061:
  5612  002F56  EF9F  F017         	goto	l3540
  5613  002F5A                     u4060:
  5614  002F5A                     l3544:
  5615  002F5A  5009               	movf	___fltol@sign1^0,w,c
  5616  002F5C  B4D8               	btfsc	status,2,c
  5617  002F5E  EFB3  F017         	goto	u4071
  5618  002F62  EFB5  F017         	goto	u4070
  5619  002F66                     u4071:
  5620  002F66  EFBD  F017         	goto	l3548
  5621  002F6A                     u4070:
  5622  002F6A  1E04               	comf	(___fltol@f1+3)^0,f,c
  5623  002F6C  1E03               	comf	(___fltol@f1+2)^0,f,c
  5624  002F6E  1E02               	comf	(___fltol@f1+1)^0,f,c
  5625  002F70  6C01               	negf	___fltol@f1^0,c
  5626  002F72  0E00               	movlw	0
  5627  002F74  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5628  002F76  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5629  002F78  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5630  002F7A                     l3548:
  5631  002F7A  C001  F001         	movff	___fltol@f1,?___fltol
  5632  002F7E  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5633  002F82  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5634  002F86  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5635  002F8A                     l632:
  5636  002F8A  0012               	return		;funcret
  5637  002F8C                     __end_of___fltol:
  5638                           	opt callstack 0
  5639                           
  5640 ;; *************** function ___flsub *****************
  5641 ;; Defined at:
  5642 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;  b               4   25[COMRAM] long 
  5645 ;;  a               4   29[COMRAM] long 
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;		None
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  4   25[COMRAM] long 
  5650 ;; Registers used:
  5651 ;;		wreg, status,2, status,0, cstack
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5657 ;;      Params:         8       0       0       0       0       0       0       0       0
  5658 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5660 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5661 ;;Total ram usage:        8 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    2
  5664 ;; This function calls:
  5665 ;;		___fladd
  5666 ;; This function is called by:
  5667 ;;		_efgtoa
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text21
  5672  00392C                     __ptext21:
  5673                           	opt callstack 0
  5674  00392C                     ___flsub:
  5675                           	opt callstack 22
  5676  00392C  0E00               	movlw	0
  5677  00392E  1A1E               	xorwf	___flsub@a^0,f,c
  5678  003930  0E00               	movlw	0
  5679  003932  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5680  003934  0E00               	movlw	0
  5681  003936  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5682  003938  0E80               	movlw	128
  5683  00393A  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5684  00393C  C01A  F001         	movff	___flsub@b,___fladd@b
  5685  003940  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5686  003944  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5687  003948  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5688  00394C  C01E  F005         	movff	___flsub@a,___fladd@a
  5689  003950  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5690  003954  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5691  003958  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5692  00395C  EC26  F00A         	call	___fladd	;wreg free
  5693  003960  C001  F01A         	movff	?___fladd,?___flsub
  5694  003964  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5695  003968  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5696  00396C  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5697  003970  0012               	return		;funcret
  5698  003972                     __end_of___flsub:
  5699                           	opt callstack 0
  5700                           
  5701 ;; *************** function ___fladd *****************
  5702 ;; Defined at:
  5703 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  b               4    0[COMRAM] long 
  5706 ;;  a               4    4[COMRAM] long 
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;  grs             1   15[COMRAM] unsigned char 
  5709 ;;  bexp            1   14[COMRAM] unsigned char 
  5710 ;;  aexp            1   13[COMRAM] unsigned char 
  5711 ;;  signs           1   12[COMRAM] unsigned char 
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  4    0[COMRAM] unsigned char 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2, status,0
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5721 ;;      Params:         8       0       0       0       0       0       0       0       0
  5722 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5723 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5724 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5725 ;;Total ram usage:       16 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; Hardware stack levels required when called:    1
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_efgtoa
  5732 ;;		___flsub
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           	psect	text22
  5737  00144C                     __ptext22:
  5738                           	opt callstack 0
  5739  00144C                     ___fladd:
  5740                           	opt callstack 22
  5741  00144C  5004               	movf	(___fladd@b+3)^0,w,c
  5742  00144E  0B80               	andlw	128
  5743  001450  6E0D               	movwf	___fladd@signs^0,c
  5744  001452  5004               	movf	(___fladd@b+3)^0,w,c
  5745  001454  2404               	addwf	(___fladd@b+3)^0,w,c
  5746  001456  6E0F               	movwf	___fladd@bexp^0,c
  5747  001458  AE03               	btfss	(___fladd@b+2)^0,7,c
  5748  00145A  EF31  F00A         	goto	u2711
  5749  00145E  EF33  F00A         	goto	u2710
  5750  001462                     u2711:
  5751  001462  EF34  F00A         	goto	l2816
  5752  001466                     u2710:
  5753  001466  800F               	bsf	___fladd@bexp^0,0,c
  5754  001468                     l2816:
  5755  001468  500F               	movf	___fladd@bexp^0,w,c
  5756  00146A  B4D8               	btfsc	status,2,c
  5757  00146C  EF3A  F00A         	goto	u2721
  5758  001470  EF3C  F00A         	goto	u2720
  5759  001474                     u2721:
  5760  001474  EF51  F00A         	goto	l2826
  5761  001478                     u2720:
  5762  001478  280F               	incf	___fladd@bexp^0,w,c
  5763  00147A  A4D8               	btfss	status,2,c
  5764  00147C  EF42  F00A         	goto	u2731
  5765  001480  EF44  F00A         	goto	u2730
  5766  001484                     u2731:
  5767  001484  EF4C  F00A         	goto	l2822
  5768  001488                     u2730:
  5769  001488  0E00               	movlw	0
  5770  00148A  6E01               	movwf	___fladd@b^0,c
  5771  00148C  0E00               	movlw	0
  5772  00148E  6E02               	movwf	(___fladd@b+1)^0,c
  5773  001490  0E00               	movlw	0
  5774  001492  6E03               	movwf	(___fladd@b+2)^0,c
  5775  001494  0E00               	movlw	0
  5776  001496  6E04               	movwf	(___fladd@b+3)^0,c
  5777  001498                     l2822:
  5778  001498  8E03               	bsf	(___fladd@b+2)^0,7,c
  5779  00149A  0E00               	movlw	0
  5780  00149C  6E04               	movwf	(___fladd@b+3)^0,c
  5781  00149E  EF59  F00A         	goto	l2828
  5782  0014A2                     l2826:
  5783  0014A2  0E00               	movlw	0
  5784  0014A4  6E01               	movwf	___fladd@b^0,c
  5785  0014A6  0E00               	movlw	0
  5786  0014A8  6E02               	movwf	(___fladd@b+1)^0,c
  5787  0014AA  0E00               	movlw	0
  5788  0014AC  6E03               	movwf	(___fladd@b+2)^0,c
  5789  0014AE  0E00               	movlw	0
  5790  0014B0  6E04               	movwf	(___fladd@b+3)^0,c
  5791  0014B2                     l2828:
  5792  0014B2  5008               	movf	(___fladd@a+3)^0,w,c
  5793  0014B4  0B80               	andlw	128
  5794  0014B6  6E0E               	movwf	___fladd@aexp^0,c
  5795  0014B8  500D               	movf	___fladd@signs^0,w,c
  5796  0014BA  180E               	xorwf	___fladd@aexp^0,w,c
  5797  0014BC  B4D8               	btfsc	status,2,c
  5798  0014BE  EF63  F00A         	goto	u2741
  5799  0014C2  EF65  F00A         	goto	u2740
  5800  0014C6                     u2741:
  5801  0014C6  EF66  F00A         	goto	l2834
  5802  0014CA                     u2740:
  5803  0014CA  8C0D               	bsf	___fladd@signs^0,6,c
  5804  0014CC                     l2834:
  5805  0014CC  5008               	movf	(___fladd@a+3)^0,w,c
  5806  0014CE  2408               	addwf	(___fladd@a+3)^0,w,c
  5807  0014D0  6E0E               	movwf	___fladd@aexp^0,c
  5808  0014D2  AE07               	btfss	(___fladd@a+2)^0,7,c
  5809  0014D4  EF6E  F00A         	goto	u2751
  5810  0014D8  EF70  F00A         	goto	u2750
  5811  0014DC                     u2751:
  5812  0014DC  EF71  F00A         	goto	l2840
  5813  0014E0                     u2750:
  5814  0014E0  800E               	bsf	___fladd@aexp^0,0,c
  5815  0014E2                     l2840:
  5816  0014E2  500E               	movf	___fladd@aexp^0,w,c
  5817  0014E4  B4D8               	btfsc	status,2,c
  5818  0014E6  EF77  F00A         	goto	u2761
  5819  0014EA  EF79  F00A         	goto	u2760
  5820  0014EE                     u2761:
  5821  0014EE  EF8E  F00A         	goto	l2850
  5822  0014F2                     u2760:
  5823  0014F2  280E               	incf	___fladd@aexp^0,w,c
  5824  0014F4  A4D8               	btfss	status,2,c
  5825  0014F6  EF7F  F00A         	goto	u2771
  5826  0014FA  EF81  F00A         	goto	u2770
  5827  0014FE                     u2771:
  5828  0014FE  EF89  F00A         	goto	l2846
  5829  001502                     u2770:
  5830  001502  0E00               	movlw	0
  5831  001504  6E05               	movwf	___fladd@a^0,c
  5832  001506  0E00               	movlw	0
  5833  001508  6E06               	movwf	(___fladd@a+1)^0,c
  5834  00150A  0E00               	movlw	0
  5835  00150C  6E07               	movwf	(___fladd@a+2)^0,c
  5836  00150E  0E00               	movlw	0
  5837  001510  6E08               	movwf	(___fladd@a+3)^0,c
  5838  001512                     l2846:
  5839  001512  8E07               	bsf	(___fladd@a+2)^0,7,c
  5840  001514  0E00               	movlw	0
  5841  001516  6E08               	movwf	(___fladd@a+3)^0,c
  5842  001518  EF96  F00A         	goto	l2852
  5843  00151C                     l2850:
  5844  00151C  0E00               	movlw	0
  5845  00151E  6E05               	movwf	___fladd@a^0,c
  5846  001520  0E00               	movlw	0
  5847  001522  6E06               	movwf	(___fladd@a+1)^0,c
  5848  001524  0E00               	movlw	0
  5849  001526  6E07               	movwf	(___fladd@a+2)^0,c
  5850  001528  0E00               	movlw	0
  5851  00152A  6E08               	movwf	(___fladd@a+3)^0,c
  5852  00152C                     l2852:
  5853  00152C  500F               	movf	___fladd@bexp^0,w,c
  5854  00152E  5C0E               	subwf	___fladd@aexp^0,w,c
  5855  001530  B0D8               	btfsc	status,0,c
  5856  001532  EF9D  F00A         	goto	u2781
  5857  001536  EF9F  F00A         	goto	u2780
  5858  00153A                     u2781:
  5859  00153A  EFC6  F00A         	goto	l2888
  5860  00153E                     u2780:
  5861  00153E  AC0D               	btfss	___fladd@signs^0,6,c
  5862  001540  EFA4  F00A         	goto	u2791
  5863  001544  EFA6  F00A         	goto	u2790
  5864  001548                     u2791:
  5865  001548  EFA8  F00A         	goto	l2858
  5866  00154C                     u2790:
  5867  00154C  0E80               	movlw	128
  5868  00154E  1A0D               	xorwf	___fladd@signs^0,f,c
  5869  001550                     l2858:
  5870  001550  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5871  001554  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5872  001558  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5873  00155C  C001  F010         	movff	___fladd@b,___fladd@grs
  5874  001560  C005  F001         	movff	___fladd@a,___fladd@b
  5875  001564  C010  F005         	movff	___fladd@grs,___fladd@a
  5876  001568  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5877  00156C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5878  001570  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5879  001574  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5880  001578  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5881  00157C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5882  001580  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5883  001584  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5884  001588  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5885  00158C                     l2888:
  5886  00158C  0E00               	movlw	0
  5887  00158E  6E10               	movwf	___fladd@grs^0,c
  5888  001590  500F               	movf	___fladd@bexp^0,w,c
  5889  001592  C00E  F009         	movff	___fladd@aexp,??___fladd
  5890  001596  6A0A               	clrf	(??___fladd+1)^0,c
  5891  001598  5E09               	subwf	??___fladd^0,f,c
  5892  00159A  0E00               	movlw	0
  5893  00159C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5894  00159E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5895  0015A0  EFDB  F00A         	goto	u2801
  5896  0015A4  500A               	movf	(??___fladd+1)^0,w,c
  5897  0015A6  E109               	bnz	u2800
  5898  0015A8  0E1A               	movlw	26
  5899  0015AA  5C09               	subwf	??___fladd^0,w,c
  5900  0015AC  A0D8               	btfss	status,0,c
  5901  0015AE  EFDB  F00A         	goto	u2801
  5902  0015B2  EFDD  F00A         	goto	u2800
  5903  0015B6                     u2801:
  5904  0015B6  EF14  F00B         	goto	l864
  5905  0015BA                     u2800:
  5906  0015BA  5001               	movf	___fladd@b^0,w,c
  5907  0015BC  1002               	iorwf	(___fladd@b+1)^0,w,c
  5908  0015BE  1003               	iorwf	(___fladd@b+2)^0,w,c
  5909  0015C0  1004               	iorwf	(___fladd@b+3)^0,w,c
  5910  0015C2  A4D8               	btfss	status,2,c
  5911  0015C4  EFE6  F00A         	goto	u2811
  5912  0015C8  EFE9  F00A         	goto	u2810
  5913  0015CC                     u2811:
  5914  0015CC  0E01               	movlw	1
  5915  0015CE  EFEA  F00A         	goto	u2820
  5916  0015D2                     u2810:
  5917  0015D2  0E00               	movlw	0
  5918  0015D4                     u2820:
  5919  0015D4  6E10               	movwf	___fladd@grs^0,c
  5920  0015D6  0E00               	movlw	0
  5921  0015D8  6E01               	movwf	___fladd@b^0,c
  5922  0015DA  0E00               	movlw	0
  5923  0015DC  6E02               	movwf	(___fladd@b+1)^0,c
  5924  0015DE  0E00               	movlw	0
  5925  0015E0  6E03               	movwf	(___fladd@b+2)^0,c
  5926  0015E2  0E00               	movlw	0
  5927  0015E4  6E04               	movwf	(___fladd@b+3)^0,c
  5928  0015E6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5929  0015EA  EF1D  F00B         	goto	l863
  5930  0015EE                     l865:
  5931  0015EE  A010               	btfss	___fladd@grs^0,0,c
  5932  0015F0  EFFC  F00A         	goto	u2831
  5933  0015F4  EFFE  F00A         	goto	u2830
  5934  0015F8                     u2831:
  5935  0015F8  EF04  F00B         	goto	l2900
  5936  0015FC                     u2830:
  5937  0015FC  90D8               	bcf	status,0,c
  5938  0015FE  3010               	rrcf	___fladd@grs^0,w,c
  5939  001600  0901               	iorlw	1
  5940  001602  6E10               	movwf	___fladd@grs^0,c
  5941  001604  EF06  F00B         	goto	l2902
  5942  001608                     l2900:
  5943  001608  90D8               	bcf	status,0,c
  5944  00160A  3210               	rrcf	___fladd@grs^0,f,c
  5945  00160C                     l2902:
  5946  00160C  A001               	btfss	___fladd@b^0,0,c
  5947  00160E  EF0B  F00B         	goto	u2841
  5948  001612  EF0D  F00B         	goto	u2840
  5949  001616                     u2841:
  5950  001616  EF0E  F00B         	goto	l2906
  5951  00161A                     u2840:
  5952  00161A  8E10               	bsf	___fladd@grs^0,7,c
  5953  00161C                     l2906:
  5954  00161C  3404               	rlcf	(___fladd@b+3)^0,w,c
  5955  00161E  3204               	rrcf	(___fladd@b+3)^0,f,c
  5956  001620  3203               	rrcf	(___fladd@b+2)^0,f,c
  5957  001622  3202               	rrcf	(___fladd@b+1)^0,f,c
  5958  001624  3201               	rrcf	___fladd@b^0,f,c
  5959  001626  2A0F               	incf	___fladd@bexp^0,f,c
  5960  001628                     l864:
  5961  001628  500E               	movf	___fladd@aexp^0,w,c
  5962  00162A  5C0F               	subwf	___fladd@bexp^0,w,c
  5963  00162C  A0D8               	btfss	status,0,c
  5964  00162E  EF1B  F00B         	goto	u2851
  5965  001632  EF1D  F00B         	goto	u2850
  5966  001636                     u2851:
  5967  001636  EFF7  F00A         	goto	l865
  5968  00163A                     u2850:
  5969  00163A                     l863:
  5970  00163A  BC0D               	btfsc	___fladd@signs^0,6,c
  5971  00163C  EF22  F00B         	goto	u2861
  5972  001640  EF24  F00B         	goto	u2860
  5973  001644                     u2861:
  5974  001644  EF64  F00B         	goto	l2934
  5975  001648                     u2860:
  5976  001648  500F               	movf	___fladd@bexp^0,w,c
  5977  00164A  A4D8               	btfss	status,2,c
  5978  00164C  EF2A  F00B         	goto	u2871
  5979  001650  EF2C  F00B         	goto	u2870
  5980  001654                     u2871:
  5981  001654  EF36  F00B         	goto	l2916
  5982  001658                     u2870:
  5983  001658  0E00               	movlw	0
  5984  00165A  6E01               	movwf	?___fladd^0,c
  5985  00165C  0E00               	movlw	0
  5986  00165E  6E02               	movwf	(?___fladd+1)^0,c
  5987  001660  0E00               	movlw	0
  5988  001662  6E03               	movwf	(?___fladd+2)^0,c
  5989  001664  0E00               	movlw	0
  5990  001666  6E04               	movwf	(?___fladd+3)^0,c
  5991  001668  EF85  F00C         	goto	l872
  5992  00166C                     l2916:
  5993  00166C  5005               	movf	___fladd@a^0,w,c
  5994  00166E  2601               	addwf	___fladd@b^0,f,c
  5995  001670  5006               	movf	(___fladd@a+1)^0,w,c
  5996  001672  2202               	addwfc	(___fladd@b+1)^0,f,c
  5997  001674  5007               	movf	(___fladd@a+2)^0,w,c
  5998  001676  2203               	addwfc	(___fladd@b+2)^0,f,c
  5999  001678  5008               	movf	(___fladd@a+3)^0,w,c
  6000  00167A  2204               	addwfc	(___fladd@b+3)^0,f,c
  6001  00167C  A004               	btfss	(___fladd@b+3)^0,0,c
  6002  00167E  EF43  F00B         	goto	u2881
  6003  001682  EF45  F00B         	goto	u2880
  6004  001686                     u2881:
  6005  001686  EFF1  F00B         	goto	l2970
  6006  00168A                     u2880:
  6007  00168A  A010               	btfss	___fladd@grs^0,0,c
  6008  00168C  EF4A  F00B         	goto	u2891
  6009  001690  EF4C  F00B         	goto	u2890
  6010  001694                     u2891:
  6011  001694  EF52  F00B         	goto	l2924
  6012  001698                     u2890:
  6013  001698  90D8               	bcf	status,0,c
  6014  00169A  3010               	rrcf	___fladd@grs^0,w,c
  6015  00169C  0901               	iorlw	1
  6016  00169E  6E10               	movwf	___fladd@grs^0,c
  6017  0016A0  EF54  F00B         	goto	l2926
  6018  0016A4                     l2924:
  6019  0016A4  90D8               	bcf	status,0,c
  6020  0016A6  3210               	rrcf	___fladd@grs^0,f,c
  6021  0016A8                     l2926:
  6022  0016A8  A001               	btfss	___fladd@b^0,0,c
  6023  0016AA  EF59  F00B         	goto	u2901
  6024  0016AE  EF5B  F00B         	goto	u2900
  6025  0016B2                     u2901:
  6026  0016B2  EF5C  F00B         	goto	l2930
  6027  0016B6                     u2900:
  6028  0016B6  8E10               	bsf	___fladd@grs^0,7,c
  6029  0016B8                     l2930:
  6030  0016B8  3404               	rlcf	(___fladd@b+3)^0,w,c
  6031  0016BA  3204               	rrcf	(___fladd@b+3)^0,f,c
  6032  0016BC  3203               	rrcf	(___fladd@b+2)^0,f,c
  6033  0016BE  3202               	rrcf	(___fladd@b+1)^0,f,c
  6034  0016C0  3201               	rrcf	___fladd@b^0,f,c
  6035  0016C2  2A0F               	incf	___fladd@bexp^0,f,c
  6036  0016C4  EFF1  F00B         	goto	l2970
  6037  0016C8                     l2934:
  6038  0016C8  5005               	movf	___fladd@a^0,w,c
  6039  0016CA  5C01               	subwf	___fladd@b^0,w,c
  6040  0016CC  5006               	movf	(___fladd@a+1)^0,w,c
  6041  0016CE  5802               	subwfb	(___fladd@b+1)^0,w,c
  6042  0016D0  5007               	movf	(___fladd@a+2)^0,w,c
  6043  0016D2  5803               	subwfb	(___fladd@b+2)^0,w,c
  6044  0016D4  5004               	movf	(___fladd@b+3)^0,w,c
  6045  0016D6  0A80               	xorlw	128
  6046  0016D8  6E09               	movwf	??___fladd^0,c
  6047  0016DA  5008               	movf	(___fladd@a+3)^0,w,c
  6048  0016DC  0A80               	xorlw	128
  6049  0016DE  5809               	subwfb	??___fladd^0,w,c
  6050  0016E0  B0D8               	btfsc	status,0,c
  6051  0016E2  EF75  F00B         	goto	u2911
  6052  0016E6  EF77  F00B         	goto	u2910
  6053  0016EA                     u2911:
  6054  0016EA  EFA2  F00B         	goto	l2944
  6055  0016EE                     u2910:
  6056  0016EE  5001               	movf	___fladd@b^0,w,c
  6057  0016F0  5C05               	subwf	___fladd@a^0,w,c
  6058  0016F2  6E09               	movwf	??___fladd^0,c
  6059  0016F4  5002               	movf	(___fladd@b+1)^0,w,c
  6060  0016F6  5806               	subwfb	(___fladd@a+1)^0,w,c
  6061  0016F8  6E0A               	movwf	(??___fladd+1)^0,c
  6062  0016FA  5003               	movf	(___fladd@b+2)^0,w,c
  6063  0016FC  5807               	subwfb	(___fladd@a+2)^0,w,c
  6064  0016FE  6E0B               	movwf	(??___fladd+2)^0,c
  6065  001700  5004               	movf	(___fladd@b+3)^0,w,c
  6066  001702  5808               	subwfb	(___fladd@a+3)^0,w,c
  6067  001704  6E0C               	movwf	(??___fladd+3)^0,c
  6068  001706  0EFF               	movlw	255
  6069  001708  2409               	addwf	??___fladd^0,w,c
  6070  00170A  6E01               	movwf	___fladd@b^0,c
  6071  00170C  0EFF               	movlw	255
  6072  00170E  200A               	addwfc	(??___fladd+1)^0,w,c
  6073  001710  6E02               	movwf	(___fladd@b+1)^0,c
  6074  001712  0EFF               	movlw	255
  6075  001714  200B               	addwfc	(??___fladd+2)^0,w,c
  6076  001716  6E03               	movwf	(___fladd@b+2)^0,c
  6077  001718  0EFF               	movlw	255
  6078  00171A  200C               	addwfc	(??___fladd+3)^0,w,c
  6079  00171C  6E04               	movwf	(___fladd@b+3)^0,c
  6080  00171E  0E80               	movlw	128
  6081  001720  1A0D               	xorwf	___fladd@signs^0,f,c
  6082  001722  6C10               	negf	___fladd@grs^0,c
  6083  001724  5010               	movf	___fladd@grs^0,w,c
  6084  001726  A4D8               	btfss	status,2,c
  6085  001728  EF98  F00B         	goto	u2921
  6086  00172C  EF9A  F00B         	goto	u2920
  6087  001730                     u2921:
  6088  001730  EFAA  F00B         	goto	l880
  6089  001734                     u2920:
  6090  001734  0E01               	movlw	1
  6091  001736  2601               	addwf	___fladd@b^0,f,c
  6092  001738  0E00               	movlw	0
  6093  00173A  2202               	addwfc	(___fladd@b+1)^0,f,c
  6094  00173C  2203               	addwfc	(___fladd@b+2)^0,f,c
  6095  00173E  2204               	addwfc	(___fladd@b+3)^0,f,c
  6096  001740  EFAA  F00B         	goto	l880
  6097  001744                     l2944:
  6098  001744  5005               	movf	___fladd@a^0,w,c
  6099  001746  5E01               	subwf	___fladd@b^0,f,c
  6100  001748  5006               	movf	(___fladd@a+1)^0,w,c
  6101  00174A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6102  00174C  5007               	movf	(___fladd@a+2)^0,w,c
  6103  00174E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6104  001750  5008               	movf	(___fladd@a+3)^0,w,c
  6105  001752  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6106  001754                     l880:
  6107  001754  5001               	movf	___fladd@b^0,w,c
  6108  001756  1002               	iorwf	(___fladd@b+1)^0,w,c
  6109  001758  1003               	iorwf	(___fladd@b+2)^0,w,c
  6110  00175A  1004               	iorwf	(___fladd@b+3)^0,w,c
  6111  00175C  A4D8               	btfss	status,2,c
  6112  00175E  EFB3  F00B         	goto	u2931
  6113  001762  EFB5  F00B         	goto	u2930
  6114  001766                     u2931:
  6115  001766  EFEA  F00B         	goto	l2968
  6116  00176A                     u2930:
  6117  00176A  5010               	movf	___fladd@grs^0,w,c
  6118  00176C  A4D8               	btfss	status,2,c
  6119  00176E  EFBB  F00B         	goto	u2941
  6120  001772  EFBD  F00B         	goto	u2940
  6121  001776                     u2941:
  6122  001776  EFEA  F00B         	goto	l2968
  6123  00177A                     u2940:
  6124  00177A  0E00               	movlw	0
  6125  00177C  6E01               	movwf	?___fladd^0,c
  6126  00177E  0E00               	movlw	0
  6127  001780  6E02               	movwf	(?___fladd+1)^0,c
  6128  001782  0E00               	movlw	0
  6129  001784  6E03               	movwf	(?___fladd+2)^0,c
  6130  001786  0E00               	movlw	0
  6131  001788  6E04               	movwf	(?___fladd+3)^0,c
  6132  00178A  EF85  F00C         	goto	l872
  6133  00178E                     l2952:
  6134  00178E  90D8               	bcf	status,0,c
  6135  001790  3601               	rlcf	___fladd@b^0,f,c
  6136  001792  3602               	rlcf	(___fladd@b+1)^0,f,c
  6137  001794  3603               	rlcf	(___fladd@b+2)^0,f,c
  6138  001796  3604               	rlcf	(___fladd@b+3)^0,f,c
  6139  001798  AE10               	btfss	___fladd@grs^0,7,c
  6140  00179A  EFD1  F00B         	goto	u2951
  6141  00179E  EFD3  F00B         	goto	u2950
  6142  0017A2                     u2951:
  6143  0017A2  EFD4  F00B         	goto	l2958
  6144  0017A6                     u2950:
  6145  0017A6  8001               	bsf	___fladd@b^0,0,c
  6146  0017A8                     l2958:
  6147  0017A8  A010               	btfss	___fladd@grs^0,0,c
  6148  0017AA  EFD9  F00B         	goto	u2961
  6149  0017AE  EFDB  F00B         	goto	u2960
  6150  0017B2                     u2961:
  6151  0017B2  EFDF  F00B         	goto	l2962
  6152  0017B6                     u2960:
  6153  0017B6  80D8               	bsf	status,0,c
  6154  0017B8  3610               	rlcf	___fladd@grs^0,f,c
  6155  0017BA  EFE1  F00B         	goto	l2964
  6156  0017BE                     l2962:
  6157  0017BE  90D8               	bcf	status,0,c
  6158  0017C0  3610               	rlcf	___fladd@grs^0,f,c
  6159  0017C2                     l2964:
  6160  0017C2  500F               	movf	___fladd@bexp^0,w,c
  6161  0017C4  B4D8               	btfsc	status,2,c
  6162  0017C6  EFE7  F00B         	goto	u2971
  6163  0017CA  EFE9  F00B         	goto	u2970
  6164  0017CE                     u2971:
  6165  0017CE  EFEA  F00B         	goto	l2968
  6166  0017D2                     u2970:
  6167  0017D2  060F               	decf	___fladd@bexp^0,f,c
  6168  0017D4                     l2968:
  6169  0017D4  AE03               	btfss	(___fladd@b+2)^0,7,c
  6170  0017D6  EFEF  F00B         	goto	u2981
  6171  0017DA  EFF1  F00B         	goto	u2980
  6172  0017DE                     u2981:
  6173  0017DE  EFC7  F00B         	goto	l2952
  6174  0017E2                     u2980:
  6175  0017E2                     l2970:
  6176  0017E2  0E00               	movlw	0
  6177  0017E4  6E0E               	movwf	___fladd@aexp^0,c
  6178  0017E6  AE10               	btfss	___fladd@grs^0,7,c
  6179  0017E8  EFF8  F00B         	goto	u2991
  6180  0017EC  EFFA  F00B         	goto	u2990
  6181  0017F0                     u2991:
  6182  0017F0  EF12  F00C         	goto	l889
  6183  0017F4                     u2990:
  6184  0017F4  C010  F009         	movff	___fladd@grs,??___fladd
  6185  0017F8  0E7F               	movlw	127
  6186  0017FA  1609               	andwf	??___fladd^0,f,c
  6187  0017FC  B4D8               	btfsc	status,2,c
  6188  0017FE  EF03  F00C         	goto	u3001
  6189  001802  EF05  F00C         	goto	u3000
  6190  001806                     u3001:
  6191  001806  EF09  F00C         	goto	l890
  6192  00180A                     u3000:
  6193  00180A                     l2976:
  6194  00180A  0E01               	movlw	1
  6195  00180C  6E0E               	movwf	___fladd@aexp^0,c
  6196  00180E  EF12  F00C         	goto	l889
  6197  001812                     l890:
  6198  001812  A001               	btfss	___fladd@b^0,0,c
  6199  001814  EF0E  F00C         	goto	u3011
  6200  001818  EF10  F00C         	goto	u3010
  6201  00181C                     u3011:
  6202  00181C  EF12  F00C         	goto	l889
  6203  001820                     u3010:
  6204  001820  EF05  F00C         	goto	l2976
  6205  001824                     l889:
  6206  001824  500E               	movf	___fladd@aexp^0,w,c
  6207  001826  B4D8               	btfsc	status,2,c
  6208  001828  EF18  F00C         	goto	u3021
  6209  00182C  EF1A  F00C         	goto	u3020
  6210  001830                     u3021:
  6211  001830  EF45  F00C         	goto	l2988
  6212  001834                     u3020:
  6213  001834  0E01               	movlw	1
  6214  001836  2601               	addwf	___fladd@b^0,f,c
  6215  001838  0E00               	movlw	0
  6216  00183A  2202               	addwfc	(___fladd@b+1)^0,f,c
  6217  00183C  2203               	addwfc	(___fladd@b+2)^0,f,c
  6218  00183E  2204               	addwfc	(___fladd@b+3)^0,f,c
  6219  001840  A004               	btfss	(___fladd@b+3)^0,0,c
  6220  001842  EF25  F00C         	goto	u3031
  6221  001846  EF27  F00C         	goto	u3030
  6222  00184A                     u3031:
  6223  00184A  EF45  F00C         	goto	l2988
  6224  00184E                     u3030:
  6225  00184E  C001  F009         	movff	___fladd@b,??___fladd
  6226  001852  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6227  001856  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6228  00185A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6229  00185E  340C               	rlcf	(??___fladd+3)^0,w,c
  6230  001860  320C               	rrcf	(??___fladd+3)^0,f,c
  6231  001862  320B               	rrcf	(??___fladd+2)^0,f,c
  6232  001864  320A               	rrcf	(??___fladd+1)^0,f,c
  6233  001866  3209               	rrcf	??___fladd^0,f,c
  6234  001868  C009  F001         	movff	??___fladd,___fladd@b
  6235  00186C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6236  001870  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6237  001874  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6238  001878  280F               	incf	___fladd@bexp^0,w,c
  6239  00187A  B4D8               	btfsc	status,2,c
  6240  00187C  EF42  F00C         	goto	u3041
  6241  001880  EF44  F00C         	goto	u3040
  6242  001884                     u3041:
  6243  001884  EF45  F00C         	goto	l2988
  6244  001888                     u3040:
  6245  001888  2A0F               	incf	___fladd@bexp^0,f,c
  6246  00188A                     l2988:
  6247  00188A  280F               	incf	___fladd@bexp^0,w,c
  6248  00188C  B4D8               	btfsc	status,2,c
  6249  00188E  EF4B  F00C         	goto	u3051
  6250  001892  EF4D  F00C         	goto	u3050
  6251  001896                     u3051:
  6252  001896  EF55  F00C         	goto	l2992
  6253  00189A                     u3050:
  6254  00189A  500F               	movf	___fladd@bexp^0,w,c
  6255  00189C  A4D8               	btfss	status,2,c
  6256  00189E  EF53  F00C         	goto	u3061
  6257  0018A2  EF55  F00C         	goto	u3060
  6258  0018A6                     u3061:
  6259  0018A6  EF67  F00C         	goto	l2996
  6260  0018AA                     u3060:
  6261  0018AA                     l2992:
  6262  0018AA  0E00               	movlw	0
  6263  0018AC  6E01               	movwf	___fladd@b^0,c
  6264  0018AE  0E00               	movlw	0
  6265  0018B0  6E02               	movwf	(___fladd@b+1)^0,c
  6266  0018B2  0E00               	movlw	0
  6267  0018B4  6E03               	movwf	(___fladd@b+2)^0,c
  6268  0018B6  0E00               	movlw	0
  6269  0018B8  6E04               	movwf	(___fladd@b+3)^0,c
  6270  0018BA  500F               	movf	___fladd@bexp^0,w,c
  6271  0018BC  A4D8               	btfss	status,2,c
  6272  0018BE  EF63  F00C         	goto	u3071
  6273  0018C2  EF65  F00C         	goto	u3070
  6274  0018C6                     u3071:
  6275  0018C6  EF67  F00C         	goto	l2996
  6276  0018CA                     u3070:
  6277  0018CA  0E00               	movlw	0
  6278  0018CC  6E0D               	movwf	___fladd@signs^0,c
  6279  0018CE                     l2996:
  6280  0018CE  A00F               	btfss	___fladd@bexp^0,0,c
  6281  0018D0  EF6C  F00C         	goto	u3081
  6282  0018D4  EF6E  F00C         	goto	u3080
  6283  0018D8                     u3081:
  6284  0018D8  EF71  F00C         	goto	l3000
  6285  0018DC                     u3080:
  6286  0018DC  8E03               	bsf	(___fladd@b+2)^0,7,c
  6287  0018DE  EF72  F00C         	goto	l3002
  6288  0018E2                     l3000:
  6289  0018E2  9E03               	bcf	(___fladd@b+2)^0,7,c
  6290  0018E4                     l3002:
  6291  0018E4  90D8               	bcf	status,0,c
  6292  0018E6  300F               	rrcf	___fladd@bexp^0,w,c
  6293  0018E8  6E04               	movwf	(___fladd@b+3)^0,c
  6294  0018EA  AE0D               	btfss	___fladd@signs^0,7,c
  6295  0018EC  EF7A  F00C         	goto	u3091
  6296  0018F0  EF7C  F00C         	goto	u3090
  6297  0018F4                     u3091:
  6298  0018F4  EF7D  F00C         	goto	l3008
  6299  0018F8                     u3090:
  6300  0018F8  8E04               	bsf	(___fladd@b+3)^0,7,c
  6301  0018FA                     l3008:
  6302  0018FA  C001  F001         	movff	___fladd@b,?___fladd
  6303  0018FE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6304  001902  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6305  001906  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6306  00190A                     l872:
  6307  00190A  0012               	return		;funcret
  6308  00190C                     __end_of___fladd:
  6309                           	opt callstack 0
  6310                           
  6311 ;; *************** function ___flneg *****************
  6312 ;; Defined at:
  6313 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;  f1              4    0[COMRAM] unsigned char 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;		None
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  4    0[COMRAM] unsigned char 
  6320 ;; Registers used:
  6321 ;;		wreg, status,2, status,0
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6327 ;;      Params:         4       0       0       0       0       0       0       0       0
  6328 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6330 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6331 ;;Total ram usage:        4 bytes
  6332 ;; Hardware stack levels used:    1
  6333 ;; Hardware stack levels required when called:    1
  6334 ;; This function calls:
  6335 ;;		Nothing
  6336 ;; This function is called by:
  6337 ;;		_efgtoa
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           	psect	text23
  6342  003A30                     __ptext23:
  6343                           	opt callstack 0
  6344  003A30                     ___flneg:
  6345                           	opt callstack 23
  6346  003A30  5001               	movf	___flneg@f1^0,w,c
  6347  003A32  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6348  003A34  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6349  003A36  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6350  003A38  B4D8               	btfsc	status,2,c
  6351  003A3A  EF21  F01D         	goto	u4001
  6352  003A3E  EF23  F01D         	goto	u4000
  6353  003A42                     u4001:
  6354  003A42  EF2B  F01D         	goto	l3504
  6355  003A46                     u4000:
  6356  003A46  0E00               	movlw	0
  6357  003A48  1A01               	xorwf	___flneg@f1^0,f,c
  6358  003A4A  0E00               	movlw	0
  6359  003A4C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6360  003A4E  0E00               	movlw	0
  6361  003A50  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6362  003A52  0E80               	movlw	128
  6363  003A54  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6364  003A56                     l3504:
  6365  003A56  C001  F001         	movff	___flneg@f1,?___flneg
  6366  003A5A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6367  003A5E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6368  003A62  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6369  003A66  0012               	return		;funcret
  6370  003A68                     __end_of___flneg:
  6371                           	opt callstack 0
  6372                           
  6373 ;; *************** function ___flmul *****************
  6374 ;; Defined at:
  6375 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;  b               4    0[COMRAM] unsigned char 
  6378 ;;  a               4    4[COMRAM] unsigned char 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  prod            4   19[COMRAM] struct .
  6381 ;;  grs             4   13[COMRAM] unsigned long 
  6382 ;;  temp            2   23[COMRAM] struct .
  6383 ;;  bexp            1   18[COMRAM] unsigned char 
  6384 ;;  aexp            1   17[COMRAM] unsigned char 
  6385 ;;  sign            1   12[COMRAM] unsigned char 
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  4    0[COMRAM] unsigned char 
  6388 ;; Registers used:
  6389 ;;		wreg, status,2, status,0, prodl, prodh
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6395 ;;      Params:         8       0       0       0       0       0       0       0       0
  6396 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6397 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6398 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6399 ;;Total ram usage:       25 bytes
  6400 ;; Hardware stack levels used:    1
  6401 ;; Hardware stack levels required when called:    1
  6402 ;; This function calls:
  6403 ;;		Nothing
  6404 ;; This function is called by:
  6405 ;;		_efgtoa
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           	psect	text24
  6410  001D94                     __ptext24:
  6411                           	opt callstack 0
  6412  001D94                     ___flmul:
  6413                           	opt callstack 23
  6414  001D94  5004               	movf	(___flmul@b+3)^0,w,c
  6415  001D96  0B80               	andlw	128
  6416  001D98  6E0D               	movwf	___flmul@sign^0,c
  6417  001D9A  5004               	movf	(___flmul@b+3)^0,w,c
  6418  001D9C  2404               	addwf	(___flmul@b+3)^0,w,c
  6419  001D9E  6E13               	movwf	___flmul@bexp^0,c
  6420  001DA0  AE03               	btfss	(___flmul@b+2)^0,7,c
  6421  001DA2  EFD5  F00E         	goto	u3611
  6422  001DA6  EFD7  F00E         	goto	u3610
  6423  001DAA                     u3611:
  6424  001DAA  EFD8  F00E         	goto	l3252
  6425  001DAE                     u3610:
  6426  001DAE  8013               	bsf	___flmul@bexp^0,0,c
  6427  001DB0                     l3252:
  6428  001DB0  5013               	movf	___flmul@bexp^0,w,c
  6429  001DB2  B4D8               	btfsc	status,2,c
  6430  001DB4  EFDE  F00E         	goto	u3621
  6431  001DB8  EFE0  F00E         	goto	u3620
  6432  001DBC                     u3621:
  6433  001DBC  EFF3  F00E         	goto	l3260
  6434  001DC0                     u3620:
  6435  001DC0  2813               	incf	___flmul@bexp^0,w,c
  6436  001DC2  A4D8               	btfss	status,2,c
  6437  001DC4  EFE6  F00E         	goto	u3631
  6438  001DC8  EFE8  F00E         	goto	u3630
  6439  001DCC                     u3631:
  6440  001DCC  EFF0  F00E         	goto	l3258
  6441  001DD0                     u3630:
  6442  001DD0  0E00               	movlw	0
  6443  001DD2  6E01               	movwf	___flmul@b^0,c
  6444  001DD4  0E00               	movlw	0
  6445  001DD6  6E02               	movwf	(___flmul@b+1)^0,c
  6446  001DD8  0E00               	movlw	0
  6447  001DDA  6E03               	movwf	(___flmul@b+2)^0,c
  6448  001DDC  0E00               	movlw	0
  6449  001DDE  6E04               	movwf	(___flmul@b+3)^0,c
  6450  001DE0                     l3258:
  6451  001DE0  8E03               	bsf	(___flmul@b+2)^0,7,c
  6452  001DE2  EFFB  F00E         	goto	l3262
  6453  001DE6                     l3260:
  6454  001DE6  0E00               	movlw	0
  6455  001DE8  6E01               	movwf	___flmul@b^0,c
  6456  001DEA  0E00               	movlw	0
  6457  001DEC  6E02               	movwf	(___flmul@b+1)^0,c
  6458  001DEE  0E00               	movlw	0
  6459  001DF0  6E03               	movwf	(___flmul@b+2)^0,c
  6460  001DF2  0E00               	movlw	0
  6461  001DF4  6E04               	movwf	(___flmul@b+3)^0,c
  6462  001DF6                     l3262:
  6463  001DF6  5008               	movf	(___flmul@a+3)^0,w,c
  6464  001DF8  0B80               	andlw	128
  6465  001DFA  1A0D               	xorwf	___flmul@sign^0,f,c
  6466  001DFC  5008               	movf	(___flmul@a+3)^0,w,c
  6467  001DFE  2408               	addwf	(___flmul@a+3)^0,w,c
  6468  001E00  6E12               	movwf	___flmul@aexp^0,c
  6469  001E02  AE07               	btfss	(___flmul@a+2)^0,7,c
  6470  001E04  EF06  F00F         	goto	u3641
  6471  001E08  EF08  F00F         	goto	u3640
  6472  001E0C                     u3641:
  6473  001E0C  EF09  F00F         	goto	l3270
  6474  001E10                     u3640:
  6475  001E10  8012               	bsf	___flmul@aexp^0,0,c
  6476  001E12                     l3270:
  6477  001E12  5012               	movf	___flmul@aexp^0,w,c
  6478  001E14  B4D8               	btfsc	status,2,c
  6479  001E16  EF0F  F00F         	goto	u3651
  6480  001E1A  EF11  F00F         	goto	u3650
  6481  001E1E                     u3651:
  6482  001E1E  EF24  F00F         	goto	l3278
  6483  001E22                     u3650:
  6484  001E22  2812               	incf	___flmul@aexp^0,w,c
  6485  001E24  A4D8               	btfss	status,2,c
  6486  001E26  EF17  F00F         	goto	u3661
  6487  001E2A  EF19  F00F         	goto	u3660
  6488  001E2E                     u3661:
  6489  001E2E  EF21  F00F         	goto	l3276
  6490  001E32                     u3660:
  6491  001E32  0E00               	movlw	0
  6492  001E34  6E05               	movwf	___flmul@a^0,c
  6493  001E36  0E00               	movlw	0
  6494  001E38  6E06               	movwf	(___flmul@a+1)^0,c
  6495  001E3A  0E00               	movlw	0
  6496  001E3C  6E07               	movwf	(___flmul@a+2)^0,c
  6497  001E3E  0E00               	movlw	0
  6498  001E40  6E08               	movwf	(___flmul@a+3)^0,c
  6499  001E42                     l3276:
  6500  001E42  8E07               	bsf	(___flmul@a+2)^0,7,c
  6501  001E44  EF2C  F00F         	goto	l949
  6502  001E48                     l3278:
  6503  001E48  0E00               	movlw	0
  6504  001E4A  6E05               	movwf	___flmul@a^0,c
  6505  001E4C  0E00               	movlw	0
  6506  001E4E  6E06               	movwf	(___flmul@a+1)^0,c
  6507  001E50  0E00               	movlw	0
  6508  001E52  6E07               	movwf	(___flmul@a+2)^0,c
  6509  001E54  0E00               	movlw	0
  6510  001E56  6E08               	movwf	(___flmul@a+3)^0,c
  6511  001E58                     l949:
  6512  001E58  5012               	movf	___flmul@aexp^0,w,c
  6513  001E5A  B4D8               	btfsc	status,2,c
  6514  001E5C  EF32  F00F         	goto	u3671
  6515  001E60  EF34  F00F         	goto	u3670
  6516  001E64                     u3671:
  6517  001E64  EF3C  F00F         	goto	l3282
  6518  001E68                     u3670:
  6519  001E68  5013               	movf	___flmul@bexp^0,w,c
  6520  001E6A  A4D8               	btfss	status,2,c
  6521  001E6C  EF3A  F00F         	goto	u3681
  6522  001E70  EF3C  F00F         	goto	u3680
  6523  001E74                     u3681:
  6524  001E74  EF46  F00F         	goto	l3286
  6525  001E78                     u3680:
  6526  001E78                     l3282:
  6527  001E78  0E00               	movlw	0
  6528  001E7A  6E01               	movwf	?___flmul^0,c
  6529  001E7C  0E00               	movlw	0
  6530  001E7E  6E02               	movwf	(?___flmul+1)^0,c
  6531  001E80  0E00               	movlw	0
  6532  001E82  6E03               	movwf	(?___flmul+2)^0,c
  6533  001E84  0E00               	movlw	0
  6534  001E86  6E04               	movwf	(?___flmul+3)^0,c
  6535  001E88  EFDE  F010         	goto	l953
  6536  001E8C                     l3286:
  6537  001E8C  5007               	movf	(___flmul@a+2)^0,w,c
  6538  001E8E  0201               	mulwf	___flmul@b^0,c
  6539  001E90  CFF3 F018          	movff	prodl,___flmul@temp
  6540  001E94  CFF4 F019          	movff	prodh,___flmul@temp+1
  6541  001E98  5018               	movf	___flmul@temp^0,w,c
  6542  001E9A  6E0E               	movwf	___flmul@grs^0,c
  6543  001E9C  6A0F               	clrf	(___flmul@grs+1)^0,c
  6544  001E9E  6A10               	clrf	(___flmul@grs+2)^0,c
  6545  001EA0  6A11               	clrf	(___flmul@grs+3)^0,c
  6546  001EA2  5019               	movf	(___flmul@temp+1)^0,w,c
  6547  001EA4  6E14               	movwf	___flmul@prod^0,c
  6548  001EA6  6A15               	clrf	(___flmul@prod+1)^0,c
  6549  001EA8  6A16               	clrf	(___flmul@prod+2)^0,c
  6550  001EAA  6A17               	clrf	(___flmul@prod+3)^0,c
  6551  001EAC  5006               	movf	(___flmul@a+1)^0,w,c
  6552  001EAE  0202               	mulwf	(___flmul@b+1)^0,c
  6553  001EB0  CFF3 F018          	movff	prodl,___flmul@temp
  6554  001EB4  CFF4 F019          	movff	prodh,___flmul@temp+1
  6555  001EB8  5018               	movf	___flmul@temp^0,w,c
  6556  001EBA  260E               	addwf	___flmul@grs^0,f,c
  6557  001EBC  0E00               	movlw	0
  6558  001EBE  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6559  001EC0  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6560  001EC2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6561  001EC4  5019               	movf	(___flmul@temp+1)^0,w,c
  6562  001EC6  2614               	addwf	___flmul@prod^0,f,c
  6563  001EC8  0E00               	movlw	0
  6564  001ECA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6565  001ECC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6566  001ECE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6567  001ED0  5005               	movf	___flmul@a^0,w,c
  6568  001ED2  0203               	mulwf	(___flmul@b+2)^0,c
  6569  001ED4  CFF3 F018          	movff	prodl,___flmul@temp
  6570  001ED8  CFF4 F019          	movff	prodh,___flmul@temp+1
  6571  001EDC  5018               	movf	___flmul@temp^0,w,c
  6572  001EDE  260E               	addwf	___flmul@grs^0,f,c
  6573  001EE0  0E00               	movlw	0
  6574  001EE2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6575  001EE4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6576  001EE6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6577  001EE8  5019               	movf	(___flmul@temp+1)^0,w,c
  6578  001EEA  2614               	addwf	___flmul@prod^0,f,c
  6579  001EEC  0E00               	movlw	0
  6580  001EEE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6581  001EF0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6582  001EF2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6583  001EF4  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6584  001EF8  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6585  001EFC  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6586  001F00  6A0E               	clrf	___flmul@grs^0,c
  6587  001F02  5005               	movf	___flmul@a^0,w,c
  6588  001F04  0202               	mulwf	(___flmul@b+1)^0,c
  6589  001F06  CFF3 F018          	movff	prodl,___flmul@temp
  6590  001F0A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6591  001F0E  5018               	movf	___flmul@temp^0,w,c
  6592  001F10  260E               	addwf	___flmul@grs^0,f,c
  6593  001F12  5019               	movf	(___flmul@temp+1)^0,w,c
  6594  001F14  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6595  001F16  0E00               	movlw	0
  6596  001F18  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6597  001F1A  0E00               	movlw	0
  6598  001F1C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6599  001F1E  5006               	movf	(___flmul@a+1)^0,w,c
  6600  001F20  0201               	mulwf	___flmul@b^0,c
  6601  001F22  CFF3 F018          	movff	prodl,___flmul@temp
  6602  001F26  CFF4 F019          	movff	prodh,___flmul@temp+1
  6603  001F2A  5018               	movf	___flmul@temp^0,w,c
  6604  001F2C  260E               	addwf	___flmul@grs^0,f,c
  6605  001F2E  5019               	movf	(___flmul@temp+1)^0,w,c
  6606  001F30  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6607  001F32  0E00               	movlw	0
  6608  001F34  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6609  001F36  0E00               	movlw	0
  6610  001F38  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6611  001F3A  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6612  001F3E  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6613  001F42  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6614  001F46  6A0E               	clrf	___flmul@grs^0,c
  6615  001F48  5005               	movf	___flmul@a^0,w,c
  6616  001F4A  0201               	mulwf	___flmul@b^0,c
  6617  001F4C  CFF3 F018          	movff	prodl,___flmul@temp
  6618  001F50  CFF4 F019          	movff	prodh,___flmul@temp+1
  6619  001F54  5018               	movf	___flmul@temp^0,w,c
  6620  001F56  260E               	addwf	___flmul@grs^0,f,c
  6621  001F58  5019               	movf	(___flmul@temp+1)^0,w,c
  6622  001F5A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6623  001F5C  0E00               	movlw	0
  6624  001F5E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6625  001F60  0E00               	movlw	0
  6626  001F62  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6627  001F64  5007               	movf	(___flmul@a+2)^0,w,c
  6628  001F66  0202               	mulwf	(___flmul@b+1)^0,c
  6629  001F68  CFF3 F018          	movff	prodl,___flmul@temp
  6630  001F6C  CFF4 F019          	movff	prodh,___flmul@temp+1
  6631  001F70  5018               	movf	___flmul@temp^0,w,c
  6632  001F72  2614               	addwf	___flmul@prod^0,f,c
  6633  001F74  5019               	movf	(___flmul@temp+1)^0,w,c
  6634  001F76  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6635  001F78  0E00               	movlw	0
  6636  001F7A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6637  001F7C  0E00               	movlw	0
  6638  001F7E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6639  001F80  5006               	movf	(___flmul@a+1)^0,w,c
  6640  001F82  0203               	mulwf	(___flmul@b+2)^0,c
  6641  001F84  CFF3 F018          	movff	prodl,___flmul@temp
  6642  001F88  CFF4 F019          	movff	prodh,___flmul@temp+1
  6643  001F8C  5018               	movf	___flmul@temp^0,w,c
  6644  001F8E  2614               	addwf	___flmul@prod^0,f,c
  6645  001F90  5019               	movf	(___flmul@temp+1)^0,w,c
  6646  001F92  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6647  001F94  0E00               	movlw	0
  6648  001F96  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6649  001F98  0E00               	movlw	0
  6650  001F9A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6651  001F9C  5007               	movf	(___flmul@a+2)^0,w,c
  6652  001F9E  0203               	mulwf	(___flmul@b+2)^0,c
  6653  001FA0  CFF3 F018          	movff	prodl,___flmul@temp
  6654  001FA4  CFF4 F019          	movff	prodh,___flmul@temp+1
  6655  001FA8  5018               	movf	___flmul@temp^0,w,c
  6656  001FAA  6E09               	movwf	??___flmul^0,c
  6657  001FAC  5019               	movf	(___flmul@temp+1)^0,w,c
  6658  001FAE  6E0A               	movwf	(??___flmul+1)^0,c
  6659  001FB0  6A0B               	clrf	(??___flmul+2)^0,c
  6660  001FB2  6A0C               	clrf	(??___flmul+3)^0,c
  6661  001FB4  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6662  001FB8  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6663  001FBC  C009  F00A         	movff	??___flmul,??___flmul+1
  6664  001FC0  6A09               	clrf	??___flmul^0,c
  6665  001FC2  5009               	movf	??___flmul^0,w,c
  6666  001FC4  2614               	addwf	___flmul@prod^0,f,c
  6667  001FC6  500A               	movf	(??___flmul+1)^0,w,c
  6668  001FC8  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6669  001FCA  500B               	movf	(??___flmul+2)^0,w,c
  6670  001FCC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6671  001FCE  500C               	movf	(??___flmul+3)^0,w,c
  6672  001FD0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6673  001FD2  C00E  F009         	movff	___flmul@grs,??___flmul
  6674  001FD6  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6675  001FDA  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6676  001FDE  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6677  001FE2  0E19               	movlw	25
  6678  001FE4  EFF9  F00F         	goto	u3690
  6679  001FE8                     u3695:
  6680  001FE8  90D8               	bcf	status,0,c
  6681  001FEA  320C               	rrcf	(??___flmul+3)^0,f,c
  6682  001FEC  320B               	rrcf	(??___flmul+2)^0,f,c
  6683  001FEE  320A               	rrcf	(??___flmul+1)^0,f,c
  6684  001FF0  3209               	rrcf	??___flmul^0,f,c
  6685  001FF2                     u3690:
  6686  001FF2  2EE8               	decfsz	wreg,f,c
  6687  001FF4  EFF4  F00F         	goto	u3695
  6688  001FF8  5009               	movf	??___flmul^0,w,c
  6689  001FFA  2614               	addwf	___flmul@prod^0,f,c
  6690  001FFC  500A               	movf	(??___flmul+1)^0,w,c
  6691  001FFE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6692  002000  500B               	movf	(??___flmul+2)^0,w,c
  6693  002002  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6694  002004  500C               	movf	(??___flmul+3)^0,w,c
  6695  002006  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6696  002008  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6697  00200C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6698  002010  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6699  002014  6A0E               	clrf	___flmul@grs^0,c
  6700  002016  5012               	movf	___flmul@aexp^0,w,c
  6701  002018  C013  F009         	movff	___flmul@bexp,??___flmul
  6702  00201C  6A0A               	clrf	(??___flmul+1)^0,c
  6703  00201E  2609               	addwf	??___flmul^0,f,c
  6704  002020  0E00               	movlw	0
  6705  002022  220A               	addwfc	(??___flmul+1)^0,f,c
  6706  002024  0E82               	movlw	130
  6707  002026  2409               	addwf	??___flmul^0,w,c
  6708  002028  6E18               	movwf	___flmul@temp^0,c
  6709  00202A  0EFF               	movlw	255
  6710  00202C  200A               	addwfc	(??___flmul+1)^0,w,c
  6711  00202E  6E19               	movwf	(___flmul@temp+1)^0,c
  6712  002030  EF2F  F010         	goto	l3334
  6713  002034                     l3328:
  6714  002034  90D8               	bcf	status,0,c
  6715  002036  3614               	rlcf	___flmul@prod^0,f,c
  6716  002038  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6717  00203A  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6718  00203C  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6719  00203E  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6720  002040  EF24  F010         	goto	u3701
  6721  002044  EF26  F010         	goto	u3700
  6722  002048                     u3701:
  6723  002048  EF27  F010         	goto	l956
  6724  00204C                     u3700:
  6725  00204C  8014               	bsf	___flmul@prod^0,0,c
  6726  00204E                     l956:
  6727  00204E  90D8               	bcf	status,0,c
  6728  002050  360E               	rlcf	___flmul@grs^0,f,c
  6729  002052  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6730  002054  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6731  002056  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6732  002058  0618               	decf	___flmul@temp^0,f,c
  6733  00205A  A0D8               	btfss	status,0,c
  6734  00205C  0619               	decf	(___flmul@temp+1)^0,f,c
  6735  00205E                     l3334:
  6736  00205E  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6737  002060  EF34  F010         	goto	u3711
  6738  002064  EF36  F010         	goto	u3710
  6739  002068                     u3711:
  6740  002068  EF1A  F010         	goto	l3328
  6741  00206C                     u3710:
  6742  00206C  0E00               	movlw	0
  6743  00206E  6E12               	movwf	___flmul@aexp^0,c
  6744  002070  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6745  002072  EF3D  F010         	goto	u3721
  6746  002076  EF3F  F010         	goto	u3720
  6747  00207A                     u3721:
  6748  00207A  EF63  F010         	goto	l958
  6749  00207E                     u3720:
  6750  00207E  0EFF               	movlw	255
  6751  002080  140E               	andwf	___flmul@grs^0,w,c
  6752  002082  6E09               	movwf	??___flmul^0,c
  6753  002084  0EFF               	movlw	255
  6754  002086  140F               	andwf	(___flmul@grs+1)^0,w,c
  6755  002088  6E0A               	movwf	(??___flmul+1)^0,c
  6756  00208A  0EFF               	movlw	255
  6757  00208C  1410               	andwf	(___flmul@grs+2)^0,w,c
  6758  00208E  6E0B               	movwf	(??___flmul+2)^0,c
  6759  002090  0E7F               	movlw	127
  6760  002092  1411               	andwf	(___flmul@grs+3)^0,w,c
  6761  002094  6E0C               	movwf	(??___flmul+3)^0,c
  6762  002096  5009               	movf	??___flmul^0,w,c
  6763  002098  100A               	iorwf	(??___flmul+1)^0,w,c
  6764  00209A  100B               	iorwf	(??___flmul+2)^0,w,c
  6765  00209C  100C               	iorwf	(??___flmul+3)^0,w,c
  6766  00209E  B4D8               	btfsc	status,2,c
  6767  0020A0  EF54  F010         	goto	u3731
  6768  0020A4  EF56  F010         	goto	u3730
  6769  0020A8                     u3731:
  6770  0020A8  EF5A  F010         	goto	l959
  6771  0020AC                     u3730:
  6772  0020AC                     l3342:
  6773  0020AC  0E01               	movlw	1
  6774  0020AE  6E12               	movwf	___flmul@aexp^0,c
  6775  0020B0  EF63  F010         	goto	l958
  6776  0020B4                     l959:
  6777  0020B4  A014               	btfss	___flmul@prod^0,0,c
  6778  0020B6  EF5F  F010         	goto	u3741
  6779  0020BA  EF61  F010         	goto	u3740
  6780  0020BE                     u3741:
  6781  0020BE  EF63  F010         	goto	l958
  6782  0020C2                     u3740:
  6783  0020C2  EF56  F010         	goto	l3342
  6784  0020C6                     l958:
  6785  0020C6  5012               	movf	___flmul@aexp^0,w,c
  6786  0020C8  B4D8               	btfsc	status,2,c
  6787  0020CA  EF69  F010         	goto	u3751
  6788  0020CE  EF6B  F010         	goto	u3750
  6789  0020D2                     u3751:
  6790  0020D2  EF8F  F010         	goto	l3354
  6791  0020D6                     u3750:
  6792  0020D6  0E01               	movlw	1
  6793  0020D8  2614               	addwf	___flmul@prod^0,f,c
  6794  0020DA  0E00               	movlw	0
  6795  0020DC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6796  0020DE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6797  0020E0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6798  0020E2  A017               	btfss	(___flmul@prod+3)^0,0,c
  6799  0020E4  EF76  F010         	goto	u3761
  6800  0020E8  EF78  F010         	goto	u3760
  6801  0020EC                     u3761:
  6802  0020EC  EF8F  F010         	goto	l3354
  6803  0020F0                     u3760:
  6804  0020F0  C014  F009         	movff	___flmul@prod,??___flmul
  6805  0020F4  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6806  0020F8  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6807  0020FC  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6808  002100  340C               	rlcf	(??___flmul+3)^0,w,c
  6809  002102  320C               	rrcf	(??___flmul+3)^0,f,c
  6810  002104  320B               	rrcf	(??___flmul+2)^0,f,c
  6811  002106  320A               	rrcf	(??___flmul+1)^0,f,c
  6812  002108  3209               	rrcf	??___flmul^0,f,c
  6813  00210A  C009  F014         	movff	??___flmul,___flmul@prod
  6814  00210E  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6815  002112  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6816  002116  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6817  00211A  4A18               	infsnz	___flmul@temp^0,f,c
  6818  00211C  2A19               	incf	(___flmul@temp+1)^0,f,c
  6819  00211E                     l3354:
  6820  00211E  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6821  002120  EF9A  F010         	goto	u3771
  6822  002124  5019               	movf	(___flmul@temp+1)^0,w,c
  6823  002126  E108               	bnz	u3770
  6824  002128  2818               	incf	___flmul@temp^0,w,c
  6825  00212A  A0D8               	btfss	status,0,c
  6826  00212C  EF9A  F010         	goto	u3771
  6827  002130  EF9C  F010         	goto	u3770
  6828  002134                     u3771:
  6829  002134  EFA6  F010         	goto	l3358
  6830  002138                     u3770:
  6831  002138  0E00               	movlw	0
  6832  00213A  6E14               	movwf	___flmul@prod^0,c
  6833  00213C  0E00               	movlw	0
  6834  00213E  6E15               	movwf	(___flmul@prod+1)^0,c
  6835  002140  0E80               	movlw	128
  6836  002142  6E16               	movwf	(___flmul@prod+2)^0,c
  6837  002144  0E7F               	movlw	127
  6838  002146  6E17               	movwf	(___flmul@prod+3)^0,c
  6839  002148  EFD4  F010         	goto	l3370
  6840  00214C                     l3358:
  6841  00214C  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6842  00214E  EFB3  F010         	goto	u3780
  6843  002152  5019               	movf	(___flmul@temp+1)^0,w,c
  6844  002154  E106               	bnz	u3781
  6845  002156  0418               	decf	___flmul@temp^0,w,c
  6846  002158  B0D8               	btfsc	status,0,c
  6847  00215A  EFB1  F010         	goto	u3781
  6848  00215E  EFB3  F010         	goto	u3780
  6849  002162                     u3781:
  6850  002162  EFBF  F010         	goto	l966
  6851  002166                     u3780:
  6852  002166  0E00               	movlw	0
  6853  002168  6E14               	movwf	___flmul@prod^0,c
  6854  00216A  0E00               	movlw	0
  6855  00216C  6E15               	movwf	(___flmul@prod+1)^0,c
  6856  00216E  0E00               	movlw	0
  6857  002170  6E16               	movwf	(___flmul@prod+2)^0,c
  6858  002172  0E00               	movlw	0
  6859  002174  6E17               	movwf	(___flmul@prod+3)^0,c
  6860  002176  0E00               	movlw	0
  6861  002178  6E0D               	movwf	___flmul@sign^0,c
  6862  00217A  EFD4  F010         	goto	l3370
  6863  00217E                     l966:
  6864  00217E  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6865  002182  0EFF               	movlw	255
  6866  002184  1614               	andwf	___flmul@prod^0,f,c
  6867  002186  0EFF               	movlw	255
  6868  002188  1615               	andwf	(___flmul@prod+1)^0,f,c
  6869  00218A  0E7F               	movlw	127
  6870  00218C  1616               	andwf	(___flmul@prod+2)^0,f,c
  6871  00218E  0E00               	movlw	0
  6872  002190  1617               	andwf	(___flmul@prod+3)^0,f,c
  6873  002192  A013               	btfss	___flmul@bexp^0,0,c
  6874  002194  EFCE  F010         	goto	u3791
  6875  002198  EFD0  F010         	goto	u3790
  6876  00219C                     u3791:
  6877  00219C  EFD1  F010         	goto	l3368
  6878  0021A0                     u3790:
  6879  0021A0  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6880  0021A2                     l3368:
  6881  0021A2  90D8               	bcf	status,0,c
  6882  0021A4  3013               	rrcf	___flmul@bexp^0,w,c
  6883  0021A6  6E17               	movwf	(___flmul@prod+3)^0,c
  6884  0021A8                     l3370:
  6885  0021A8  500D               	movf	___flmul@sign^0,w,c
  6886  0021AA  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6887  0021AC  C014  F001         	movff	___flmul@prod,?___flmul
  6888  0021B0  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6889  0021B4  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6890  0021B8  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6891  0021BC                     l953:
  6892  0021BC  0012               	return		;funcret
  6893  0021BE                     __end_of___flmul:
  6894                           	opt callstack 0
  6895                           
  6896 ;; *************** function ___flge *****************
  6897 ;; Defined at:
  6898 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  ff1             4   25[COMRAM] unsigned char 
  6901 ;;  ff2             4   29[COMRAM] unsigned char 
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;		None
  6904 ;; Return value:  Size  Location     Type
  6905 ;;		None               void
  6906 ;; Registers used:
  6907 ;;		wreg, status,2, status,0
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6913 ;;      Params:         8       0       0       0       0       0       0       0       0
  6914 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6915 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6916 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6917 ;;Total ram usage:       12 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; Hardware stack levels required when called:    1
  6920 ;; This function calls:
  6921 ;;		Nothing
  6922 ;; This function is called by:
  6923 ;;		_efgtoa
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text25
  6928  002F8C                     __ptext25:
  6929                           	opt callstack 0
  6930  002F8C                     ___flge:
  6931                           	opt callstack 23
  6932  002F8C  0E00               	movlw	0
  6933  002F8E  141A               	andwf	___flge@ff1^0,w,c
  6934  002F90  6E22               	movwf	??___flge^0,c
  6935  002F92  0E00               	movlw	0
  6936  002F94  141B               	andwf	(___flge@ff1+1)^0,w,c
  6937  002F96  6E23               	movwf	(??___flge+1)^0,c
  6938  002F98  0E80               	movlw	128
  6939  002F9A  141C               	andwf	(___flge@ff1+2)^0,w,c
  6940  002F9C  6E24               	movwf	(??___flge+2)^0,c
  6941  002F9E  0E7F               	movlw	127
  6942  002FA0  141D               	andwf	(___flge@ff1+3)^0,w,c
  6943  002FA2  6E25               	movwf	(??___flge+3)^0,c
  6944  002FA4  5022               	movf	??___flge^0,w,c
  6945  002FA6  1023               	iorwf	(??___flge+1)^0,w,c
  6946  002FA8  1024               	iorwf	(??___flge+2)^0,w,c
  6947  002FAA  1025               	iorwf	(??___flge+3)^0,w,c
  6948  002FAC  A4D8               	btfss	status,2,c
  6949  002FAE  EFDB  F017         	goto	u3951
  6950  002FB2  EFDD  F017         	goto	u3950
  6951  002FB6                     u3951:
  6952  002FB6  EFE5  F017         	goto	l3482
  6953  002FBA                     u3950:
  6954  002FBA  0E00               	movlw	0
  6955  002FBC  6E1A               	movwf	___flge@ff1^0,c
  6956  002FBE  0E00               	movlw	0
  6957  002FC0  6E1B               	movwf	(___flge@ff1+1)^0,c
  6958  002FC2  0E00               	movlw	0
  6959  002FC4  6E1C               	movwf	(___flge@ff1+2)^0,c
  6960  002FC6  0E00               	movlw	0
  6961  002FC8  6E1D               	movwf	(___flge@ff1+3)^0,c
  6962  002FCA                     l3482:
  6963  002FCA  0E00               	movlw	0
  6964  002FCC  141E               	andwf	___flge@ff2^0,w,c
  6965  002FCE  6E22               	movwf	??___flge^0,c
  6966  002FD0  0E00               	movlw	0
  6967  002FD2  141F               	andwf	(___flge@ff2+1)^0,w,c
  6968  002FD4  6E23               	movwf	(??___flge+1)^0,c
  6969  002FD6  0E80               	movlw	128
  6970  002FD8  1420               	andwf	(___flge@ff2+2)^0,w,c
  6971  002FDA  6E24               	movwf	(??___flge+2)^0,c
  6972  002FDC  0E7F               	movlw	127
  6973  002FDE  1421               	andwf	(___flge@ff2+3)^0,w,c
  6974  002FE0  6E25               	movwf	(??___flge+3)^0,c
  6975  002FE2  5022               	movf	??___flge^0,w,c
  6976  002FE4  1023               	iorwf	(??___flge+1)^0,w,c
  6977  002FE6  1024               	iorwf	(??___flge+2)^0,w,c
  6978  002FE8  1025               	iorwf	(??___flge+3)^0,w,c
  6979  002FEA  A4D8               	btfss	status,2,c
  6980  002FEC  EFFA  F017         	goto	u3961
  6981  002FF0  EFFC  F017         	goto	u3960
  6982  002FF4                     u3961:
  6983  002FF4  EF04  F018         	goto	l3486
  6984  002FF8                     u3960:
  6985  002FF8  0E00               	movlw	0
  6986  002FFA  6E1E               	movwf	___flge@ff2^0,c
  6987  002FFC  0E00               	movlw	0
  6988  002FFE  6E1F               	movwf	(___flge@ff2+1)^0,c
  6989  003000  0E00               	movlw	0
  6990  003002  6E20               	movwf	(___flge@ff2+2)^0,c
  6991  003004  0E00               	movlw	0
  6992  003006  6E21               	movwf	(___flge@ff2+3)^0,c
  6993  003008                     l3486:
  6994  003008  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6995  00300A  EF09  F018         	goto	u3971
  6996  00300E  EF0B  F018         	goto	u3970
  6997  003012                     u3971:
  6998  003012  EF14  F018         	goto	l3490
  6999  003016                     u3970:
  7000  003016  6C1A               	negf	___flge@ff1^0,c
  7001  003018  1E1B               	comf	(___flge@ff1+1)^0,f,c
  7002  00301A  B0D8               	btfsc	status,0,c
  7003  00301C  2A1B               	incf	(___flge@ff1+1)^0,f,c
  7004  00301E  1E1C               	comf	(___flge@ff1+2)^0,f,c
  7005  003020  B0D8               	btfsc	status,0,c
  7006  003022  2A1C               	incf	(___flge@ff1+2)^0,f,c
  7007  003024  0E80               	movlw	128
  7008  003026  561D               	subfwb	(___flge@ff1+3)^0,f,c
  7009  003028                     l3490:
  7010  003028  AE21               	btfss	(___flge@ff2+3)^0,7,c
  7011  00302A  EF19  F018         	goto	u3981
  7012  00302E  EF1B  F018         	goto	u3980
  7013  003032                     u3981:
  7014  003032  EF24  F018         	goto	l600
  7015  003036                     u3980:
  7016  003036  6C1E               	negf	___flge@ff2^0,c
  7017  003038  1E1F               	comf	(___flge@ff2+1)^0,f,c
  7018  00303A  B0D8               	btfsc	status,0,c
  7019  00303C  2A1F               	incf	(___flge@ff2+1)^0,f,c
  7020  00303E  1E20               	comf	(___flge@ff2+2)^0,f,c
  7021  003040  B0D8               	btfsc	status,0,c
  7022  003042  2A20               	incf	(___flge@ff2+2)^0,f,c
  7023  003044  0E80               	movlw	128
  7024  003046  5621               	subfwb	(___flge@ff2+3)^0,f,c
  7025  003048                     l600:
  7026  003048  0E00               	movlw	0
  7027  00304A  1A1A               	xorwf	___flge@ff1^0,f,c
  7028  00304C  0E00               	movlw	0
  7029  00304E  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  7030  003050  0E00               	movlw	0
  7031  003052  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  7032  003054  0E80               	movlw	128
  7033  003056  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  7034  003058  0E00               	movlw	0
  7035  00305A  1A1E               	xorwf	___flge@ff2^0,f,c
  7036  00305C  0E00               	movlw	0
  7037  00305E  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  7038  003060  0E00               	movlw	0
  7039  003062  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  7040  003064  0E80               	movlw	128
  7041  003066  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  7042  003068  501E               	movf	___flge@ff2^0,w,c
  7043  00306A  5C1A               	subwf	___flge@ff1^0,w,c
  7044  00306C  501F               	movf	(___flge@ff2+1)^0,w,c
  7045  00306E  581B               	subwfb	(___flge@ff1+1)^0,w,c
  7046  003070  5020               	movf	(___flge@ff2+2)^0,w,c
  7047  003072  581C               	subwfb	(___flge@ff1+2)^0,w,c
  7048  003074  5021               	movf	(___flge@ff2+3)^0,w,c
  7049  003076  581D               	subwfb	(___flge@ff1+3)^0,w,c
  7050  003078  B0D8               	btfsc	status,0,c
  7051  00307A  EF41  F018         	goto	u3991
  7052  00307E  EF43  F018         	goto	u3990
  7053  003082                     u3991:
  7054  003082  EF46  F018         	goto	l3496
  7055  003086                     u3990:
  7056  003086  90D8               	bcf	status,0,c
  7057  003088  EF47  F018         	goto	l605
  7058  00308C                     l3496:
  7059  00308C  80D8               	bsf	status,0,c
  7060  00308E                     l605:
  7061  00308E  0012               	return		;funcret
  7062  003090                     __end_of___flge:
  7063                           	opt callstack 0
  7064                           
  7065 ;; *************** function ___fleq *****************
  7066 ;; Defined at:
  7067 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  ff1             4    0[COMRAM] unsigned char 
  7070 ;;  ff2             4    4[COMRAM] unsigned char 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;		None
  7073 ;; Return value:  Size  Location     Type
  7074 ;;		None               void
  7075 ;; Registers used:
  7076 ;;		wreg, status,2, status,0
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7082 ;;      Params:         8       0       0       0       0       0       0       0       0
  7083 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7084 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7085 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7086 ;;Total ram usage:       12 bytes
  7087 ;; Hardware stack levels used:    1
  7088 ;; Hardware stack levels required when called:    1
  7089 ;; This function calls:
  7090 ;;		Nothing
  7091 ;; This function is called by:
  7092 ;;		_efgtoa
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096                           	psect	text26
  7097  00349E                     __ptext26:
  7098                           	opt callstack 0
  7099  00349E                     ___fleq:
  7100                           	opt callstack 23
  7101  00349E  0E00               	movlw	0
  7102  0034A0  1401               	andwf	___fleq@ff1^0,w,c
  7103  0034A2  6E09               	movwf	??___fleq^0,c
  7104  0034A4  0E00               	movlw	0
  7105  0034A6  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7106  0034A8  6E0A               	movwf	(??___fleq+1)^0,c
  7107  0034AA  0E80               	movlw	128
  7108  0034AC  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7109  0034AE  6E0B               	movwf	(??___fleq+2)^0,c
  7110  0034B0  0E7F               	movlw	127
  7111  0034B2  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7112  0034B4  6E0C               	movwf	(??___fleq+3)^0,c
  7113  0034B6  5009               	movf	??___fleq^0,w,c
  7114  0034B8  100A               	iorwf	(??___fleq+1)^0,w,c
  7115  0034BA  100B               	iorwf	(??___fleq+2)^0,w,c
  7116  0034BC  100C               	iorwf	(??___fleq+3)^0,w,c
  7117  0034BE  A4D8               	btfss	status,2,c
  7118  0034C0  EF64  F01A         	goto	u3921
  7119  0034C4  EF66  F01A         	goto	u3920
  7120  0034C8                     u3921:
  7121  0034C8  EF6E  F01A         	goto	l3466
  7122  0034CC                     u3920:
  7123  0034CC  0E00               	movlw	0
  7124  0034CE  6E01               	movwf	___fleq@ff1^0,c
  7125  0034D0  0E00               	movlw	0
  7126  0034D2  6E02               	movwf	(___fleq@ff1+1)^0,c
  7127  0034D4  0E00               	movlw	0
  7128  0034D6  6E03               	movwf	(___fleq@ff1+2)^0,c
  7129  0034D8  0E00               	movlw	0
  7130  0034DA  6E04               	movwf	(___fleq@ff1+3)^0,c
  7131  0034DC                     l3466:
  7132  0034DC  0E00               	movlw	0
  7133  0034DE  1405               	andwf	___fleq@ff2^0,w,c
  7134  0034E0  6E09               	movwf	??___fleq^0,c
  7135  0034E2  0E00               	movlw	0
  7136  0034E4  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7137  0034E6  6E0A               	movwf	(??___fleq+1)^0,c
  7138  0034E8  0E80               	movlw	128
  7139  0034EA  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7140  0034EC  6E0B               	movwf	(??___fleq+2)^0,c
  7141  0034EE  0E7F               	movlw	127
  7142  0034F0  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7143  0034F2  6E0C               	movwf	(??___fleq+3)^0,c
  7144  0034F4  5009               	movf	??___fleq^0,w,c
  7145  0034F6  100A               	iorwf	(??___fleq+1)^0,w,c
  7146  0034F8  100B               	iorwf	(??___fleq+2)^0,w,c
  7147  0034FA  100C               	iorwf	(??___fleq+3)^0,w,c
  7148  0034FC  A4D8               	btfss	status,2,c
  7149  0034FE  EF83  F01A         	goto	u3931
  7150  003502  EF85  F01A         	goto	u3930
  7151  003506                     u3931:
  7152  003506  EF8D  F01A         	goto	l3470
  7153  00350A                     u3930:
  7154  00350A  0E00               	movlw	0
  7155  00350C  6E05               	movwf	___fleq@ff2^0,c
  7156  00350E  0E00               	movlw	0
  7157  003510  6E06               	movwf	(___fleq@ff2+1)^0,c
  7158  003512  0E00               	movlw	0
  7159  003514  6E07               	movwf	(___fleq@ff2+2)^0,c
  7160  003516  0E00               	movlw	0
  7161  003518  6E08               	movwf	(___fleq@ff2+3)^0,c
  7162  00351A                     l3470:
  7163  00351A  5005               	movf	___fleq@ff2^0,w,c
  7164  00351C  1801               	xorwf	___fleq@ff1^0,w,c
  7165  00351E  E10F               	bnz	u3940
  7166  003520  5006               	movf	(___fleq@ff2+1)^0,w,c
  7167  003522  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7168  003524  E10C               	bnz	u3940
  7169  003526  5007               	movf	(___fleq@ff2+2)^0,w,c
  7170  003528  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7171  00352A  E109               	bnz	u3940
  7172  00352C  5008               	movf	(___fleq@ff2+3)^0,w,c
  7173  00352E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7174  003530  B4D8               	btfsc	status,2,c
  7175  003532  EF9D  F01A         	goto	u3941
  7176  003536  EF9F  F01A         	goto	u3940
  7177  00353A                     u3941:
  7178  00353A  EFA2  F01A         	goto	l3474
  7179  00353E                     u3940:
  7180  00353E  90D8               	bcf	status,0,c
  7181  003540  EFA3  F01A         	goto	l594
  7182  003544                     l3474:
  7183  003544  80D8               	bsf	status,0,c
  7184  003546                     l594:
  7185  003546  0012               	return		;funcret
  7186  003548                     __end_of___fleq:
  7187                           	opt callstack 0
  7188                           
  7189 ;; *************** function ___fldiv *****************
  7190 ;; Defined at:
  7191 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  7192 ;; Parameters:    Size  Location     Type
  7193 ;;  b               4   14[COMRAM] unsigned char 
  7194 ;;  a               4   18[COMRAM] unsigned char 
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;  grs             4   33[COMRAM] unsigned long 
  7197 ;;  rem             4   26[COMRAM] unsigned long 
  7198 ;;  new_exp         2   31[COMRAM] short 
  7199 ;;  aexp            1   38[COMRAM] unsigned char 
  7200 ;;  bexp            1   37[COMRAM] unsigned char 
  7201 ;;  sign            1   30[COMRAM] unsigned char 
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  4   14[COMRAM] unsigned char 
  7204 ;; Registers used:
  7205 ;;		wreg, status,2, status,0
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7211 ;;      Params:         8       0       0       0       0       0       0       0       0
  7212 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7213 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7214 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7215 ;;Total ram usage:       25 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; Hardware stack levels required when called:    1
  7218 ;; This function calls:
  7219 ;;		Nothing
  7220 ;; This function is called by:
  7221 ;;		_stateMachine
  7222 ;;		_efgtoa
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text27
  7227  0021BE                     __ptext27:
  7228                           	opt callstack 0
  7229  0021BE                     ___fldiv:
  7230                           	opt callstack 23
  7231  0021BE  5012               	movf	(___fldiv@b+3)^0,w,c
  7232  0021C0  0B80               	andlw	128
  7233  0021C2  6E1F               	movwf	___fldiv@sign^0,c
  7234  0021C4  5012               	movf	(___fldiv@b+3)^0,w,c
  7235  0021C6  2412               	addwf	(___fldiv@b+3)^0,w,c
  7236  0021C8  6E26               	movwf	___fldiv@bexp^0,c
  7237  0021CA  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7238  0021CC  EFEA  F010         	goto	u3381
  7239  0021D0  EFEC  F010         	goto	u3380
  7240  0021D4                     u3381:
  7241  0021D4  EFED  F010         	goto	l3114
  7242  0021D8                     u3380:
  7243  0021D8  8026               	bsf	___fldiv@bexp^0,0,c
  7244  0021DA                     l3114:
  7245  0021DA  5026               	movf	___fldiv@bexp^0,w,c
  7246  0021DC  B4D8               	btfsc	status,2,c
  7247  0021DE  EFF3  F010         	goto	u3391
  7248  0021E2  EFF5  F010         	goto	u3390
  7249  0021E6                     u3391:
  7250  0021E6  EF0A  F011         	goto	l3124
  7251  0021EA                     u3390:
  7252  0021EA  2826               	incf	___fldiv@bexp^0,w,c
  7253  0021EC  A4D8               	btfss	status,2,c
  7254  0021EE  EFFB  F010         	goto	u3401
  7255  0021F2  EFFD  F010         	goto	u3400
  7256  0021F6                     u3401:
  7257  0021F6  EF05  F011         	goto	l3120
  7258  0021FA                     u3400:
  7259  0021FA  0E00               	movlw	0
  7260  0021FC  6E0F               	movwf	___fldiv@b^0,c
  7261  0021FE  0E00               	movlw	0
  7262  002200  6E10               	movwf	(___fldiv@b+1)^0,c
  7263  002202  0E00               	movlw	0
  7264  002204  6E11               	movwf	(___fldiv@b+2)^0,c
  7265  002206  0E00               	movlw	0
  7266  002208  6E12               	movwf	(___fldiv@b+3)^0,c
  7267  00220A                     l3120:
  7268  00220A  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7269  00220C  0E00               	movlw	0
  7270  00220E  6E12               	movwf	(___fldiv@b+3)^0,c
  7271  002210  EF12  F011         	goto	l3126
  7272  002214                     l3124:
  7273  002214  0E00               	movlw	0
  7274  002216  6E0F               	movwf	___fldiv@b^0,c
  7275  002218  0E00               	movlw	0
  7276  00221A  6E10               	movwf	(___fldiv@b+1)^0,c
  7277  00221C  0E00               	movlw	0
  7278  00221E  6E11               	movwf	(___fldiv@b+2)^0,c
  7279  002220  0E00               	movlw	0
  7280  002222  6E12               	movwf	(___fldiv@b+3)^0,c
  7281  002224                     l3126:
  7282  002224  5016               	movf	(___fldiv@a+3)^0,w,c
  7283  002226  0B80               	andlw	128
  7284  002228  1A1F               	xorwf	___fldiv@sign^0,f,c
  7285  00222A  5016               	movf	(___fldiv@a+3)^0,w,c
  7286  00222C  2416               	addwf	(___fldiv@a+3)^0,w,c
  7287  00222E  6E27               	movwf	___fldiv@aexp^0,c
  7288  002230  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7289  002232  EF1D  F011         	goto	u3411
  7290  002236  EF1F  F011         	goto	u3410
  7291  00223A                     u3411:
  7292  00223A  EF20  F011         	goto	l3134
  7293  00223E                     u3410:
  7294  00223E  8027               	bsf	___fldiv@aexp^0,0,c
  7295  002240                     l3134:
  7296  002240  5027               	movf	___fldiv@aexp^0,w,c
  7297  002242  B4D8               	btfsc	status,2,c
  7298  002244  EF26  F011         	goto	u3421
  7299  002248  EF28  F011         	goto	u3420
  7300  00224C                     u3421:
  7301  00224C  EF3D  F011         	goto	l3144
  7302  002250                     u3420:
  7303  002250  2827               	incf	___fldiv@aexp^0,w,c
  7304  002252  A4D8               	btfss	status,2,c
  7305  002254  EF2E  F011         	goto	u3431
  7306  002258  EF30  F011         	goto	u3430
  7307  00225C                     u3431:
  7308  00225C  EF38  F011         	goto	l3140
  7309  002260                     u3430:
  7310  002260  0E00               	movlw	0
  7311  002262  6E13               	movwf	___fldiv@a^0,c
  7312  002264  0E00               	movlw	0
  7313  002266  6E14               	movwf	(___fldiv@a+1)^0,c
  7314  002268  0E00               	movlw	0
  7315  00226A  6E15               	movwf	(___fldiv@a+2)^0,c
  7316  00226C  0E00               	movlw	0
  7317  00226E  6E16               	movwf	(___fldiv@a+3)^0,c
  7318  002270                     l3140:
  7319  002270  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7320  002272  0E00               	movlw	0
  7321  002274  6E16               	movwf	(___fldiv@a+3)^0,c
  7322  002276  EF45  F011         	goto	l3146
  7323  00227A                     l3144:
  7324  00227A  0E00               	movlw	0
  7325  00227C  6E13               	movwf	___fldiv@a^0,c
  7326  00227E  0E00               	movlw	0
  7327  002280  6E14               	movwf	(___fldiv@a+1)^0,c
  7328  002282  0E00               	movlw	0
  7329  002284  6E15               	movwf	(___fldiv@a+2)^0,c
  7330  002286  0E00               	movlw	0
  7331  002288  6E16               	movwf	(___fldiv@a+3)^0,c
  7332  00228A                     l3146:
  7333  00228A  5013               	movf	___fldiv@a^0,w,c
  7334  00228C  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7335  00228E  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7336  002290  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7337  002292  A4D8               	btfss	status,2,c
  7338  002294  EF4E  F011         	goto	u3441
  7339  002298  EF50  F011         	goto	u3440
  7340  00229C                     u3441:
  7341  00229C  EF68  F011         	goto	l3158
  7342  0022A0                     u3440:
  7343  0022A0  0E00               	movlw	0
  7344  0022A2  6E0F               	movwf	___fldiv@b^0,c
  7345  0022A4  0E00               	movlw	0
  7346  0022A6  6E10               	movwf	(___fldiv@b+1)^0,c
  7347  0022A8  0E00               	movlw	0
  7348  0022AA  6E11               	movwf	(___fldiv@b+2)^0,c
  7349  0022AC  0E00               	movlw	0
  7350  0022AE  6E12               	movwf	(___fldiv@b+3)^0,c
  7351  0022B0  0E80               	movlw	128
  7352  0022B2  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7353  0022B4  0E7F               	movlw	127
  7354  0022B6  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7355  0022B8                     l3152:
  7356  0022B8  501F               	movf	___fldiv@sign^0,w,c
  7357  0022BA  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7358  0022BC  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7359  0022C0  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7360  0022C4  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7361  0022C8  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7362  0022CC  EFAB  F012         	goto	l917
  7363  0022D0                     l3158:
  7364  0022D0  5026               	movf	___fldiv@bexp^0,w,c
  7365  0022D2  A4D8               	btfss	status,2,c
  7366  0022D4  EF6E  F011         	goto	u3451
  7367  0022D8  EF70  F011         	goto	u3450
  7368  0022DC                     u3451:
  7369  0022DC  EF7A  F011         	goto	l3166
  7370  0022E0                     u3450:
  7371  0022E0  0E00               	movlw	0
  7372  0022E2  6E0F               	movwf	?___fldiv^0,c
  7373  0022E4  0E00               	movlw	0
  7374  0022E6  6E10               	movwf	(?___fldiv+1)^0,c
  7375  0022E8  0E00               	movlw	0
  7376  0022EA  6E11               	movwf	(?___fldiv+2)^0,c
  7377  0022EC  0E00               	movlw	0
  7378  0022EE  6E12               	movwf	(?___fldiv+3)^0,c
  7379  0022F0  EFAB  F012         	goto	l917
  7380  0022F4                     l3166:
  7381  0022F4  5027               	movf	___fldiv@aexp^0,w,c
  7382  0022F6  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7383  0022FA  6A18               	clrf	(??___fldiv+1)^0,c
  7384  0022FC  5E17               	subwf	??___fldiv^0,f,c
  7385  0022FE  0E00               	movlw	0
  7386  002300  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7387  002302  0E7F               	movlw	127
  7388  002304  2417               	addwf	??___fldiv^0,w,c
  7389  002306  6E20               	movwf	___fldiv@new_exp^0,c
  7390  002308  0E00               	movlw	0
  7391  00230A  2018               	addwfc	(??___fldiv+1)^0,w,c
  7392  00230C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7393  00230E  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7394  002312  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7395  002316  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7396  00231A  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7397  00231E  0E00               	movlw	0
  7398  002320  6E0F               	movwf	___fldiv@b^0,c
  7399  002322  0E00               	movlw	0
  7400  002324  6E10               	movwf	(___fldiv@b+1)^0,c
  7401  002326  0E00               	movlw	0
  7402  002328  6E11               	movwf	(___fldiv@b+2)^0,c
  7403  00232A  0E00               	movlw	0
  7404  00232C  6E12               	movwf	(___fldiv@b+3)^0,c
  7405  00232E  0E00               	movlw	0
  7406  002330  6E22               	movwf	___fldiv@grs^0,c
  7407  002332  0E00               	movlw	0
  7408  002334  6E23               	movwf	(___fldiv@grs+1)^0,c
  7409  002336  0E00               	movlw	0
  7410  002338  6E24               	movwf	(___fldiv@grs+2)^0,c
  7411  00233A  0E00               	movlw	0
  7412  00233C  6E25               	movwf	(___fldiv@grs+3)^0,c
  7413  00233E  0E00               	movlw	0
  7414  002340  6E27               	movwf	___fldiv@aexp^0,c
  7415  002342  EFDB  F011         	goto	l919
  7416  002346                     l3176:
  7417  002346  5027               	movf	___fldiv@aexp^0,w,c
  7418  002348  B4D8               	btfsc	status,2,c
  7419  00234A  EFA9  F011         	goto	u3461
  7420  00234E  EFAB  F011         	goto	u3460
  7421  002352                     u3461:
  7422  002352  EFC2  F011         	goto	l3184
  7423  002356                     u3460:
  7424  002356  90D8               	bcf	status,0,c
  7425  002358  361B               	rlcf	___fldiv@rem^0,f,c
  7426  00235A  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7427  00235C  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7428  00235E  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7429  002360  90D8               	bcf	status,0,c
  7430  002362  360F               	rlcf	___fldiv@b^0,f,c
  7431  002364  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7432  002366  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7433  002368  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7434  00236A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7435  00236C  EFBA  F011         	goto	u3471
  7436  002370  EFBC  F011         	goto	u3470
  7437  002374                     u3471:
  7438  002374  EFBD  F011         	goto	l922
  7439  002378                     u3470:
  7440  002378  800F               	bsf	___fldiv@b^0,0,c
  7441  00237A                     l922:
  7442  00237A  90D8               	bcf	status,0,c
  7443  00237C  3622               	rlcf	___fldiv@grs^0,f,c
  7444  00237E  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7445  002380  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7446  002382  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7447  002384                     l3184:
  7448  002384  5013               	movf	___fldiv@a^0,w,c
  7449  002386  5C1B               	subwf	___fldiv@rem^0,w,c
  7450  002388  5014               	movf	(___fldiv@a+1)^0,w,c
  7451  00238A  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7452  00238C  5015               	movf	(___fldiv@a+2)^0,w,c
  7453  00238E  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7454  002390  5016               	movf	(___fldiv@a+3)^0,w,c
  7455  002392  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7456  002394  A0D8               	btfss	status,0,c
  7457  002396  EFCF  F011         	goto	u3481
  7458  00239A  EFD1  F011         	goto	u3480
  7459  00239E                     u3481:
  7460  00239E  EFDA  F011         	goto	l3190
  7461  0023A2                     u3480:
  7462  0023A2  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7463  0023A4  5013               	movf	___fldiv@a^0,w,c
  7464  0023A6  5E1B               	subwf	___fldiv@rem^0,f,c
  7465  0023A8  5014               	movf	(___fldiv@a+1)^0,w,c
  7466  0023AA  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7467  0023AC  5015               	movf	(___fldiv@a+2)^0,w,c
  7468  0023AE  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7469  0023B0  5016               	movf	(___fldiv@a+3)^0,w,c
  7470  0023B2  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7471  0023B4                     l3190:
  7472  0023B4  2A27               	incf	___fldiv@aexp^0,f,c
  7473  0023B6                     l919:
  7474  0023B6  0E19               	movlw	25
  7475  0023B8  6427               	cpfsgt	___fldiv@aexp^0,c
  7476  0023BA  EFE1  F011         	goto	u3491
  7477  0023BE  EFE3  F011         	goto	u3490
  7478  0023C2                     u3491:
  7479  0023C2  EFA3  F011         	goto	l3176
  7480  0023C6                     u3490:
  7481  0023C6  501B               	movf	___fldiv@rem^0,w,c
  7482  0023C8  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7483  0023CA  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7484  0023CC  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7485  0023CE  B4D8               	btfsc	status,2,c
  7486  0023D0  EFEC  F011         	goto	u3501
  7487  0023D4  EFEE  F011         	goto	u3500
  7488  0023D8                     u3501:
  7489  0023D8  EF06  F012         	goto	l3202
  7490  0023DC                     u3500:
  7491  0023DC  8022               	bsf	___fldiv@grs^0,0,c
  7492  0023DE  EF06  F012         	goto	l3202
  7493  0023E2                     l3196:
  7494  0023E2  90D8               	bcf	status,0,c
  7495  0023E4  360F               	rlcf	___fldiv@b^0,f,c
  7496  0023E6  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7497  0023E8  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7498  0023EA  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7499  0023EC  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7500  0023EE  EFFB  F011         	goto	u3511
  7501  0023F2  EFFD  F011         	goto	u3510
  7502  0023F6                     u3511:
  7503  0023F6  EFFE  F011         	goto	l928
  7504  0023FA                     u3510:
  7505  0023FA  800F               	bsf	___fldiv@b^0,0,c
  7506  0023FC                     l928:
  7507  0023FC  90D8               	bcf	status,0,c
  7508  0023FE  3622               	rlcf	___fldiv@grs^0,f,c
  7509  002400  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7510  002402  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7511  002404  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7512  002406  0620               	decf	___fldiv@new_exp^0,f,c
  7513  002408  A0D8               	btfss	status,0,c
  7514  00240A  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7515  00240C                     l3202:
  7516  00240C  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7517  00240E  EF0B  F012         	goto	u3521
  7518  002412  EF0D  F012         	goto	u3520
  7519  002416                     u3521:
  7520  002416  EFF1  F011         	goto	l3196
  7521  00241A                     u3520:
  7522  00241A  0E00               	movlw	0
  7523  00241C  6E27               	movwf	___fldiv@aexp^0,c
  7524  00241E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7525  002420  EF14  F012         	goto	u3531
  7526  002424  EF16  F012         	goto	u3530
  7527  002428                     u3531:
  7528  002428  EF3A  F012         	goto	l930
  7529  00242C                     u3530:
  7530  00242C  0EFF               	movlw	255
  7531  00242E  1422               	andwf	___fldiv@grs^0,w,c
  7532  002430  6E17               	movwf	??___fldiv^0,c
  7533  002432  0EFF               	movlw	255
  7534  002434  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7535  002436  6E18               	movwf	(??___fldiv+1)^0,c
  7536  002438  0EFF               	movlw	255
  7537  00243A  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7538  00243C  6E19               	movwf	(??___fldiv+2)^0,c
  7539  00243E  0E7F               	movlw	127
  7540  002440  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7541  002442  6E1A               	movwf	(??___fldiv+3)^0,c
  7542  002444  5017               	movf	??___fldiv^0,w,c
  7543  002446  1018               	iorwf	(??___fldiv+1)^0,w,c
  7544  002448  1019               	iorwf	(??___fldiv+2)^0,w,c
  7545  00244A  101A               	iorwf	(??___fldiv+3)^0,w,c
  7546  00244C  B4D8               	btfsc	status,2,c
  7547  00244E  EF2B  F012         	goto	u3541
  7548  002452  EF2D  F012         	goto	u3540
  7549  002456                     u3541:
  7550  002456  EF31  F012         	goto	l931
  7551  00245A                     u3540:
  7552  00245A                     l3210:
  7553  00245A  0E01               	movlw	1
  7554  00245C  6E27               	movwf	___fldiv@aexp^0,c
  7555  00245E  EF3A  F012         	goto	l930
  7556  002462                     l931:
  7557  002462  A00F               	btfss	___fldiv@b^0,0,c
  7558  002464  EF36  F012         	goto	u3551
  7559  002468  EF38  F012         	goto	u3550
  7560  00246C                     u3551:
  7561  00246C  EF3A  F012         	goto	l930
  7562  002470                     u3550:
  7563  002470  EF2D  F012         	goto	l3210
  7564  002474                     l930:
  7565  002474  5027               	movf	___fldiv@aexp^0,w,c
  7566  002476  B4D8               	btfsc	status,2,c
  7567  002478  EF40  F012         	goto	u3561
  7568  00247C  EF42  F012         	goto	u3560
  7569  002480                     u3561:
  7570  002480  EF66  F012         	goto	l3222
  7571  002484                     u3560:
  7572  002484  0E01               	movlw	1
  7573  002486  260F               	addwf	___fldiv@b^0,f,c
  7574  002488  0E00               	movlw	0
  7575  00248A  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7576  00248C  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7577  00248E  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7578  002490  A012               	btfss	(___fldiv@b+3)^0,0,c
  7579  002492  EF4D  F012         	goto	u3571
  7580  002496  EF4F  F012         	goto	u3570
  7581  00249A                     u3571:
  7582  00249A  EF66  F012         	goto	l3222
  7583  00249E                     u3570:
  7584  00249E  C00F  F017         	movff	___fldiv@b,??___fldiv
  7585  0024A2  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7586  0024A6  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7587  0024AA  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7588  0024AE  341A               	rlcf	(??___fldiv+3)^0,w,c
  7589  0024B0  321A               	rrcf	(??___fldiv+3)^0,f,c
  7590  0024B2  3219               	rrcf	(??___fldiv+2)^0,f,c
  7591  0024B4  3218               	rrcf	(??___fldiv+1)^0,f,c
  7592  0024B6  3217               	rrcf	??___fldiv^0,f,c
  7593  0024B8  C017  F00F         	movff	??___fldiv,___fldiv@b
  7594  0024BC  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  7595  0024C0  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  7596  0024C4  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  7597  0024C8  4A20               	infsnz	___fldiv@new_exp^0,f,c
  7598  0024CA  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  7599  0024CC                     l3222:
  7600  0024CC  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7601  0024CE  EF71  F012         	goto	u3581
  7602  0024D2  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7603  0024D4  E108               	bnz	u3580
  7604  0024D6  2820               	incf	___fldiv@new_exp^0,w,c
  7605  0024D8  A0D8               	btfss	status,0,c
  7606  0024DA  EF71  F012         	goto	u3581
  7607  0024DE  EF73  F012         	goto	u3580
  7608  0024E2                     u3581:
  7609  0024E2  EF7E  F012         	goto	l3226
  7610  0024E6                     u3580:
  7611  0024E6  0E00               	movlw	0
  7612  0024E8  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7613  0024EA  6820               	setf	___fldiv@new_exp^0,c
  7614  0024EC  0E00               	movlw	0
  7615  0024EE  6E0F               	movwf	___fldiv@b^0,c
  7616  0024F0  0E00               	movlw	0
  7617  0024F2  6E10               	movwf	(___fldiv@b+1)^0,c
  7618  0024F4  0E00               	movlw	0
  7619  0024F6  6E11               	movwf	(___fldiv@b+2)^0,c
  7620  0024F8  0E00               	movlw	0
  7621  0024FA  6E12               	movwf	(___fldiv@b+3)^0,c
  7622  0024FC                     l3226:
  7623  0024FC  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7624  0024FE  EF8B  F012         	goto	u3590
  7625  002502  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7626  002504  E106               	bnz	u3591
  7627  002506  0420               	decf	___fldiv@new_exp^0,w,c
  7628  002508  B0D8               	btfsc	status,0,c
  7629  00250A  EF89  F012         	goto	u3591
  7630  00250E  EF8B  F012         	goto	u3590
  7631  002512                     u3591:
  7632  002512  EF99  F012         	goto	l3230
  7633  002516                     u3590:
  7634  002516  0E00               	movlw	0
  7635  002518  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7636  00251A  0E00               	movlw	0
  7637  00251C  6E20               	movwf	___fldiv@new_exp^0,c
  7638  00251E  0E00               	movlw	0
  7639  002520  6E0F               	movwf	___fldiv@b^0,c
  7640  002522  0E00               	movlw	0
  7641  002524  6E10               	movwf	(___fldiv@b+1)^0,c
  7642  002526  0E00               	movlw	0
  7643  002528  6E11               	movwf	(___fldiv@b+2)^0,c
  7644  00252A  0E00               	movlw	0
  7645  00252C  6E12               	movwf	(___fldiv@b+3)^0,c
  7646  00252E  0E00               	movlw	0
  7647  002530  6E1F               	movwf	___fldiv@sign^0,c
  7648  002532                     l3230:
  7649  002532  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  7650  002536  A026               	btfss	___fldiv@bexp^0,0,c
  7651  002538  EFA0  F012         	goto	u3601
  7652  00253C  EFA2  F012         	goto	u3600
  7653  002540                     u3601:
  7654  002540  EFA5  F012         	goto	l3236
  7655  002544                     u3600:
  7656  002544  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7657  002546  EFA6  F012         	goto	l3238
  7658  00254A                     l3236:
  7659  00254A  9E11               	bcf	(___fldiv@b+2)^0,7,c
  7660  00254C                     l3238:
  7661  00254C  90D8               	bcf	status,0,c
  7662  00254E  3026               	rrcf	___fldiv@bexp^0,w,c
  7663  002550  6E12               	movwf	(___fldiv@b+3)^0,c
  7664  002552  EF5C  F011         	goto	l3152
  7665  002556                     l917:
  7666  002556  0012               	return		;funcret
  7667  002558                     __end_of___fldiv:
  7668                           	opt callstack 0
  7669                           
  7670 ;; *************** function ___awmod *****************
  7671 ;; Defined at:
  7672 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  dividend        2    0[COMRAM] int 
  7675 ;;  divisor         2    2[COMRAM] int 
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;  sign            1    5[COMRAM] unsigned char 
  7678 ;;  counter         1    4[COMRAM] unsigned char 
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  2    0[COMRAM] int 
  7681 ;; Registers used:
  7682 ;;		wreg, status,2, status,0
  7683 ;; Tracked objects:
  7684 ;;		On entry : 0/0
  7685 ;;		On exit  : 0/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7688 ;;      Params:         4       0       0       0       0       0       0       0       0
  7689 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7691 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7692 ;;Total ram usage:        6 bytes
  7693 ;; Hardware stack levels used:    1
  7694 ;; Hardware stack levels required when called:    1
  7695 ;; This function calls:
  7696 ;;		Nothing
  7697 ;; This function is called by:
  7698 ;;		_efgtoa
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           	psect	text28
  7703  0033EE                     __ptext28:
  7704                           	opt callstack 0
  7705  0033EE                     ___awmod:
  7706                           	opt callstack 23
  7707  0033EE  0E00               	movlw	0
  7708  0033F0  6E06               	movwf	___awmod@sign^0,c
  7709  0033F2  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7710  0033F4  EF00  F01A         	goto	u3860
  7711  0033F8  EFFE  F019         	goto	u3861
  7712  0033FC                     u3861:
  7713  0033FC  EF06  F01A         	goto	l3434
  7714  003400                     u3860:
  7715  003400  6C01               	negf	___awmod@dividend^0,c
  7716  003402  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7717  003404  B0D8               	btfsc	status,0,c
  7718  003406  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7719  003408  0E01               	movlw	1
  7720  00340A  6E06               	movwf	___awmod@sign^0,c
  7721  00340C                     l3434:
  7722  00340C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7723  00340E  EF0D  F01A         	goto	u3870
  7724  003412  EF0B  F01A         	goto	u3871
  7725  003416                     u3871:
  7726  003416  EF11  F01A         	goto	l3438
  7727  00341A                     u3870:
  7728  00341A  6C03               	negf	___awmod@divisor^0,c
  7729  00341C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7730  00341E  B0D8               	btfsc	status,0,c
  7731  003420  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7732  003422                     l3438:
  7733  003422  5003               	movf	___awmod@divisor^0,w,c
  7734  003424  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7735  003426  B4D8               	btfsc	status,2,c
  7736  003428  EF18  F01A         	goto	u3881
  7737  00342C  EF1A  F01A         	goto	u3880
  7738  003430                     u3881:
  7739  003430  EF3E  F01A         	goto	l3454
  7740  003434                     u3880:
  7741  003434  0E01               	movlw	1
  7742  003436  6E05               	movwf	___awmod@counter^0,c
  7743  003438  EF22  F01A         	goto	l3444
  7744  00343C                     l3442:
  7745  00343C  90D8               	bcf	status,0,c
  7746  00343E  3603               	rlcf	___awmod@divisor^0,f,c
  7747  003440  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7748  003442  2A05               	incf	___awmod@counter^0,f,c
  7749  003444                     l3444:
  7750  003444  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7751  003446  EF27  F01A         	goto	u3891
  7752  00344A  EF29  F01A         	goto	u3890
  7753  00344E                     u3891:
  7754  00344E  EF1E  F01A         	goto	l3442
  7755  003452                     u3890:
  7756  003452                     l3446:
  7757  003452  5003               	movf	___awmod@divisor^0,w,c
  7758  003454  5C01               	subwf	___awmod@dividend^0,w,c
  7759  003456  5004               	movf	(___awmod@divisor+1)^0,w,c
  7760  003458  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7761  00345A  A0D8               	btfss	status,0,c
  7762  00345C  EF32  F01A         	goto	u3901
  7763  003460  EF34  F01A         	goto	u3900
  7764  003464                     u3901:
  7765  003464  EF38  F01A         	goto	l3450
  7766  003468                     u3900:
  7767  003468  5003               	movf	___awmod@divisor^0,w,c
  7768  00346A  5E01               	subwf	___awmod@dividend^0,f,c
  7769  00346C  5004               	movf	(___awmod@divisor+1)^0,w,c
  7770  00346E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7771  003470                     l3450:
  7772  003470  90D8               	bcf	status,0,c
  7773  003472  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7774  003474  3203               	rrcf	___awmod@divisor^0,f,c
  7775  003476  2E05               	decfsz	___awmod@counter^0,f,c
  7776  003478  EF29  F01A         	goto	l3446
  7777  00347C                     l3454:
  7778  00347C  5006               	movf	___awmod@sign^0,w,c
  7779  00347E  B4D8               	btfsc	status,2,c
  7780  003480  EF44  F01A         	goto	u3911
  7781  003484  EF46  F01A         	goto	u3910
  7782  003488                     u3911:
  7783  003488  EF4A  F01A         	goto	l3458
  7784  00348C                     u3910:
  7785  00348C  6C01               	negf	___awmod@dividend^0,c
  7786  00348E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7787  003490  B0D8               	btfsc	status,0,c
  7788  003492  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7789  003494                     l3458:
  7790  003494  C001  F001         	movff	___awmod@dividend,?___awmod
  7791  003498  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7792  00349C  0012               	return		;funcret
  7793  00349E                     __end_of___awmod:
  7794                           	opt callstack 0
  7795                           
  7796 ;; *************** function ___awdiv *****************
  7797 ;; Defined at:
  7798 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;  dividend        2    0[COMRAM] int 
  7801 ;;  divisor         2    2[COMRAM] int 
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;  quotient        2    6[COMRAM] int 
  7804 ;;  sign            1    5[COMRAM] unsigned char 
  7805 ;;  counter         1    4[COMRAM] unsigned char 
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  2    0[COMRAM] int 
  7808 ;; Registers used:
  7809 ;;		wreg, status,2, status,0
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7815 ;;      Params:         4       0       0       0       0       0       0       0       0
  7816 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7818 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7819 ;;Total ram usage:        8 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:    1
  7822 ;; This function calls:
  7823 ;;		Nothing
  7824 ;; This function is called by:
  7825 ;;		_efgtoa
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           	psect	text29
  7830  00332A                     __ptext29:
  7831                           	opt callstack 0
  7832  00332A                     ___awdiv:
  7833                           	opt callstack 23
  7834  00332A  0E00               	movlw	0
  7835  00332C  6E06               	movwf	___awdiv@sign^0,c
  7836  00332E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7837  003330  EF9E  F019         	goto	u3800
  7838  003334  EF9C  F019         	goto	u3801
  7839  003338                     u3801:
  7840  003338  EFA4  F019         	goto	l3390
  7841  00333C                     u3800:
  7842  00333C  6C03               	negf	___awdiv@divisor^0,c
  7843  00333E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7844  003340  B0D8               	btfsc	status,0,c
  7845  003342  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7846  003344  0E01               	movlw	1
  7847  003346  6E06               	movwf	___awdiv@sign^0,c
  7848  003348                     l3390:
  7849  003348  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7850  00334A  EFAB  F019         	goto	u3810
  7851  00334E  EFA9  F019         	goto	u3811
  7852  003352                     u3811:
  7853  003352  EFB1  F019         	goto	l3396
  7854  003356                     u3810:
  7855  003356  6C01               	negf	___awdiv@dividend^0,c
  7856  003358  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7857  00335A  B0D8               	btfsc	status,0,c
  7858  00335C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7859  00335E  0E01               	movlw	1
  7860  003360  1A06               	xorwf	___awdiv@sign^0,f,c
  7861  003362                     l3396:
  7862  003362  0E00               	movlw	0
  7863  003364  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7864  003366  0E00               	movlw	0
  7865  003368  6E07               	movwf	___awdiv@quotient^0,c
  7866  00336A  5003               	movf	___awdiv@divisor^0,w,c
  7867  00336C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7868  00336E  B4D8               	btfsc	status,2,c
  7869  003370  EFBC  F019         	goto	u3821
  7870  003374  EFBE  F019         	goto	u3820
  7871  003378                     u3821:
  7872  003378  EFE6  F019         	goto	l3418
  7873  00337C                     u3820:
  7874  00337C  0E01               	movlw	1
  7875  00337E  6E05               	movwf	___awdiv@counter^0,c
  7876  003380  EFC6  F019         	goto	l3404
  7877  003384                     l3402:
  7878  003384  90D8               	bcf	status,0,c
  7879  003386  3603               	rlcf	___awdiv@divisor^0,f,c
  7880  003388  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7881  00338A  2A05               	incf	___awdiv@counter^0,f,c
  7882  00338C                     l3404:
  7883  00338C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7884  00338E  EFCB  F019         	goto	u3831
  7885  003392  EFCD  F019         	goto	u3830
  7886  003396                     u3831:
  7887  003396  EFC2  F019         	goto	l3402
  7888  00339A                     u3830:
  7889  00339A                     l3406:
  7890  00339A  90D8               	bcf	status,0,c
  7891  00339C  3607               	rlcf	___awdiv@quotient^0,f,c
  7892  00339E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7893  0033A0  5003               	movf	___awdiv@divisor^0,w,c
  7894  0033A2  5C01               	subwf	___awdiv@dividend^0,w,c
  7895  0033A4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7896  0033A6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7897  0033A8  A0D8               	btfss	status,0,c
  7898  0033AA  EFD9  F019         	goto	u3841
  7899  0033AE  EFDB  F019         	goto	u3840
  7900  0033B2                     u3841:
  7901  0033B2  EFE0  F019         	goto	l3414
  7902  0033B6                     u3840:
  7903  0033B6  5003               	movf	___awdiv@divisor^0,w,c
  7904  0033B8  5E01               	subwf	___awdiv@dividend^0,f,c
  7905  0033BA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7906  0033BC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7907  0033BE  8007               	bsf	___awdiv@quotient^0,0,c
  7908  0033C0                     l3414:
  7909  0033C0  90D8               	bcf	status,0,c
  7910  0033C2  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7911  0033C4  3203               	rrcf	___awdiv@divisor^0,f,c
  7912  0033C6  2E05               	decfsz	___awdiv@counter^0,f,c
  7913  0033C8  EFCD  F019         	goto	l3406
  7914  0033CC                     l3418:
  7915  0033CC  5006               	movf	___awdiv@sign^0,w,c
  7916  0033CE  B4D8               	btfsc	status,2,c
  7917  0033D0  EFEC  F019         	goto	u3851
  7918  0033D4  EFEE  F019         	goto	u3850
  7919  0033D8                     u3851:
  7920  0033D8  EFF2  F019         	goto	l3422
  7921  0033DC                     u3850:
  7922  0033DC  6C07               	negf	___awdiv@quotient^0,c
  7923  0033DE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7924  0033E0  B0D8               	btfsc	status,0,c
  7925  0033E2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7926  0033E4                     l3422:
  7927  0033E4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7928  0033E8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7929  0033EC  0012               	return		;funcret
  7930  0033EE                     __end_of___awdiv:
  7931                           	opt callstack 0
  7932                           
  7933 ;; *************** function _atoi *****************
  7934 ;; Defined at:
  7935 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7938 ;;		 -> STR_10(11), STR_9(8), STR_8(8), STR_7(8), 
  7939 ;;		 -> STR_6(11), STR_5(8), STR_4(8), STR_3(11), 
  7940 ;;		 -> STR_2(11), STR_1(11), 
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;  n               2   20[COMRAM] int 
  7943 ;;  neg             2   13[COMRAM] int 
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  2    7[COMRAM] int 
  7946 ;; Registers used:
  7947 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7953 ;;      Params:         2       0       0       0       0       0       0       0       0
  7954 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7955 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7956 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7957 ;;Total ram usage:       15 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; Hardware stack levels required when called:    2
  7960 ;; This function calls:
  7961 ;;		___wmul
  7962 ;;		_isdigit
  7963 ;;		_isspace
  7964 ;; This function is called by:
  7965 ;;		_vfpfcnvrt
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           	psect	text30
  7970  002BA6                     __ptext30:
  7971                           	opt callstack 0
  7972  002BA6                     _atoi:
  7973                           	opt callstack 23
  7974  002BA6  0E00               	movlw	0
  7975  002BA8  6E16               	movwf	(atoi@n+1)^0,c
  7976  002BAA  0E00               	movlw	0
  7977  002BAC  6E15               	movwf	atoi@n^0,c
  7978  002BAE  0E00               	movlw	0
  7979  002BB0  6E0F               	movwf	(atoi@neg+1)^0,c
  7980  002BB2  0E00               	movlw	0
  7981  002BB4  6E0E               	movwf	atoi@neg^0,c
  7982  002BB6  EFDF  F015         	goto	l3866
  7983  002BBA                     l3864:
  7984  002BBA  4A08               	infsnz	atoi@s^0,f,c
  7985  002BBC  2A09               	incf	(atoi@s+1)^0,f,c
  7986  002BBE                     l3866:
  7987  002BBE  0E01               	movlw	1
  7988  002BC0  6E14               	movwf	_atoi$1310^0,c
  7989  002BC2  C008  FFF6         	movff	atoi@s,tblptrl
  7990  002BC6  C009  FFF7         	movff	atoi@s+1,tblptrh
  7991  002BCA                     	if	0	;tblptru may be non-zero
  7992  002BCA                     	endif
  7993  002BCA                     	if	0	;tblptru may be non-zero
  7994  002BCA                     	endif
  7995  002BCA  0008               	tblrd		*
  7996  002BCC  50F5               	movf	tablat,w,c
  7997  002BCE  0A20               	xorlw	32
  7998  002BD0  B4D8               	btfsc	status,2,c
  7999  002BD2  EFED  F015         	goto	u4621
  8000  002BD6  EFEF  F015         	goto	u4620
  8001  002BDA                     u4621:
  8002  002BDA  EF0C  F016         	goto	l3874
  8003  002BDE                     u4620:
  8004  002BDE  0EF7               	movlw	247
  8005  002BE0  6E0A               	movwf	??_atoi^0,c
  8006  002BE2  0EFF               	movlw	255
  8007  002BE4  6E0B               	movwf	(??_atoi+1)^0,c
  8008  002BE6  C008  FFF6         	movff	atoi@s,tblptrl
  8009  002BEA  C009  FFF7         	movff	atoi@s+1,tblptrh
  8010  002BEE                     	if	0	;tblptru may be non-zero
  8011  002BEE                     	endif
  8012  002BEE                     	if	0	;tblptru may be non-zero
  8013  002BEE                     	endif
  8014  002BEE  0008               	tblrd		*
  8015  002BF0  50F5               	movf	tablat,w,c
  8016  002BF2  6E0C               	movwf	(??_atoi+2)^0,c
  8017  002BF4  6A0D               	clrf	(??_atoi+3)^0,c
  8018  002BF6  500A               	movf	??_atoi^0,w,c
  8019  002BF8  260C               	addwf	(??_atoi+2)^0,f,c
  8020  002BFA  500B               	movf	(??_atoi+1)^0,w,c
  8021  002BFC  220D               	addwfc	(??_atoi+3)^0,f,c
  8022  002BFE  500D               	movf	(??_atoi+3)^0,w,c
  8023  002C00  E109               	bnz	u4630
  8024  002C02  0E05               	movlw	5
  8025  002C04  5C0C               	subwf	(??_atoi+2)^0,w,c
  8026  002C06  A0D8               	btfss	status,0,c
  8027  002C08  EF08  F016         	goto	u4631
  8028  002C0C  EF0A  F016         	goto	u4630
  8029  002C10                     u4631:
  8030  002C10  EF0C  F016         	goto	l3874
  8031  002C14                     u4630:
  8032  002C14  0E00               	movlw	0
  8033  002C16  6E14               	movwf	_atoi$1310^0,c
  8034  002C18                     l3874:
  8035  002C18  C014  F010         	movff	_atoi$1310,_atoi$1309
  8036  002C1C  6A11               	clrf	(_atoi$1309+1)^0,c
  8037  002C1E  5010               	movf	_atoi$1309^0,w,c
  8038  002C20  1011               	iorwf	(_atoi$1309+1)^0,w,c
  8039  002C22  A4D8               	btfss	status,2,c
  8040  002C24  EF16  F016         	goto	u4641
  8041  002C28  EF18  F016         	goto	u4640
  8042  002C2C                     u4641:
  8043  002C2C  EFDD  F015         	goto	l3864
  8044  002C30                     u4640:
  8045  002C30  EF22  F016         	goto	l3884
  8046  002C34                     l3880:
  8047  002C34  0E00               	movlw	0
  8048  002C36  6E0F               	movwf	(atoi@neg+1)^0,c
  8049  002C38  0E01               	movlw	1
  8050  002C3A  6E0E               	movwf	atoi@neg^0,c
  8051  002C3C                     l3882:
  8052  002C3C  4A08               	infsnz	atoi@s^0,f,c
  8053  002C3E  2A09               	incf	(atoi@s+1)^0,f,c
  8054  002C40  EF57  F016         	goto	l3890
  8055  002C44                     l3884:
  8056  002C44  C008  FFF6         	movff	atoi@s,tblptrl
  8057  002C48  C009  FFF7         	movff	atoi@s+1,tblptrh
  8058  002C4C                     	if	0	;tblptru may be non-zero
  8059  002C4C                     	endif
  8060  002C4C                     	if	0	;tblptru may be non-zero
  8061  002C4C                     	endif
  8062  002C4C  0008               	tblrd		*
  8063  002C4E  50F5               	movf	tablat,w,c
  8064  002C50  6E0A               	movwf	??_atoi^0,c
  8065  002C52  6A0B               	clrf	(??_atoi+1)^0,c
  8066                           
  8067                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8068                           ; Switch size 1, requested type "simple"
  8069                           ; Number of cases is 1, Range of values is 0 to 0
  8070                           ; switch strategies available:
  8071                           ; Name         Instructions Cycles
  8072                           ; simple_byte            4     3 (average)
  8073                           ;	Chosen strategy is simple_byte
  8074  002C54  500B               	movf	(??_atoi+1)^0,w,c
  8075  002C56  0A00               	xorlw	0	; case 0
  8076  002C58  B4D8               	btfsc	status,2,c
  8077  002C5A  EF31  F016         	goto	l4332
  8078  002C5E  EF57  F016         	goto	l3890
  8079  002C62                     l4332:
  8080                           
  8081                           ; Switch size 1, requested type "simple"
  8082                           ; Number of cases is 2, Range of values is 43 to 45
  8083                           ; switch strategies available:
  8084                           ; Name         Instructions Cycles
  8085                           ; simple_byte            7     4 (average)
  8086                           ;	Chosen strategy is simple_byte
  8087  002C62  500A               	movf	??_atoi^0,w,c
  8088  002C64  0A2B               	xorlw	43	; case 43
  8089  002C66  B4D8               	btfsc	status,2,c
  8090  002C68  EF1E  F016         	goto	l3882
  8091  002C6C  0A06               	xorlw	6	; case 45
  8092  002C6E  B4D8               	btfsc	status,2,c
  8093  002C70  EF1A  F016         	goto	l3880
  8094  002C74  EF57  F016         	goto	l3890
  8095  002C78                     l3886:
  8096  002C78  C015  F001         	movff	atoi@n,___wmul@multiplier
  8097  002C7C  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8098  002C80  0E00               	movlw	0
  8099  002C82  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8100  002C84  0E0A               	movlw	10
  8101  002C86  6E03               	movwf	___wmul@multiplicand^0,c
  8102  002C88  EC92  F01D         	call	___wmul	;wreg free
  8103  002C8C  C008  FFF6         	movff	atoi@s,tblptrl
  8104  002C90  C009  FFF7         	movff	atoi@s+1,tblptrh
  8105  002C94                     	if	0	;tblptru may be non-zero
  8106  002C94                     	endif
  8107  002C94                     	if	0	;tblptru may be non-zero
  8108  002C94                     	endif
  8109  002C94  0008               	tblrd		*
  8110  002C96  50F5               	movf	tablat,w,c
  8111  002C98  5E01               	subwf	?___wmul^0,f,c
  8112  002C9A  0E00               	movlw	0
  8113  002C9C  5A02               	subwfb	(?___wmul+1)^0,f,c
  8114  002C9E  0E30               	movlw	48
  8115  002CA0  2401               	addwf	?___wmul^0,w,c
  8116  002CA2  6E15               	movwf	atoi@n^0,c
  8117  002CA4  0E00               	movlw	0
  8118  002CA6  2002               	addwfc	(?___wmul+1)^0,w,c
  8119  002CA8  6E16               	movwf	(atoi@n+1)^0,c
  8120  002CAA  EF1E  F016         	goto	l3882
  8121  002CAE                     l3890:
  8122  002CAE  0ED0               	movlw	208
  8123  002CB0  6E0A               	movwf	??_atoi^0,c
  8124  002CB2  0EFF               	movlw	255
  8125  002CB4  6E0B               	movwf	(??_atoi+1)^0,c
  8126  002CB6  C008  FFF6         	movff	atoi@s,tblptrl
  8127  002CBA  C009  FFF7         	movff	atoi@s+1,tblptrh
  8128  002CBE                     	if	0	;tblptru may be non-zero
  8129  002CBE                     	endif
  8130  002CBE                     	if	0	;tblptru may be non-zero
  8131  002CBE                     	endif
  8132  002CBE  0008               	tblrd		*
  8133  002CC0  50F5               	movf	tablat,w,c
  8134  002CC2  6E0C               	movwf	(??_atoi+2)^0,c
  8135  002CC4  6A0D               	clrf	(??_atoi+3)^0,c
  8136  002CC6  500A               	movf	??_atoi^0,w,c
  8137  002CC8  260C               	addwf	(??_atoi+2)^0,f,c
  8138  002CCA  500B               	movf	(??_atoi+1)^0,w,c
  8139  002CCC  220D               	addwfc	(??_atoi+3)^0,f,c
  8140  002CCE  500D               	movf	(??_atoi+3)^0,w,c
  8141  002CD0  E10A               	bnz	u4650
  8142  002CD2  0E0A               	movlw	10
  8143  002CD4  5C0C               	subwf	(??_atoi+2)^0,w,c
  8144  002CD6  A0D8               	btfss	status,0,c
  8145  002CD8  EF70  F016         	goto	u4651
  8146  002CDC  EF73  F016         	goto	u4650
  8147  002CE0                     u4651:
  8148  002CE0  0E01               	movlw	1
  8149  002CE2  EF74  F016         	goto	u4660
  8150  002CE6                     u4650:
  8151  002CE6  0E00               	movlw	0
  8152  002CE8                     u4660:
  8153  002CE8  6E12               	movwf	_atoi$1311^0,c
  8154  002CEA  6A13               	clrf	(_atoi$1311+1)^0,c
  8155  002CEC  5012               	movf	_atoi$1311^0,w,c
  8156  002CEE  1013               	iorwf	(_atoi$1311+1)^0,w,c
  8157  002CF0  A4D8               	btfss	status,2,c
  8158  002CF2  EF7D  F016         	goto	u4671
  8159  002CF6  EF7F  F016         	goto	u4670
  8160  002CFA                     u4671:
  8161  002CFA  EF3C  F016         	goto	l3886
  8162  002CFE                     u4670:
  8163  002CFE  500E               	movf	atoi@neg^0,w,c
  8164  002D00  100F               	iorwf	(atoi@neg+1)^0,w,c
  8165  002D02  A4D8               	btfss	status,2,c
  8166  002D04  EF86  F016         	goto	u4681
  8167  002D08  EF88  F016         	goto	u4680
  8168  002D0C                     u4681:
  8169  002D0C  EF96  F016         	goto	l1045
  8170  002D10                     u4680:
  8171  002D10  C015  F00A         	movff	atoi@n,??_atoi
  8172  002D14  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8173  002D18  1E0A               	comf	??_atoi^0,f,c
  8174  002D1A  1E0B               	comf	(??_atoi+1)^0,f,c
  8175  002D1C  4A0A               	infsnz	??_atoi^0,f,c
  8176  002D1E  2A0B               	incf	(??_atoi+1)^0,f,c
  8177  002D20  C00A  F008         	movff	??_atoi,?_atoi
  8178  002D24  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8179  002D28  EF9A  F016         	goto	l1048
  8180  002D2C                     l1045:
  8181  002D2C  C015  F008         	movff	atoi@n,?_atoi
  8182  002D30  C016  F009         	movff	atoi@n+1,?_atoi+1
  8183  002D34                     l1048:
  8184  002D34  0012               	return		;funcret
  8185  002D36                     __end_of_atoi:
  8186                           	opt callstack 0
  8187                           
  8188 ;; *************** function _isspace *****************
  8189 ;; Defined at:
  8190 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;  c               2    0[COMRAM] int 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;		None
  8195 ;; Return value:  Size  Location     Type
  8196 ;;                  2    0[COMRAM] int 
  8197 ;; Registers used:
  8198 ;;		wreg, status,2, status,0
  8199 ;; Tracked objects:
  8200 ;;		On entry : 0/0
  8201 ;;		On exit  : 0/0
  8202 ;;		Unchanged: 0/0
  8203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8204 ;;      Params:         2       0       0       0       0       0       0       0       0
  8205 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8206 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8207 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8208 ;;Total ram usage:        7 bytes
  8209 ;; Hardware stack levels used:    1
  8210 ;; Hardware stack levels required when called:    1
  8211 ;; This function calls:
  8212 ;;		Nothing
  8213 ;; This function is called by:
  8214 ;;		_atoi
  8215 ;; This function uses a non-reentrant model
  8216 ;;
  8217                           
  8218                           	psect	text31
  8219  0038DA                     __ptext31:
  8220                           	opt callstack 0
  8221  0038DA                     _isspace:
  8222                           	opt callstack 23
  8223  0038DA  0E01               	movlw	1
  8224  0038DC  6E07               	movwf	_isspace$1340^0,c
  8225  0038DE  0E20               	movlw	32
  8226  0038E0  1801               	xorwf	isspace@c^0,w,c
  8227  0038E2  1002               	iorwf	(isspace@c+1)^0,w,c
  8228  0038E4  B4D8               	btfsc	status,2,c
  8229  0038E6  EF77  F01C         	goto	u4081
  8230  0038EA  EF79  F01C         	goto	u4080
  8231  0038EE                     u4081:
  8232  0038EE  EF92  F01C         	goto	l3560
  8233  0038F2                     u4080:
  8234  0038F2  0EF7               	movlw	247
  8235  0038F4  6E03               	movwf	??_isspace^0,c
  8236  0038F6  0EFF               	movlw	255
  8237  0038F8  6E04               	movwf	(??_isspace+1)^0,c
  8238  0038FA  C001  F005         	movff	isspace@c,??_isspace+2
  8239  0038FE  C002  F006         	movff	isspace@c+1,??_isspace+3
  8240  003902  5003               	movf	??_isspace^0,w,c
  8241  003904  2605               	addwf	(??_isspace+2)^0,f,c
  8242  003906  5004               	movf	(??_isspace+1)^0,w,c
  8243  003908  2206               	addwfc	(??_isspace+3)^0,f,c
  8244  00390A  5006               	movf	(??_isspace+3)^0,w,c
  8245  00390C  E109               	bnz	u4090
  8246  00390E  0E05               	movlw	5
  8247  003910  5C05               	subwf	(??_isspace+2)^0,w,c
  8248  003912  A0D8               	btfss	status,0,c
  8249  003914  EF8E  F01C         	goto	u4091
  8250  003918  EF90  F01C         	goto	u4090
  8251  00391C                     u4091:
  8252  00391C  EF92  F01C         	goto	l3560
  8253  003920                     u4090:
  8254  003920  0E00               	movlw	0
  8255  003922  6E07               	movwf	_isspace$1340^0,c
  8256  003924                     l3560:
  8257  003924  C007  F001         	movff	_isspace$1340,?_isspace
  8258  003928  6A02               	clrf	(?_isspace+1)^0,c
  8259  00392A  0012               	return		;funcret
  8260  00392C                     __end_of_isspace:
  8261                           	opt callstack 0
  8262                           
  8263 ;; *************** function _isdigit *****************
  8264 ;; Defined at:
  8265 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  c               2    0[COMRAM] int 
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  2    0[COMRAM] int 
  8272 ;; Registers used:
  8273 ;;		wreg, status,2, status,0
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8279 ;;      Params:         2       0       0       0       0       0       0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8281 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8282 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8283 ;;Total ram usage:        6 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:    1
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_vfpfcnvrt
  8290 ;;		_atoi
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           	psect	text32
  8295  003A68                     __ptext32:
  8296                           	opt callstack 0
  8297  003A68                     _isdigit:
  8298                           	opt callstack 24
  8299  003A68  0ED0               	movlw	208
  8300  003A6A  6E03               	movwf	??_isdigit^0,c
  8301  003A6C  0EFF               	movlw	255
  8302  003A6E  6E04               	movwf	(??_isdigit+1)^0,c
  8303  003A70  C001  F005         	movff	isdigit@c,??_isdigit+2
  8304  003A74  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8305  003A78  5003               	movf	??_isdigit^0,w,c
  8306  003A7A  2605               	addwf	(??_isdigit+2)^0,f,c
  8307  003A7C  5004               	movf	(??_isdigit+1)^0,w,c
  8308  003A7E  2206               	addwfc	(??_isdigit+3)^0,f,c
  8309  003A80  5006               	movf	(??_isdigit+3)^0,w,c
  8310  003A82  E10A               	bnz	u3360
  8311  003A84  0E0A               	movlw	10
  8312  003A86  5C05               	subwf	(??_isdigit+2)^0,w,c
  8313  003A88  A0D8               	btfss	status,0,c
  8314  003A8A  EF49  F01D         	goto	u3361
  8315  003A8E  EF4C  F01D         	goto	u3360
  8316  003A92                     u3361:
  8317  003A92  0E01               	movlw	1
  8318  003A94  EF4D  F01D         	goto	u3370
  8319  003A98                     u3360:
  8320  003A98  0E00               	movlw	0
  8321  003A9A                     u3370:
  8322  003A9A  6E01               	movwf	?_isdigit^0,c
  8323  003A9C  6A02               	clrf	(?_isdigit+1)^0,c
  8324  003A9E  0012               	return		;funcret
  8325  003AA0                     __end_of_isdigit:
  8326                           	opt callstack 0
  8327                           
  8328 ;; *************** function ___wmul *****************
  8329 ;; Defined at:
  8330 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  multiplier      2    0[COMRAM] unsigned int 
  8333 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;  product         2    4[COMRAM] unsigned int 
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  2    0[COMRAM] unsigned int 
  8338 ;; Registers used:
  8339 ;;		wreg, status,2, status,0, prodl, prodh
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8345 ;;      Params:         4       0       0       0       0       0       0       0       0
  8346 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8347 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8348 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8349 ;;Total ram usage:        6 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; Hardware stack levels required when called:    1
  8352 ;; This function calls:
  8353 ;;		Nothing
  8354 ;; This function is called by:
  8355 ;;		_atoi
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           	psect	text33
  8360  003B24                     __ptext33:
  8361                           	opt callstack 0
  8362  003B24                     ___wmul:
  8363                           	opt callstack 23
  8364  003B24  5001               	movf	___wmul@multiplier^0,w,c
  8365  003B26  0203               	mulwf	___wmul@multiplicand^0,c
  8366  003B28  CFF3 F005          	movff	prodl,___wmul@product
  8367  003B2C  CFF4 F006          	movff	prodh,___wmul@product+1
  8368  003B30  5001               	movf	___wmul@multiplier^0,w,c
  8369  003B32  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8370  003B34  50F3               	movf	243,w,c
  8371  003B36  2606               	addwf	(___wmul@product+1)^0,f,c
  8372  003B38  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8373  003B3A  0203               	mulwf	___wmul@multiplicand^0,c
  8374  003B3C  50F3               	movf	243,w,c
  8375  003B3E  2606               	addwf	(___wmul@product+1)^0,f,c
  8376  003B40  C005  F001         	movff	___wmul@product,?___wmul
  8377  003B44  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8378  003B48  0012               	return		;funcret
  8379  003B4A                     __end_of___wmul:
  8380                           	opt callstack 0
  8381                           
  8382 ;; *************** function _caracter_inicio *****************
  8383 ;; Defined at:
  8384 ;;		line 59 in file "lcd.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;  linha           1    wreg     unsigned char 
  8387 ;;  coluna          1    4[COMRAM] unsigned char 
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;  linha           1    5[COMRAM] unsigned char 
  8390 ;;  posicao         1    6[COMRAM] unsigned char 
  8391 ;; Return value:  Size  Location     Type
  8392 ;;                  1    wreg      void 
  8393 ;; Registers used:
  8394 ;;		wreg, status,2, status,0, cstack
  8395 ;; Tracked objects:
  8396 ;;		On entry : 0/0
  8397 ;;		On exit  : 0/0
  8398 ;;		Unchanged: 0/0
  8399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8400 ;;      Params:         1       0       0       0       0       0       0       0       0
  8401 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8403 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8404 ;;Total ram usage:        3 bytes
  8405 ;; Hardware stack levels used:    1
  8406 ;; Hardware stack levels required when called:    3
  8407 ;; This function calls:
  8408 ;;		_envia_byte_lcd
  8409 ;; This function is called by:
  8410 ;;		_displayPlayers
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414                           	psect	text34
  8415  0039B6                     __ptext34:
  8416                           	opt callstack 0
  8417  0039B6                     _caracter_inicio:
  8418                           	opt callstack 25
  8419                           
  8420                           ;incstack = 0
  8421                           ;caracter_inicio@linha stored from wreg
  8422  0039B6  6E06               	movwf	caracter_inicio@linha^0,c
  8423  0039B8                     
  8424                           ;lcd.c: 59: void caracter_inicio(char linha, char coluna);lcd.c: 60: {;lcd.c: 61:   char
      +                           posicao = 0;
  8425  0039B8  0E00               	movlw	0
  8426  0039BA  6E07               	movwf	caracter_inicio@posicao^0,c
  8427  0039BC                     
  8428                           ;lcd.c: 62:   if (linha == 1)
  8429  0039BC  0406               	decf	caracter_inicio@linha^0,w,c
  8430  0039BE  A4D8               	btfss	status,2,c
  8431  0039C0  EFE4  F01C         	goto	u4891
  8432  0039C4  EFE6  F01C         	goto	u4890
  8433  0039C8                     u4891:
  8434  0039C8  EFE8  F01C         	goto	l4038
  8435  0039CC                     u4890:
  8436  0039CC                     
  8437                           ;lcd.c: 63:   {;lcd.c: 64:     posicao = 0x80;
  8438  0039CC  0E80               	movlw	128
  8439  0039CE  6E07               	movwf	caracter_inicio@posicao^0,c
  8440  0039D0                     l4038:
  8441                           
  8442                           ;lcd.c: 66:   if (linha == 2)
  8443  0039D0  0E02               	movlw	2
  8444  0039D2  1806               	xorwf	caracter_inicio@linha^0,w,c
  8445  0039D4  A4D8               	btfss	status,2,c
  8446  0039D6  EFEF  F01C         	goto	u4901
  8447  0039DA  EFF1  F01C         	goto	u4900
  8448  0039DE                     u4901:
  8449  0039DE  EFF3  F01C         	goto	l4042
  8450  0039E2                     u4900:
  8451  0039E2                     
  8452                           ;lcd.c: 67:   {;lcd.c: 68:     posicao = 0xc0;
  8453  0039E2  0EC0               	movlw	192
  8454  0039E4  6E07               	movwf	caracter_inicio@posicao^0,c
  8455  0039E6                     l4042:
  8456                           
  8457                           ;lcd.c: 71:   posicao = posicao + coluna;
  8458  0039E6  5007               	movf	caracter_inicio@posicao^0,w,c
  8459  0039E8  2405               	addwf	caracter_inicio@coluna^0,w,c
  8460  0039EA  6E07               	movwf	caracter_inicio@posicao^0,c
  8461  0039EC                     
  8462                           ;lcd.c: 73:   envia_byte_lcd(0, posicao);
  8463  0039EC  C007  F003         	movff	caracter_inicio@posicao,envia_byte_lcd@dado
  8464  0039F0  0E00               	movlw	0
  8465  0039F2  ECA5  F01D         	call	_envia_byte_lcd
  8466  0039F6  0012               	return		;funcret
  8467  0039F8                     __end_of_caracter_inicio:
  8468                           	opt callstack 0
  8469                           
  8470 ;; *************** function ___xxtofl *****************
  8471 ;; Defined at:
  8472 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;  sign            1    wreg     unsigned char 
  8475 ;;  val             4    0[COMRAM] long 
  8476 ;; Auto vars:     Size  Location     Type
  8477 ;;  sign            1    8[COMRAM] unsigned char 
  8478 ;;  arg             4   10[COMRAM] unsigned long 
  8479 ;;  exp             1    9[COMRAM] unsigned char 
  8480 ;; Return value:  Size  Location     Type
  8481 ;;                  4    0[COMRAM] unsigned char 
  8482 ;; Registers used:
  8483 ;;		wreg, status,2, status,0
  8484 ;; Tracked objects:
  8485 ;;		On entry : 0/0
  8486 ;;		On exit  : 0/0
  8487 ;;		Unchanged: 0/0
  8488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8489 ;;      Params:         4       0       0       0       0       0       0       0       0
  8490 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8491 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8492 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8493 ;;Total ram usage:       14 bytes
  8494 ;; Hardware stack levels used:    1
  8495 ;; Hardware stack levels required when called:    1
  8496 ;; This function calls:
  8497 ;;		Nothing
  8498 ;; This function is called by:
  8499 ;;		_stateMachine
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           	psect	text35
  8504  0029F2                     __ptext35:
  8505                           	opt callstack 0
  8506  0029F2                     ___xxtofl:
  8507                           	opt callstack 28
  8508                           
  8509                           ;incstack = 0
  8510                           ;___xxtofl@sign stored from wreg
  8511  0029F2  6E09               	movwf	___xxtofl@sign^0,c
  8512  0029F4  5009               	movf	___xxtofl@sign^0,w,c
  8513  0029F6  B4D8               	btfsc	status,2,c
  8514  0029F8  EF00  F015         	goto	u4971
  8515  0029FC  EF02  F015         	goto	u4970
  8516  002A00                     u4971:
  8517  002A00  EF24  F015         	goto	l990
  8518  002A04                     u4970:
  8519  002A04  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8520  002A06  EF09  F015         	goto	u4980
  8521  002A0A  EF07  F015         	goto	u4981
  8522  002A0E                     u4981:
  8523  002A0E  EF24  F015         	goto	l990
  8524  002A12                     u4980:
  8525  002A12  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8526  002A16  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8527  002A1A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8528  002A1E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8529  002A22  1E05               	comf	??___xxtofl^0,f,c
  8530  002A24  1E06               	comf	(??___xxtofl+1)^0,f,c
  8531  002A26  1E07               	comf	(??___xxtofl+2)^0,f,c
  8532  002A28  1E08               	comf	(??___xxtofl+3)^0,f,c
  8533  002A2A  2A05               	incf	??___xxtofl^0,f,c
  8534  002A2C  0E00               	movlw	0
  8535  002A2E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8536  002A30  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8537  002A32  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8538  002A34  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8539  002A38  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8540  002A3C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8541  002A40  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8542  002A44  EF2C  F015         	goto	l4122
  8543  002A48                     l990:
  8544  002A48  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8545  002A4C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8546  002A50  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8547  002A54  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8548  002A58                     l4122:
  8549  002A58  5001               	movf	___xxtofl@val^0,w,c
  8550  002A5A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8551  002A5C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8552  002A5E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8553  002A60  A4D8               	btfss	status,2,c
  8554  002A62  EF35  F015         	goto	u4991
  8555  002A66  EF37  F015         	goto	u4990
  8556  002A6A                     u4991:
  8557  002A6A  EF41  F015         	goto	l4128
  8558  002A6E                     u4990:
  8559  002A6E  0E00               	movlw	0
  8560  002A70  6E01               	movwf	?___xxtofl^0,c
  8561  002A72  0E00               	movlw	0
  8562  002A74  6E02               	movwf	(?___xxtofl+1)^0,c
  8563  002A76  0E00               	movlw	0
  8564  002A78  6E03               	movwf	(?___xxtofl+2)^0,c
  8565  002A7A  0E00               	movlw	0
  8566  002A7C  6E04               	movwf	(?___xxtofl+3)^0,c
  8567  002A7E  EFD2  F015         	goto	l993
  8568  002A82                     l4128:
  8569  002A82  0E96               	movlw	150
  8570  002A84  6E0A               	movwf	___xxtofl@exp^0,c
  8571  002A86  EF4B  F015         	goto	l4132
  8572  002A8A                     l4130:
  8573  002A8A  2A0A               	incf	___xxtofl@exp^0,f,c
  8574  002A8C  90D8               	bcf	status,0,c
  8575  002A8E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8576  002A90  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8577  002A92  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8578  002A94  320B               	rrcf	___xxtofl@arg^0,f,c
  8579  002A96                     l4132:
  8580  002A96  0E00               	movlw	0
  8581  002A98  140B               	andwf	___xxtofl@arg^0,w,c
  8582  002A9A  6E05               	movwf	??___xxtofl^0,c
  8583  002A9C  0E00               	movlw	0
  8584  002A9E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8585  002AA0  6E06               	movwf	(??___xxtofl+1)^0,c
  8586  002AA2  0E00               	movlw	0
  8587  002AA4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8588  002AA6  6E07               	movwf	(??___xxtofl+2)^0,c
  8589  002AA8  0EFE               	movlw	254
  8590  002AAA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8591  002AAC  6E08               	movwf	(??___xxtofl+3)^0,c
  8592  002AAE  5005               	movf	??___xxtofl^0,w,c
  8593  002AB0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8594  002AB2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8595  002AB4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8596  002AB6  A4D8               	btfss	status,2,c
  8597  002AB8  EF60  F015         	goto	u5001
  8598  002ABC  EF62  F015         	goto	u5000
  8599  002AC0                     u5001:
  8600  002AC0  EF45  F015         	goto	l4130
  8601  002AC4                     u5000:
  8602  002AC4  EF70  F015         	goto	l997
  8603  002AC8                     l4134:
  8604  002AC8  2A0A               	incf	___xxtofl@exp^0,f,c
  8605  002ACA  0E01               	movlw	1
  8606  002ACC  260B               	addwf	___xxtofl@arg^0,f,c
  8607  002ACE  0E00               	movlw	0
  8608  002AD0  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8609  002AD2  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8610  002AD4  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8611  002AD6  90D8               	bcf	status,0,c
  8612  002AD8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8613  002ADA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8614  002ADC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8615  002ADE  320B               	rrcf	___xxtofl@arg^0,f,c
  8616  002AE0                     l997:
  8617  002AE0  0E00               	movlw	0
  8618  002AE2  140B               	andwf	___xxtofl@arg^0,w,c
  8619  002AE4  6E05               	movwf	??___xxtofl^0,c
  8620  002AE6  0E00               	movlw	0
  8621  002AE8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8622  002AEA  6E06               	movwf	(??___xxtofl+1)^0,c
  8623  002AEC  0E00               	movlw	0
  8624  002AEE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8625  002AF0  6E07               	movwf	(??___xxtofl+2)^0,c
  8626  002AF2  0EFF               	movlw	255
  8627  002AF4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8628  002AF6  6E08               	movwf	(??___xxtofl+3)^0,c
  8629  002AF8  5005               	movf	??___xxtofl^0,w,c
  8630  002AFA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8631  002AFC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8632  002AFE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8633  002B00  A4D8               	btfss	status,2,c
  8634  002B02  EF85  F015         	goto	u5011
  8635  002B06  EF87  F015         	goto	u5010
  8636  002B0A                     u5011:
  8637  002B0A  EF64  F015         	goto	l4134
  8638  002B0E                     u5010:
  8639  002B0E  EF8F  F015         	goto	l4142
  8640  002B12                     l4140:
  8641  002B12  060A               	decf	___xxtofl@exp^0,f,c
  8642  002B14  90D8               	bcf	status,0,c
  8643  002B16  360B               	rlcf	___xxtofl@arg^0,f,c
  8644  002B18  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8645  002B1A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8646  002B1C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8647  002B1E                     l4142:
  8648  002B1E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8649  002B20  EF94  F015         	goto	u5021
  8650  002B24  EF96  F015         	goto	u5020
  8651  002B28                     u5021:
  8652  002B28  EF9E  F015         	goto	l1004
  8653  002B2C                     u5020:
  8654  002B2C  0E02               	movlw	2
  8655  002B2E  600A               	cpfslt	___xxtofl@exp^0,c
  8656  002B30  EF9C  F015         	goto	u5031
  8657  002B34  EF9E  F015         	goto	u5030
  8658  002B38                     u5031:
  8659  002B38  EF89  F015         	goto	l4140
  8660  002B3C                     u5030:
  8661  002B3C                     l1004:
  8662  002B3C  B00A               	btfsc	___xxtofl@exp^0,0,c
  8663  002B3E  EFA3  F015         	goto	u5041
  8664  002B42  EFA5  F015         	goto	u5040
  8665  002B46                     u5041:
  8666  002B46  EFA6  F015         	goto	l4148
  8667  002B4A                     u5040:
  8668  002B4A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8669  002B4C                     l4148:
  8670  002B4C  90D8               	bcf	status,0,c
  8671  002B4E  320A               	rrcf	___xxtofl@exp^0,f,c
  8672  002B50  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8673  002B54  6A06               	clrf	(??___xxtofl+1)^0,c
  8674  002B56  6A07               	clrf	(??___xxtofl+2)^0,c
  8675  002B58  6A08               	clrf	(??___xxtofl+3)^0,c
  8676  002B5A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8677  002B5E  6A07               	clrf	(??___xxtofl+2)^0,c
  8678  002B60  6A06               	clrf	(??___xxtofl+1)^0,c
  8679  002B62  6A05               	clrf	??___xxtofl^0,c
  8680  002B64  5005               	movf	??___xxtofl^0,w,c
  8681  002B66  120B               	iorwf	___xxtofl@arg^0,f,c
  8682  002B68  5006               	movf	(??___xxtofl+1)^0,w,c
  8683  002B6A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8684  002B6C  5007               	movf	(??___xxtofl+2)^0,w,c
  8685  002B6E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8686  002B70  5008               	movf	(??___xxtofl+3)^0,w,c
  8687  002B72  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8688  002B74  5009               	movf	___xxtofl@sign^0,w,c
  8689  002B76  B4D8               	btfsc	status,2,c
  8690  002B78  EFC0  F015         	goto	u5051
  8691  002B7C  EFC2  F015         	goto	u5050
  8692  002B80                     u5051:
  8693  002B80  EFCA  F015         	goto	l4158
  8694  002B84                     u5050:
  8695  002B84  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8696  002B86  EFC9  F015         	goto	u5060
  8697  002B8A  EFC7  F015         	goto	u5061
  8698  002B8E                     u5061:
  8699  002B8E  EFCA  F015         	goto	l4158
  8700  002B92                     u5060:
  8701  002B92  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8702  002B94                     l4158:
  8703  002B94  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8704  002B98  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8705  002B9C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8706  002BA0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8707  002BA4                     l993:
  8708  002BA4  0012               	return		;funcret
  8709  002BA6                     __end_of___xxtofl:
  8710                           	opt callstack 0
  8711                           
  8712 ;; *************** function _setup *****************
  8713 ;; Defined at:
  8714 ;;		line 72 in file "pinconfig.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;		None
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;		None
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  1    wreg      void 
  8721 ;; Registers used:
  8722 ;;		wreg, status,2, status,0, cstack
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8728 ;;      Params:         0       0       0       0       0       0       0       0       0
  8729 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8730 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8731 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8732 ;;Total ram usage:        0 bytes
  8733 ;; Hardware stack levels used:    1
  8734 ;; Hardware stack levels required when called:    4
  8735 ;; This function calls:
  8736 ;;		_configureIRQ
  8737 ;;		_configurePins
  8738 ;;		_inicializa_lcd
  8739 ;;		_initTimer
  8740 ;;		_limpa_lcd
  8741 ;; This function is called by:
  8742 ;;		_main
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           	psect	text36
  8747  003BB2                     __ptext36:
  8748                           	opt callstack 0
  8749  003BB2                     _setup:
  8750                           	opt callstack 26
  8751  003BB2                     
  8752                           ;pinconfig.c: 74:     PORTCbits.RC0 = 0;
  8753  003BB2  9082               	bcf	130,0,c	;volatile
  8754                           
  8755                           ;pinconfig.c: 75:     PORTCbits.RC1 = 0;
  8756  003BB4  9282               	bcf	130,1,c	;volatile
  8757                           
  8758                           ;pinconfig.c: 76:     PORTCbits.RC2 = 0;
  8759  003BB6  9482               	bcf	130,2,c	;volatile
  8760                           
  8761                           ;pinconfig.c: 77:     PORTDbits.RD2 = 0;
  8762  003BB8  9483               	bcf	131,2,c	;volatile
  8763  003BBA                     
  8764                           ;pinconfig.c: 79:     configurePins();
  8765  003BBA  ECB7  F01D         	call	_configurePins	;wreg free
  8766  003BBE                     
  8767                           ;pinconfig.c: 80:     configureIRQ();
  8768  003BBE  ECC8  F01D         	call	_configureIRQ	;wreg free
  8769  003BC2                     
  8770                           ;pinconfig.c: 82:     inicializa_lcd();
  8771  003BC2  EC33  F01B         	call	_inicializa_lcd	;wreg free
  8772  003BC6                     
  8773                           ;pinconfig.c: 83:     limpa_lcd();
  8774  003BC6  ECE8  F01D         	call	_limpa_lcd	;wreg free
  8775  003BCA                     
  8776                           ;pinconfig.c: 84:     initTimer();
  8777  003BCA  ECF5  F01D         	call	_initTimer	;wreg free
  8778  003BCE  0012               	return		;funcret
  8779  003BD0                     __end_of_setup:
  8780                           	opt callstack 0
  8781                           
  8782 ;; *************** function _limpa_lcd *****************
  8783 ;; Defined at:
  8784 ;;		line 26 in file "lcd.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;		None
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;		None
  8789 ;; Return value:  Size  Location     Type
  8790 ;;                  1    wreg      void 
  8791 ;; Registers used:
  8792 ;;		wreg, status,2, status,0, cstack
  8793 ;; Tracked objects:
  8794 ;;		On entry : 0/0
  8795 ;;		On exit  : 0/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8798 ;;      Params:         0       0       0       0       0       0       0       0       0
  8799 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8800 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8801 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8802 ;;Total ram usage:        1 bytes
  8803 ;; Hardware stack levels used:    1
  8804 ;; Hardware stack levels required when called:    3
  8805 ;; This function calls:
  8806 ;;		_envia_byte_lcd
  8807 ;; This function is called by:
  8808 ;;		_displayPlayers
  8809 ;;		_reset
  8810 ;;		_stateMachine
  8811 ;;		_setup
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           	psect	text37
  8816  003BD0                     __ptext37:
  8817                           	opt callstack 0
  8818  003BD0                     _limpa_lcd:
  8819                           	opt callstack 25
  8820  003BD0                     
  8821                           ;lcd.c: 28:   envia_byte_lcd(0, 0x01);
  8822  003BD0  0E01               	movlw	1
  8823  003BD2  6E03               	movwf	envia_byte_lcd@dado^0,c
  8824  003BD4  0E00               	movlw	0
  8825  003BD6  ECA5  F01D         	call	_envia_byte_lcd
  8826  003BDA                     
  8827                           ;lcd.c: 29:   _delay((unsigned long)((2)*(4000000/4000.0)));
  8828  003BDA  0E03               	movlw	3
  8829  003BDC  6E05               	movwf	??_limpa_lcd^0,c
  8830  003BDE  0E98               	movlw	152
  8831  003BE0                     u5247:
  8832  003BE0  2EE8               	decfsz	wreg,f,c
  8833  003BE2  D7FE               	bra	u5247
  8834  003BE4  2E05               	decfsz	??_limpa_lcd^0,f,c
  8835  003BE6  D7FC               	bra	u5247
  8836  003BE8  0012               	return		;funcret
  8837  003BEA                     __end_of_limpa_lcd:
  8838                           	opt callstack 0
  8839                           
  8840 ;; *************** function _initTimer *****************
  8841 ;; Defined at:
  8842 ;;		line 54 in file "pinconfig.c"
  8843 ;; Parameters:    Size  Location     Type
  8844 ;;		None
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;		None
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  1    wreg      void 
  8849 ;; Registers used:
  8850 ;;		wreg, status,2
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8856 ;;      Params:         0       0       0       0       0       0       0       0       0
  8857 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8859 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8860 ;;Total ram usage:        0 bytes
  8861 ;; Hardware stack levels used:    1
  8862 ;; Hardware stack levels required when called:    1
  8863 ;; This function calls:
  8864 ;;		Nothing
  8865 ;; This function is called by:
  8866 ;;		_setup
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text38
  8871  003BEA                     __ptext38:
  8872                           	opt callstack 0
  8873  003BEA                     _initTimer:
  8874                           	opt callstack 28
  8875  003BEA                     
  8876                           ;pinconfig.c: 56:     T2CONbits.T2CKPS1 = 0;
  8877  003BEA  92CA               	bcf	202,1,c	;volatile
  8878                           
  8879                           ;pinconfig.c: 57:     T2CONbits.T2CKPS0 = 1;
  8880  003BEC  80CA               	bsf	202,0,c	;volatile
  8881  003BEE                     
  8882                           ;pinconfig.c: 58:     PR2 = 250;
  8883  003BEE  0EFA               	movlw	250
  8884  003BF0  6ECB               	movwf	203,c	;volatile
  8885  003BF2                     
  8886                           ;pinconfig.c: 60:     T2CONbits.T2OUTPS3 = 1;
  8887  003BF2  8CCA               	bsf	202,6,c	;volatile
  8888  003BF4                     
  8889                           ;pinconfig.c: 61:     T2CONbits.T2OUTPS2 = 0;
  8890  003BF4  9ACA               	bcf	202,5,c	;volatile
  8891  003BF6                     
  8892                           ;pinconfig.c: 62:     T2CONbits.T2OUTPS1 = 0;
  8893  003BF6  98CA               	bcf	202,4,c	;volatile
  8894  003BF8                     
  8895                           ;pinconfig.c: 63:     T2CONbits.T2OUTPS0 = 1;
  8896  003BF8  86CA               	bsf	202,3,c	;volatile
  8897  003BFA                     
  8898                           ;pinconfig.c: 65:     TMR2IE = 1;
  8899  003BFA  829D               	bsf	3997,1,c	;volatile
  8900  003BFC                     
  8901                           ;pinconfig.c: 66:     TMR2IF = 0;
  8902  003BFC  929E               	bcf	3998,1,c	;volatile
  8903  003BFE                     
  8904                           ;pinconfig.c: 68:     T2CONbits.TMR2ON = 1;
  8905  003BFE  84CA               	bsf	202,2,c	;volatile
  8906  003C00  0012               	return		;funcret
  8907  003C02                     __end_of_initTimer:
  8908                           	opt callstack 0
  8909                           
  8910 ;; *************** function _inicializa_lcd *****************
  8911 ;; Defined at:
  8912 ;;		line 32 in file "lcd.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;		None
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;		None
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      void 
  8919 ;; Registers used:
  8920 ;;		wreg, status,2, status,0, cstack
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8926 ;;      Params:         0       0       0       0       0       0       0       0       0
  8927 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8928 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8929 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8930 ;;Total ram usage:        1 bytes
  8931 ;; Hardware stack levels used:    1
  8932 ;; Hardware stack levels required when called:    3
  8933 ;; This function calls:
  8934 ;;		_envia_byte_lcd
  8935 ;;		_envia_nibble_lcd
  8936 ;; This function is called by:
  8937 ;;		_setup
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941                           	psect	text39
  8942  003666                     __ptext39:
  8943                           	opt callstack 0
  8944  003666                     _inicializa_lcd:
  8945                           	opt callstack 26
  8946  003666                     
  8947                           ;lcd.c: 34:   PORTDbits.RD1 = 0;
  8948  003666  9283               	bcf	131,1,c	;volatile
  8949                           
  8950                           ;lcd.c: 35:   PORTDbits.RD4 = 0;
  8951  003668  9883               	bcf	131,4,c	;volatile
  8952                           
  8953                           ;lcd.c: 36:   PORTDbits.RD5 = 0;
  8954  00366A  9A83               	bcf	131,5,c	;volatile
  8955                           
  8956                           ;lcd.c: 37:   PORTDbits.RD6 = 0;
  8957  00366C  9C83               	bcf	131,6,c	;volatile
  8958                           
  8959                           ;lcd.c: 38:   PORTDbits.RD7 = 0;
  8960  00366E  9E83               	bcf	131,7,c	;volatile
  8961  003670                     
  8962                           ;lcd.c: 40:   _delay((unsigned long)((50)*(4000000/4000.0)));
  8963  003670  0E41               	movlw	65
  8964  003672  6E05               	movwf	??_inicializa_lcd^0,c
  8965  003674  0EEE               	movlw	238
  8966  003676                     u5257:
  8967  003676  2EE8               	decfsz	wreg,f,c
  8968  003678  D7FE               	bra	u5257
  8969  00367A  2E05               	decfsz	??_inicializa_lcd^0,f,c
  8970  00367C  D7FC               	bra	u5257
  8971  00367E  D000               	nop2	
  8972  003680                     
  8973                           ;lcd.c: 41:   envia_nibble_lcd(0x03);
  8974  003680  0E03               	movlw	3
  8975  003682  ECEF  F01A         	call	_envia_nibble_lcd
  8976  003686                     
  8977                           ;lcd.c: 42:   _delay((unsigned long)((4)*(4000000/4000.0)));
  8978  003686  0E06               	movlw	6
  8979  003688  6E05               	movwf	??_inicializa_lcd^0,c
  8980  00368A  0E30               	movlw	48
  8981  00368C                     u5267:
  8982  00368C  2EE8               	decfsz	wreg,f,c
  8983  00368E  D7FE               	bra	u5267
  8984  003690  2E05               	decfsz	??_inicializa_lcd^0,f,c
  8985  003692  D7FC               	bra	u5267
  8986  003694  D000               	nop2	
  8987                           
  8988                           ;lcd.c: 43:   envia_nibble_lcd(0x03);
  8989  003696  0E03               	movlw	3
  8990  003698  ECEF  F01A         	call	_envia_nibble_lcd
  8991  00369C                     
  8992                           ;lcd.c: 44:   _delay((unsigned long)((100)*(4000000/4000000.0)));
  8993  00369C  0E21               	movlw	33
  8994  00369E                     u5277:
  8995  00369E  2EE8               	decfsz	wreg,f,c
  8996  0036A0  D7FE               	bra	u5277
  8997  0036A2  F000               	nop	
  8998  0036A4                     
  8999                           ;lcd.c: 45:   envia_nibble_lcd(0x03);
  9000  0036A4  0E03               	movlw	3
  9001  0036A6  ECEF  F01A         	call	_envia_nibble_lcd
  9002  0036AA                     
  9003                           ;lcd.c: 47:   envia_nibble_lcd(0x02);
  9004  0036AA  0E02               	movlw	2
  9005  0036AC  ECEF  F01A         	call	_envia_nibble_lcd
  9006  0036B0                     
  9007                           ;lcd.c: 49:   envia_byte_lcd(0, 0x01);
  9008  0036B0  0E01               	movlw	1
  9009  0036B2  6E03               	movwf	envia_byte_lcd@dado^0,c
  9010  0036B4  0E00               	movlw	0
  9011  0036B6  ECA5  F01D         	call	_envia_byte_lcd
  9012                           
  9013                           ;lcd.c: 50:   _delay((unsigned long)((2)*(4000000/4000.0)));
  9014  0036BA  0E03               	movlw	3
  9015  0036BC  6E05               	movwf	??_inicializa_lcd^0,c
  9016  0036BE  0E98               	movlw	152
  9017  0036C0                     u5287:
  9018  0036C0  2EE8               	decfsz	wreg,f,c
  9019  0036C2  D7FE               	bra	u5287
  9020  0036C4  2E05               	decfsz	??_inicializa_lcd^0,f,c
  9021  0036C6  D7FC               	bra	u5287
  9022  0036C8                     
  9023                           ;lcd.c: 52:   envia_byte_lcd(0, 0x28);
  9024  0036C8  0E28               	movlw	40
  9025  0036CA  6E03               	movwf	envia_byte_lcd@dado^0,c
  9026  0036CC  0E00               	movlw	0
  9027  0036CE  ECA5  F01D         	call	_envia_byte_lcd
  9028  0036D2                     
  9029                           ;lcd.c: 54:   envia_byte_lcd(0, 0x0c);
  9030  0036D2  0E0C               	movlw	12
  9031  0036D4  6E03               	movwf	envia_byte_lcd@dado^0,c
  9032  0036D6  0E00               	movlw	0
  9033  0036D8  ECA5  F01D         	call	_envia_byte_lcd
  9034  0036DC                     
  9035                           ;lcd.c: 56:   envia_byte_lcd(0, 0x06);
  9036  0036DC  0E06               	movlw	6
  9037  0036DE  6E03               	movwf	envia_byte_lcd@dado^0,c
  9038  0036E0  0E00               	movlw	0
  9039  0036E2  ECA5  F01D         	call	_envia_byte_lcd
  9040  0036E6  0012               	return		;funcret
  9041  0036E8                     __end_of_inicializa_lcd:
  9042                           	opt callstack 0
  9043                           
  9044 ;; *************** function _envia_byte_lcd *****************
  9045 ;; Defined at:
  9046 ;;		line 16 in file "lcd.c"
  9047 ;; Parameters:    Size  Location     Type
  9048 ;;  endereco        1    wreg     unsigned char 
  9049 ;;  dado            1    2[COMRAM] unsigned char 
  9050 ;; Auto vars:     Size  Location     Type
  9051 ;;  endereco        1    3[COMRAM] unsigned char 
  9052 ;; Return value:  Size  Location     Type
  9053 ;;                  1    wreg      void 
  9054 ;; Registers used:
  9055 ;;		wreg, status,2, status,0, cstack
  9056 ;; Tracked objects:
  9057 ;;		On entry : 0/0
  9058 ;;		On exit  : 0/0
  9059 ;;		Unchanged: 0/0
  9060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9061 ;;      Params:         1       0       0       0       0       0       0       0       0
  9062 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9064 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9065 ;;Total ram usage:        2 bytes
  9066 ;; Hardware stack levels used:    1
  9067 ;; Hardware stack levels required when called:    2
  9068 ;; This function calls:
  9069 ;;		_envia_nibble_lcd
  9070 ;; This function is called by:
  9071 ;;		_escreve_lcd
  9072 ;;		_limpa_lcd
  9073 ;;		_inicializa_lcd
  9074 ;;		_caracter_inicio
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text40
  9079  003B4A                     __ptext40:
  9080                           	opt callstack 0
  9081  003B4A                     _envia_byte_lcd:
  9082                           	opt callstack 20
  9083                           
  9084                           ;incstack = 0
  9085                           ;envia_byte_lcd@endereco stored from wreg
  9086  003B4A  6E04               	movwf	envia_byte_lcd@endereco^0,c
  9087  003B4C                     
  9088                           ;lcd.c: 16: void envia_byte_lcd(char endereco, char dado);lcd.c: 17: {;lcd.c: 18:   PORT
      +                          Dbits.RD0 = endereco;
  9089  003B4C  B004               	btfsc	envia_byte_lcd@endereco^0,0,c
  9090  003B4E  D002               	bra	u2625
  9091  003B50  9083               	bcf	131,0,c	;volatile
  9092  003B52  D001               	bra	u2626
  9093  003B54                     u2625:
  9094  003B54  8083               	bsf	131,0,c	;volatile
  9095  003B56                     u2626:
  9096  003B56                     
  9097                           ;lcd.c: 19:   _delay((unsigned long)((5)*(4000000/4000000.0)));
  9098  003B56  D000               	nop2		;2 cycle nop
  9099  003B58  D000               	nop2		;2 cycle nop
  9100  003B5A  F000               	nop	
  9101  003B5C                     
  9102                           ;lcd.c: 20:   envia_nibble_lcd(dado >> 4);
  9103  003B5C  3803               	swapf	envia_byte_lcd@dado^0,w,c
  9104  003B5E  0B0F               	andlw	15
  9105  003B60  ECEF  F01A         	call	_envia_nibble_lcd
  9106  003B64                     
  9107                           ;lcd.c: 21:   envia_nibble_lcd(dado & 0x0f);
  9108  003B64  5003               	movf	envia_byte_lcd@dado^0,w,c
  9109  003B66  0B0F               	andlw	15
  9110  003B68  ECEF  F01A         	call	_envia_nibble_lcd
  9111  003B6C  0012               	return		;funcret
  9112  003B6E                     __end_of_envia_byte_lcd:
  9113                           	opt callstack 0
  9114                           
  9115 ;; *************** function _envia_nibble_lcd *****************
  9116 ;; Defined at:
  9117 ;;		line 3 in file "lcd.c"
  9118 ;; Parameters:    Size  Location     Type
  9119 ;;  dado            1    wreg     unsigned char 
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;  dado            1    1[COMRAM] unsigned char 
  9122 ;; Return value:  Size  Location     Type
  9123 ;;                  1    wreg      void 
  9124 ;; Registers used:
  9125 ;;		wreg, status,2, status,0
  9126 ;; Tracked objects:
  9127 ;;		On entry : 0/0
  9128 ;;		On exit  : 0/0
  9129 ;;		Unchanged: 0/0
  9130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9131 ;;      Params:         0       0       0       0       0       0       0       0       0
  9132 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9133 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9134 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9135 ;;Total ram usage:        2 bytes
  9136 ;; Hardware stack levels used:    1
  9137 ;; Hardware stack levels required when called:    1
  9138 ;; This function calls:
  9139 ;;		Nothing
  9140 ;; This function is called by:
  9141 ;;		_envia_byte_lcd
  9142 ;;		_inicializa_lcd
  9143 ;; This function uses a non-reentrant model
  9144 ;;
  9145                           
  9146                           	psect	text41
  9147  0035DE                     __ptext41:
  9148                           	opt callstack 0
  9149  0035DE                     _envia_nibble_lcd:
  9150                           	opt callstack 20
  9151                           
  9152                           ;incstack = 0
  9153                           ;envia_nibble_lcd@dado stored from wreg
  9154  0035DE  6E02               	movwf	envia_nibble_lcd@dado^0,c
  9155  0035E0                     
  9156                           ;lcd.c: 3: void envia_nibble_lcd(char dado);lcd.c: 4: {;lcd.c: 5:   PORTDbits.RD1 = 1;
  9157  0035E0  8283               	bsf	131,1,c	;volatile
  9158  0035E2                     
  9159                           ;lcd.c: 6:   PORTDbits.RD4 = dado & 0x01;
  9160  0035E2  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  9161  0035E6  0E01               	movlw	1
  9162  0035E8  1601               	andwf	??_envia_nibble_lcd^0,f,c
  9163  0035EA  3A01               	swapf	??_envia_nibble_lcd^0,f,c
  9164  0035EC  5083               	movf	131,w,c	;volatile
  9165  0035EE  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9166  0035F0  0BEF               	andlw	-17
  9167  0035F2  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9168  0035F4  6E83               	movwf	131,c	;volatile
  9169                           
  9170                           ;lcd.c: 7:   PORTDbits.RD5 = (dado >> 1) & 0x01;
  9171  0035F6  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  9172  0035FA  90D8               	bcf	status,0,c
  9173  0035FC  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9174  0035FE  0E01               	movlw	1
  9175  003600  1601               	andwf	??_envia_nibble_lcd^0,f,c
  9176  003602  3A01               	swapf	??_envia_nibble_lcd^0,f,c
  9177  003604  4601               	rlncf	??_envia_nibble_lcd^0,f,c
  9178  003606  5083               	movf	131,w,c	;volatile
  9179  003608  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9180  00360A  0BDF               	andlw	-33
  9181  00360C  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9182  00360E  6E83               	movwf	131,c	;volatile
  9183                           
  9184                           ;lcd.c: 8:   PORTDbits.RD6 = (dado >> 2) & 0x01;
  9185  003610  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  9186  003614  90D8               	bcf	status,0,c
  9187  003616  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9188  003618  90D8               	bcf	status,0,c
  9189  00361A  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9190  00361C  0E01               	movlw	1
  9191  00361E  1601               	andwf	??_envia_nibble_lcd^0,f,c
  9192  003620  3A01               	swapf	??_envia_nibble_lcd^0,f,c
  9193  003622  4601               	rlncf	??_envia_nibble_lcd^0,f,c
  9194  003624  4601               	rlncf	??_envia_nibble_lcd^0,f,c
  9195  003626  5083               	movf	131,w,c	;volatile
  9196  003628  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9197  00362A  0BBF               	andlw	-65
  9198  00362C  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9199  00362E  6E83               	movwf	131,c	;volatile
  9200                           
  9201                           ;lcd.c: 9:   PORTDbits.RD7 = (dado >> 3) & 0x01;
  9202  003630  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  9203  003634  90D8               	bcf	status,0,c
  9204  003636  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9205  003638  90D8               	bcf	status,0,c
  9206  00363A  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9207  00363C  90D8               	bcf	status,0,c
  9208  00363E  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9209  003640  0E01               	movlw	1
  9210  003642  1601               	andwf	??_envia_nibble_lcd^0,f,c
  9211  003644  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9212  003646  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  9213  003648  5083               	movf	131,w,c	;volatile
  9214  00364A  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9215  00364C  0B7F               	andlw	-129
  9216  00364E  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  9217  003650  6E83               	movwf	131,c	;volatile
  9218  003652                     
  9219                           ;lcd.c: 11:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  9220  003652  0E10               	movlw	16
  9221  003654                     u5297:
  9222  003654  2EE8               	decfsz	wreg,f,c
  9223  003656  D7FE               	bra	u5297
  9224  003658  D000               	nop2	
  9225  00365A                     
  9226                           ;lcd.c: 12:   PORTDbits.RD1 = 0;
  9227  00365A  9283               	bcf	131,1,c	;volatile
  9228  00365C                     
  9229                           ;lcd.c: 13:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  9230  00365C  0E10               	movlw	16
  9231  00365E                     u5307:
  9232  00365E  2EE8               	decfsz	wreg,f,c
  9233  003660  D7FE               	bra	u5307
  9234  003662  D000               	nop2	
  9235  003664  0012               	return		;funcret
  9236  003666                     __end_of_envia_nibble_lcd:
  9237                           	opt callstack 0
  9238                           
  9239 ;; *************** function _configurePins *****************
  9240 ;; Defined at:
  9241 ;;		line 5 in file "pinconfig.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;		None
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;		None
  9246 ;; Return value:  Size  Location     Type
  9247 ;;                  1    wreg      void 
  9248 ;; Registers used:
  9249 ;;		None
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9255 ;;      Params:         0       0       0       0       0       0       0       0       0
  9256 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9258 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9259 ;;Total ram usage:        0 bytes
  9260 ;; Hardware stack levels used:    1
  9261 ;; Hardware stack levels required when called:    1
  9262 ;; This function calls:
  9263 ;;		Nothing
  9264 ;; This function is called by:
  9265 ;;		_setup
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           	psect	text42
  9270  003B6E                     __ptext42:
  9271                           	opt callstack 0
  9272  003B6E                     _configurePins:
  9273                           	opt callstack 28
  9274  003B6E                     
  9275                           ;pinconfig.c: 7:     TRISCbits.RC0 = 0;
  9276  003B6E  9094               	bcf	148,0,c	;volatile
  9277                           
  9278                           ;pinconfig.c: 8:     TRISCbits.RC1 = 0;
  9279  003B70  9294               	bcf	148,1,c	;volatile
  9280                           
  9281                           ;pinconfig.c: 9:     TRISCbits.RC2 = 0;
  9282  003B72  9494               	bcf	148,2,c	;volatile
  9283                           
  9284                           ;pinconfig.c: 11:     TRISBbits.RB0 = 1;
  9285  003B74  8093               	bsf	147,0,c	;volatile
  9286                           
  9287                           ;pinconfig.c: 12:     TRISBbits.RB1 = 1;
  9288  003B76  8293               	bsf	147,1,c	;volatile
  9289                           
  9290                           ;pinconfig.c: 13:     TRISBbits.RB2 = 1;
  9291  003B78  8493               	bsf	147,2,c	;volatile
  9292                           
  9293                           ;pinconfig.c: 15:     TRISBbits.TRISB0 = 1;
  9294  003B7A  8093               	bsf	147,0,c	;volatile
  9295                           
  9296                           ;pinconfig.c: 16:     TRISBbits.TRISB1 = 1;
  9297  003B7C  8293               	bsf	147,1,c	;volatile
  9298                           
  9299                           ;pinconfig.c: 17:     TRISBbits.TRISB2 = 1;
  9300  003B7E  8493               	bsf	147,2,c	;volatile
  9301                           
  9302                           ;pinconfig.c: 19:     TRISDbits.RD0 = 0;
  9303  003B80  9095               	bcf	149,0,c	;volatile
  9304                           
  9305                           ;pinconfig.c: 20:     TRISDbits.RD1 = 0;
  9306  003B82  9295               	bcf	149,1,c	;volatile
  9307                           
  9308                           ;pinconfig.c: 22:     TRISDbits.RD4 = 0;
  9309  003B84  9895               	bcf	149,4,c	;volatile
  9310                           
  9311                           ;pinconfig.c: 23:     TRISDbits.RD5 = 0;
  9312  003B86  9A95               	bcf	149,5,c	;volatile
  9313                           
  9314                           ;pinconfig.c: 24:     TRISDbits.RD6 = 0;
  9315  003B88  9C95               	bcf	149,6,c	;volatile
  9316                           
  9317                           ;pinconfig.c: 25:     TRISDbits.RD7 = 0;
  9318  003B8A  9E95               	bcf	149,7,c	;volatile
  9319                           
  9320                           ;pinconfig.c: 27:     TRISDbits.RD2 = 0;
  9321  003B8C  9495               	bcf	149,2,c	;volatile
  9322  003B8E  0012               	return		;funcret
  9323  003B90                     __end_of_configurePins:
  9324                           	opt callstack 0
  9325                           
  9326 ;; *************** function _configureIRQ *****************
  9327 ;; Defined at:
  9328 ;;		line 31 in file "pinconfig.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;		None
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;		None
  9333 ;; Return value:  Size  Location     Type
  9334 ;;                  1    wreg      void 
  9335 ;; Registers used:
  9336 ;;		wreg, status,2
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9342 ;;      Params:         0       0       0       0       0       0       0       0       0
  9343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9345 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9346 ;;Total ram usage:        0 bytes
  9347 ;; Hardware stack levels used:    1
  9348 ;; Hardware stack levels required when called:    1
  9349 ;; This function calls:
  9350 ;;		Nothing
  9351 ;; This function is called by:
  9352 ;;		_setup
  9353 ;; This function uses a non-reentrant model
  9354 ;;
  9355                           
  9356                           	psect	text43
  9357  003B90                     __ptext43:
  9358                           	opt callstack 0
  9359  003B90                     _configureIRQ:
  9360                           	opt callstack 28
  9361  003B90                     
  9362                           ;pinconfig.c: 33:     ADIE = 0;
  9363  003B90  9C9D               	bcf	3997,6,c	;volatile
  9364                           
  9365                           ;pinconfig.c: 34:     PEIE = 1;
  9366  003B92  8CF2               	bsf	4082,6,c	;volatile
  9367                           
  9368                           ;pinconfig.c: 35:     (INTCONbits.GIE = 1);
  9369  003B94  8EF2               	bsf	242,7,c	;volatile
  9370  003B96                     
  9371                           ;pinconfig.c: 37:     INTCON2 = 0x00;
  9372  003B96  0E00               	movlw	0
  9373  003B98  6EF1               	movwf	241,c	;volatile
  9374                           
  9375                           ;pinconfig.c: 38:     INTCON3 = 0x00;
  9376  003B9A  0E00               	movlw	0
  9377  003B9C  6EF0               	movwf	240,c	;volatile
  9378  003B9E                     
  9379                           ;pinconfig.c: 40:     INTCONbits.INT0IF = 0;
  9380  003B9E  92F2               	bcf	242,1,c	;volatile
  9381  003BA0                     
  9382                           ;pinconfig.c: 41:     INTCONbits.INT0IE = 1;
  9383  003BA0  88F2               	bsf	242,4,c	;volatile
  9384  003BA2                     
  9385                           ;pinconfig.c: 43:     INTCON3bits.INT1F = 0;
  9386  003BA2  90F0               	bcf	240,0,c	;volatile
  9387  003BA4                     
  9388                           ;pinconfig.c: 44:     INTCON3bits.INT1E = 1;
  9389  003BA4  86F0               	bsf	240,3,c	;volatile
  9390  003BA6                     
  9391                           ;pinconfig.c: 46:     INTCON3bits.INT2F = 0;
  9392  003BA6  92F0               	bcf	240,1,c	;volatile
  9393  003BA8                     
  9394                           ;pinconfig.c: 47:     INTCON3bits.INT2E = 1;
  9395  003BA8  88F0               	bsf	240,4,c	;volatile
  9396  003BAA                     
  9397                           ;pinconfig.c: 49:     INTCON3bits.INT1IF = 0;
  9398  003BAA  90F0               	bcf	240,0,c	;volatile
  9399  003BAC                     
  9400                           ;pinconfig.c: 50:     INTCON3bits.INT2IF = 0;
  9401  003BAC  92F0               	bcf	240,1,c	;volatile
  9402  003BAE                     
  9403                           ;pinconfig.c: 51:     INTCONbits.GIE = 1;
  9404  003BAE  8EF2               	bsf	242,7,c	;volatile
  9405  003BB0  0012               	return		;funcret
  9406  003BB2                     __end_of_configureIRQ:
  9407                           	opt callstack 0
  9408                           
  9409 ;; *************** function _isr *****************
  9410 ;; Defined at:
  9411 ;;		line 141 in file "main.c"
  9412 ;; Parameters:    Size  Location     Type
  9413 ;;		None
  9414 ;; Auto vars:     Size  Location     Type
  9415 ;;		None
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  1    wreg      void 
  9418 ;; Registers used:
  9419 ;;		wreg, status,2, status,0
  9420 ;; Tracked objects:
  9421 ;;		On entry : 0/0
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9425 ;;      Params:         0       0       0       0       0       0       0       0       0
  9426 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9428 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9429 ;;Total ram usage:        0 bytes
  9430 ;; Hardware stack levels used:    1
  9431 ;; This function calls:
  9432 ;;		Nothing
  9433 ;; This function is called by:
  9434 ;;		Interrupt level 2
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438                           	psect	intcode
  9439  000008                     __pintcode:
  9440                           	opt callstack 0
  9441  000008                     _isr:
  9442                           	opt callstack 17
  9443                           
  9444                           ;incstack = 0
  9445  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9446  00000A  EDA9  F01B         	call	int_func,f	;refresh shadow registers
  9447                           
  9448                           	psect	intcode_body
  9449  003752                     __pintcode_body:
  9450                           	opt callstack 17
  9451  003752                     int_func:
  9452                           	opt callstack 17
  9453  003752  0006               	pop		; remove dummy address from shadow register refresh
  9454  003754                     
  9455                           ;main.c: 143:     if(INTCONbits.INT0IF){
  9456  003754  A2F2               	btfss	242,1,c	;volatile
  9457  003756  EFAF  F01B         	goto	i2u519_41
  9458  00375A  EFB1  F01B         	goto	i2u519_40
  9459  00375E                     i2u519_41:
  9460  00375E  EFB7  F01B         	goto	i2l4262
  9461  003762                     i2u519_40:
  9462  003762                     
  9463                           ;main.c: 144:         currentState = 0xf05;
  9464  003762  0E0F               	movlw	15
  9465  003764  0100               	movlb	0	; () banked
  9466  003766  6FCF               	movwf	(_currentState+1)& (0+255),b
  9467  003768  0E05               	movlw	5
  9468  00376A  6FCE               	movwf	_currentState& (0+255),b
  9469  00376C                     
  9470                           ; BSR set to: 0
  9471                           ;main.c: 145:         INTCONbits.INT0IF = 0;
  9472  00376C  92F2               	bcf	242,1,c	;volatile
  9473  00376E                     i2l4262:
  9474                           
  9475                           ;main.c: 148:     if(INTCON3bits.INT1IF){
  9476  00376E  A0F0               	btfss	240,0,c	;volatile
  9477  003770  EFBC  F01B         	goto	i2u520_41
  9478  003774  EFBE  F01B         	goto	i2u520_40
  9479  003778                     i2u520_41:
  9480  003778  EFC4  F01B         	goto	i2l4268
  9481  00377C                     i2u520_40:
  9482  00377C                     
  9483                           ;main.c: 149:         currentState = 0xf06;
  9484  00377C  0E0F               	movlw	15
  9485  00377E  0100               	movlb	0	; () banked
  9486  003780  6FCF               	movwf	(_currentState+1)& (0+255),b
  9487  003782  0E06               	movlw	6
  9488  003784  6FCE               	movwf	_currentState& (0+255),b
  9489  003786                     
  9490                           ; BSR set to: 0
  9491                           ;main.c: 150:         INTCON3bits.INT1IF = 0;
  9492  003786  90F0               	bcf	240,0,c	;volatile
  9493  003788                     i2l4268:
  9494                           
  9495                           ;main.c: 153:     if(INTCON3bits.INT2IF){
  9496  003788  A2F0               	btfss	240,1,c	;volatile
  9497  00378A  EFC9  F01B         	goto	i2u521_41
  9498  00378E  EFCB  F01B         	goto	i2u521_40
  9499  003792                     i2u521_41:
  9500  003792  EFD1  F01B         	goto	i2l4274
  9501  003796                     i2u521_40:
  9502  003796                     
  9503                           ;main.c: 154:         currentState = 0xf07;
  9504  003796  0E0F               	movlw	15
  9505  003798  0100               	movlb	0	; () banked
  9506  00379A  6FCF               	movwf	(_currentState+1)& (0+255),b
  9507  00379C  0E07               	movlw	7
  9508  00379E  6FCE               	movwf	_currentState& (0+255),b
  9509  0037A0                     
  9510                           ; BSR set to: 0
  9511                           ;main.c: 155:         INTCON3bits.INT2IF = 0;
  9512  0037A0  92F0               	bcf	240,1,c	;volatile
  9513  0037A2                     i2l4274:
  9514                           
  9515                           ;main.c: 158:     if(TMR2IF){
  9516  0037A2  A29E               	btfss	3998,1,c	;volatile
  9517  0037A4  EFD6  F01B         	goto	i2u522_41
  9518  0037A8  EFD8  F01B         	goto	i2u522_40
  9519  0037AC                     i2u522_41:
  9520  0037AC  EFDC  F01B         	goto	i2l94
  9521  0037B0                     i2u522_40:
  9522  0037B0                     
  9523                           ;main.c: 159:         currentTime++;
  9524  0037B0  0100               	movlb	0	; () banked
  9525  0037B2  4BCC               	infsnz	_currentTime& (0+255),f,b
  9526  0037B4  2BCD               	incf	(_currentTime+1)& (0+255),f,b
  9527  0037B6                     
  9528                           ; BSR set to: 0
  9529                           ;main.c: 160:         TMR2IF = 0;
  9530  0037B6  929E               	bcf	3998,1,c	;volatile
  9531  0037B8                     i2l94:
  9532  0037B8  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9533  0037BA  0011               	retfie		f
  9534  0037BC                     __end_of_isr:
  9535                           	opt callstack 0
  9536                           
  9537                           	psect	rparam
  9538  0000                     
  9539                           	psect	temp
  9540  00005E                     btemp:
  9541                           	opt callstack 0
  9542  00005E                     	ds	1
  9543  0000                     int$flags	set	btemp
  9544  0000                     wtemp8	set	btemp+1
  9545  0000                     ttemp5	set	btemp+1
  9546  0000                     ttemp6	set	btemp+4
  9547  0000                     ttemp7	set	btemp+8
  9548                           tosu	equ	0xFFF
  9549                           tosh	equ	0xFFE
  9550                           tosl	equ	0xFFD
  9551                           stkptr	equ	0xFFC
  9552                           pclatu	equ	0xFFB
  9553                           pclath	equ	0xFFA
  9554                           pcl	equ	0xFF9
  9555                           tblptru	equ	0xFF8
  9556                           tblptrh	equ	0xFF7
  9557                           tblptrl	equ	0xFF6
  9558                           tablat	equ	0xFF5
  9559                           prodh	equ	0xFF4
  9560                           prodl	equ	0xFF3
  9561                           indf0	equ	0xFEF
  9562                           postinc0	equ	0xFEE
  9563                           postdec0	equ	0xFED
  9564                           preinc0	equ	0xFEC
  9565                           plusw0	equ	0xFEB
  9566                           fsr0h	equ	0xFEA
  9567                           fsr0l	equ	0xFE9
  9568                           wreg	equ	0xFE8
  9569                           indf1	equ	0xFE7
  9570                           postinc1	equ	0xFE6
  9571                           postdec1	equ	0xFE5
  9572                           preinc1	equ	0xFE4
  9573                           plusw1	equ	0xFE3
  9574                           fsr1h	equ	0xFE2
  9575                           fsr1l	equ	0xFE1
  9576                           bsr	equ	0xFE0
  9577                           indf2	equ	0xFDF
  9578                           postinc2	equ	0xFDE
  9579                           postdec2	equ	0xFDD
  9580                           preinc2	equ	0xFDC
  9581                           plusw2	equ	0xFDB
  9582                           fsr2h	equ	0xFDA
  9583                           fsr2l	equ	0xFD9
  9584                           status	equ	0xFD8


Data Sizes:
    Strings     76
    Constant    0
    Data        0
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160     76     112
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[11]), STR_9(CODE[8]), STR_8(CODE[8]), STR_7(CODE[8]), 
		 -> STR_6(CODE[11]), STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[11]), 
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1353_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[11]), STR_9(CODE[8]), STR_8(CODE[8]), STR_7(CODE[8]), 
		 -> STR_6(CODE[11]), STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[11]), 
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[11]), STR_9(CODE[8]), STR_8(CODE[8]), STR_7(CODE[8]), 
		 -> STR_6(CODE[11]), STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[11]), 
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[11]), STR_9(CODE[8]), STR_8(CODE[8]), STR_7(CODE[8]), 
		 -> STR_6(CODE[11]), STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[11]), 
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_escreve_lcd
    _escreve_lcd->_envia_byte_lcd
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _atoi->_isspace
    _caracter_inicio->_envia_byte_lcd
    _setup->_inicializa_lcd
    _setup->_limpa_lcd
    _limpa_lcd->_envia_byte_lcd
    _inicializa_lcd->_envia_byte_lcd
    _envia_byte_lcd->_envia_nibble_lcd

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_stateMachine
    _stateMachine->_printf
    _reset->_printf
    _displayPlayers->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  129405
                              _reset
                              _setup
                       _stateMachine
 ---------------------------------------------------------------------------------
 (1) _stateMachine                                         2     2      0   96931
                                             74 BANK0      2     2      0
                            ___fldiv
                           ___xxtofl
                     _displayPlayers
                          _limpa_lcd
                             _printf
                              _reset
 ---------------------------------------------------------------------------------
 (2) _reset                                                0     0      0   31014
                          _limpa_lcd
                             _printf
 ---------------------------------------------------------------------------------
 (2) _displayPlayers                                       0     0      0   32118
                    _caracter_inicio
                          _limpa_lcd
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   30328
                                             64 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   29508
                                             56 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           48    42      6   29136
                                             71 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   23173
                                             59 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4493
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1899
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1498
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0     730
                                              5 COMRAM     1     1      0
                        _escreve_lcd
 ---------------------------------------------------------------------------------
 (8) _escreve_lcd                                          1     1      0     708
                                              4 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    2352
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     638
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    2311
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _caracter_inicio                                      3     2      1    1104
                                              4 COMRAM     3     2      1
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1460
                       _configureIRQ
                      _configurePins
                     _inicializa_lcd
                          _initTimer
                          _limpa_lcd
 ---------------------------------------------------------------------------------
 (3) _limpa_lcd                                            1     1      0     686
                                              4 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (2) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _inicializa_lcd                                       1     1      0     774
                                              4 COMRAM     1     1      0
                     _envia_byte_lcd
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (9) _envia_byte_lcd                                       2     1      1     686
                                              2 COMRAM     2     1      1
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (10) _envia_nibble_lcd                                    2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _configurePins                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configureIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _isr                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _reset
     _limpa_lcd
       _envia_byte_lcd
         _envia_nibble_lcd
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _escreve_lcd
                     _envia_byte_lcd
                       _envia_nibble_lcd
               _fputs
                 _fputc
                   _putch
                     _escreve_lcd
                       _envia_byte_lcd
                         _envia_nibble_lcd
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _escreve_lcd
                 _envia_byte_lcd
                   _envia_nibble_lcd
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _setup
     _configureIRQ
     _configurePins
     _inicializa_lcd
       _envia_byte_lcd
         _envia_nibble_lcd
       _envia_nibble_lcd
     _initTimer
     _limpa_lcd
       _envia_byte_lcd
         _envia_nibble_lcd
   _stateMachine
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _displayPlayers
       _caracter_inicio
         _envia_byte_lcd
           _envia_nibble_lcd
       _limpa_lcd
         _envia_byte_lcd
           _envia_nibble_lcd
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _escreve_lcd
                       _envia_byte_lcd
                         _envia_nibble_lcd
                 _fputs
                   _fputc
                     _putch
                       _escreve_lcd
                         _envia_byte_lcd
                           _envia_nibble_lcd
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _escreve_lcd
                   _envia_byte_lcd
                     _envia_nibble_lcd
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     _limpa_lcd
       _envia_byte_lcd
         _envia_nibble_lcd
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _escreve_lcd
                     _envia_byte_lcd
                       _envia_nibble_lcd
               _fputs
                 _fputc
                   _putch
                     _escreve_lcd
                       _envia_byte_lcd
                         _envia_nibble_lcd
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _escreve_lcd
                 _envia_byte_lcd
                   _envia_nibble_lcd
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _reset
       _limpa_lcd
         _envia_byte_lcd
           _envia_nibble_lcd
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _escreve_lcd
                       _envia_byte_lcd
                         _envia_nibble_lcd
                 _fputs
                   _fputc
                     _putch
                       _escreve_lcd
                         _envia_byte_lcd
                           _envia_nibble_lcd
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _escreve_lcd
                   _envia_byte_lcd
                     _envia_nibble_lcd
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      70       5       70.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11D      20        0.0%
DATA                 0      0     11D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec 04 23:28:47 2022

            ?_configureIRQ 0001               ___fldiv@aexp 0027               ___fldiv@bexp 0026  
   __end_of_displayPlayers 2E86               ___fldiv@sign 001F                         l41 3C2C  
                       l50 2E84                         l53 3750                         l61 258C  
                       l71 26DE                         l75 277C                         l77 27DE  
           ?_configurePins 0001               ___awdiv@sign 0006                __CFG_BOR$ON 000000  
      ___wmul@multiplicand 0003                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
                      l101 3664                        l110 3BE8                        l104 3B6C  
                      l113 36E6                        l210 3328                        l107 3C22  
                      l205 32AA                        l118 39F6                        l208 32EC  
                      l161 3C00                        l155 3B8E                        l331 3814  
                      l164 3BCE                        l228 144A                        l332 381C  
                      l325 1CB4                        l158 3BB0                        l246 0C68  
                      l318 1D92                        l335 3B48                        l600 3048  
                      l272 1000                        l605 308E                        l632 2F8A  
                      l609 3A66                        l566 33EC                        l905 3970  
                      l930 2474                        l922 237A                        l594 3546  
                      l579 349C                        l931 2462                        l917 2556  
                      l919 23B6                        l863 163A                        l928 23FC  
                      l880 1754                        l872 190A                        l864 1628  
                      l953 21BC                        l865 15EE                        l890 1812  
                      l956 204E                        l949 1E58                        l990 2A48  
                      l966 217E                        l958 20C6                        l959 20B4  
                      l993 2BA4                        l889 1824                        l997 2AE0  
             __CFG_CPB$OFF 000000                        _PR2 000FCB               __CFG_CPD$OFF 000000  
                      _pad 3264                        _isr 0008               ___awmod@sign 0006  
                      wreg 000FE8               ___flmul@aexp 0012               ___flmul@bexp 0013  
             ___flmul@sign 000D               ___flmul@temp 0018               ___flmul@prod 0014  
             __CFG_LVP$OFF 000000               ___fltol@exp1 000A               __CFG_WDT$OFF 000000  
                     l1004 2B3C                       l1101 39B4                       l1016 318C  
                     l1120 3AD4                       l1114 38D8                       l1124 3262  
                     l1108 3AFC                       l1045 2D2C                       l1054 29F0  
                     l1134 3874                       l1064 3A9E                       l1072 392A  
                     l1048 2D34                       l3000 18E2                       l1057 2934  
                     l3002 18E4                       l1139 387C                       l3004 18EA  
                     l3020 32A2                       l3012 3264                       l1093 35DC  
                     l3102 3B24                       l3110 21CA                       l3006 18F8  
                     l3030 3310                       l3022 32B6                       l3014 3274  
                     l1078 3A2E                       l3104 3B40                       l3200 23FA  
                     l3120 220A                       l3112 21D8                       l3008 18FA  
                     l3040 3116                       l3024 32CA                       l3016 3288  
                     l4000 1D42                       l3210 245A                       l3202 240C  
                     l3130 2230                       l3122 220C                       l3114 21DA  
                     l3042 3122                       l3034 3090                       l3026 32CE  
                     l3018 3296                       l4002 1D50                       l4100 3686  
                     l3220 24C8                       l3204 241A                       l3140 2270  
                     l3132 223E                       l3116 21EA                       l3124 2214  
                     l3108 21BE                       l3300 1EF4                       l3052 3184  
                     l3036 30B0                       l3028 32FC                       l3060 381E  
                     l4020 37F8                       l2510 3B90                       l4110 36C8  
                     l4102 369C                       l4022 3BD0                       l3230 2532  
                     l3214 2484                       l3222 24CC                       l3206 241E  
                     l3150 22B0                       l3142 2272                       l3134 2240  
                     l3126 2224                       l3118 21FA                       l3310 1F3A  
                     l3302 1F02                       l3038 30EE                       l3046 312E  
                     l3070 27E0                       l4006 1D5C                       l4014 37BC  
                     l2520 3BA4                       l2512 3B96                       l4112 36D2  
                     l4104 36A4                       l4024 3BDA                       l4120 2A12  
                     l4040 39E2                       l4032 39B8                       l3400 337C  
                     l3232 2536                       l3224 24E6                       l3216 2490  
                     l3208 242C                       l3160 22E0                       l3152 22B8  
                     l3136 2250                       l3144 227A                       l3128 222A  
                     l3320 1FA8                       l3312 1F54                       l3304 1F0E  
                     l3048 3140                       l3072 2800                       l3056 387E  
                     l3064 3854                       l4008 1D80                       l4016 37C4  
                     l4200 2650                       l2530 3BAE                       l2522 3BA6  
                     l2514 3B9E                       l4114 36DC                       l4106 36AA  
                     l4130 2A8A                       l4122 2A58                       l4042 39E6  
                     l4034 39BC                       l3410 33B6                       l3402 3384  
                     l3234 2544                       l3226 24FC                       l3218 249E  
                     l3170 231E                       l3162 22E0                       l3154 22BC  
                     l3146 228A                       l3138 2260                       l3330 203E  
                     l3322 1FD2                       l3314 1F64                       l3306 1F1E  
                     l3250 1DAE                       l3090 29A8                       l3082 28E8  
                     l3074 2856                       l3058 388E                       l3066 3866  
                     l4018 37D2                       l4026 3AD6                       l4050 2D4E  
                     l4210 26DC                       l4202 2662                       l2524 3BA8  
                     l2516 3BA0                       l2508 3B6E                       l4108 36B0  
                     l2540 3BF6                       l2532 3BEA                       l4140 2B12  
                     l4132 2A96                       l4124 2A6E                       l4116 29F4  
                     l4044 39EC                       l4036 39CC                       l3420 33DC  
                     l3412 33BE                       l3404 338C                       l3236 254A  
                     l3228 2516                       l3180 236A                       l3172 232E  
                     l3148 22A0                       l3340 207E                       l3332 204C  
                     l3324 2008                       l3316 1F80                       l3308 1F2A  
                     l3260 1DE6                       l3252 1DB0                       l3500 3A30  
                     l3092 29D0                       l3084 2924                       l3076 286A  
                     l4028 3AE0                       l4060 2DBA                       l4052 2D60  
                     l4220 275E                       l4212 26E6                       l4204 2674  
                     l2526 3BAA                       l2518 3BA2                       l2542 3BF8  
                     l2534 3BEE                       l4150 2B50                       l4142 2B1E  
                     l4134 2AC8                       l4118 2A04                       l4038 39D0  
                     l3422 33E4                       l3414 33C0                       l3406 339A  
                     l3430 3400                       l3238 254C                       l3190 23B4  
                     l3182 2378                       l3174 233E                       l3166 22F4  
                     l3158 22D0                       l3350 20F0                       l3342 20AC  
                     l3334 205E                       l3326 2016                       l3318 1F8C  
                     l3270 1E12                       l3262 1DF6                       l3254 1DC0  
                     l3246 1D94                       l3502 3A46                       l3510 2E9C  
                     l3094 29E0                       l3078 2878                       l3086 2958  
                     l4070 2E16                       l4062 2DCC                       l4054 2D7C  
                     l4046 2D36                       l4222 2772                       l4214 26EE  
                     l4206 26C0                       l4230 2788                       l2528 3BAC  
                     l2544 3BFA                       l2536 3BF2                       l4240 3BBA  
                     l4152 2B74                       l4144 2B2C                       l4136 2ACA  
                     l4128 2A82                       l3416 33C6                       l3408 33A0  
                     l3440 3434                       l3432 3408                       l3192 23C6  
                     l3184 2384                       l3176 2346                       l3168 230E  
                     l3360 2166                       l3352 211A                       l3336 206C  
                     l3328 2034                       l3280 1E68                       l3272 1E22  
                     l3264 1DFC                       l3256 1DD0                       l3248 1DA0  
                     l3504 3A56                       l3520 2EEC                       l3088 2994  
                     l2800 3AB0                       l3600 0964                       l4080 2E6C  
                     l4072 2E28                       l4064 2DE8                       l4056 2D86  
                     l4048 2D3A                       l4224 277A                       l4216 2700  
                     l4208 26D4                       l2546 3BFC                       l2538 3BF4  
                     l4242 3BBE                       l4154 2B84                       l4146 2B4A  
                     l4138 2AD6                       l3098 3A68                       l3418 33CC  
                     l3450 3470                       l3442 343C                       l3434 340C  
                     l3426 33EE                       l3194 23DC                       l3186 23A2  
                     l3178 2356                       l3362 2182                       l3370 21A8  
                     l3346 20D6                       l3354 211E                       l3338 2070  
                     l3290 1EA2                       l3282 1E78                       l3274 1E32  
                     l3266 1E02                       l3258 1DE0                       l2810 144C  
                     l3530 2F16                       l3522 2EF0                       l3514 2EB0  
                     l2802 3AC8                       l3602 0976                       l4082 2E76  
                     l4074 2E34                       l4066 2DF2                       l4058 2DA8  
                     l4090 373E                       l4330 27A0                       l4218 2712  
                     l4170 258E                       l4162 2558                       l4250 3C02  
                     l2548 3BFE                       l4244 3BC2                       l4156 2B92  
                     l4148 2B4C                       l4332 2C62                       l3452 3476  
                     l3444 3444                       l3436 341A                       l3428 33F2  
                     l3196 23E2                       l3188 23A4                       l3372 21AC  
                     l3364 2192                       l3356 2138                       l3348 20E2  
                     l3292 1EB8                       l3276 1E42                       l3268 1E10  
                     l2900 1608                       l2820 1488                       l2812 1458  
                     l3540 2F3E                       l3532 2F20                       l3524 2EFE  
                     l3516 2EDA                       l3508 2E86                       l3700 0D8E  
                     l3620 0A4A                       l3604 0992                       l3612 09DC  
                     l4076 2E3E                       l4068 2E04                       l4092 3742  
                     l4084 36E8                       l4180 25C6                       l4172 25A8  
                     l4164 255C                       l4252 3C06                       l4094 3666  
                     l4246 3BC6                       l4238 3BB2                       l4158 2B94  
                     l3390 3348                       l3382 332A                       l3446 3452  
                     l3454 347C                       l3438 3422                       l3198 23EC  
                     l3470 351A                       l3462 349E                       l3366 21A0  
                     l3358 214C                       l3294 1EC4                       l3286 1E8C  
                     l3278 1E48                       l2910 1648                       l2902 160C  
                     l2830 14B8                       l2822 1498                       l2814 1466  
                     l3542 2F4A                       l3534 2F2A                       l3518 2EDC  
                     l2806 39F8                       l3710 0EA2                       l3702 0D9E  
                     l3622 0A66                       l3614 0A02                       l3630 0AB0  
                     l3606 09AA                       l4078 2E60                       l4086 3732  
                     l4190 2608                       l4182 25D0                       l4174 25AA  
                     l4166 256E                       l4254 3C0A                       l2760 365C  
                     l2752 35E0                       l4096 3670                       l4248 3BCA  
                     l3560 3924                       l3552 38DA                       l3392 3356  
                     l3384 332E                       l3456 348C                       l3448 3468  
                     l3472 353E                       l3464 34CC                       l3480 2FBA  
                     l3368 21A2                       l3296 1EDC                       l3288 1E98  
                     l2920 168A                       l2912 1658                       l2904 161A  
                     l2840 14E2                       l2832 14CA                       l2824 149A  
                     l2816 1468                       l3376 392C                       l3544 2F5A  
                     l3800 1286                       l3720 0F42                       l3704 0DB2  
                     l3712 0EA8                       l3640 0B3A                       l3632 0ACA  
                     l3624 0A7E                       l3608 09B4                       l4088 3734  
                     l4192 261A                       l4184 25DC                       l4176 25B4  
                     l4168 2580                       l2754 35E2                       l2762 3B4C  
                     l4098 3680                       l3554 38DE                       l3394 335E  
                     l3386 333C                       l3458 3494                       l3474 3544  
                     l3466 34DC                       l3490 3028                       l3482 2FCA  
                     l3298 1EE8                       l2930 16B8                       l2922 1698  
                     l2906 161C                       l2842 14F2                       l2850 151C  
                     l2834 14CC                       l2818 1478                       l2826 14A2  
                     l3378 393C                       l3546 2F6A                       l2770 3C18  
                     l3810 12BC                       l3802 128E                       l3730 0FD8  
                     l3722 0F74                       l3714 0EC6                       l3706 0E16  
                     l3650 0C12                       l3642 0B94                       l3626 0A88  
                     l3618 0A38                       l3570 0876                       l4194 2626  
                     l4186 25E4                       l4178 25B8                       l2756 3652  
                     l2764 3B56                       l3556 38F2                       l3396 3362  
                     l3388 3344                       l3468 350A                       l3492 3036  
                     l3484 2FF8                       l2940 1724                       l2932 16C2  
                     l2924 16A4                       l2916 166C                       l2908 1626  
                     l2860 1554                       l2852 152C                       l2844 1502  
                     l2836 14D2                       l2828 14B2                       l3548 2F7A  
                     l2772 3C26                       l2780 3576                       l3820 1318  
                     l3812 12C4                       l3804 129E                       l3740 1090  
                     l3732 0FEC                       l3724 0F84                       l3716 0EFA  
                     l3708 0E6E                       l3660 0C5C                       l3652 0C16  
                     l3644 0BC8                       l3636 0B00                       l3580 08C6  
                     l3572 087E                       l3564 084E                       l4196 2638  
                     l4188 25F6                       l2758 365A                       l2766 3B5C  
                     l3558 3920                       l3398 336A                       l3494 3086  
                     l3486 3008                       l3478 2F8C                       l2942 1734  
                     l2926 16A8                       l2918 167C                       l2934 16C8  
                     l2870 1568                       l2862 1558                       l2854 153E  
                     l2846 1512                       l2838 14E0                       l2782 3594  
                     l2774 3548                       l2790 397E                       l3830 1358  
                     l3822 1320                       l3814 12D0                       l3806 12A6  
                     l3750 10DC                       l3742 10A2                       l3734 0FF8  
                     l3726 0F94                       l3718 0F2C                       l3670 0C98  
                     l3654 0C28                       l3662 0C74                       l3646 0BD0  
                     l3638 0B34                       l3590 08FE                       l3582 08D4  
                     l3574 08A2                       l3566 0858                       l3910 31C4  
                     l4198 2644                       ?_pad 0017                       l2768 3B64  
                     l3496 308C                       l3488 3016                       l2960 17B6  
                     l2952 178E                       l2936 16EE                       l2944 1744  
                     l2928 16B6                       l2880 157C                       l2872 156C  
                     l2864 155C                       l2856 154C                       l2848 1514  
                     l2784 35CA                       l2776 355A                       l2792 3990  
                     l3840 1394                       l3832 136A                       l3816 12D6  
                     l3824 1326                       l3808 12B4                       l3760 1110  
                     l3752 10EA                       l3744 10B4                       l3736 101C  
                     l3728 0FC8                       l3680 0CFE                       l3672 0CB4  
                     l3656 0C3A                       l3648 0C02                       l3592 0902  
                     l3584 08E6                       l3576 08AC                       l3568 0868  
                     l3920 3240                       l3912 31D2                       l3904 318E  
                     l2962 17BE                       l2954 1798                       l2946 176A  
                     l2938 1722                       l2970 17E2                       l2890 1590  
                     l2882 1580                       l2874 1570                       l2866 1560  
                     l2858 1550                       l2778 356C                       l2794 3994  
                     l3850 13EC                       l3842 139A                       l3834 1376  
                     l3826 1338                       l3818 12FC                       l3770 1142  
                     l3762 1120                       l3754 10FA                       l3746 10C2  
                     l3738 1080                       l3690 0D46                       l3682 0D10  
                     l3674 0CEA                       l3658 0C42                       l3586 08F2  
                     l3594 0908                       l3578 08B4                       l3914 31EA  
                     l3906 31B8                       l3930 1950                       l2980 1834  
                     l2972 17E6                       l2964 17C2                       l2956 17A6  
                     l2948 177A                       l2892 15BA                       l2884 1584  
                     l2876 1574                       l2868 1564                       l2788 3972  
                     l2796 3AA0                       l3852 13F4                       l3836 137E  
                     l3828 1352                       l3780 11EA                       l3772 1154  
                     l3764 1124                       l3756 10FE                       l3748 10CA  
                     l3692 0D54                       l3684 0D22                       l3676 0CF2  
                     l3668 0C86                       l3596 092E                       l3588 08FA  
                     l3916 3206                       l3940 19B2                       l3932 1954  
                     l3924 190C                       l3870 2BDE                       l3862 2BA6  
                     l2990 189A                       l2982 1840                       l2974 17F4  
                     l2966 17D2                       l2958 17A8                       l2894 15D6  
                     l2886 1588                       l2878 1578                       l2798 3AAC  
                     l3854 1404                       l3846 13CE                       l3838 138E  
                     l3790 1242                       l3782 11F2                       l3774 1158  
                     l3766 112A                       l3758 1104                       l3694 0D6C  
                     l3686 0D30                       l3678 0CF6                       l3918 3218  
                     l3950 1A60                       l3942 19EC                       l3934 1978  
                     l3926 1930                       l3880 2C34                       l3872 2C14  
                     l3864 2BBA                       l2992 18AA                       l2984 184E  
                     l2976 180A                       l2968 17D4                       l2896 15E6  
                     l2888 158C                       l3856 140A                       l3848 13E0  
                     l3792 1250                       l3768 1130                       l3776 115E  
                     l3784 11F6                       l3696 0D7E                       l3688 0D34  
                     l3960 1AE2                       l3944 1A0C                       l3936 1980  
                     l3952 1A72                       l3928 193E                       l3890 2CAE  
                     l3882 2C3C                       l3874 2C18                       l3866 2BBE  
                     l2994 18CA                       l2986 1888                       l2898 15FC  
                     l3858 1426                       l3794 1260                       l3786 1214  
                     l3778 11B6                       l3698 0D86                       l3970 1B78  
                     l3962 1B12                       l3954 1A92                       l3946 1A1A  
                     l3938 198E                       l3884 2C44                       l3868 2BC2  
                     l2996 18CE                       l2988 188A                       l3796 1264  
                     l3788 1230                       l3980 1C3E                       l3964 1B24  
                     l3956 1AA2                       l3894 2CEC                       l3886 2C78  
                     l3878 2C1E                       l2998 18DC                       l3798 1274  
                     l3982 1C50                       l3990 1CF0                       l3966 1B3A  
                     l3974 1BA4                       l3958 1AD2                       _ADIE 007CEE  
                     l3896 2CFE                       l3992 1D14                       l3984 1C84  
                     l3976 1BD2                       l3968 1B48                       l3898 2D10  
                     l3994 1D22                       l3986 1CC4                       l3996 1D36  
                     ?_isr 0001                       STR_1 080C                       STR_2 0817  
                     STR_3 080C                       STR_4 0832                       STR_5 082A  
                     STR_6 0817                       STR_7 082A                       STR_8 0832  
                     STR_9 0822                       u3000 180A                       u3001 1806  
                     u3010 1820                       u3011 181C                       u3020 1834  
                     u3100 3274                       u3021 1830                       u3101 3270  
                     u3030 184E                       u3110 3296                       u3031 184A  
                     u3111 3292                       u4000 3A46                       u3040 1888  
                     u3200 317C                       u3120 32EC                       u4001 3A42  
                     u3041 1884                       u3121 32E8                       u3050 189A  
                     u4010 2E9C                       u3130 32FC                       u3210 38C6  
                     u3051 1896                       u4011 2E98                       u3131 32F8  
                     u3060 18AA                       u4020 2ED0                       u3140 30D0  
                     u3300 28E4                       u3220 38D8                       u4100 0876  
                     u3061 18A6                       u3301 28E0                       u3221 38D4  
                     u4101 0872                       u3070 18CA                       u4030 2EFE  
                     u3150 30EE                       u3310 2908                       u3230 384E  
                     u4110 08C6                       u3071 18C6                       u4031 2EFA  
                     u3151 30EA                       u3231 3848                       u4111 08C2  
                     u5000 2AC4                       u3400 21FA                       u3080 18DC  
                     u4040 2F12                       u3160 3116                       u3320 2924  
                     u3240 3850                       u4200 0A32                       u4120 08D4  
                     u5001 2AC0                       u3401 21F6                       u3081 18D8  
                     u4041 2F0E                       u4025 2EC6                       u3161 3112  
                     u3145 30C6                       u3321 2920                       u3217 38BC  
                     u4121 08D0                       u5010 2B0E                       u3410 223E  
                     u3090 18F8                       u4050 2F3A                       u3170 3140  
                     u3330 2978                       u3250 3866                       u4210 0A4A  
                     u4130 08E6                       u5011 2B0A                       u3411 223A  
                     u3091 18F4                       u4051 2F36                       u3171 313C  
                     u3315 28FE                       u3251 3862                       u4211 0A46  
                     u4131 08E2                       u5020 2B2C                       u3500 23DC  
                     u3420 2250                       u4060 2F5A                       u3340 2994  
                     u3260 2828                       u2700 3A2A                       u4300 0CB4  
                     u4220 0AFC                       u4140 092E                       u5100 2608  
                     u5021 2B28                       u3501 23D8                       u3421 224C  
                     u4061 2F56                       u3341 2990                       u4301 0CB0  
                     u4221 0AF8                       u4141 092A                       u5101 2604  
                     u5030 2B3C                       u3510 23FA                       u3430 2260  
                     u2710 1466                       u4070 2F6A                       u3190 317A  
                     u3350 29D0                       u3270 2856                       u2630 355A  
                     u4310 0CEA                       u4230 0B90                       u4150 095C  
                     u5110 261A                       u5031 2B38                       u3511 23F6  
                     u3431 225C                       u2711 1462                       u4071 2F66  
                     u3191 3174                       u3351 29CC                       u3335 296E  
                     u3271 2852                       u2631 3556                       u4311 0CE6  
                     u4231 0B8C                       u4151 0956                       u5111 2616  
                     u5040 2B4A                       u3360 3A98                       u4080 38F2  
                     u3600 2544                       u3520 241A                       u3440 22A0  
                     u2800 15BA                       u2720 1478                       u3280 2878  
                     u2640 356C                       u4400 0F74                       u4320 0D10  
                     u4240 0C02                       u4160 095E                       u5120 2638  
                     u2625 3B54                       u5041 2B46                       u3361 3A92  
                     u4081 38EE                       u3601 2540                       u3521 2416  
                     u3441 229C                       u2801 15B6                       u2721 1474  
                     u3185 3152                       u3281 2874                       u3265 281E  
                     u2641 3568                       u4401 0F70                       u4321 0D0C  
                     u4241 0BFE                       u5121 2634                       u2626 3B56  
                     u5050 2B84                       u3370 3A9A                       u4090 3920  
                     u3530 242C                       u3450 22E0                       u3610 1DAE  
                     u2810 15D2                       u2730 1488                       u2650 3594  
                     u4410 0F84                       u4330 0D22                       u4250 0C28  
                     u4170 0976                       u5130 2662                       u5051 2B80  
                     u4091 391C                       u3531 2428                       u3451 22DC  
                     u3611 1DAA                       u2811 15CC                       u2731 1484  
                     u2651 3590                       u4411 0F80                       u4331 0D1E  
                     u4251 0C24                       u4171 0972                       u5131 265E  
                     u5060 2B92                       u3540 245A                       u3460 2356  
                     u3380 21D8                       u3700 204C                       u3620 1DC0  
                     u2900 16B6                       u2820 15D4                       u2740 14CA  
                     u2660 35CA                       u4500 1214                       u4420 0FEC  
                     u4340 0D30                       u4260 0C3A                       u4180 0A02  
                     u5140 2674                       u5061 2B8E                       u3541 2456  
                     u3461 2352                       u3381 21D4                       u3701 2048  
                     u3621 1DBC                       u2901 16B2                       u2741 14C6  
                     u2661 35C6                       u4501 1210                       u4421 0FE8  
                     u4341 0D2C                       u4261 0C36                       u4181 09FE  
                     u5141 2670                       u3550 2470                       u3470 2378  
                     u3390 21EA                       u3710 206C                       u3630 1DD0  
                     u2910 16EE                       u2830 15FC                       u2750 14E0  
                     u2670 39B4                       u4510 1230                       u4430 1090  
                     u4350 0D46                       u4270 0C5C                       u4190 0A30  
                     u5150 26D4                       u5070 256E                       u3551 246C  
                     u3471 2374                       u3391 21E6                       u3711 2068  
                     u3631 1DCC                       u2911 16EA                       u2831 15F8  
                     u2751 14DC                       u3295 288C                       u2671 39B0  
                     u4511 122C                       u4431 108C                       u4351 0D42  
                     u4271 0C58                       u4191 0A2A                       u5151 26D0  
                     u5071 256A                       u3800 333C                       u3560 2484  
                     u3480 23A2                       u3720 207E                       u3640 1E10  
                     u2920 1734                       u2840 161A                       u2760 14F2  
                     u3296 2896                       u2680 3AC8                       u4600 13CA  
                     u4520 1242                       u4440 10A2                       u4360 0D54  
                     u4280 0C82                       u5160 2700                       u5080 2580  
                     u3801 3338                       u3561 2480                       u3481 239E  
                     u3721 207A                       u3641 1E0C                       u2921 1730  
                     u2841 1616                       u2761 14EE                       u3297 28A6  
                     u2681 3AC4                       u4521 123E                       u4441 109E  
                     u4361 0D50                       u4281 0C7E                       u5161 26FC  
                     u5081 257C                       u3810 3356                       u3570 249E  
                     u3490 23C6                       u3730 20AC                       u3650 1E22  
                     u2930 176A                       u2850 163A                       u2770 1502  
                     u2690 3A28                       u4610 13E0                       u4530 1250  
                     u4450 10B4                       u4370 0D7E                       u4290 0C98  
                     u5170 2712                       u5090 25F6                       u5307 365E  
                     u3811 3352                       u3571 249A                       u3491 23C2  
                     u3731 20A8                       u3651 1E1E                       u2931 1766  
                     u2851 1636                       u2771 14FE                       u2691 3A22  
                     u4611 13DC                       u4531 124C                       u4451 10B0  
                     u4371 0D7A                       u4291 0C94                       u5171 270E  
                     u5091 25F2                       _PEIE 007F96                       u4620 2BDE  
                     u3820 337C                       u3900 3468                       u3580 24E6  
                     u3740 20C2                       u3660 1E32                       u2940 177A  
                     u2860 1648                       u2780 153E                       u4540 1286  
                     u4460 10C2                       u4380 0EC6                       u4700 31EA  
                     u5180 2772                       u4621 2BDA                       u3821 3378  
                     u3901 3464                       u3581 24E2                       u3741 20BE  
                     u3661 1E2E                       u2941 1776                       u2861 1644  
                     u2781 153A                       u4541 1282                       u4461 10BE  
                     u4381 0EC2                       u4701 31E6                       u5181 276E  
                     u5237 259A                       u4630 2C14                       u3830 339A  
                     u3910 348C                       u3590 2516                       u3750 20D6  
                     u3670 1E68                       u2950 17A6                       u2870 1658  
                     u2790 154C                       u4550 12B4                       u4470 10DC  
                     u4390 0F2C                       u4710 3206                       u5247 3BE0  
                     u4631 2C10                       u3831 3396                       u3911 3488  
                     u3591 2512                       u3751 20D2                       u3671 1E64  
                     u2951 17A2                       u2871 1654                       u2791 1548  
                     u4551 12B0                       u4471 10D8                       u4391 0F28  
                     u4711 3202                       u4640 2C30                       u3840 33B6  
                     u3920 34CC                       u3760 20F0                       u3680 1E78  
                     u2960 17B6                       u2880 168A                       u4560 1338  
                     u4480 10EA                       u4720 3218                       u4800 1AA2  
                     u5257 3676                       u4641 2C2C                       u3841 33B2  
                     u3921 34C8                       u3761 20EC                       u3681 1E74  
                     u2961 17B2                       u2881 1686                       u4561 1334  
                     u4481 10E6                       u4721 3214                       u4801 1A9E  
                     u4650 2CE6                       u3850 33DC                       u3930 350A  
                     u3770 2138                       u3690 1FF2                       u2970 17D2  
                     u2890 1698                       u4570 1352                       u4490 1142  
                     u4730 3240                       u4810 1AE2                       u5267 368C  
                     u4651 2CE0                       u3851 33D8                       u3931 3506  
                     u3771 2134                       u2971 17CE                       u2891 1694  
                     u4571 134E                       u4491 113E                       u4731 323C  
                     u4811 1ADE                       u4900 39E2                       u4660 2CE8  
                     u3860 3400                       u3940 353E                       u3780 2166  
                     u2980 17E2                       u4580 136A                       u4820 1B24  
                     u4740 1930                       u5277 369E                       u4901 39DE  
                     u3861 33FC                       u3941 353A                       u3781 2162  
                     u2981 17DE                       u4581 1366                       u4821 1B20  
                     u4741 192C                       u4670 2CFE                       u3870 341A  
                     u3950 2FBA                       u3790 21A0                       u2990 17F4  
                     u4590 13C8                       u4830 1BD2                       u4750 1978  
                     u4910 2D4E                       u5287 36C0                       u4671 2CFA  
                     u3871 3416                       u3951 2FB6                       u3791 219C  
                     u3695 1FE8                       u2991 17F0                       u4591 13C2  
                     u4831 1BCE                       u4751 1974                       u4911 2D4A  
                     u4680 2D10                       u3880 3434                       u3960 2FF8  
                     u4840 1C38                       u4760 19B2                       u4920 2D60  
                     u5297 3654                       u4681 2D0C                       u3881 3430  
                     u3961 2FF4                       u4841 1C32                       u4761 19AE  
                     u4921 2D5C                       u3890 3452                       u3970 3016  
                     u4690 31B8                       u4850 1C3A                       u4770 1A5A  
                     u4930 2DBA                       u3891 344E                       u3971 3012  
                     u4691 31B4                       u4771 1A54                       u4931 2DB6  
                     u3980 3036                       u4860 1C50                       u4780 1A5C  
                     u4940 2DCC                       u3981 3032                       u4861 1C4C  
                     u4941 2DC8                       u3990 3086                       u4870 1D14  
                     u4790 1A72                       u4950 2E16                       u3991 3082  
                     u4871 1D10                       u4791 1A6E                       u4951 2E12  
                     u4880 3814                       u4960 2E28                       u4881 3810  
                     u4961 2E24                       u4970 2A04                       u4890 39CC  
                     u4971 2A00                       u4891 39C8                       u4980 2A12  
                     u4981 2A0E                       i2l94 37B8                       u4990 2A6E  
                     u4991 2A6A               ?_escreve_lcd 0001     envia_byte_lcd@endereco 0004  
                     _dbuf 0100                       _atoi 2BA6                       _main 3C02  
                     _prec 00C0                       _nout 00BC                       pad@i 001E  
                     pad@p 001B                       fsr1h 000FE2                       fsr2h 000FDA  
                     indf1 000FE7                       indf2 000FDF                       fsr1l 000FE1  
                     pad@w 0020                       fsr2l 000FD9                       btemp 005E  
            ___fpclassifyf 3090                       prodh 000FF4                       prodl 000FF3  
                     start 000E              __CFG_IESO$OFF 000000            ___fldiv@new_exp 0020  
             _tolower$1414 000D              __CFG_MCLRE$ON 000000             ??_configureIRQ 0001  
  __end_of_caracter_inicio 39F8               ___param_bank 000000            ?_displayPlayers 0001  
                    ??_pad 001D                      ??_isr 0001             __CFG_CCP2MX$ON 000000  
            ___fltol@sign1 0009                      ?_atoi 0008            __end_of___fladd 190C  
                    ?_main 0001            __end_of___fldiv 2558            __end_of___awdiv 33EE  
          __end_of___flneg 3A68                      STR_10 0801                      STR_11 083A  
                    STR_12 0842                      STR_21 084A                      STR_15 083E  
                    STR_16 0846                      STR_19 084A            __end_of___awmod 349E  
          __end_of___flmul 21BE            __end_of___flsub 3972            __end_of___fltol 2F8C  
          ___awdiv@divisor 0003            ___awdiv@counter 0005               vfpfcnvrt@fmt 004A  
            __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000    __size_of_envia_byte_lcd 0024             __CFG_EBTRB$OFF 000000  
                    _flags 00C2                      _fputc 3548                      _fputs 3972  
          __end_of_isdigit 3AA0                      _reset 36E8                      _setup 3BB2  
                    atoi@n 0015                      pad@fp 0017                      atoi@s 0008  
                    _width 00BE                      _putch 3C24            __end_of_isspace 392C  
          __end_of_isupper 3A30                      tablat 000FF5                      ttemp5 005F  
                    ttemp6 0062                      ttemp7 0066                      status 000FD8  
                    wtemp8 005F             ?___fpclassifyf 0001            __end_of_tolower 387E  
          __end_of_strncmp 3264             __CFG_ICPRT$OFF 000000            __initialization 3AFE  
             __end_of_atoi 2D36               __end_of_main 3C16            ??_configurePins 0001  
                   ??_atoi 000A                     ??_main 005E              __activetblptr 000002  
                   ?_fputc 0007                     ?_fputs 0010                     ?_reset 0001  
         ___awdiv@dividend 0001                     ?_setup 0001                     ?_putch 0001  
                   i2l4260 376C                     i2l4270 3796                     i2l4262 376E  
                   i2l4272 37A0                     i2l4264 377C                     i2l4256 3754  
                   i2l4274 37A2                     i2l4266 3786                     i2l4258 3762  
                   i2l4276 37B0                     i2l4268 3788                     i2l4278 37B6  
           _player1Pressed 00C8                     _TMR2IE 007CE9                     _TMR2IF 007CF1  
  __size_of_inicializa_lcd 0082             _player2Pressed 00C6           __end_of___xxtofl 2BA6  
           __CFG_XINST$OFF 000000           _envia_nibble_lcd 35DE               vfprintf@cfmt 009E  
         ?_caracter_inicio 0005                     ___flge 2F8C                     ___fleq 349E  
                ??___fladd 0009                     ___wmul 3B24                  ??___fldiv 0017  
                ??___awdiv 0005                  ??___flneg 0005             __CFG_STVREN$ON 000000  
                ??___awmod 0005                  ??___flmul 0009                  ??___flsub 0022  
                ??___fltol 0005                     _efgtoa 084E                     _floorf 27E0  
                   clear_0 3B04                     clear_1 3B10           ___awdiv@quotient 0007  
          ___awmod@divisor 0003            ___awmod@counter 0005                     _printf 3AD6  
                   pad@buf 0019                     _strcpy 387E                     _strlen 3AA0  
                   fputc@c 0007                     fputs@c 0014                     fputs@i 0015  
                   fputs@s 0010                  ??_isdigit 0003            ___fpclassifyf@e 0009  
          ___fpclassifyf@u 000B            ___fpclassifyf@x 0001               __mediumconst 0000  
                ??_isspace 0003                     tblptrh 000FF7                  ??_isupper 0003  
                   tblptrl 000FF6                     tblptru 000FF8       __end_of_configureIRQ 3BB2  
         __end_of_vfprintf 381E                  ??_tolower 0009                  ??_strncmp 0007  
               ___flge@ff1 001A                 ___flge@ff2 001E            ??___fpclassifyf 0005  
             ___xxtofl@arg 000B               ___xxtofl@exp 000A               ___xxtofl@val 0001  
               ___fleq@ff1 0001                 ___fleq@ff2 0005                 __accesstop 0060  
  __end_of__initialization 3B16         envia_byte_lcd@dado 0003            __CFG_PBADEN$OFF 000000  
               ___flneg@f1 0001            __CFG_FOSC$XT_XT 000000       __size_of_escreve_lcd 000E  
            ___rparam_used 000001                 ___fltol@f1 0001               escreve_lcd@c 0005  
           __pcstackCOMRAM 0001              __end_of_fputc 35DE              __end_of_fputs 39B6  
            __end_of_reset 3752              __end_of_setup 3BD0              __end_of_putch 3C2E  
           _envia_byte_lcd 3B4A                    ??_fputc 000B                    ??_fputs 0014  
                  ??_reset 005E                    ??_setup 0006                    ??_putch 0006  
               __pbssBANK0 00AC                 __pbssBANK1 0100         __size_of_initTimer 0018  
         ??_displayPlayers 005E         __size_of_limpa_lcd 001A                 _gameStatus 00C4  
               _efgtoa$820 006E                 _efgtoa$814 0068                 _efgtoa$808 0064  
               _efgtoa$809 0066                 _efgtoa$818 006A                 _efgtoa$819 006C  
                  ?___flge 001A                    ?___fleq 0001                    ?___wmul 0001  
                  ?_efgtoa 003C                    ?_floorf 0028                    ?_printf 00A0  
                  ?_strcpy 0001                    ?_strlen 0001     __end_of_envia_byte_lcd 3B6E  
                  _INTCON2 000FF1                    _INTCON3 000FF0                  ?___xxtofl 0001  
       __size_of_vfpfcnvrt 0488            __CFG_VREGEN$OFF 000000             _inicializa_lcd 3666  
                  __Hparam 0000       caracter_inicio@linha 0006                    __Lparam 0000  
          __size_of___flge 0104            __size_of___fleq 00AA                    ___fladd 144C  
                  ___fldiv 21BE                    ___awdiv 332A                    ___flneg 3A30  
                  ___awmod 33EE                    ___flmul 1D94                    ___flsub 392C  
                  ___fltol 2E86            __size_of___wmul 0026                  ?_vfprintf 0098  
             __psmallconst 0800            __size_of_efgtoa 0BFE            __size_of_floorf 0212  
                  __pcinit 3AFE                    __ramtop 0800                    __ptext0 3C02  
                  __ptext1 2558                    __ptext2 36E8                    __ptext3 2D36  
                  __ptext4 3AD6                    __ptext5 37BC                    __ptext6 190C  
                  __ptext7 318E                    __ptext8 084E                    __ptext9 381E  
          __size_of_printf 0028            __size_of_strcpy 005C            __size_of_strlen 0036  
    __size_of_configureIRQ 0022          __end_of_initTimer 3C02                  _T2CONbits 000FCA  
          ?_envia_byte_lcd 0003               __size_of_pad 00C6                    _isdigit 3A68  
             __size_of_isr 37B4                 ??___xxtofl 0005           ___awmod@dividend 0001  
        __end_of_limpa_lcd 3BEA                    _isspace 38DA                    _isupper 39F8  
                  efgtoa@c 0042                    efgtoa@d 0078                    efgtoa@e 0090  
                  efgtoa@f 003E                    efgtoa@g 008C                    efgtoa@h 0082  
                  efgtoa@i 008A                    efgtoa@l 0086                    efgtoa@m 0074  
                  efgtoa@n 0092                    efgtoa@p 007C                    efgtoa@t 0070  
                  efgtoa@u 0094                    efgtoa@w 007F   __end_of_envia_nibble_lcd 3666  
                  atoi@neg 000E                    _tolower 381E     __end_of_inicializa_lcd 36E8  
                  _strncmp 318E             __pintcode_body 3752       end_of_initialization 3B16  
                  floorf@e 0036                    floorf@m 0032                    floorf@u 0038  
                  floorf@x 0028                    fputc@fp 0009              __Lmediumconst 0000  
                  int_func 3752                    fputs@fp 0012          __end_of_vfpfcnvrt 1D94  
               efgtoa@mode 0081                 efgtoa@sign 007A                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6               _configureIRQ 3B90  
                  postinc2 000FDE                 ??_vfprintf 005E      __end_of_configurePins 3B90  
                  strcpy@d 0009                    strlen@a 0003                    strcpy@s 0007  
                  strlen@s 0001                  _PORTCbits 000F82                  _PORTDbits 000F83  
              ___fladd@grs 0010              ___xxtofl@sign 0009                  _TRISBbits 000F93  
                _TRISCbits 000F94                  _TRISDbits 000F95                ___fldiv@grs 0022  
              ___fldiv@rem 001B            ?_inicializa_lcd 0001                ___flmul@grs 000E  
            ?_stateMachine 0001             __end_of___flge 3090             __end_of___fleq 3548  
              vfpfcnvrt@ap 004C                vfpfcnvrt@ct 005A                vfpfcnvrt@fp 0048  
           __end_of___wmul 3B4A             __end_of_efgtoa 144C             __end_of_floorf 29F2  
               floorf@F524 00AC   __size_of_caracter_inicio 0042             __end_of_printf 3AFE  
           __end_of_strcpy 38DA             __end_of_strlen 3AD6        start_initialization 3AFE  
              __end_of_pad 332A                __end_of_isr 37BC              ??_escreve_lcd 0005  
    __end_of___fpclassifyf 318E             ??_stateMachine 00AA     caracter_inicio@posicao 0007  
              vfprintf@fmt 009A                   ??___flge 0022                   ??___fleq 0009  
                 ??___wmul 0005                   ??_efgtoa 0043                   ??_floorf 002C  
         __CFG_LPT1OSC$OFF 000000                   ??_printf 005E                   ??_strcpy 0005  
                 ??_strlen 0003                  ___fladd@a 0005                  ___fladd@b 0001  
                ___fldiv@a 0013                  ___fldiv@b 000F                  ___flmul@a 0005  
                ___flmul@b 0001                  ___flsub@a 001E                  ___flsub@b 001A  
            __pcstackBANK0 0060          __size_of___xxtofl 01B4               _currentState 00CE  
                _atoi$1310 0014                  _atoi$1311 0012                  _atoi$1309 0010  
      __end_of_escreve_lcd 3C24                  __pintcode 0008                   ?___fladd 0001  
                 ?___fldiv 000F                   ?___awdiv 0001                   ?___flneg 0001  
                 ?___awmod 0001                   ?___flmul 0001                   ?___flsub 001A  
                 ?___fltol 0001           ??_envia_byte_lcd 0004          __size_of_vfprintf 0062  
              __smallconst 0800                   ?_isdigit 0001                   ?_isspace 0001  
                 ?_isupper 0001                  _initTimer 3BEA          ?_envia_nibble_lcd 0001  
        ??_caracter_inicio 0006                   ?_tolower 0007             __size_of_fputc 0096  
           __size_of_fputs 0044                   ?_strncmp 0001             __size_of_reset 006A  
                _limpa_lcd 3BD0             __size_of_setup 001E             __size_of_putch 000A  
       ??_envia_nibble_lcd 0001             ___wmul@product 0005                   i2u520_40 377C  
                 i2u520_41 3778                   i2u521_40 3796                   i2u521_41 3792  
                 i2u522_40 37B0                   i2u522_41 37AC                   i2u519_40 3762  
                 i2u519_41 375E           __CFG_WDTPS$32768 000000                  _vfpfcnvrt 190C  
  __size_of_displayPlayers 0150          ___wmul@multiplier 0001           ??_inicializa_lcd 0005  
     __end_of_stateMachine 27E0               _isspace$1340 0007                 ?_initTimer 0001  
               vfpfcnvrt@c 005D                 vfpfcnvrt@f 0056                _INTCON3bits 000FF0  
               ?_limpa_lcd 0001                _firstPlayer 00CA                _escreve_lcd 3C16  
    caracter_inicio@coluna 0005                   __Hrparam 0000                 vfprintf@ap 009C  
                 __Lrparam 0000                 vfprintf@fp 0098           __size_of___fladd 04C0  
         __size_of___fldiv 039A           __size_of___awdiv 00C4           __size_of___flneg 0038  
         __size_of___awmod 00B0           __size_of___flmul 042A           __size_of___flsub 0046  
         __size_of___fltol 0106                 ?_vfpfcnvrt 0048         ___fpclassifyf@F463 00B0  
              _currentTime 00CC                   ___xxtofl 29F2           __size_of_isdigit 0038  
         __size_of_isspace 0052                   __ptext10 39F8                   __ptext11 387E  
                 __ptext20 2E86                   __ptext12 3264                   __ptext21 392C  
                 __ptext13 3AA0                   __ptext30 2BA6                   __ptext22 144C  
                 __ptext14 3972                   __ptext31 38DA                   __ptext23 3A30  
                 __ptext15 3548                   __ptext40 3B4A                   __ptext32 3A68  
                 __ptext24 1D94                   __ptext16 3C24                   __ptext41 35DE  
                 __ptext33 3B24                   __ptext25 2F8C                   __ptext17 3C16  
                 __ptext42 3B6E                   __ptext34 39B6                   __ptext26 349E  
                 __ptext18 27E0                   __ptext43 3B90                   __ptext35 29F2  
                 __ptext27 21BE                   __ptext19 3090                   __ptext36 3BB2  
                 __ptext28 33EE                   __ptext37 3BD0                   __ptext29 332A  
                 __ptext38 3BEA                   __ptext39 3666           __size_of_isupper 0038  
         __size_of_tolower 0060                 strcpy@dest 0001           __size_of_strncmp 00D6  
   __size_of_configurePins 0022              __size_of_atoi 0190              __size_of_main 0014  
                 efgtoa@fp 003C                   efgtoa@ne 0076                   efgtoa@pp 0072  
                 efgtoa@ou 0060                   int$flags 005E                   _vfprintf 37BC  
                printf@fmt 00A0                  putch@data 0006                 _INTCONbits 000FF2  
              _player1Time 00B8                _player2Time 00B4                ??_initTimer 0001  
                 isdigit@c 0001                ??_limpa_lcd 0005                   intlevel2 0000  
                 isspace@c 0001                  strcpy@src 0003                   isupper@c 0001  
                strncmp@_l 0001                  strncmp@_r 0003                efgtoa@nmode 007E  
                 printf@ap 00A8                ??_vfpfcnvrt 004E              _vfpfcnvrt$834 0052  
            _vfpfcnvrt$838 0054             _displayPlayers 2D36              _configurePins 3B6E  
          _caracter_inicio 39B6      __size_of_stateMachine 0288                   tolower@c 0007  
   __size_of___fpclassifyf 00FE       envia_nibble_lcd@dado 0002                   strncmp@l 0008  
                 strncmp@n 0005                   strncmp@r 000A              ___fladd@signs 000D  
             ___fladd@aexp 000E               ___fladd@bexp 000F  __size_of_envia_nibble_lcd 0088  
             _stateMachine 2558  
